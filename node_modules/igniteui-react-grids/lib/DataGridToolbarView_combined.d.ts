import { Base, Type, INotifyPropertyChanged, PropertyChangedEventArgs } from "igniteui-react-core";
import { DomRenderer, DomWrapper } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { ControlDisplayDensity } from "igniteui-react-core";
import { FontInfo } from "igniteui-react-core";
import { Button } from "igniteui-react-inputs";
import { Grid } from "./Grid";
import { BaseControlTheme } from "igniteui-react-core";
import { ColumnChooser } from "./ColumnChooser";
import { ColumnPinning } from "./ColumnPinning";
/**
 * @hidden
 */
export declare class DataGridToolbarView extends Base {
    static $t: Type;
    private k;
    private f;
    private d;
    private e;
    private h;
    private i;
    private j;
    private g;
    constructor();
    a: DataGridToolbar;
    s(): void;
    private c;
    p(a: DomRenderer): void;
    ac(): void;
    z(): void;
    y(): void;
    ag(): void;
    ah(): void;
    v(): void;
    ad(): void;
    aa(): void;
    private n;
    x(): void;
    ae(): void;
    af(): void;
    private u;
    private w;
    ab(): void;
    private b;
    t(): void;
    l(): void;
    private m;
    private q;
    private r;
    o(): void;
}
/**
 * @hidden
 */
export declare class DataGridToolbar extends Base implements INotifyPropertyChanged {
    static $t: Type;
    private e;
    private c;
    private d;
    r: number;
    s: number;
    j: Button;
    k: Button;
    private static readonly am;
    private static readonly an;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    constructor();
    notifySizeChanged(): void;
    destroy(): void;
    provideContainer(a: DomRenderer, b: ColumnChooser, c: ColumnPinning): void;
    private a;
    b: Grid;
    private x;
    ap: string;
    private l;
    m: FontInfo;
    private ba;
    bd: Brush;
    private a8;
    bb: Brush;
    private a9;
    bc: Brush;
    private n;
    p: boolean;
    private t;
    ab: string;
    private u;
    ad: string;
    private o;
    q: boolean;
    private v;
    ag: string;
    private w;
    ai: string;
    private h;
    i: ControlDisplayDensity;
    private f;
    g: BaseControlTheme;
    protected ax(a: string, b: any, c: any): void;
    protected ay(a: string, b: any, c: any): void;
    private a1;
    private a0;
    a2(a: DomRenderer, b: DomWrapper, c: DomWrapper, d: string): void;
    at(): void;
    private a3;
    private a4;
    private a5;
    private av;
    private a6;
    private a7;
}
