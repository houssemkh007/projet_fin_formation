import { Point, Type } from "igniteui-react-core";
import { ColumnFilterCondition } from "./ColumnFilterCondition";
import { DataSourceSchemaPropertyType } from "igniteui-react-core";
/**
 * @hidden
 */
export interface ICellActionManager {
    clickExpansionIndicator(): void;
    clickCell(a: boolean): void;
    dragStarted(): void;
    previewPointerDownCell(): void;
    previewPointerUpCell(): void;
    pointerDownCell(): void;
    pointerUpCell(): void;
    mouseDownCell(a: number, b: number): void;
    mouseUpCell(a: number, b: number): void;
    mouseLeaveCell(a: number, b: number): void;
    mouseEnterCell(a: number, b: number): void;
    mouseIsOver(a: number, b: number): void;
    doubleClicked(): void;
    readonly isLeaveActionDesired: boolean;
    readonly isEnterActionDesired: boolean;
    readonly isClickActionDesired: boolean;
    readonly isHoverActionDesired: boolean;
    readonly isPreviewPointerDownActionDesired: boolean;
    readonly isPreviewPointerUpActionDesired: boolean;
    readonly isPointerDownActionDesired: boolean;
    readonly isPointerUpActionDesired: boolean;
    isControlPressed: boolean;
    isShiftPressed: boolean;
    readonly isDrag: boolean;
    readonly isMouseDown: boolean;
    readonly mousePosition: Point;
    isCellDown(): boolean;
    readonly isGridDragging: boolean;
    getColumnFilterCondition(): ColumnFilterCondition;
    getColumnPropertyType(): DataSourceSchemaPropertyType;
    columnFilterChanging(a: ColumnFilterCondition): void;
    columnFilterChanged(a: ColumnFilterCondition): void;
    updateCellEditValue(a: any): void;
    editorCellLostFocus(): void;
    cancelEditMode(a: boolean): void;
}
/**
 * @hidden
 */
export declare let ICellActionManager_$type: Type;
