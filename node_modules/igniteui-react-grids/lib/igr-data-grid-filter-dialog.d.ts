import * as React from 'react';
import { IgrGridFilterDialogOpeningEventArgs } from "./igr-grid-filter-dialog-opening-event-args";
import { IgrGridFilterDialogFilterChangeEventArgs } from "./igr-grid-filter-dialog-filter-change-event-args";
import { IgrFilterDialogRenderCompletedEventArgs } from "./igr-filter-dialog-render-completed-event-args";
import { GridFilterDialog } from "./GridFilterDialog";
/**
 * An advanced grid for displaying data.
*/
export declare class IgrDataGridFilterDialog<P extends IIgrDataGridFilterDialogProps = IIgrDataGridFilterDialogProps> extends React.Component<P, {}> {
    protected createImplementation(): GridFilterDialog;
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: GridFilterDialog; /**
                                 * @hidden
                                 */
    static _createFromInternal(internal: any): IgrDataGridFilterDialog;
    private onImplementationCreated;
    constructor(props: P);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): any;
    isAnimationEnabled: boolean;
    /**
     * Gets or sets the scaling value used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    pixelScalingRatio: number;
    /**
     * Gets the actual pixel scaling ratio used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    actualPixelScalingRatio: number;
    iconColor: string;
    viewSize: number;
    readonly isOpen: boolean;
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected readonly hasUserValues: Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    notifySizeChanged(width: number, height: number): void;
    notifyCellSizeChanged(): void;
    showIcon(): void;
    hideIcon(): void;
    private _dialogOpening;
    private _dialogOpening_wrapped;
    dialogOpening: (s: IgrDataGridFilterDialog, e: IgrGridFilterDialogOpeningEventArgs) => void;
    private _filterChanging;
    private _filterChanging_wrapped;
    filterChanging: (s: IgrDataGridFilterDialog, e: IgrGridFilterDialogFilterChangeEventArgs) => void;
    private _filterChanged;
    private _filterChanged_wrapped;
    filterChanged: (s: IgrDataGridFilterDialog, e: IgrGridFilterDialogFilterChangeEventArgs) => void;
    private _renderCompleted;
    private _renderCompleted_wrapped;
    renderCompleted: (s: IgrDataGridFilterDialog, e: IgrFilterDialogRenderCompletedEventArgs) => void;
}
export interface IIgrDataGridFilterDialogProps {
    isAnimationEnabled?: boolean | string;
    /**
     * Gets or sets the scaling value used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    pixelScalingRatio?: number | string;
    /**
     * Gets the actual pixel scaling ratio used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    actualPixelScalingRatio?: number | string;
    iconColor?: string;
    viewSize?: number | string;
    dialogOpening?: (s: IgrDataGridFilterDialog, e: IgrGridFilterDialogOpeningEventArgs) => void;
    filterChanging?: (s: IgrDataGridFilterDialog, e: IgrGridFilterDialogFilterChangeEventArgs) => void;
    filterChanged?: (s: IgrDataGridFilterDialog, e: IgrGridFilterDialogFilterChangeEventArgs) => void;
    renderCompleted?: (s: IgrDataGridFilterDialog, e: IgrFilterDialogRenderCompletedEventArgs) => void;
}
