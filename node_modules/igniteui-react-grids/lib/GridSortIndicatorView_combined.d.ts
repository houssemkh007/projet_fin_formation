import { Base, Type, INotifyPropertyChanged, PropertyChangedEventArgs } from "igniteui-react-core";
import { DomWrapper } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { SortIndicatorStyle } from "./SortIndicatorStyle";
import { Brush } from "igniteui-react-core";
import { DoubleAnimator } from "igniteui-react-core";
import { ColumnSortDirection } from "./ColumnSortDirection";
import { SortIndicatorRenderCompletedEventArgs } from "./SortIndicatorRenderCompletedEventArgs";
/**
 * @hidden
 */
export declare class GridSortIndicatorView extends Base {
    static $t: Type;
    constructor(a: GridSortIndicator);
    a: GridSortIndicator;
    private d;
    private i;
    private h;
    private b;
    t(): void;
    u(): void;
    private n;
    private v;
    private o;
    private w;
    private p;
    private x;
    m: DomWrapper;
    private c;
    private l;
    private f;
    private e;
    private g;
    r(a: any): void;
    private k;
    private j;
    s(a: number, b: number): void;
    q(): void;
    y(): Brush;
}
/**
 * @hidden
 */
export declare class GridSortIndicator extends Base implements INotifyPropertyChanged {
    static $t: Type;
    private ab;
    ac: any;
    private a;
    b: ColumnSortDirection;
    private az;
    a0: Brush;
    private k;
    l: boolean;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    private g;
    readonly i: DoubleAnimator;
    private h;
    readonly j: DoubleAnimator;
    private o;
    w: number;
    private m;
    p: number;
    private e;
    f: SortIndicatorStyle;
    protected as(a: string, b: any, c: any): void;
    private n;
    r: number;
    q: number;
    x: number;
    private t;
    private s;
    private z;
    private y;
    private u;
    private aa;
    protected aw(a: string, b: any, c: any): void;
    constructor();
    private am;
    private al;
    private au;
    private av;
    v(): number;
    ax(a: any): void;
    ay(a: any): void;
    ad(): any;
    ar(a: number, b: number): void;
    aq(): void;
    an(a: number, b: number, c: List$1<Path>): void;
    ao(a: number, b: number, c: List$1<Path>): void;
    ap(a: number, b: number, c: List$1<Path>): void;
    protected c: GridSortIndicatorView;
    renderCompleted: (sender: any, args: SortIndicatorRenderCompletedEventArgs) => void;
    at(): void;
}
