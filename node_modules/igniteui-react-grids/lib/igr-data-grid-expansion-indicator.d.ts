import * as React from 'react';
import { GridExpansionIndicator } from "./GridExpansionIndicator";
export declare class IgrDataGridExpansionIndicator<P extends IIgrDataGridExpansionIndicatorProps = IIgrDataGridExpansionIndicatorProps> extends React.Component<P, {}> {
    protected createImplementation(): GridExpansionIndicator;
    protected _implementation: any;
    /**
     * @hidden
     */
    readonly i: GridExpansionIndicator; /**
                                 * @hidden
                                 */
    static _createFromInternal(internal: any): IgrDataGridExpansionIndicator;
    private onImplementationCreated;
    constructor(props: P);
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    render(): any;
    /**
     * Gets or sets the expansion state of the indicator.
    */
    isExpanded: boolean;
    /**
     * Gets or sets the color of the indicator.
    */
    iconColor: string;
    /**
     * Gets or sets whether animations are enabled.
    */
    isAnimationEnabled: boolean;
    /**
     * Gets or sets the scaling value used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    pixelScalingRatio: number;
    /**
     * Gets the actual pixel scaling ratio used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    actualPixelScalingRatio: number;
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected readonly hasUserValues: Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    notifySizeChanged(width: number, height: number): void;
}
export interface IIgrDataGridExpansionIndicatorProps {
    /**
     * Gets or sets the expansion state of the indicator.
    */
    isExpanded?: boolean | string;
    /**
     * Gets or sets the color of the indicator.
    */
    iconColor?: string;
    /**
     * Gets or sets whether animations are enabled.
    */
    isAnimationEnabled?: boolean | string;
    /**
     * Gets or sets the scaling value used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    pixelScalingRatio?: number | string;
    /**
     * Gets the actual pixel scaling ratio used to affect the pixel density of the control.
     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
     * to appear blurry.
    */
    actualPixelScalingRatio?: number | string;
}
