import { DateTimeFormats } from "./DateTimeFormats";
import { EditorType } from "./EditorType";
import { IgrColumn, IIgrColumnProps } from "./igr-column";
import { DateTimeColumn } from "./DateTimeColumn";
/**
 * A column for displaying date/time values.
*/
export declare class IgrDateTimeColumn extends IgrColumn<IIgrDateTimeColumnProps> {
    protected createImplementation(): DateTimeColumn;
    /**
                                 * @hidden
                                 */
    readonly i: DateTimeColumn;
    constructor(props: IIgrDateTimeColumnProps);
    /**
     * Gets or sets the date time format to use for this column. If FormatString is specificied this value is ignored.
    */
    dateTimeFormat: DateTimeFormats;
    /**
     * Gets or sets the format string to apply to the value. If set, the other value formatting properties on this column are ignored.
    */
    formatString: string;
    formatSpecifiers: any[];
    /**
     * Gets or sets the INTL DateTimeFormat object to use for formatting the date values.
    */
    formatOverride: any;
    /**
     * Gets or sets the editor type used for editing cells in this column.
    */
    editorType: EditorType;
    /**
     * Gets or sets the ComboBox data source.
    */
    editorDataSource: any;
    /**
     * Gets or sets the ComboBox text field.
    */
    editorTextField: string;
    /**
     * Gets or sets the ComboBox value field.
    */
    editorValueField: string[];
    findByName(name: string): any;
}
export interface IIgrDateTimeColumnProps extends IIgrColumnProps {
    /**
     * Gets or sets the date time format to use for this column. If FormatString is specificied this value is ignored.
    */
    dateTimeFormat?: DateTimeFormats | string;
    /**
     * Gets or sets the format string to apply to the value. If set, the other value formatting properties on this column are ignored.
    */
    formatString?: string;
    formatSpecifiers?: any[];
    /**
     * Gets or sets the INTL DateTimeFormat object to use for formatting the date values.
    */
    formatOverride?: any;
    /**
     * Gets or sets the editor type used for editing cells in this column.
    */
    editorType?: EditorType | string;
    /**
     * Gets or sets the ComboBox data source.
    */
    editorDataSource?: any;
    /**
     * Gets or sets the ComboBox text field.
    */
    editorTextField?: string;
    /**
     * Gets or sets the ComboBox value field.
    */
    editorValueField?: string[];
}
