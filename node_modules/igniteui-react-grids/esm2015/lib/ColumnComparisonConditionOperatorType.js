/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { markEnum } from "igniteui-react-core";
/**
 * Identifies the operator type of a column comparison condition.
 */
export var ColumnComparisonConditionOperatorType = /*@__PURE__*/ (function (ColumnComparisonConditionOperatorType) {
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["Contains"] = 0] = "Contains";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["DoesNotContain"] = 1] = "DoesNotContain";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["DoesNotEndWith"] = 2] = "DoesNotEndWith";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["DoesNotStartWith"] = 3] = "DoesNotStartWith";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["EndsWith"] = 4] = "EndsWith";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["Equals"] = 5] = "Equals";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["GreaterThan"] = 6] = "GreaterThan";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["GreaterThanOrEqualTo"] = 7] = "GreaterThanOrEqualTo";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["LessThan"] = 8] = "LessThan";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["LessThanOrEqualTo"] = 9] = "LessThanOrEqualTo";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["NotEquals"] = 10] = "NotEquals";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["StartsWith"] = 11] = "StartsWith";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["IsNotNull"] = 12] = "IsNotNull";
    ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["IsNull"] = 13] = "IsNull";
    return ColumnComparisonConditionOperatorType;
})({});
/**
 * @hidden
 */
export let ColumnComparisonConditionOperatorType_$type = /*@__PURE__*/ markEnum('ColumnComparisonConditionOperatorType', 'Contains,0|DoesNotContain,1|DoesNotEndWith,2|DoesNotStartWith,3|EndsWith,4|Equals,5|GreaterThan,6|GreaterThanOrEqualTo,7|LessThan,8|LessThanOrEqualTo,9|NotEquals,10|StartsWith,11|IsNotNull,12|IsNull,13');
//# sourceMappingURL=ColumnComparisonConditionOperatorType.js.map
