/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, enumGetBox, markType } from "igniteui-react-core";
import { FixedCellPositions_$type } from "./FixedCellPositions";
/**
 * @hidden
 */
export let RowPath = /*@__PURE__*/ (() => {
    class RowPath extends Base {
        constructor(a, b) {
            super();
            this.n = 0;
            this.m = 0;
            this.a = 0;
            this.c = 0;
            this.l = -1;
            this.e = false;
            this.k = -1;
            this.b = 0;
            this.d = 0;
            this.n = a;
            this.m = b;
            this.ac();
        }
        get x() {
            return this.n;
        }
        set x(a) {
            this.n = a;
            this.ac();
        }
        get w() {
            return this.m;
        }
        set w(a) {
            this.m = a;
            this.ac();
        }
        get b() {
            return this.a;
        }
        set b(a) {
            this.a = a;
            this.ac();
        }
        get d() {
            return this.c;
        }
        set d(a) {
            this.c = a;
            this.ac();
        }
        ac() {
            this.l = (this.n * 1000000) + this.m;
        }
        getHashCode() {
            return this.l;
        }
        equals(a) {
            let b = a;
            if (this.a != b.a) {
                return false;
            }
            if (this.n != b.n) {
                return false;
            }
            if (this.m != b.m) {
                return false;
            }
            return true;
        }
        toString() {
            return "F" + enumGetBox(FixedCellPositions_$type, this.a) + "." + this.n + "." + this.m;
        }
        get g() {
            return ((this.m == -100 || this.m == -101) && this.n == -100);
        }
        get h() {
            return this.m == -101;
        }
        get j() {
            return (this.m == -200 || this.m == -201);
        }
        get i() {
            return this.e;
        }
        set i(a) {
            this.e = a;
        }
        get o() {
            return this.k;
        }
        set o(a) {
            this.k = a;
        }
        aa() {
            let a = new RowPath(this.x, this.w);
            a.b = this.b;
            a.i = this.i;
            a.o = this.o;
            return a;
        }
    }
    RowPath.$t = /*@__PURE__*/ markType(RowPath, 'RowPath');
    return RowPath;
})();
//# sourceMappingURL=RowPath.js.map
