/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GridCellBase } from "./GridCellBase";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let SummaryCell = /*@__PURE__*/ (() => {
    class SummaryCell extends GridCellBase {
        constructor(a) {
            super(a);
            this.b7 = null;
            this.b8 = null;
            this.b9 = null;
            this.cd = -1;
            this.cc = -1;
            this.z.setRawStyleProperty("vertical-align", "middle");
            this.b9 = a.createElement("div");
            this.b7 = a.createElement("span");
            this.b7.setRawStyleProperty("display", "inline-block");
            this.b7.setRawStyleProperty("width", "40%");
            this.b7.setRawStyleProperty("white-space", "nowrap");
            this.b7.setRawStyleProperty("text-overflow", "ellipsis");
            this.b7.setRawStyleProperty("vertical-align", "middle");
            this.b7.setRawStyleProperty("overflow", "hidden");
            this.b9.append(this.b7);
            this.b8 = a.createElement("span");
            this.b8.setRawStyleProperty("display", "inline-block");
            this.b8.setRawStyleProperty("width", "60%");
            this.b8.setRawStyleProperty("text-align", "right");
            this.b8.setRawStyleProperty("white-space", "nowrap");
            this.b8.setRawStyleProperty("text-overflow", "ellipsis");
            this.b8.setRawStyleProperty("vertical-align", "middle");
            this.b8.setRawStyleProperty("overflow", "hidden");
            this.b9.append(this.b8);
            this.z.append(this.b9);
        }
        get ca() {
            return this.b7;
        }
        get cb() {
            return this.b8;
        }
        bw(a, b) {
            super.bw(a, b);
            let c = Math.max(0, a - b);
            if (this.cd != c) {
                this.cd = c;
            }
        }
        bq(a, b) {
            super.bq(a, b);
            let c = Math.max(0, a - b);
            if (this.cc != c) {
                this.cc = c;
            }
        }
        get_r() {
            return false;
        }
        bg(a, b, c) {
            super.bg(a, b, c);
            if (a == "Indent" || a == "IsCollapsable") {
                this.b9.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
            }
        }
    }
    SummaryCell.$t = /*@__PURE__*/ markType(SummaryCell, 'SummaryCell', GridCellBase.$);
    return SummaryCell;
})();
//# sourceMappingURL=SummaryCell.js.map
