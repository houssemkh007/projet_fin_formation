/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellPresenterBase } from "./CellPresenterBase";
import { DateTimeCellModel } from "./DateTimeCellModel";
import { ContentCellModelHelper } from "./ContentCellModelHelper";
import { markType } from "igniteui-react-core";
import { stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let DateTimeCellPresenter = /*@__PURE__*/ (() => {
    class DateTimeCellPresenter extends CellPresenterBase {
        constructor(a) {
            super(a);
        }
        get d() {
            return this.a;
        }
        b(a) {
            super.b(a);
            let b = a;
            if (a.as) {
                if (a.ax(DateTimeCellModel.k2) || a.ax(DateTimeCellModel.k3) || a.ax(DateTimeCellModel.k1) || a.ax(DateTimeCellModel.fl)) {
                    this.e(b);
                    this.d.b8.setRawText(b.ip);
                }
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.b8, this.a);
            }
        }
        e(a) {
            a.ip = a.le(a.k0);
            if (a.ip == stringEmpty() && a.go != null) {
                a.ip = a.go.toString();
            }
        }
    }
    DateTimeCellPresenter.$t = /*@__PURE__*/ markType(DateTimeCellPresenter, 'DateTimeCellPresenter', CellPresenterBase.$);
    return DateTimeCellPresenter;
})();
//# sourceMappingURL=DateTimeCellPresenter.js.map
