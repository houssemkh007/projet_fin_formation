/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellPresenterBase } from "./CellPresenterBase";
import { ContentCellModelHelper } from "./ContentCellModelHelper";
import { FontUtil } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let SummaryCellPresenter = /*@__PURE__*/ (() => {
    class SummaryCellPresenter extends CellPresenterBase {
        constructor(a) {
            super(a);
        }
        get d() {
            return this.a;
        }
        b(a) {
            super.b(a);
            let b = a;
            if (a.as) {
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.ca, this.a);
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.cb, this.a);
                if (a.aw("ResolvedSummaryLabel") || a.aw("ResolvedSummaryValue")) {
                    if (b.ky != null) {
                        this.d.ca.setRawText(b.ky);
                    }
                    if (b.k0 != null) {
                        this.d.cb.setRawText(b.k0);
                    }
                }
                if (a.aw("SummaryLabelTextColor")) {
                    this.d.ca.setRawStyleProperty("color", b.k5._fill);
                }
                if (a.aw("SummaryLabelFontInfo")) {
                    let c = b.kr;
                    if (c == null) {
                        c = FontUtil.getDefaultFont(this.a.w);
                    }
                    this.d.ca.setRawStyleProperty("font", c.fontString);
                }
            }
        }
    }
    SummaryCellPresenter.$t = /*@__PURE__*/ markType(SummaryCellPresenter, 'SummaryCellPresenter', CellPresenterBase.$);
    return SummaryCellPresenter;
})();
//# sourceMappingURL=SummaryCellPresenter.js.map
