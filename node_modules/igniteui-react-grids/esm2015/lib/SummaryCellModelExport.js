/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellModelExport } from "./CellModelExport";
import { markType } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let SummaryCellModelExport = /*@__PURE__*/ (() => {
    class SummaryCellModelExport extends CellModelExport {
        constructor() {
            super(...arguments);
            this.ai = null;
            this.ao = null;
            this.ae = null;
            this.af = null;
            this.al = null;
            this.am = null;
            this.an = null;
            this.ag = 0;
            this.aj = null;
            this.ak = null;
            this.ar = null;
            this.as = null;
            this.at = null;
            this.ah = 0;
            this.ap = null;
            this.aq = null;
        }
        get_ac() {
            return "SummaryCell";
        }
        ad(a) {
            super.ad(a);
            a.l("summaryLabel : \"" + this.ai + "\", ");
            a.l("summaryValue : \"" + this.ao + "\", ");
            if (this.ae != null) {
                a.l("summaryLabelColor : " + this.ae.serialize() + ", ");
            }
            if (this.af != null) {
                a.l("summaryValueColor : " + this.af.serialize() + ", ");
            }
            if (!stringIsNullOrEmpty(this.al)) {
                a.l("summaryLabelFontStyle : \"" + this.al + "\", ");
            }
            if (!stringIsNullOrEmpty(this.am)) {
                a.l("summaryLabelFontVariant : \"" + this.am + "\", ");
            }
            if (!stringIsNullOrEmpty(this.an)) {
                a.l("summaryLabelFontWeight : \"" + this.an + "\", ");
            }
            if (!isNaN_(this.ag)) {
                a.l("summaryLabelFontSize : " + this.ag + ", ");
            }
            if (!stringIsNullOrEmpty(this.aj)) {
                a.l("summaryLabelFontFamily : \"" + this.aj + "\", ");
            }
            if (!stringIsNullOrEmpty(this.ak)) {
                a.l("summaryLabelFontStretch : \"" + this.ak + "\", ");
            }
            if (!stringIsNullOrEmpty(this.ar)) {
                a.l("summaryValueFontStyle : \"" + this.ar + "\", ");
            }
            if (!stringIsNullOrEmpty(this.as)) {
                a.l("summaryValueFontVariant : \"" + this.as + "\", ");
            }
            if (!stringIsNullOrEmpty(this.at)) {
                a.l("summaryValueFontWeight : \"" + this.at + "\", ");
            }
            if (!isNaN_(this.ah)) {
                a.l("summaryValueFontSize : " + this.ah + ", ");
            }
            if (!stringIsNullOrEmpty(this.ap)) {
                a.l("summaryValueFontFamily : \"" + this.ap + "\", ");
            }
            if (!stringIsNullOrEmpty(this.aq)) {
                a.l("summaryValueFontStretch : \"" + this.aq + "\", ");
            }
        }
    }
    SummaryCellModelExport.$t = /*@__PURE__*/ markType(SummaryCellModelExport, 'SummaryCellModelExport', CellModelExport.$);
    return SummaryCellModelExport;
})();
//# sourceMappingURL=SummaryCellModelExport.js.map
