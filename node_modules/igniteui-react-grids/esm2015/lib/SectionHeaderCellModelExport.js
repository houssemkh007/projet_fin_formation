/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CellModelExport } from "./CellModelExport";
import { enumGetBox, markType } from "igniteui-react-core";
import { SummaryOperand_$type } from "igniteui-react-core";
/**
 * @hidden
 */
export let SectionHeaderCellModelExport = /*@__PURE__*/ (() => {
    class SectionHeaderCellModelExport extends CellModelExport {
        constructor() {
            super(...arguments);
            this.af = null;
            this.ag = null;
            this.ae = null;
            this.al = null;
            this.ai = null;
            this.ak = null;
            this.aj = null;
            this.ah = null;
            this.am = null;
        }
        get_ac() {
            return "SectionHeaderCell";
        }
        ad(a) {
            super.ad(a);
            let b = "groupNames : [ ";
            let c = "groupValues : [ ";
            for (let d = 0; d < this.af.length; d++) {
                b += "\"" + this.af[d] + "\", ";
                c += "\"" + this.ag[d] + "\", ";
            }
            let e = "summaryNames : [ ";
            let f = "summaryValues : [ ";
            let g = "summaryOperands : [ ";
            let h = "summaryFormattedText : [ ";
            if (this.ai != null) {
                for (let i = 0; i < this.ai.length; i++) {
                    e += "\"" + this.ai[i] + "\", ";
                    f += "\"" + this.ak[i] + "\", ";
                    g += "\"" + enumGetBox(SummaryOperand_$type, this.aj[i]) + "\", ";
                    h += "\"" + this.ah[i] + "\", ";
                }
            }
            a.l(b + " ], ");
            a.l(c + " ], ");
            a.l("formattedText : \"" + this.al + "\", ");
            a.l(e + " ], ");
            a.l(f + " ], ");
            a.l(g + " ], ");
            a.l(h + " ], ");
            a.l("fullSummaryFormattedText : \"" + this.am + "\", ");
        }
    }
    SectionHeaderCellModelExport.$t = /*@__PURE__*/ markType(SectionHeaderCellModelExport, 'SectionHeaderCellModelExport', CellModelExport.$);
    return SectionHeaderCellModelExport;
})();
//# sourceMappingURL=SectionHeaderCellModelExport.js.map
