/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, INotifyPropertyChanged_$type, PropertyChangedEventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let GridFilterDialogViewModelRow = /*@__PURE__*/ (() => {
    class GridFilterDialogViewModelRow extends Base {
        constructor() {
            super(...arguments);
            this.c = null;
            this.b = null;
            this.k = null;
            this.a = null;
            this.g = null;
            this.h = null;
            this.propertyChanged = null;
        }
        get f() {
            return this.c;
        }
        set f(a) {
            let b = this.c;
            this.c = a;
            if (b != this.c) {
                this.m("OperatorTypes");
            }
        }
        m(a) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new PropertyChangedEventArgs(a));
            }
        }
        get e() {
            return this.b;
        }
        set e(a) {
            let b = this.b;
            this.b = a;
            if (b != this.b) {
                this.m("Operators");
            }
        }
        get l() {
            return this.k;
        }
        set l(a) {
            let b = this.k;
            this.k = a;
            if (b != this.k) {
                this.m("CurrentOperator");
            }
        }
        get d() {
            return this.a;
        }
        set d(a) {
            let b = this.a;
            this.a = a;
            if (b != this.a) {
                this.m("OperandNumber");
            }
        }
        get i() {
            return this.g;
        }
        set i(a) {
            let b = this.g;
            this.g = a;
            if (b != this.g) {
                this.m("Operand1");
            }
        }
        get j() {
            return this.h;
        }
        set j(a) {
            let b = this.h;
            this.h = a;
            if (b != this.h) {
                this.m("Operand2");
            }
        }
    }
    GridFilterDialogViewModelRow.$t = /*@__PURE__*/ markType(GridFilterDialogViewModelRow, 'GridFilterDialogViewModelRow', Base.$, [INotifyPropertyChanged_$type]);
    return GridFilterDialogViewModelRow;
})();
//# sourceMappingURL=GridFilterDialogViewModelRow.js.map
