/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { markEnum } from "igniteui-react-core";
/**
 * Enumerates the options for how cell property animates are applied.
 */
export var CellPropertyAnimationType = /*@__PURE__*/ (function (CellPropertyAnimationType) {
    /**
     * The property is animated as a double value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["DoubleValue"] = 0] = "DoubleValue";
    /**
     * The property is animated as a number value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["NumberValue"] = 1] = "NumberValue";
    /**
     * The property is animated as a brush value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["BrushValue"] = 2] = "BrushValue";
    /**
     * The property is animated as a font value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["FontValue"] = 3] = "FontValue";
    /**
     * The property is animated as a enum value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["EnumValue"] = 4] = "EnumValue";
    /**
     * The property is animated as a bool value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["BoolValue"] = 5] = "BoolValue";
    /**
     * The property is animated as an int value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["IntValue"] = 6] = "IntValue";
    /**
     * The property is animated as a date value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["DateValue"] = 7] = "DateValue";
    /**
     * The propety is animated as a string value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["StringValue"] = 8] = "StringValue";
    /**
     * The property is animated as an object value.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["ObjectValue"] = 9] = "ObjectValue";
    /**
     * The property value is ignored and not propagated to live cells.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["IgnoredValue"] = 10] = "IgnoredValue";
    /**
     * The property value is not animated.
     */
    CellPropertyAnimationType[CellPropertyAnimationType["None"] = 11] = "None";
    return CellPropertyAnimationType;
})({});
/**
 * @hidden
 */
export let CellPropertyAnimationType_$type = /*@__PURE__*/ markEnum('CellPropertyAnimationType', 'DoubleValue,0|NumberValue,1|BrushValue,2|FontValue,3|EnumValue,4|BoolValue,5|IntValue,6|DateValue,7|StringValue,8|ObjectValue,9|IgnoredValue,10|None,11');
//# sourceMappingURL=CellPropertyAnimationType.js.map
