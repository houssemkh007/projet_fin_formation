/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GridCellBase } from "./GridCellBase";
import { Base, runOn, markType } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let ImageCell = /*@__PURE__*/ (() => {
    class ImageCell extends GridCellBase {
        constructor(a) {
            super(a);
            this.cd = null;
            this.b7 = 1;
            this.b8 = 3;
            this.cf = null;
            this.b9 = false;
            this.ca = 1;
            this.cc = null;
            this.cd = a.createElement("img");
            this.cd.listen("load", runOn(this, this.ci));
            this.cc = a.createElement("div");
            this.cc.setRawStyleProperty("background-size", "contain");
            this.cc.setRawStyleProperty("background-repeat", "no-repeat");
            this.cc.setRawStyleProperty("background-position", "center");
            this.cc.setRawStyleProperty("width", "100%");
            this.cc.setRawStyleProperty("height", "100%");
            this.z.setRawStyleProperty("text-align", "left");
            this.z.setRawStyleProperty("vertical-align", "middle");
            this.z.append(this.cc);
        }
        get ce() {
            return this.cd;
        }
        get cb() {
            return this.ca;
        }
        set cb(a) {
            this.ca = a;
        }
        ci(a) {
            this.b9 = false;
            if (!stringIsNullOrEmpty(this.cf)) {
                this.cc.setRawStyleProperty("opacity", "1");
                this.cc.setRawStyleProperty("background-image", "url(" + this.cf + ")");
            }
        }
        cj(a, b) {
            if (a == this.cf) {
                return;
            }
            this.cg();
            this.cc.setRawStyleProperty("opacity", "0");
            if (a == null || a.length == 0) {
                this.ch(this.cd);
                return;
            }
            if (Base.equalsStatic(a, this.cf)) {
                return;
            }
            this.cn(a, b);
            let img_ = this.cd.getNativeElement();
            if (img_ != null && (img_.complete)) {
                this.b9 = false;
                this.cd.setRawStyleProperty("opacity", "1");
                this.cc.setRawStyleProperty("background-image", "url(" + this.cf + ")");
            }
        }
        ch(a) {
            a.setAttribute("src", "");
            this.cc.setRawStyleProperty("background-image", "");
        }
        cm(a) {
            switch (a) {
                case 1:
                    this.cc.setRawStyleProperty("background-size", "100% 100%");
                    break;
                case 2:
                    this.cc.setRawStyleProperty("background-size", "auto");
                    break;
                case 0:
                    this.cc.setRawStyleProperty("background-size", "contain");
                    break;
            }
        }
        cn(a, b) {
            this.b9 = true;
            this.cf = a;
            this.ce.setAttribute("src", a);
        }
        cg() {
            if (this.b9) {
                this.ch(this.cd);
                this.cf = "";
            }
        }
        ck(a) {
            this.b7 = a;
        }
        cl(a) {
            this.b8 = a;
        }
        get_r() {
            return true;
        }
        bg(a, b, c) {
            super.bg(a, b, c);
            if (a == "Indent" || a == "IsCollapsable") {
                this.cc.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
            }
        }
    }
    ImageCell.$t = /*@__PURE__*/ markType(ImageCell, 'ImageCell', GridCellBase.$);
    return ImageCell;
})();
//# sourceMappingURL=ImageCell.js.map
