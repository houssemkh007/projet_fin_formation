import { DataBindingEventArgs as DataBindingEventArgs_internal } from "./DataBindingEventArgs";
import { IgrDateTimeCellInfo } from "./igr-date-time-cell-info";
import { IgrImageCellInfo } from "./igr-image-cell-info";
import { IgrNumericCellInfo } from "./igr-numeric-cell-info";
import { IgrRowSeparatorInfo } from "./igr-row-separator-info";
import { IgrSectionHeaderCellInfo } from "./igr-section-header-cell-info";
import { IgrTemplateCellInfo } from "./igr-template-cell-info";
import { IgrTemplateHeaderCellInfo } from "./igr-template-header-cell-info";
import { IgrTemplateSectionHeaderCellInfo } from "./igr-template-section-header-cell-info";
import { IgrTextCellInfo } from "./igr-text-cell-info";
import { IgrTextHeaderCellInfo } from "./igr-text-header-cell-info";
/**
 * Information about the data binding taking place.
*/
export class IgrDataBindingEventArgs {
    createImplementation() {
        return new DataBindingEventArgs_internal();
    }
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    constructor() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    /**
     * The backing information for the current cell.
    */
    get cellInfo() {
        if (this.i.cellInfo == null) {
            return null;
        }
        if (!this.i.cellInfo.externalObject) {
            let ext = null;
            switch (this.i.cellInfo.$type.name) {
                case "DateTimeCellModel":
                    ext = new IgrDateTimeCellInfo();
                    break;
                case "ImageCellModel":
                    ext = new IgrImageCellInfo();
                    break;
                case "NumericCellModel":
                    ext = new IgrNumericCellInfo();
                    break;
                case "RowSeparatorModel":
                    ext = new IgrRowSeparatorInfo();
                    break;
                case "SectionHeaderCellModel":
                    ext = new IgrSectionHeaderCellInfo();
                    break;
                case "TemplateCellModel":
                    ext = new IgrTemplateCellInfo();
                    break;
                case "TemplateHeaderCellModel":
                    ext = new IgrTemplateHeaderCellInfo();
                    break;
                case "TemplateSectionHeaderCellModel":
                    ext = new IgrTemplateSectionHeaderCellInfo();
                    break;
                case "TextCellModel":
                    ext = new IgrTextCellInfo();
                    break;
                case "TextHeaderCellModel":
                    ext = new IgrTextHeaderCellInfo();
                    break;
            }
            ext._implementation = this.i.cellInfo;
            this.i.cellInfo.externalObject = ext;
        }
        return this.i.cellInfo.externalObject;
    }
    /**
 * The resolved value for the cell.
*/
    get resolvedValue() {
        return this.i.resolvedValue;
    }
    set resolvedValue(v) {
        this.i.resolvedValue = v;
    }
    /**
     * The data for the row in which the cell is contained.
    */
    get rowObject() {
        return this.i.rowObject;
    }
    set rowObject(v) {
        this.i.rowObject = v;
    }
}
//# sourceMappingURL=igr-data-binding-event-args.js.map
