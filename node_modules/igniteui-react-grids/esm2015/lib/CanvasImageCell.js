/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CanvasGridCellBase } from "./CanvasGridCellBase";
import { Base, markType } from "igniteui-react-core";
/**
 * @hidden
 */
export let CanvasImageCell = /*@__PURE__*/ (() => {
    class CanvasImageCell extends CanvasGridCellBase {
        constructor(a) {
            super(a);
            this.c3 = 1;
            this.c4 = 3;
            this.c8 = null;
            this.c5 = 1;
            this.c7 = null;
            this.c7 = a.createElement("img");
        }
        get c6() {
            return this.c5;
        }
        set c6(a) {
            this.c5 = a;
        }
        db(a, b) {
            this.c9();
            this.c7.setRawStyleProperty("opacity", "0");
            if (a == null || a.length == 0) {
                this.da(this.c7);
                return;
            }
            if (Base.equalsStatic(a, this.c8)) {
                return;
            }
            this.de(a, b);
        }
        da(a) {
            a.setAttribute("src", "");
        }
        de(a, b) {
            this.c8 = a;
            this.c7.setAttribute("src", a);
        }
        c9() {
            this.da(this.c7);
            this.c8 = "";
        }
        dc(a) {
            this.y = true;
            this.c3 = a;
        }
        dd(a) {
            this.y = true;
            this.c4 = a;
        }
        get_aa() {
            return true;
        }
    }
    CanvasImageCell.$t = /*@__PURE__*/ markType(CanvasImageCell, 'CanvasImageCell', CanvasGridCellBase.$);
    return CanvasImageCell;
})();
//# sourceMappingURL=CanvasImageCell.js.map
