/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { SyncableObservableCollection$2 } from "igniteui-react-core";
import { ColumnSortDescription } from "./ColumnSortDescription";
import { SortDescription } from "igniteui-react-core";
/**
 * @hidden
 */
export let ColumnSortDescriptionCollection = /*@__PURE__*/ (() => {
    class ColumnSortDescriptionCollection extends Base {
        constructor() {
            super();
            this.f = new SyncableObservableCollection$2(ColumnSortDescription.$, SortDescription.$, 0);
            this.a = null;
            let a = this.f;
            a.compare = (b, c) => {
                if (b.f == c.propertyName) {
                    return true;
                }
                return false;
            };
            a.createFrom = (b) => new ColumnSortDescription(2, b.propertyName, b.direction);
            a.createTo = (b) => {
                let c = b.c;
                return SortDescription.create(b.f, c);
            };
        }
        get b() {
            return this.a;
        }
        set b(a) {
            if (a == null) {
                this.f.syncTarget = null;
                this.a = null;
                return;
            }
            this.a = a;
            this.f.syncTarget = this.a.getInner();
        }
        g(a) {
            return this.f.add(a);
        }
        n(a, b) {
            this.f.add1(a, b);
        }
        m() {
            this.f.clear();
        }
        get(a) {
            return this.f.get(a);
        }
        j(a) {
            return this.f.indexOf(a);
        }
        h(a) {
            return this.f.remove1(a);
        }
        d(a) {
            return this.f.remove(a);
        }
        set(a, b) {
            return this.f.set(a, b);
        }
        size() {
            return this.f.size();
        }
        l(a) {
            this.f.addListener(a);
        }
        o(a) {
            this.f.removeListener(a);
        }
        get i() {
            return this.f.all;
        }
    }
    ColumnSortDescriptionCollection.$t = /*@__PURE__*/ markType(ColumnSortDescriptionCollection, 'ColumnSortDescriptionCollection');
    return ColumnSortDescriptionCollection;
})();
//# sourceMappingURL=ColumnSortDescriptionCollection.js.map
