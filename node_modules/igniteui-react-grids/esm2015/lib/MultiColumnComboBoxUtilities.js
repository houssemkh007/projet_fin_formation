/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { Size } from "igniteui-react-core";
import { Button } from "igniteui-react-inputs";
import { Icon } from "igniteui-react-inputs";
import { stringFormat } from "igniteui-react-core";
import { stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
export let MultiColumnComboBoxUtilities = /*@__PURE__*/ (() => {
    class MultiColumnComboBoxUtilities extends Base {
        static a(a, b, c, d, e, f, g, h) {
            let i = a.createElement("div");
            let j = a.getSubRenderer(i);
            g = new Button();
            g.provideContainer(j);
            g.s = c;
            g.h = d;
            g.d = e;
            let k = a.createElement("div");
            k.setStyleProperty("display", "inline-block");
            h = new Icon();
            let l = a.getSubRenderer(k);
            h.provideContainer(l);
            h.svgPath = b;
            k.setStyleProperty("width", stringFormat("{0}px", f.width.toString()));
            k.setStyleProperty("height", stringFormat("{0}px", f.height.toString()));
            let m = a.createElement("div");
            m.setStyleProperty("display", "flex");
            m.setStyleProperty("flex-direction", "row");
            m.setStyleProperty("flex-wrap", "no-wrap");
            m.setStyleProperty("align-items", "center");
            m.append(k);
            g.appendButtonContent(m);
            return {
                ret: i,
                p6: g,
                p7: h
            };
        }
        static d(a) {
            let b = 0;
            if (a.altKey) {
                b |= 1;
            }
            if (a.shiftKey) {
                b |= 4;
            }
            if (a.ctrlKey) {
                b |= 2;
            }
            return b;
        }
        static c(a, b, c = "block") {
            let d = b ? c : "none";
            a.setStyleProperty("display", d);
        }
        static e(a, b, c) {
            if (null == MultiColumnComboBoxUtilities.b) {
                MultiColumnComboBoxUtilities.b = a.createElement("div");
                MultiColumnComboBoxUtilities.b.setStyleProperty("height", "auto");
                MultiColumnComboBoxUtilities.b.setStyleProperty("width", "auto");
                MultiColumnComboBoxUtilities.b.setStyleProperty("white-space", "nowrap");
                MultiColumnComboBoxUtilities.b.setStyleProperty("position", "absolute");
            }
            if (null != c) {
                MultiColumnComboBoxUtilities.b.setStyleProperty("font", c.fontString);
            }
            else {
                MultiColumnComboBoxUtilities.b.setStyleProperty("font", stringEmpty());
            }
            let d = MultiColumnComboBoxUtilities.b.getNativeElement();
            document.body.appendChild(d);
            MultiColumnComboBoxUtilities.b.setRawText(b);
            let e = MultiColumnComboBoxUtilities.b.outerWidth();
            let f = MultiColumnComboBoxUtilities.b.outerHeight();
            document.body.removeChild(d);
            return new Size(1, e, f);
        }
    }
    MultiColumnComboBoxUtilities.$t = /*@__PURE__*/ markType(MultiColumnComboBoxUtilities, 'MultiColumnComboBoxUtilities');
    MultiColumnComboBoxUtilities.b = null;
    return MultiColumnComboBoxUtilities;
})();
//# sourceMappingURL=MultiColumnComboBoxUtilities.js.map
