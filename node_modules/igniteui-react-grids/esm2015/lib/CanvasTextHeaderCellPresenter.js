/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CanvasCellPresenterBase } from "./CanvasCellPresenterBase";
import { runOn, markType } from "igniteui-react-core";
import { CellModel } from "./CellModel";
import { TextCellModel } from "./TextCellModel";
import { CanvasContentCellModelHelper } from "./CanvasContentCellModelHelper";
/**
 * @hidden
 */
export let CanvasTextHeaderCellPresenter = /*@__PURE__*/ (() => {
    class CanvasTextHeaderCellPresenter extends CanvasCellPresenterBase {
        constructor(a) {
            super(a);
            this.e = null;
        }
        get d() {
            return this.a;
        }
        f() {
            if (this.e != null) {
                this.e();
            }
        }
        b(a) {
            super.b(a);
            let b = a;
            if (a.as) {
                if (a.ax(TextCellModel.kq)) {
                    b.ip = b.ks;
                    this.d.ck(b.ip);
                }
                if (a.ax(CellModel.f6)) {
                    if (a.bb) {
                        this.d.c4.l = false;
                    }
                    if (this.e == null) {
                        let c = a.o;
                        this.e = () => c.sk();
                    }
                    this.d.c7(a.m);
                    this.d.ci(runOn(this, this.f));
                    if (a.bb) {
                        this.d.c4.l = true;
                    }
                }
                if (a.ax(CellModel.f7)) {
                    if (a.bb) {
                        this.d.c4.l = false;
                    }
                    this.d.c4.a0 = a.kn;
                    if (a.bb) {
                        this.d.c4.l = true;
                    }
                }
                if (a.aw("SortIndicatorStyle")) {
                    this.d.c4.f = b.kz;
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        }
    }
    CanvasTextHeaderCellPresenter.$t = /*@__PURE__*/ markType(CanvasTextHeaderCellPresenter, 'CanvasTextHeaderCellPresenter', CanvasCellPresenterBase.$);
    return CanvasTextHeaderCellPresenter;
})();
//# sourceMappingURL=CanvasTextHeaderCellPresenter.js.map
