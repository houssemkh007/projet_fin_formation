import { IgrGridCellPosition } from "./igr-grid-cell-position";
import { GridActiveCellChangedEventArgs as GridActiveCellChangedEventArgs_internal } from "./GridActiveCellChangedEventArgs";
/**
 * Information about the change to the selected cells in the grid.
*/
export class IgrGridActiveCellChangedEventArgs {
    createImplementation() {
        return new GridActiveCellChangedEventArgs_internal();
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    constructor() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    /**
     * The new active cell.
    */
    get newActiveCell() {
        if (this.i.newActiveCell == null) {
            return null;
        }
        if (!this.i.newActiveCell.externalObject) {
            let e = new IgrGridCellPosition();
            e._implementation = this.i.newActiveCell;
            this.i.newActiveCell.externalObject = e;
        }
        return this.i.newActiveCell.externalObject;
    }
    set newActiveCell(v) {
        v == null ? this.i.newActiveCell = null : this.i.newActiveCell = v.i;
    }
    /**
     * The old active cell.
    */
    get oldActiveCell() {
        if (this.i.oldActiveCell == null) {
            return null;
        }
        if (!this.i.oldActiveCell.externalObject) {
            let e = new IgrGridCellPosition();
            e._implementation = this.i.oldActiveCell;
            this.i.oldActiveCell.externalObject = e;
        }
        return this.i.oldActiveCell.externalObject;
    }
    set oldActiveCell(v) {
        v == null ? this.i.oldActiveCell = null : this.i.oldActiveCell = v.i;
    }
}
//# sourceMappingURL=igr-grid-active-cell-changed-event-args.js.map
