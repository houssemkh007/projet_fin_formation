/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { TemplateCellModel } from "./TemplateCellModel";
import { CellModel } from "./CellModel";
import { markType } from "igniteui-react-core";
import { TemplateHeaderCellModelExport } from "./TemplateHeaderCellModelExport";
/**
 * @hidden
 */
export let TemplateHeaderCellModel = /*@__PURE__*/ (() => {
    class TemplateHeaderCellModel extends TemplateCellModel {
        constructor() {
            super(...arguments);
            this.ku = false;
        }
        get kv() {
            return this.ku;
        }
        set kv(a) {
            let b = this.ku;
            this.ku = a;
            if (this.ku != b) {
                this.jm("IsFilterUIVisible", TemplateHeaderCellModel.kw, b, this.ku);
            }
        }
        ju(a, b) {
            super.ju(a, b);
            if (a == "IsFilterUIVisible") {
                this.kv = b;
            }
        }
        gn(a) {
            if (a == "IsFilterUIVisible") {
                return this.kv;
            }
            return super.gn(a);
        }
        b(a) {
            if (a == null) {
                a = new TemplateHeaderCellModelExport();
            }
            a = super.b(a);
            let b = a;
            b.ae = this.ks;
            return b;
        }
    }
    TemplateHeaderCellModel.$t = /*@__PURE__*/ markType(TemplateHeaderCellModel, 'TemplateHeaderCellModel', TemplateCellModel.$);
    TemplateHeaderCellModel.kw = /*@__PURE__*/ CellModel.ez("IsFilterUIVisible");
    return TemplateHeaderCellModel;
})();
//# sourceMappingURL=TemplateHeaderCellModel.js.map
