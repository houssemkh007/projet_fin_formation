/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { CanvasCellPresenterBase } from "./CanvasCellPresenterBase";
import { SectionHeaderCellModel } from "./SectionHeaderCellModel";
import { markType } from "igniteui-react-core";
import { CanvasContentCellModelHelper } from "./CanvasContentCellModelHelper";
/**
 * @hidden
 */
export let CanvasSectionHeaderCellPresenter = /*@__PURE__*/ (() => {
    class CanvasSectionHeaderCellPresenter extends CanvasCellPresenterBase {
        constructor(a) {
            super(a);
        }
        get d() {
            return this.a;
        }
        b(a) {
            super.b(a);
            let b = a;
            if (a.as) {
                if (a.ax(SectionHeaderCellModel.kw) || a.ax(SectionHeaderCellModel.ky)) {
                    if (b.ks == null || (b.ks.length == 0 && b.k6 == null)) {
                        if (b.go == null) {
                            b.ip = "";
                        }
                        else {
                            b.ip = b.go.toString();
                        }
                    }
                    else {
                        if (b.k4 != null && b.kv == 0) {
                            b.ip = b.k6 + "    " + b.k4;
                        }
                        else {
                            b.ip = b.k6;
                        }
                    }
                    this.d.ck(b.ip);
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        }
    }
    CanvasSectionHeaderCellPresenter.$t = /*@__PURE__*/ markType(CanvasSectionHeaderCellPresenter, 'CanvasSectionHeaderCellPresenter', CanvasCellPresenterBase.$);
    return CanvasSectionHeaderCellPresenter;
})();
//# sourceMappingURL=CanvasSectionHeaderCellPresenter.js.map
