/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CanvasGridCellBase } from "./CanvasGridCellBase";
import { GridSortIndicator } from "./GridSortIndicator";
import { delegateCombine, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var CanvasTextHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CanvasTextHeaderCell, _super);
    function CanvasTextHeaderCell(a) {
        var _this = _super.call(this, a) || this;
        _this.c3 = null;
        _this.c6 = null;
        _this.c5 = null;
        _this.ce(0);
        _this.cm(1);
        _this.c3 = new GridSortIndicator();
        var b = a.createElement("div");
        b.setRawStyleProperty("display", "inline-block");
        b.setRawStyleProperty("width", "16px");
        b.setRawStyleProperty("height", "16px");
        _this.c6 = b;
        var c = a.getSubRenderer(_this.c6);
        _this.c3.ax(c);
        _this.c3.w = window.devicePixelRatio;
        var d = _this.c3;
        d.renderCompleted = delegateCombine(d.renderCompleted, function (d, e) { return _this.b3(); });
        _this.c3.ar(16, 16);
        _this.c5 = _this.c3.ad();
        return _this;
    }
    Object.defineProperty(CanvasTextHeaderCell.prototype, "c4", {
        get: function () {
            return this.c3;
        },
        enumerable: true,
        configurable: true
    });
    CanvasTextHeaderCell.prototype.c7 = function (a) {
        this.c4.b = a;
        this.b3();
    };
    CanvasTextHeaderCell.prototype.b5 = function (a) {
        _super.prototype.b5.call(this, a);
        var b = this.bg + 5;
        if (this.d == 2) {
            b = this.be - 21;
        }
        a.m(this.c5, 1, b, this.bh - 8, 16, 16);
    };
    CanvasTextHeaderCell.prototype.get_z = function () {
        return true;
    };
    CanvasTextHeaderCell.$t = markType(CanvasTextHeaderCell, 'CanvasTextHeaderCell', CanvasGridCellBase.$);
    return CanvasTextHeaderCell;
}(CanvasGridCellBase));
export { CanvasTextHeaderCell };
//# sourceMappingURL=CanvasTextHeaderCell.js.map
