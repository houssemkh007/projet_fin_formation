/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { GridColumnOptionsViewBase } from "./GridColumnOptionsViewBase";
import { FontInfo } from "igniteui-react-core";
import { GridColumnOptionsUtilities } from "./GridColumnOptionsUtilities";
import { markType, enumGetBox, runOn, delegateCombine, typeCast } from "igniteui-react-core";
import { GridColumnOptionsBase } from "./GridColumnOptionsBase";
import { GridColumnOptionsSimpleSectionBase } from "./GridColumnOptionsSimpleSectionBase";
import { StringComparer } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { DeviceUtils } from "igniteui-react-core";
import { truncate } from "igniteui-react-core";
import { stringFormat1 } from "igniteui-react-core";
/**
 * @hidden
 */
var GridColumnOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridColumnOptionsView, _super);
    function GridColumnOptionsView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.u = null;
        _this.y = null;
        _this.w = null;
        _this.x = null;
        _this.p = null;
        _this.s = null;
        _this.r = null;
        _this.v = null;
        _this.q = null;
        _this.t = null;
        return _this;
    }
    Object.defineProperty(GridColumnOptionsView.prototype, "n", {
        get: function () {
            return this.b;
        },
        enumerable: true,
        configurable: true
    });
    GridColumnOptionsView.prototype.o = function () {
        var a = this.e;
        var b = a.createElement("div");
        var c = a.createElement("header");
        b.append(c);
        var d = a.createElement("h4");
        c.append(d);
        c.setRawText(this.n.dh);
        return b;
    };
    GridColumnOptionsView.prototype.ab = function () {
        if (null != this.t) {
            var a = this.n;
            var b = a.dh;
            this.t.setRawText(b);
            if (null != a.b4) {
                this.t.setStyleProperty("font", a.b4.fontString);
            }
        }
    };
    GridColumnOptionsView.prototype.j = function () {
        _super.prototype.j.call(this);
        this.m();
    };
    GridColumnOptionsView.prototype.m = function () {
        _super.prototype.m.call(this);
        if (null != this.g) {
            this.g.setStyleProperty("padding", this.n.dq());
            this.g.setStyleProperty("box-sizing", "border-box");
        }
        this.ab();
        var a;
        var b;
        if (null != this.u) {
            a = this.u;
            b = this.n.ce;
            GridColumnOptionsUtilities.j(a, b, "flex");
        }
        if (null != this.y) {
            a = this.y;
            b = this.n.cs;
            GridColumnOptionsUtilities.j(a, b);
        }
        if (null != this.w) {
            a = this.w;
            b = this.n.cm;
            GridColumnOptionsUtilities.j(a, b);
        }
        if (null != this.x) {
            a = this.x;
            b = this.n.cp;
            GridColumnOptionsUtilities.j(a, b);
        }
        if (null != this.v) {
            a = this.v;
            b = this.n.cj;
            GridColumnOptionsUtilities.j(a, b);
        }
        if (null != this.q) {
            a = this.q;
            b = this.n.cd;
            GridColumnOptionsUtilities.j(a, b);
        }
        if (null != this.p) {
            a = this.p;
            b = this.n.ca;
            GridColumnOptionsUtilities.j(a, b);
        }
    };
    GridColumnOptionsView.prototype.z = function () {
        var a = this.e;
        var b = a.createElement("header");
        this.u.append(b);
        var c = a.createElement("h4");
        c.setStyleProperty("margin-top", "0");
        c.setStyleProperty("margin-bottom", "0");
        b.append(c);
        this.t = c;
        this.s.append(b);
        this.ab();
    };
    GridColumnOptionsView.prototype.aa = function (a, b, c, d, e, f, g, h, i) {
        this.u = a;
        this.y = b;
        this.w = c;
        this.x = d;
        this.p = e;
        this.s = f;
        this.r = g;
        this.v = h;
        this.q = i;
        this.r.setStyleProperty("display", "flex");
        this.r.setStyleProperty("flex-direction", "row");
        this.r.setStyleProperty("flex-wrap", "no-wrap");
        this.r.setStyleProperty("align-items", "center");
        this.r.setStyleProperty("justify-content", "space-between");
        this.u.setStyleProperty("display", "flex");
        this.u.setStyleProperty("flex-direction", "row");
        this.u.setStyleProperty("flex-wrap", "no-wrap");
        this.u.setStyleProperty("align-items", "center");
        this.u.setStyleProperty("justify-content", "space-between");
        this.u.setStyleProperty("margin-bottom", "5px");
        this.z();
        this.y.setStyleProperty("margin-bottom", "8px");
        this.w.setStyleProperty("margin-bottom", "8px");
        this.x.setStyleProperty("margin-bottom", "8px");
    };
    GridColumnOptionsView.$t = markType(GridColumnOptionsView, 'GridColumnOptionsView', GridColumnOptionsViewBase.$);
    return GridColumnOptionsView;
}(GridColumnOptionsViewBase));
export { GridColumnOptionsView };
/**
 * @hidden
 */
var GridColumnOptions = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridColumnOptions, _super);
    function GridColumnOptions() {
        var _this = _super.call(this) || this;
        _this.bw = null;
        _this.bt = null;
        _this.bv = null;
        _this.bs = null;
        _this.br = null;
        _this.bo = null;
        _this.b6 = null;
        _this.b3 = null;
        _this.b2 = null;
        _this.cv = truncate(DeviceUtils.g(8));
        _this.cx = truncate(DeviceUtils.g(4));
        _this.cw = truncate(DeviceUtils.g(8));
        _this.cu = truncate(DeviceUtils.g(8));
        _this.cf = true;
        _this.cq = true;
        _this.ck = true;
        _this.cn = true;
        _this.ch = true;
        _this.cb = true;
        _this.b8 = true;
        _this.eo = "Sort";
        _this.ei = "Asc";
        _this.el = "Desc";
        _this.du = "Move";
        _this.dx = "Left";
        _this.d1 = "Right";
        _this.d8 = "Pin";
        _this.eb = "Left";
        _this.ef = "Right";
        _this.c8 = "Apply";
        _this.db = "Cancel";
        _this.de = "Clear column filters";
        _this.by = 0;
        _this.bx = 0;
        _this.dk = "Search";
        _this.filterApplyButtonClick = null;
        _this.filterCancelButtonClick = null;
        return _this;
    }
    GridColumnOptions.prototype.f = function () {
        return new GridColumnOptionsView();
    };
    GridColumnOptions.prototype.a3 = function () {
        _super.prototype.a3.call(this);
        var a = this.column;
        if (null != this.bw) {
            this.bw.column = a;
        }
        if (null != this.bt) {
            this.bt.column = a;
        }
        if (null != this.bv) {
            this.bv.column = a;
        }
        if (null != this.bs) {
            this.bs.column = a;
        }
        if (null != this.br) {
            this.br.column = a;
        }
        if (null != this.bo) {
            this.bo.column = a;
        }
        this.e1();
    };
    GridColumnOptions.prototype.a7 = function (a, b) {
        _super.prototype.a7.call(this, a, b);
        switch (b.propertyName) {
            case "HeaderClickAction":
            case "ColumnMovingMode":
                this.e1();
                break;
        }
    };
    GridColumnOptions.prototype.ba = function (a, b, c) {
        _super.prototype.ba.call(this, a, b, c);
        switch (a) {
            case "HeaderVisible":
            case "SortOptionsVisible":
            case "MoveOptionsVisible":
            case "PinOptionsVisible":
            case "HideOptionsVisible":
            case "FilterOptionsVisible":
            case "PaddingTop":
            case "PaddingRight":
            case "PaddingBottom":
            case "PaddingLeft":
                this.e1();
                break;
            case "ActualLabelTextStyle":
            case "ActualBaseTheme":
            case "ActualButtonDensity":
            case "ActualButtonTextStyle":
            case "ActualDensity":
            case "ActualFilterListDensity":
            case "BackgroundColor":
            case "TextColor":
                this.ez();
                break;
            case "ColumnNameTextStyle":
                this.e0();
                break;
            case "ActualColumnNameTextStyle":
                this.e1();
                break;
            case "FilterListDensity":
                this.bz = this.filterListDensity == 0 ? this.q : this.filterListDensity;
                break;
        }
    };
    GridColumnOptions.prototype.e1 = function () {
        this.bu.m();
    };
    Object.defineProperty(GridColumnOptions.prototype, "dh", {
        get: function () {
            var a = this.column;
            return (null != a) ? a.hh : "(No column selected)";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "b7", {
        get: function () {
            if (null == this.b6) {
                this.b6 = new FontInfo();
                this.b6.n = "'Segoe UI', Verdana";
                this.b6.d = 16;
            }
            return this.b6;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "ce", {
        get: function () {
            return this.cg;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cs", {
        get: function () {
            return this.cr && this.bw.bo();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cm", {
        get: function () {
            return this.cl && this.bt.bo();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cp", {
        get: function () {
            return this.co && this.bv.bo();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cj", {
        get: function () {
            return this.ci && this.bs.bo();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cd", {
        get: function () {
            return this.cc && this.br.bo();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "ca", {
        get: function () {
            return this.b9 && this.bo.bo();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "bu", {
        get: function () {
            return this.e;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "b5", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            var b = this.b3;
            this.b3 = a;
            if (b != this.b3) {
                this.a8("ColumnNameTextStyle", b, this.b3);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "b4", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            var b = this.b2;
            this.b2 = a;
            if (this.b2 != b) {
                this.a8("ActualColumnNameTextStyle", b, this.b2);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "c3", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            var b = this.cv;
            this.cv = a;
            if (this.cv != b) {
                this.a8("PaddingLeft", b, this.cv);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "c5", {
        get: function () {
            return this.cx;
        },
        set: function (a) {
            var b = this.cx;
            this.cx = a;
            if (this.cx != b) {
                this.a8("PaddingTop", b, this.cx);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "c4", {
        get: function () {
            return this.cw;
        },
        set: function (a) {
            var b = this.cw;
            this.cw = a;
            if (this.cw != b) {
                this.a8("PaddingRight", b, this.cw);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "c2", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            var b = this.cu;
            this.cu = a;
            if (this.cu != b) {
                this.a8("PaddingBottom", b, this.cu);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cg", {
        get: function () {
            return this.cf;
        },
        set: function (a) {
            if (a == this.cf) {
                return;
            }
            var b = this.cf;
            this.cf = a;
            this.a8("HeaderVisible", b, this.cf);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cr", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            if (a == this.cq) {
                return;
            }
            var b = this.cq;
            this.cq = a;
            this.a8("SortOptionsVisible", b, this.cq);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cl", {
        get: function () {
            return this.ck;
        },
        set: function (a) {
            if (a == this.ck) {
                return;
            }
            var b = this.ck;
            this.ck = a;
            this.a8("MoveOptionsVisible", b, this.ck);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "co", {
        get: function () {
            return this.cn;
        },
        set: function (a) {
            if (a == this.cn) {
                return;
            }
            var b = this.cn;
            this.cn = a;
            this.a8("PinOptionsVisible", b, this.cn);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "ci", {
        get: function () {
            return this.ch;
        },
        set: function (a) {
            if (a == this.ch) {
                return;
            }
            var b = this.ch;
            this.ch = a;
            this.a8("HideOptionsVisible", b, this.ch);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "cc", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            if (a == this.cb) {
                return;
            }
            var b = this.cb;
            this.cb = a;
            this.a8("GroupOptionsVisible", b, this.cb);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "b9", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            if (a == this.b8) {
                return;
            }
            var b = this.b8;
            this.b8 = a;
            this.a8("FilterOptionsVisible", b, this.b8);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "ep", {
        get: function () {
            return null != this.bw ? this.bw.bs : this.eo;
        },
        set: function (a) {
            var b = this.ep;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.eo = a;
            if (null != this.bw) {
                this.bw.bs = a;
            }
            this.a8("SortHeaderCaption", b, this.eo);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "ej", {
        get: function () {
            return null != this.bw ? this.bw.bz : this.ei;
        },
        set: function (a) {
            var b = this.ej;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.ei = a;
            if (null != this.bw) {
                this.bw.bz = a;
            }
            this.a8("SortAscendingCaption", b, this.ei);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "em", {
        get: function () {
            return null != this.bw ? this.bw.b3 : this.el;
        },
        set: function (a) {
            var b = this.em;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.el = a;
            if (null != this.bw) {
                this.bw.b3 = a;
            }
            this.a8("SortDescendingCaption", b, this.el);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "dv", {
        get: function () {
            return null != this.bt ? this.bt.bs : this.du;
        },
        set: function (a) {
            var b = this.dv;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.du = a;
            if (null != this.bt) {
                this.bt.bs = a;
            }
            this.a8("MoveHeaderCaption", b, this.du);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "dy", {
        get: function () {
            return null != this.bt ? this.bt.b1 : this.dx;
        },
        set: function (a) {
            var b = this.dy;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.dx = a;
            if (null != this.bt) {
                this.bt.b1 = a;
            }
            this.a8("MoveLeftCaption", b, this.dx);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "d2", {
        get: function () {
            return null != this.bt ? this.bt.b5 : this.d1;
        },
        set: function (a) {
            var b = this.d2;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.d1 = a;
            if (null != this.bt) {
                this.bt.b5 = a;
            }
            this.a8("MoveRightCaption", b, this.d1);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "d9", {
        get: function () {
            return null != this.bv ? this.bv.bs : this.d8;
        },
        set: function (a) {
            var b = this.d9;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.d8 = a;
            if (null != this.bv) {
                this.bv.bs = a;
            }
            this.a8("PinHeaderCaption", b, this.d8);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "ec", {
        get: function () {
            return null != this.bv ? this.bv.b0 : this.eb;
        },
        set: function (a) {
            var b = this.ec;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.eb = a;
            if (null != this.bv) {
                this.bv.b0 = a;
            }
            this.a8("PinLeftCaption", b, this.eb);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "eg", {
        get: function () {
            return null != this.bv ? this.bv.b4 : this.ef;
        },
        set: function (a) {
            var b = this.eg;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.ef = a;
            if (null != this.bv) {
                this.bv.b4 = a;
            }
            this.a8("PinRightCaption", b, this.ef);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "c9", {
        get: function () {
            return null != this.bo ? this.bo.b3 : this.c8;
        },
        set: function (a) {
            var b = this.c9;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.c8 = a;
            if (null != this.bo) {
                this.bo.b3 = a;
            }
            this.a8("ApplyFiltersButtonCaption", b, this.c8);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "dc", {
        get: function () {
            return null != this.bo ? this.bo.b7 : this.db;
        },
        set: function (a) {
            var b = this.dc;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.db = a;
            if (null != this.bo) {
                this.bo.b7 = a;
            }
            this.a8("CancelFiltersButtonCaption", b, this.db);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "df", {
        get: function () {
            return null != this.bo ? this.bo.cb : this.de;
        },
        set: function (a) {
            var b = this.df;
            if (0 == StringComparer.b.compare(a, b)) {
                return;
            }
            this.de = a;
            if (null != this.bo) {
                this.bo.cb = a;
            }
            this.a8("ClearColumnFiltersCaption", b, this.de);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "filterListDensity", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            var b = this.by;
            this.by = a;
            if (b != this.by) {
                this.a8("FilterListDensity", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "bz", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            var b = this.bx;
            this.bx = a;
            if (b != this.bx) {
                this.a8("ActualFilterListDensity", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridColumnOptions.prototype, "dl", {
        get: function () {
            return this.dk;
        },
        set: function (a) {
            if (0 == StringComparer.b.compare(a, this.dk)) {
                return;
            }
            var b = this.dk;
            this.dk = a;
            if (null != this.bo) {
                this.bo.cg = a;
            }
            this.a8("FilterListPlaceholderText", b, this.dk);
        },
        enumerable: true,
        configurable: true
    });
    GridColumnOptions.prototype.notifySizeChanged = function () {
        this.e.j();
    };
    GridColumnOptions.prototype.provideContent = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
        this.bu.aa(a, b, c, d, e, f, g, h, i);
        this.bw = j;
        this.bw.bz = this.ei;
        this.bw.b3 = this.el;
        this.bt = k;
        this.bt.b1 = this.dx;
        this.bt.b5 = this.d1;
        this.bv = l;
        this.bv.b0 = this.eb;
        this.bv.b4 = this.ef;
        this.bs = m;
        this.bs.bq = false;
        this.br = n;
        this.br.bq = false;
        this.bo = o;
        this.bo.b3 = this.c9;
        this.bo.cb = this.de;
        this.bo.cg = this.dl;
        var p = this.bw;
        p.propertyChanged = delegateCombine(p.propertyChanged, runOn(this, this.eu));
        var q = this.bt;
        q.propertyChanged = delegateCombine(q.propertyChanged, runOn(this, this.eu));
        var r = this.bv;
        r.propertyChanged = delegateCombine(r.propertyChanged, runOn(this, this.eu));
        var s = this.bs;
        s.propertyChanged = delegateCombine(s.propertyChanged, runOn(this, this.eu));
        var t = this.br;
        t.propertyChanged = delegateCombine(t.propertyChanged, runOn(this, this.eu));
        var u = this.bo;
        u.propertyChanged = delegateCombine(u.propertyChanged, runOn(this, this.eu));
        var v = this.bo;
        v.applyButtonClick = delegateCombine(v.applyButtonClick, runOn(this, this.es));
        var w = this.bo;
        w.cancelButtonClick = delegateCombine(w.cancelButtonClick, runOn(this, this.et));
        this.e0();
        this.bh();
        this.be();
        this.ez();
    };
    GridColumnOptions.prototype.dq = function () {
        return stringFormat1("{0}px {1}px {2}px {3}px", this.c5.toString(), this.c4.toString(), this.c2.toString(), this.c3.toString());
    };
    GridColumnOptions.prototype.e0 = function () {
        this.b4 = (null == this.b5) ? this.b7 : this.b5;
    };
    GridColumnOptions.prototype.ez = function () {
        var a = [this.bw, this.bt, this.bv, this.bs, this.br, this.bo];
        for (var c = 0; c < a.length; c++) {
            var b = a[c];
            if (null != b) {
                b.bk = this.bk;
                b.bn = this.bn;
                b.density = this.q;
                b.buttonDensity = this.p;
                b.j = this.i;
            }
            var d = typeCast(GridColumnOptionsSimpleSectionBase.$, b);
            if (null != d) {
                d.ag = this.aa;
                d.ab = this.z;
            }
        }
        if (null != this.bo) {
            this.bo.bx = this.bz;
        }
    };
    GridColumnOptions.prototype.ew = function (a) {
        if (null != this.filterApplyButtonClick) {
            this.filterApplyButtonClick(this, a);
        }
    };
    GridColumnOptions.prototype.ex = function (a) {
        if (null != this.filterCancelButtonClick) {
            this.filterCancelButtonClick(this, a);
        }
    };
    GridColumnOptions.prototype.es = function (a, b) {
        this.ew(b);
    };
    GridColumnOptions.prototype.et = function (a, b) {
        this.ex(b);
    };
    GridColumnOptions.prototype.eu = function (a, b) {
        switch (b.propertyName) {
        }
    };
    GridColumnOptions.$t = markType(GridColumnOptions, 'GridColumnOptions', GridColumnOptionsBase.$);
    return GridColumnOptions;
}(GridColumnOptionsBase));
export { GridColumnOptions };
//# sourceMappingURL=GridColumnOptionsView_combined.js.map
