/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var DragSelectEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DragSelectEventArgs, _super);
    function DragSelectEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._startX = 0;
        _this._startY = 0;
        _this._currentX = 0;
        _this._currentY = 0;
        _this._controlPressed = false;
        return _this;
    }
    Object.defineProperty(DragSelectEventArgs.prototype, "startX", {
        get: function () {
            return this._startX;
        },
        set: function (a) {
            this._startX = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragSelectEventArgs.prototype, "startY", {
        get: function () {
            return this._startY;
        },
        set: function (a) {
            this._startY = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragSelectEventArgs.prototype, "currentX", {
        get: function () {
            return this._currentX;
        },
        set: function (a) {
            this._currentX = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragSelectEventArgs.prototype, "currentY", {
        get: function () {
            return this._currentY;
        },
        set: function (a) {
            this._currentY = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragSelectEventArgs.prototype, "controlPressed", {
        get: function () {
            return this._controlPressed;
        },
        set: function (a) {
            this._controlPressed = a;
        },
        enumerable: true,
        configurable: true
    });
    DragSelectEventArgs.$t = markType(DragSelectEventArgs, 'DragSelectEventArgs', EventArgs.$);
    return DragSelectEventArgs;
}(EventArgs));
export { DragSelectEventArgs };
//# sourceMappingURL=DragSelectEventArgs.js.map
