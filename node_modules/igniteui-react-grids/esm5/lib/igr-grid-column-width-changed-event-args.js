import { IgrColumn } from "./igr-column";
import { IgrColumnWidth } from "./igr-column-width";
import { GridColumnWidthChangedEventArgs as GridColumnWidthChangedEventArgs_internal } from "./GridColumnWidthChangedEventArgs";
/**
 * Event arguments for the GridColumnWidthChanged event.
*/
var IgrGridColumnWidthChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
    function IgrGridColumnWidthChangedEventArgs() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgrGridColumnWidthChangedEventArgs.prototype.createImplementation = function () {
        return new GridColumnWidthChangedEventArgs_internal();
    };
    Object.defineProperty(IgrGridColumnWidthChangedEventArgs.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgrGridColumnWidthChangedEventArgs.prototype.onImplementationCreated = function () {
    };
    IgrGridColumnWidthChangedEventArgs.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrGridColumnWidthChangedEventArgs.prototype, "column", {
        /**
         * The column whose Width has changed
        */
        get: function () {
            if (this.i.a == null) {
                return null;
            }
            if (!this.i.a.externalObject) {
                var e = IgrColumn._createFromInternal(this.i.a);
                if (e) {
                    e._implementation = this.i.a;
                }
                this.i.a.externalObject = e;
            }
            return this.i.a.externalObject;
        },
        set: function (v) {
            v == null ? this.i.a = null : this.i.a = v.i;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGridColumnWidthChangedEventArgs.prototype, "oldWidth", {
        /**
         * The old column width.
        */
        get: function () {
            if (this.i.b == null) {
                return null;
            }
            if (!this.i.b.externalObject) {
                var e = new IgrColumnWidth();
                e._implementation = this.i.b;
                this.i.b.externalObject = e;
            }
            return this.i.b.externalObject;
        },
        set: function (v) {
            v == null ? this.i.b = null : this.i.b = v.i;
        },
        enumerable: true,
        configurable: true
    });
    return IgrGridColumnWidthChangedEventArgs;
}());
export { IgrGridColumnWidthChangedEventArgs };
//# sourceMappingURL=igr-grid-column-width-changed-event-args.js.map
