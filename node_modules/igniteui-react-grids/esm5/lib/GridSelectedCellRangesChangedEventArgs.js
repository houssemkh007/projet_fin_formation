/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var GridSelectedCellRangesChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridSelectedCellRangesChangedEventArgs, _super);
    function GridSelectedCellRangesChangedEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._currentRanges = null;
        _this._addedRanges = null;
        _this._removedRanges = null;
        _this._updatedRanges = null;
        return _this;
    }
    Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "currentRanges", {
        get: function () {
            return this._currentRanges;
        },
        set: function (a) {
            this._currentRanges = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "addedRanges", {
        get: function () {
            return this._addedRanges;
        },
        set: function (a) {
            this._addedRanges = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "removedRanges", {
        get: function () {
            return this._removedRanges;
        },
        set: function (a) {
            this._removedRanges = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "updatedRanges", {
        get: function () {
            return this._updatedRanges;
        },
        set: function (a) {
            this._updatedRanges = a;
        },
        enumerable: true,
        configurable: true
    });
    GridSelectedCellRangesChangedEventArgs.$t = markType(GridSelectedCellRangesChangedEventArgs, 'GridSelectedCellRangesChangedEventArgs', EventArgs.$);
    return GridSelectedCellRangesChangedEventArgs;
}(EventArgs));
export { GridSelectedCellRangesChangedEventArgs };
//# sourceMappingURL=GridSelectedCellRangesChangedEventArgs.js.map
