import * as tslib_1 from "tslib";
import { DateTimeFormats_$type } from "./DateTimeFormats";
import { IgrCellInfo } from "./igr-cell-info";
import { DateTimeCellModel as DateTimeCellModel_internal } from "./DateTimeCellModel";
import { ensureEnum, ensureBool, arrayFindByName } from "igniteui-react-core";
/**
 * Backing information about a date time cell for the grid.
*/
var IgrDateTimeCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(IgrDateTimeCellInfo, _super);
    function IgrDateTimeCellInfo() {
        return _super.call(this) || this;
    }
    IgrDateTimeCellInfo.prototype.createImplementation = function () {
        return new DateTimeCellModel_internal();
    };
    Object.defineProperty(IgrDateTimeCellInfo.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDateTimeCellInfo.prototype, "dateTimeValue", {
        /**
         * Sets or gets the DateTime value for the cell.
        */
        get: function () {
            return this.i.k0;
        },
        set: function (v) {
            this.i.k0 = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDateTimeCellInfo.prototype, "formatStringOverride", {
        /**
         * The format string to apply to the value
        */
        get: function () {
            return this.i.lh;
        },
        set: function (v) {
            this.i.lh = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDateTimeCellInfo.prototype, "formatSpecifiers", {
        get: function () {
            return this.i.kr;
        },
        set: function (v) {
            this.i.kr = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDateTimeCellInfo.prototype, "formatOverride", {
        /**
         * The format options to apply to the value
        */
        get: function () {
            return this.i.la;
        },
        set: function (v) {
            this.i.la = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDateTimeCellInfo.prototype, "dateTimeFormat", {
        /**
         * Sets or gets the simple DateTimeFormat to use for the cell.
        */
        get: function () {
            return this.i.kw;
        },
        set: function (v) {
            this.i.kw = ensureEnum(DateTimeFormats_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrDateTimeCellInfo.prototype, "isOffsetValue", {
        /**
         * Sets or gets whether the value to use is a DateTimeOffset value.
        */
        get: function () {
            return this.i.ky;
        },
        set: function (v) {
            this.i.ky = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    IgrDateTimeCellInfo.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.formatSpecifiers != null && arrayFindByName(this.formatSpecifiers, name)) {
            return arrayFindByName(this.formatSpecifiers, name);
        }
        return null;
    };
    return IgrDateTimeCellInfo;
}(IgrCellInfo));
export { IgrDateTimeCellInfo };
//# sourceMappingURL=igr-date-time-cell-info.js.map
