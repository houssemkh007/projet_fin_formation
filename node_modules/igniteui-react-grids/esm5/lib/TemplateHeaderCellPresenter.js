/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CellPresenterBase } from "./CellPresenterBase";
import { CellModel } from "./CellModel";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var TemplateHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(TemplateHeaderCellPresenter, _super);
    function TemplateHeaderCellPresenter(a, b) {
        var _this = _super.call(this, a) || this;
        _this.d = null;
        _this.d = b;
        return _this;
    }
    Object.defineProperty(TemplateHeaderCellPresenter.prototype, "e", {
        get: function () {
            return this.a;
        },
        enumerable: true,
        configurable: true
    });
    TemplateHeaderCellPresenter.prototype.b = function (a) {
        _super.prototype.b.call(this, a);
        var b = this.d.actualColumns._inner[a.k.az];
        var c = b.header;
        if (a.ax(CellModel.ei) || a.ax(CellModel.ge)) {
            var d = Math.min(1, Math.max(0, a.cb));
            var e = a.b1 * (1 - d);
            this.e.b8.element.setRawStyleProperty("opacity", e.toString());
        }
        var f = a;
        c.fd(f, this.e.b8);
    };
    TemplateHeaderCellPresenter.$t = markType(TemplateHeaderCellPresenter, 'TemplateHeaderCellPresenter', CellPresenterBase.$);
    return TemplateHeaderCellPresenter;
}(CellPresenterBase));
export { TemplateHeaderCellPresenter };
//# sourceMappingURL=TemplateHeaderCellPresenter.js.map
