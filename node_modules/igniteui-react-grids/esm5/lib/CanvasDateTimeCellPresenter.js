/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CanvasCellPresenterBase } from "./CanvasCellPresenterBase";
import { DateTimeCellModel } from "./DateTimeCellModel";
import { CanvasContentCellModelHelper } from "./CanvasContentCellModelHelper";
import { markType } from "igniteui-react-core";
import { stringEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var CanvasDateTimeCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CanvasDateTimeCellPresenter, _super);
    function CanvasDateTimeCellPresenter(a) {
        return _super.call(this, a) || this;
    }
    Object.defineProperty(CanvasDateTimeCellPresenter.prototype, "d", {
        get: function () {
            return this.a;
        },
        enumerable: true,
        configurable: true
    });
    CanvasDateTimeCellPresenter.prototype.b = function (a) {
        _super.prototype.b.call(this, a);
        var b = a;
        if (a.as) {
            if (a.ax(DateTimeCellModel.k2) || a.ax(DateTimeCellModel.k3) || a.ax(DateTimeCellModel.k1)) {
                this.e(b);
                this.d.ck(b.ip);
            }
            CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
        }
    };
    CanvasDateTimeCellPresenter.prototype.e = function (a) {
        a.ip = a.le(a.k0);
        if (a.ip == stringEmpty() && a.go != null) {
            a.ip = a.go.toString();
        }
    };
    CanvasDateTimeCellPresenter.$t = markType(CanvasDateTimeCellPresenter, 'CanvasDateTimeCellPresenter', CanvasCellPresenterBase.$);
    return CanvasDateTimeCellPresenter;
}(CanvasCellPresenterBase));
export { CanvasDateTimeCellPresenter };
//# sourceMappingURL=CanvasDateTimeCellPresenter.js.map
