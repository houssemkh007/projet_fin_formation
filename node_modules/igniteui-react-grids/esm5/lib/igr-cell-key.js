import { CellKey as CellKey_internal } from "./CellKey";
import { IgrPrimaryKeyValue } from './igr-primary-key-value';
import { IgrColumn } from './igr-column';
/**
 * An indentifier for a specific cell in the grid.
*/
var IgrCellKey = /** @class */ /*@__PURE__*/ (function () {
    function IgrCellKey() {
        this._implementation = new CellKey_internal();
        this._implementation.externalObject = this;
    }
    Object.defineProperty(IgrCellKey.prototype, "i", {
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgrCellKey.prototype.onImplementationCreated = function () {
    };
    IgrCellKey.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrCellKey.prototype, "primaryKey", {
        /**
         * Gets or sets the primary key of the row associated with the cell.
        */
        get: function () {
            if (this.i.primaryKey == null) {
                return null;
            }
            if (!this._primaryKey) {
                this._primaryKey = new IgrPrimaryKeyValue(this.i.primaryKey.key, this.i.primaryKey.value);
            }
            return this._primaryKey;
        },
        set: function (v) {
            this.i.primaryKey = v.i;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrCellKey.prototype, "rowItem", {
        /**
     * Gets or sets the row data object associated with the cell.
    */
        get: function () {
            return this.i.h;
        },
        set: function (v) {
            this.i.h = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrCellKey.prototype, "columnUniqueKey", {
        /**
         * Gets or sets the column name associated with the cell.
         * All columns in the grid must have a unique name. That unique name is what is used for this property.
        */
        get: function () {
            return this.i.j;
        },
        set: function (v) {
            this.i.j = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrCellKey.prototype, "resolvedColumn", {
        /**
         * Gets or sets the resolved column object associated with this cell.
        */
        get: function () {
            if (this.i.b == null) {
                return null;
            }
            if (!this.i.b.externalObject) {
                var e = IgrColumn._createFromInternal(this.i.b);
                if (e) {
                    e._implementation = this.i.b;
                }
                this.i.b.externalObject = e;
            }
            return this.i.b.externalObject;
        },
        enumerable: true,
        configurable: true
    });
    IgrCellKey.prototype.findByName = function (name) {
        if (this.primaryKey && this.primaryKey.name && this.primaryKey.name == name) {
            return this.primaryKey;
        }
        return null;
    };
    return IgrCellKey;
}());
export { IgrCellKey };
//# sourceMappingURL=igr-cell-key.js.map
