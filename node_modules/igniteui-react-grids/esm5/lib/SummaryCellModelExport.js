/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CellModelExport } from "./CellModelExport";
import { markType } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var SummaryCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SummaryCellModelExport, _super);
    function SummaryCellModelExport() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ai = null;
        _this.ao = null;
        _this.ae = null;
        _this.af = null;
        _this.al = null;
        _this.am = null;
        _this.an = null;
        _this.ag = 0;
        _this.aj = null;
        _this.ak = null;
        _this.ar = null;
        _this.as = null;
        _this.at = null;
        _this.ah = 0;
        _this.ap = null;
        _this.aq = null;
        return _this;
    }
    SummaryCellModelExport.prototype.get_ac = function () {
        return "SummaryCell";
    };
    SummaryCellModelExport.prototype.ad = function (a) {
        _super.prototype.ad.call(this, a);
        a.l("summaryLabel : \"" + this.ai + "\", ");
        a.l("summaryValue : \"" + this.ao + "\", ");
        if (this.ae != null) {
            a.l("summaryLabelColor : " + this.ae.serialize() + ", ");
        }
        if (this.af != null) {
            a.l("summaryValueColor : " + this.af.serialize() + ", ");
        }
        if (!stringIsNullOrEmpty(this.al)) {
            a.l("summaryLabelFontStyle : \"" + this.al + "\", ");
        }
        if (!stringIsNullOrEmpty(this.am)) {
            a.l("summaryLabelFontVariant : \"" + this.am + "\", ");
        }
        if (!stringIsNullOrEmpty(this.an)) {
            a.l("summaryLabelFontWeight : \"" + this.an + "\", ");
        }
        if (!isNaN_(this.ag)) {
            a.l("summaryLabelFontSize : " + this.ag + ", ");
        }
        if (!stringIsNullOrEmpty(this.aj)) {
            a.l("summaryLabelFontFamily : \"" + this.aj + "\", ");
        }
        if (!stringIsNullOrEmpty(this.ak)) {
            a.l("summaryLabelFontStretch : \"" + this.ak + "\", ");
        }
        if (!stringIsNullOrEmpty(this.ar)) {
            a.l("summaryValueFontStyle : \"" + this.ar + "\", ");
        }
        if (!stringIsNullOrEmpty(this.as)) {
            a.l("summaryValueFontVariant : \"" + this.as + "\", ");
        }
        if (!stringIsNullOrEmpty(this.at)) {
            a.l("summaryValueFontWeight : \"" + this.at + "\", ");
        }
        if (!isNaN_(this.ah)) {
            a.l("summaryValueFontSize : " + this.ah + ", ");
        }
        if (!stringIsNullOrEmpty(this.ap)) {
            a.l("summaryValueFontFamily : \"" + this.ap + "\", ");
        }
        if (!stringIsNullOrEmpty(this.aq)) {
            a.l("summaryValueFontStretch : \"" + this.aq + "\", ");
        }
    };
    SummaryCellModelExport.$t = markType(SummaryCellModelExport, 'SummaryCellModelExport', CellModelExport.$);
    return SummaryCellModelExport;
}(CellModelExport));
export { SummaryCellModelExport };
//# sourceMappingURL=SummaryCellModelExport.js.map
