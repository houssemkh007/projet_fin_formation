import { IgrGridColumnCollection } from "./igr-grid-column-collection";
import { GridColumnsChangedEventArgs as GridColumnsChangedEventArgs_internal } from "./GridColumnsChangedEventArgs";
import { GridColumnCollection as GridColumnCollection_internal } from "./GridColumnCollection";
import { Column } from "./Column";
import { SyncableObservableCollection$1 } from "igniteui-react-core";
/**
 * Information about the generated columns.
*/
var IgrGridColumnsChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
    function IgrGridColumnsChangedEventArgs() {
        this._columns = null;
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgrGridColumnsChangedEventArgs.prototype.createImplementation = function () {
        return new GridColumnsChangedEventArgs_internal();
    };
    Object.defineProperty(IgrGridColumnsChangedEventArgs.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgrGridColumnsChangedEventArgs.prototype.onImplementationCreated = function () {
    };
    IgrGridColumnsChangedEventArgs.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrGridColumnsChangedEventArgs.prototype, "columns", {
        get: function () {
            if (this._columns === null) {
                var coll = new IgrGridColumnCollection();
                var innerColl = this.i.columns;
                if (!innerColl) {
                    innerColl = new GridColumnCollection_internal();
                }
                this._columns = coll._fromInner(innerColl);
                this.i.columns = innerColl;
            }
            return this._columns;
        },
        set: function (v) {
            if (this._columns !== null) {
                this._columns._setSyncTarget(null);
                this._columns = null;
            }
            var coll = new IgrGridColumnCollection();
            this._columns = coll._fromOuter(v);
            var syncColl = new SyncableObservableCollection$1(Column.$type);
            var innerColl = this.i.columns;
            if (!innerColl) {
                innerColl = new GridColumnCollection_internal();
            }
            syncColl._inner = innerColl;
            syncColl.clear();
            this._columns._setSyncTarget(syncColl);
            this.i.columns = innerColl;
        },
        enumerable: true,
        configurable: true
    });
    return IgrGridColumnsChangedEventArgs;
}());
export { IgrGridColumnsChangedEventArgs };
//# sourceMappingURL=igr-grid-columns-changed-event-args.js.map
