import { ListSortDirection_$type } from "igniteui-react-core";
import { ColumnSortDescription as ColumnSortDescription_internal } from "./ColumnSortDescription";
import { ensureEnum } from "igniteui-react-core";
/**
 * Represents an element in the current sort applied to a data source or provider. Changes to this object are not observed or expected after it is initially assigned to a collection.
*/
var IgrColumnSortDescription = /** @class */ /*@__PURE__*/ (function () {
    function IgrColumnSortDescription() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgrColumnSortDescription.prototype.createImplementation = function () {
        return new ColumnSortDescription_internal(0);
    };
    Object.defineProperty(IgrColumnSortDescription.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgrColumnSortDescription.prototype.onImplementationCreated = function () {
    };
    IgrColumnSortDescription.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrColumnSortDescription.prototype, "field", {
        /**
         * Gets or sets the property being sorted.
        */
        get: function () {
            return this.i.f;
        },
        set: function (v) {
            this.i.f = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrColumnSortDescription.prototype, "sortDirection", {
        /**
         * Gets or sets the direction to sort based on the property.
        */
        get: function () {
            return this.i.c;
        },
        set: function (v) {
            this.i.c = ensureEnum(ListSortDirection_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    IgrColumnSortDescription.prototype.findByName = function (name) {
        return null;
    };
    /**
     * Returns if the SortDescription is equal to another.
    
    * @param other  * The SortDescription to compare to.
    */
    IgrColumnSortDescription.prototype.equals = function (other) {
        var iv = this.i.equals(other);
        return (iv);
    };
    return IgrColumnSortDescription;
}());
export { IgrColumnSortDescription };
//# sourceMappingURL=igr-column-sort-description.js.map
