/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CellPresenterBase } from "./CellPresenterBase";
import { CellModel } from "./CellModel";
import { TextCellModel } from "./TextCellModel";
import { markType } from "igniteui-react-core";
import { ContentCellModelHelper } from "./ContentCellModelHelper";
/**
 * @hidden
 */
var TextCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(TextCellPresenter, _super);
    function TextCellPresenter(a) {
        return _super.call(this, a) || this;
    }
    Object.defineProperty(TextCellPresenter.prototype, "d", {
        get: function () {
            return this.a;
        },
        enumerable: true,
        configurable: true
    });
    TextCellPresenter.prototype.b = function (a) {
        _super.prototype.b.call(this, a);
        var b = a;
        if (a.as) {
            if (a.ax(TextCellModel.kq) || a.ax(CellModel.fl)) {
                if (b.ks != null) {
                    b.ip = b.ks;
                }
                else {
                    if (b.go == null) {
                        b.ip = "";
                    }
                    else {
                        b.ip = b.go.toString();
                    }
                }
                this.d.b8.setRawText(b.ip);
            }
            ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.b8, this.a);
        }
    };
    TextCellPresenter.$t = markType(TextCellPresenter, 'TextCellPresenter', CellPresenterBase.$);
    return TextCellPresenter;
}(CellPresenterBase));
export { TextCellPresenter };
//# sourceMappingURL=TextCellPresenter.js.map
