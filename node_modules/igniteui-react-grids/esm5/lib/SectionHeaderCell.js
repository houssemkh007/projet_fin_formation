/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { GridCellBase } from "./GridCellBase";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var SectionHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SectionHeaderCell, _super);
    function SectionHeaderCell(a) {
        var _this = _super.call(this, a) || this;
        _this.b7 = null;
        _this.b7 = a.createElement("span");
        _this.z.setRawStyleProperty("text-align", "left");
        _this.z.setRawStyleProperty("vertical-align", "middle");
        _this.z.setRawStyleProperty("overflow", "hidden");
        _this.z.setRawStyleProperty("white-space", "nowrap");
        _this.z.setRawStyleProperty("text-overflow", "ellipsis");
        _this.z.append(_this.b7);
        return _this;
    }
    Object.defineProperty(SectionHeaderCell.prototype, "b8", {
        get: function () {
            return this.b7;
        },
        enumerable: true,
        configurable: true
    });
    SectionHeaderCell.prototype.get_r = function () {
        return true;
    };
    SectionHeaderCell.prototype.bg = function (a, b, c) {
        _super.prototype.bg.call(this, a, b, c);
        if (a == "Indent") {
            this.b7.setRawStyleProperty("margin-left", this.au + this.aw + 10 + "px");
        }
        if (a == "IsCollapsable") {
            if (this.o) {
                this.b7.setRawStyleProperty("margin-left", this.au + this.aw + 10 + "px");
            }
            else {
                this.b7.setRawStyleProperty("margin-left", "0px");
            }
        }
    };
    SectionHeaderCell.$t = markType(SectionHeaderCell, 'SectionHeaderCell', GridCellBase.$);
    return SectionHeaderCell;
}(GridCellBase));
export { SectionHeaderCell };
//# sourceMappingURL=SectionHeaderCell.js.map
