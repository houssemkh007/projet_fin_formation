import { ResponsivePhase as ResponsivePhase_internal } from "./ResponsivePhase";
/**
 * Describes one phase of a responsive state to apply to the grid.
*/
var IgrResponsivePhase = /** @class */ /*@__PURE__*/ (function () {
    function IgrResponsivePhase() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgrResponsivePhase.prototype.createImplementation = function () {
        return new ResponsivePhase_internal();
    };
    Object.defineProperty(IgrResponsivePhase.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgrResponsivePhase.prototype.onImplementationCreated = function () {
    };
    IgrResponsivePhase.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrResponsivePhase.prototype, "name", {
        /**
         * The name of this responsive phase
        */
        get: function () {
            return this.i.k;
        },
        set: function (v) {
            this.i.k = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrResponsivePhase.prototype, "delayMilliseconds", {
        /**
         * The amount of time to delay the responsive phase from starting, in milliseconds
        */
        get: function () {
            return this.i.i;
        },
        set: function (v) {
            this.i.i = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgrResponsivePhase.prototype.findByName = function (name) {
        return null;
    };
    /**
     * Adds a column property setter to the phase.
    
    * @param setter  * The setter to add.
    */
    IgrResponsivePhase.prototype.addColumnPropertySetter = function (setter) {
        var iv = this.i.g((setter == null ? null : setter.i));
        return (iv == null ? null : iv.externalObject);
    };
    /**
     * Adds a column property setter to the phase, and returns it.
    
    */
    IgrResponsivePhase.prototype.columnPropertySetter = function () {
        var iv = this.i.c();
        return (iv == null ? null : iv.externalObject);
    };
    /**
     * Adds a column exchanger the the phase.
    
    * @param exchanger  * The exchanger to add.
    */
    IgrResponsivePhase.prototype.addColumnExchanger = function (exchanger) {
        var iv = this.i.f((exchanger == null ? null : exchanger.i));
        return (iv == null ? null : iv.externalObject);
    };
    /**
     * Adds a column exchanger to the phase and returns it.
    
    */
    IgrResponsivePhase.prototype.columnExchanger = function () {
        var iv = this.i.h();
        return (iv == null ? null : iv.externalObject);
    };
    return IgrResponsivePhase;
}());
export { IgrResponsivePhase };
//# sourceMappingURL=igr-responsive-phase.js.map
