/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, markType, TypeRegistrar } from "igniteui-react-core";
import { IExternalGrid_$type } from "./IExternalGrid";
import { LocalDataSource } from "igniteui-react-core";
/**
 * @hidden
 */
var GridExternalWrapper = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridExternalWrapper, _super);
    function GridExternalWrapper(a) {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.a = a;
        return _this;
    }
    Object.defineProperty(GridExternalWrapper.prototype, "renderer", {
        get: function () {
            var grid_ = this.a;
            return (grid_._renderer);
        },
        enumerable: true,
        configurable: true
    });
    GridExternalWrapper.prototype.onContentSizeChanged = function () {
        var grid_ = this.a;
        grid_.refreshContentSize();
    };
    GridExternalWrapper.prototype.createLocalDataSource = function (a) {
        var b = new LocalDataSource();
        b.dataSource = a;
        return b;
    };
    GridExternalWrapper.prototype.createTextColumn = function (a) {
        if (TypeRegistrar.isRegistered("IgxTextColumnComponent")) {
            var column_ = TypeRegistrar.create("IgxTextColumnComponent");
            var b = (column_._implementation);
            b.hy = a;
            return b;
        }
        return null;
    };
    GridExternalWrapper.prototype.createNumericColumn = function (a) {
        if (TypeRegistrar.isRegistered("IgxNumericColumnComponent")) {
            var column_ = TypeRegistrar.create("IgxNumericColumnComponent");
            var b = (column_._implementation);
            b.hy = a;
            return b;
        }
        return null;
    };
    GridExternalWrapper.prototype.createDateTimeColumn = function (a) {
        if (TypeRegistrar.isRegistered("IgxDateTimeColumnComponent")) {
            var column_ = TypeRegistrar.create("IgxDateTimeColumnComponent");
            var b = (column_._implementation);
            b.hy = a;
            return b;
        }
        return null;
    };
    GridExternalWrapper.prototype.createImageColumn = function (a) {
        if (TypeRegistrar.isRegistered("IgxImageColumnComponent")) {
            var column_ = TypeRegistrar.create("IgxImageColumnComponent");
            var b = (column_._implementation);
            b.hy = a;
            return b;
        }
        return null;
    };
    GridExternalWrapper.prototype.createTemplateColumn = function (a) {
        if (TypeRegistrar.isRegistered("IgxTemplateColumnComponent")) {
            var column_ = TypeRegistrar.create("IgxTemplateColumnComponent");
            var b = (column_._implementation);
            b.hy = a;
            return b;
        }
        return null;
    };
    GridExternalWrapper.prototype.createComboBoxColumn = function (a) {
        if (TypeRegistrar.isRegistered("IgxComboBoxColumnComponent")) {
            var column_ = TypeRegistrar.create("IgxComboBoxColumnComponent");
            var b = (column_._implementation);
            b.hy = a;
            return b;
        }
        return null;
    };
    GridExternalWrapper.prototype.focusScroller = function () {
        var grid_ = this.a;
        grid_._focusScroller();
    };
    GridExternalWrapper.prototype.insertExternalColumnAtIndex = function (index_, column_) {
        var grid_ = this.a;
        grid_._insertExternalColumnAtIndex(index_, column_);
    };
    GridExternalWrapper.prototype.removeExternalColumn = function (column_) {
        var grid_ = this.a;
        grid_._removeExternalColumn(column_);
    };
    GridExternalWrapper.prototype.setDefaultCursor = function () {
        var grid_ = this.a;
        grid_._setDefaultCursor();
    };
    GridExternalWrapper.prototype.setResizeCursor = function () {
        var grid_ = this.a;
        grid_._setResizeCursor();
    };
    GridExternalWrapper.prototype.setHandCursor = function () {
        var grid_ = this.a;
        grid_._setHandCursor();
    };
    GridExternalWrapper.prototype.setBorder = function (a, b, c, d, e, f, g, h, i) {
        var grid_ = this.a;
        var color_ = a._fill;
        var borderLeft_ = b;
        var borderTop_ = c;
        var borderRight_ = d;
        var borderBottom_ = e;
        var topLeftRadius_ = f;
        var topRightRadius_ = g;
        var botLeftRadius_ = h;
        var botRightRadius_ = i;
        grid_._setBorder(color_, borderLeft_, borderTop_, borderRight_, borderBottom_, topLeftRadius_, topRightRadius_, botLeftRadius_, botRightRadius_);
    };
    GridExternalWrapper.prototype.setScrollerVerticalTrackInset = function (a) {
        this.a._setScrollerVerticalTrackInset(a);
    };
    GridExternalWrapper.prototype.ensureColumnsAreManual = function () {
        var grid_ = this.a;
        grid_._ensureColumnsAreManual();
    };
    GridExternalWrapper.$t = markType(GridExternalWrapper, 'GridExternalWrapper', Base.$, [IExternalGrid_$type]);
    return GridExternalWrapper;
}(Base));
export { GridExternalWrapper };
//# sourceMappingURL=GridExternalWrapper.js.map
