/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { EventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var GridSelectedKeysChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridSelectedKeysChangedEventArgs, _super);
    function GridSelectedKeysChangedEventArgs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._currentKeys = null;
        _this._addedKeys = null;
        _this._removedKeys = null;
        return _this;
    }
    Object.defineProperty(GridSelectedKeysChangedEventArgs.prototype, "currentKeys", {
        get: function () {
            return this._currentKeys;
        },
        set: function (a) {
            this._currentKeys = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridSelectedKeysChangedEventArgs.prototype, "addedKeys", {
        get: function () {
            return this._addedKeys;
        },
        set: function (a) {
            this._addedKeys = a;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridSelectedKeysChangedEventArgs.prototype, "removedKeys", {
        get: function () {
            return this._removedKeys;
        },
        set: function (a) {
            this._removedKeys = a;
        },
        enumerable: true,
        configurable: true
    });
    GridSelectedKeysChangedEventArgs.$t = markType(GridSelectedKeysChangedEventArgs, 'GridSelectedKeysChangedEventArgs', EventArgs.$);
    return GridSelectedKeysChangedEventArgs;
}(EventArgs));
export { GridSelectedKeysChangedEventArgs };
//# sourceMappingURL=GridSelectedKeysChangedEventArgs.js.map
