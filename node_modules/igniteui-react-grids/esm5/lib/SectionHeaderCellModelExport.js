/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CellModelExport } from "./CellModelExport";
import { enumGetBox, markType } from "igniteui-react-core";
import { SummaryOperand_$type } from "igniteui-react-core";
/**
 * @hidden
 */
var SectionHeaderCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SectionHeaderCellModelExport, _super);
    function SectionHeaderCellModelExport() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.af = null;
        _this.ag = null;
        _this.ae = null;
        _this.al = null;
        _this.ai = null;
        _this.ak = null;
        _this.aj = null;
        _this.ah = null;
        _this.am = null;
        return _this;
    }
    SectionHeaderCellModelExport.prototype.get_ac = function () {
        return "SectionHeaderCell";
    };
    SectionHeaderCellModelExport.prototype.ad = function (a) {
        _super.prototype.ad.call(this, a);
        var b = "groupNames : [ ";
        var c = "groupValues : [ ";
        for (var d = 0; d < this.af.length; d++) {
            b += "\"" + this.af[d] + "\", ";
            c += "\"" + this.ag[d] + "\", ";
        }
        var e = "summaryNames : [ ";
        var f = "summaryValues : [ ";
        var g = "summaryOperands : [ ";
        var h = "summaryFormattedText : [ ";
        if (this.ai != null) {
            for (var i = 0; i < this.ai.length; i++) {
                e += "\"" + this.ai[i] + "\", ";
                f += "\"" + this.ak[i] + "\", ";
                g += "\"" + enumGetBox(SummaryOperand_$type, this.aj[i]) + "\", ";
                h += "\"" + this.ah[i] + "\", ";
            }
        }
        a.l(b + " ], ");
        a.l(c + " ], ");
        a.l("formattedText : \"" + this.al + "\", ");
        a.l(e + " ], ");
        a.l(f + " ], ");
        a.l(g + " ], ");
        a.l(h + " ], ");
        a.l("fullSummaryFormattedText : \"" + this.am + "\", ");
    };
    SectionHeaderCellModelExport.$t = markType(SectionHeaderCellModelExport, 'SectionHeaderCellModelExport', CellModelExport.$);
    return SectionHeaderCellModelExport;
}(CellModelExport));
export { SectionHeaderCellModelExport };
//# sourceMappingURL=SectionHeaderCellModelExport.js.map
