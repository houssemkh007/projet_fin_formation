import * as tslib_1 from "tslib";
import { IgrCellInfo } from "./igr-cell-info";
import { DataSourceSchemaPropertyType_$type } from "igniteui-react-core";
import { EditorType_$type } from "./EditorType";
import { EditorCellModel as EditorCellModel_internal } from "./EditorCellModel";
import { ensureBool, ensureEnum } from "igniteui-react-core";
/**
 * Represents info about the current cell.
*/
var IgrEditorCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(IgrEditorCellInfo, _super);
    function IgrEditorCellInfo() {
        return _super.call(this) || this;
    }
    IgrEditorCellInfo.prototype.createImplementation = function () {
        return new EditorCellModel_internal();
    };
    Object.defineProperty(IgrEditorCellInfo.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "isHidden", {
        /**
         * Gets or sets whether the editor cell is hidden or not.
        */
        get: function () {
            return this.i.kz;
        },
        set: function (v) {
            this.i.kz = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "editTarget", {
        /**
         * Gets or sets the edit target for this cell.
        */
        get: function () {
            if (this.i.kv == null) {
                return null;
            }
            return this.i.kv.externalObject;
        },
        set: function (v) {
            v == null ? this.i.kv = null : this.i.kv = v.i;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "dataType", {
        /**
         * Gets or sets the data type associated with the cell being edited.
        */
        get: function () {
            return this.i.kt;
        },
        set: function (v) {
            this.i.kt = ensureEnum(DataSourceSchemaPropertyType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "errorMessage", {
        /**
         * Gets or sets the error message to display in the editor cell.
        */
        get: function () {
            return this.i.lp;
        },
        set: function (v) {
            this.i.lp = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "editValue", {
        /**
         * Gets or sets the user selected value.
        */
        get: function () {
            return this.i.le;
        },
        set: function (v) {
            this.i.le = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "editorType", {
        /**
         * Gets or sets the type of editor to use while cell editing.
        */
        get: function () {
            return this.i.kx;
        },
        set: function (v) {
            this.i.kx = ensureEnum(EditorType_$type, v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "editorDataSource", {
        /**
         * Gets or sets the data source to use for the editor where it makes sense.
        */
        get: function () {
            return this.i.ld;
        },
        set: function (v) {
            this.i.ld = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "editorTextField", {
        /**
         * Gets or sets the editors display member.
        */
        get: function () {
            return this.i.lj;
        },
        set: function (v) {
            this.i.lj = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrEditorCellInfo.prototype, "editorValueField", {
        /**
         * Gets or sets the editors value member.
        */
        get: function () {
            return this.i.kr;
        },
        set: function (v) {
            this.i.kr = v;
        },
        enumerable: true,
        configurable: true
    });
    IgrEditorCellInfo.prototype.findByName = function (name) {
        var baseResult = _super.prototype.findByName.call(this, name);
        if (baseResult) {
            return baseResult;
        }
        if (this.editTarget && this.editTarget.name && this.editTarget.name == name) {
            return this.editTarget;
        }
        return null;
    };
    return IgrEditorCellInfo;
}(IgrCellInfo));
export { IgrEditorCellInfo };
//# sourceMappingURL=igr-editor-cell-info.js.map
