/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, INotifyPropertyChanged_$type, PropertyChangedEventArgs, markType } from "igniteui-react-core";
/**
 * @hidden
 */
var GridFilterDialogViewModelRow = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GridFilterDialogViewModelRow, _super);
    function GridFilterDialogViewModelRow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = null;
        _this.b = null;
        _this.k = null;
        _this.a = null;
        _this.g = null;
        _this.h = null;
        _this.propertyChanged = null;
        return _this;
    }
    Object.defineProperty(GridFilterDialogViewModelRow.prototype, "f", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.m("OperatorTypes");
            }
        },
        enumerable: true,
        configurable: true
    });
    GridFilterDialogViewModelRow.prototype.m = function (a) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    Object.defineProperty(GridFilterDialogViewModelRow.prototype, "e", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.b;
            this.b = a;
            if (b != this.b) {
                this.m("Operators");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridFilterDialogViewModelRow.prototype, "l", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            var b = this.k;
            this.k = a;
            if (b != this.k) {
                this.m("CurrentOperator");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridFilterDialogViewModelRow.prototype, "d", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.m("OperandNumber");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridFilterDialogViewModelRow.prototype, "i", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            var b = this.g;
            this.g = a;
            if (b != this.g) {
                this.m("Operand1");
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridFilterDialogViewModelRow.prototype, "j", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            var b = this.h;
            this.h = a;
            if (b != this.h) {
                this.m("Operand2");
            }
        },
        enumerable: true,
        configurable: true
    });
    GridFilterDialogViewModelRow.$t = markType(GridFilterDialogViewModelRow, 'GridFilterDialogViewModelRow', Base.$, [INotifyPropertyChanged_$type]);
    return GridFilterDialogViewModelRow;
}(Base));
export { GridFilterDialogViewModelRow };
//# sourceMappingURL=GridFilterDialogViewModelRow.js.map
