/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { CanvasCellPresenterBase } from "./CanvasCellPresenterBase";
import { runOn, markType } from "igniteui-react-core";
import { CellModel } from "./CellModel";
import { TextCellModel } from "./TextCellModel";
import { CanvasContentCellModelHelper } from "./CanvasContentCellModelHelper";
/**
 * @hidden
 */
var CanvasTextHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CanvasTextHeaderCellPresenter, _super);
    function CanvasTextHeaderCellPresenter(a) {
        var _this = _super.call(this, a) || this;
        _this.e = null;
        return _this;
    }
    Object.defineProperty(CanvasTextHeaderCellPresenter.prototype, "d", {
        get: function () {
            return this.a;
        },
        enumerable: true,
        configurable: true
    });
    CanvasTextHeaderCellPresenter.prototype.f = function () {
        if (this.e != null) {
            this.e();
        }
    };
    CanvasTextHeaderCellPresenter.prototype.b = function (a) {
        _super.prototype.b.call(this, a);
        var b = a;
        if (a.as) {
            if (a.ax(TextCellModel.kq)) {
                b.ip = b.ks;
                this.d.ck(b.ip);
            }
            if (a.ax(CellModel.f6)) {
                if (a.bb) {
                    this.d.c4.l = false;
                }
                if (this.e == null) {
                    var c_1 = a.o;
                    this.e = function () { return c_1.sk(); };
                }
                this.d.c7(a.m);
                this.d.ci(runOn(this, this.f));
                if (a.bb) {
                    this.d.c4.l = true;
                }
            }
            if (a.ax(CellModel.f7)) {
                if (a.bb) {
                    this.d.c4.l = false;
                }
                this.d.c4.a0 = a.kn;
                if (a.bb) {
                    this.d.c4.l = true;
                }
            }
            if (a.aw("SortIndicatorStyle")) {
                this.d.c4.f = b.kz;
            }
            CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
        }
    };
    CanvasTextHeaderCellPresenter.$t = markType(CanvasTextHeaderCellPresenter, 'CanvasTextHeaderCellPresenter', CanvasCellPresenterBase.$);
    return CanvasTextHeaderCellPresenter;
}(CanvasCellPresenterBase));
export { CanvasTextHeaderCellPresenter };
//# sourceMappingURL=CanvasTextHeaderCellPresenter.js.map
