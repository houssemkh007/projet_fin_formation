import { FormatGroupTextEventArgs as FormatGroupTextEventArgs_internal } from "./FormatGroupTextEventArgs";
var IgrFormatGroupTextEventArgs = /** @class */ /*@__PURE__*/ (function () {
    function IgrFormatGroupTextEventArgs() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgrFormatGroupTextEventArgs.prototype.createImplementation = function () {
        return new FormatGroupTextEventArgs_internal();
    };
    Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    IgrFormatGroupTextEventArgs.prototype.onImplementationCreated = function () {
    };
    IgrFormatGroupTextEventArgs.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "groupName", {
        /**
         * Gets the group name.
        */
        get: function () {
            return this.i.d;
        },
        set: function (v) {
            this.i.d = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "groupValue", {
        /**
         * Gets the original value before formatting.
        */
        get: function () {
            return this.i.a;
        },
        set: function (v) {
            this.i.a = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "formattedValue", {
        /**
         * Gets the group value as text, formatted based on the GroupDescription's ValueFormat.
        */
        get: function () {
            return this.i.c;
        },
        set: function (v) {
            this.i.c = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "formattedText", {
        /**
         * Gets or sets the final text that will be displayed in the group header.
        */
        get: function () {
            return this.i.b;
        },
        set: function (v) {
            this.i.b = v;
        },
        enumerable: true,
        configurable: true
    });
    return IgrFormatGroupTextEventArgs;
}());
export { IgrFormatGroupTextEventArgs };
//# sourceMappingURL=igr-format-group-text-event-args.js.map
