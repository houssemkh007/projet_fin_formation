/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { GridCellBase } from "./GridCellBase";
import { Base, runOn, markType } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
/**
 * @hidden
 */
var ImageCell = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ImageCell, _super);
    function ImageCell(a) {
        var _this = _super.call(this, a) || this;
        _this.cd = null;
        _this.b7 = 1;
        _this.b8 = 3;
        _this.cf = null;
        _this.b9 = false;
        _this.ca = 1;
        _this.cc = null;
        _this.cd = a.createElement("img");
        _this.cd.listen("load", runOn(_this, _this.ci));
        _this.cc = a.createElement("div");
        _this.cc.setRawStyleProperty("background-size", "contain");
        _this.cc.setRawStyleProperty("background-repeat", "no-repeat");
        _this.cc.setRawStyleProperty("background-position", "center");
        _this.cc.setRawStyleProperty("width", "100%");
        _this.cc.setRawStyleProperty("height", "100%");
        _this.z.setRawStyleProperty("text-align", "left");
        _this.z.setRawStyleProperty("vertical-align", "middle");
        _this.z.append(_this.cc);
        return _this;
    }
    Object.defineProperty(ImageCell.prototype, "ce", {
        get: function () {
            return this.cd;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ImageCell.prototype, "cb", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            this.ca = a;
        },
        enumerable: true,
        configurable: true
    });
    ImageCell.prototype.ci = function (a) {
        this.b9 = false;
        if (!stringIsNullOrEmpty(this.cf)) {
            this.cc.setRawStyleProperty("opacity", "1");
            this.cc.setRawStyleProperty("background-image", "url(" + this.cf + ")");
        }
    };
    ImageCell.prototype.cj = function (a, b) {
        if (a == this.cf) {
            return;
        }
        this.cg();
        this.cc.setRawStyleProperty("opacity", "0");
        if (a == null || a.length == 0) {
            this.ch(this.cd);
            return;
        }
        if (Base.equalsStatic(a, this.cf)) {
            return;
        }
        this.cn(a, b);
        var img_ = this.cd.getNativeElement();
        if (img_ != null && (img_.complete)) {
            this.b9 = false;
            this.cd.setRawStyleProperty("opacity", "1");
            this.cc.setRawStyleProperty("background-image", "url(" + this.cf + ")");
        }
    };
    ImageCell.prototype.ch = function (a) {
        a.setAttribute("src", "");
        this.cc.setRawStyleProperty("background-image", "");
    };
    ImageCell.prototype.cm = function (a) {
        switch (a) {
            case 1:
                this.cc.setRawStyleProperty("background-size", "100% 100%");
                break;
            case 2:
                this.cc.setRawStyleProperty("background-size", "auto");
                break;
            case 0:
                this.cc.setRawStyleProperty("background-size", "contain");
                break;
        }
    };
    ImageCell.prototype.cn = function (a, b) {
        this.b9 = true;
        this.cf = a;
        this.ce.setAttribute("src", a);
    };
    ImageCell.prototype.cg = function () {
        if (this.b9) {
            this.ch(this.cd);
            this.cf = "";
        }
    };
    ImageCell.prototype.ck = function (a) {
        this.b7 = a;
    };
    ImageCell.prototype.cl = function (a) {
        this.b8 = a;
    };
    ImageCell.prototype.get_r = function () {
        return true;
    };
    ImageCell.prototype.bg = function (a, b, c) {
        _super.prototype.bg.call(this, a, b, c);
        if (a == "Indent" || a == "IsCollapsable") {
            this.cc.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
        }
    };
    ImageCell.$t = markType(ImageCell, 'ImageCell', GridCellBase.$);
    return ImageCell;
}(GridCellBase));
export { ImageCell };
//# sourceMappingURL=ImageCell.js.map
