/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { TemplateCellModel } from "./TemplateCellModel";
import { CellModel } from "./CellModel";
import { markType } from "igniteui-react-core";
import { TemplateHeaderCellModelExport } from "./TemplateHeaderCellModelExport";
/**
 * @hidden
 */
var TemplateHeaderCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(TemplateHeaderCellModel, _super);
    function TemplateHeaderCellModel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ku = false;
        return _this;
    }
    Object.defineProperty(TemplateHeaderCellModel.prototype, "kv", {
        get: function () {
            return this.ku;
        },
        set: function (a) {
            var b = this.ku;
            this.ku = a;
            if (this.ku != b) {
                this.jm("IsFilterUIVisible", TemplateHeaderCellModel.kw, b, this.ku);
            }
        },
        enumerable: true,
        configurable: true
    });
    TemplateHeaderCellModel.prototype.ju = function (a, b) {
        _super.prototype.ju.call(this, a, b);
        if (a == "IsFilterUIVisible") {
            this.kv = b;
        }
    };
    TemplateHeaderCellModel.prototype.gn = function (a) {
        if (a == "IsFilterUIVisible") {
            return this.kv;
        }
        return _super.prototype.gn.call(this, a);
    };
    TemplateHeaderCellModel.prototype.b = function (a) {
        if (a == null) {
            a = new TemplateHeaderCellModelExport();
        }
        a = _super.prototype.b.call(this, a);
        var b = a;
        b.ae = this.ks;
        return b;
    };
    TemplateHeaderCellModel.$t = markType(TemplateHeaderCellModel, 'TemplateHeaderCellModel', TemplateCellModel.$);
    TemplateHeaderCellModel.kw = CellModel.ez("IsFilterUIVisible");
    return TemplateHeaderCellModel;
}(TemplateCellModel));
export { TemplateHeaderCellModel };
//# sourceMappingURL=TemplateHeaderCellModel.js.map
