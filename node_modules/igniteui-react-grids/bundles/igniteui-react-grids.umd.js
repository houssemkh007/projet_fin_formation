(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('react'), require('igniteui-react-core'), require('igniteui-react-inputs'), require('igniteui-react-layouts'), require('react-dom')) :
    typeof define === 'function' && define.amd ? define(['exports', 'tslib', 'react', 'igniteui-react-core', 'igniteui-react-inputs', 'igniteui-react-layouts', 'react-dom'], factory) :
    (global = global || self, factory(global['igniteui-react-grids'] = {}, global.tslib_1, global.React, global.igniteuiReactCore, global.igniteuiReactInputs, global.igniteuiReactLayouts, global.ReactDOM));
}(this, (function (exports, tslib_1, React, igniteuiReactCore, igniteuiReactInputs, igniteuiReactLayouts, ReactDOM) { 'use strict';

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PrimaryKeyValue = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PrimaryKeyValue, _super);
        function PrimaryKeyValue(a, b) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.b = null;
            _this.a = a;
            _this.b = b;
            return _this;
        }
        Object.defineProperty(PrimaryKeyValue.prototype, "key", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                this.a = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PrimaryKeyValue.prototype, "value", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                this.b = a;
            },
            enumerable: true,
            configurable: true
        });
        PrimaryKeyValue.createIdentityKey = function (a) {
            return new PrimaryKeyValue(null, [a]);
        };
        PrimaryKeyValue.prototype.equals = function (a) {
            var b = a;
            if (b == null) {
                return false;
            }
            if (b.b == null && this.b == null) {
                return true;
            }
            if (b.b.length != this.b.length) {
                return false;
            }
            if (this.a == null && b.a == null && this.b.length == 1 && b.b.length == 1) {
                var v1_ = this.b[0];
                var v2_ = b.b[0];
                return (v1_ === v2_);
            }
            for (var c = 0; c < this.b.length; c++) {
                if (!this.f(this.b[c], b.b[c])) {
                    return false;
                }
            }
            return true;
        };
        PrimaryKeyValue.prototype.f = function (a, b) {
            if (a == null && b == null) {
                return true;
            }
            if (a == null && b != null) {
                return false;
            }
            return igniteuiReactCore.Base.equalsStatic(a, b);
        };
        PrimaryKeyValue.prototype.getHashCode = function () {
            if (this.b == null || this.b.length == 0) {
                return 0;
            }
            var a = 0;
            a = this.i(this.b[0]);
            for (var b = 1; b < this.b.length; b++) {
                a = a * 17 + this.i(this.b[b]);
            }
            return a;
        };
        PrimaryKeyValue.prototype.i = function (val_) {
            if (val_ == null) {
                return 0;
            }
            return igniteuiReactCore.Base.getHashCodeStatic(val_);
        };
        PrimaryKeyValue.$t = igniteuiReactCore.markType(PrimaryKeyValue, 'PrimaryKeyValue');
        return PrimaryKeyValue;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var CheckboxListIndexType = /*@__PURE__*/ (function (CheckboxListIndexType) {
        CheckboxListIndexType[CheckboxListIndexType["Selected"] = 0] = "Selected";
        CheckboxListIndexType[CheckboxListIndexType["DeSelected"] = 1] = "DeSelected";
        return CheckboxListIndexType;
    })({});
    /**
     * @hidden
     */
    var CheckboxListIndexType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CheckboxListIndexType', 'Selected,0|DeSelected,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSelectedKeysCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedKeysCollection, _super);
        function GridSelectedKeysCollection() {
            return _super.call(this, PrimaryKeyValue.$, 0) || this;
        }
        Object.defineProperty(GridSelectedKeysCollection.prototype, "ae", {
            get: function () {
                return this;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedKeysCollection.prototype.af = function (a) {
            this.collectionChanged = igniteuiReactCore.delegateCombine(this.collectionChanged, a);
        };
        GridSelectedKeysCollection.$t = igniteuiReactCore.markType(GridSelectedKeysCollection, 'GridSelectedKeysCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(PrimaryKeyValue.$));
        return GridSelectedKeysCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckedChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CheckedChangedEventArgs, _super);
        function CheckedChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = 0;
            _this.a = false;
            return _this;
        }
        CheckedChangedEventArgs.$t = igniteuiReactCore.markType(CheckedChangedEventArgs, 'CheckedChangedEventArgs');
        return CheckedChangedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ICellActionManager_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'ICellActionManager');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FixedCellPositions_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('FixedCellPositions', 'None,0|Left,1|Right,2|Top,3|Bottom,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RowPath = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowPath, _super);
        function RowPath(a, b) {
            var _this = _super.call(this) || this;
            _this.n = 0;
            _this.m = 0;
            _this.a = 0;
            _this.c = 0;
            _this.l = -1;
            _this.e = false;
            _this.k = -1;
            _this.b = 0;
            _this.d = 0;
            _this.n = a;
            _this.m = b;
            _this.ac();
            return _this;
        }
        Object.defineProperty(RowPath.prototype, "x", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                this.n = a;
                this.ac();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RowPath.prototype, "w", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                this.m = a;
                this.ac();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RowPath.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                this.a = a;
                this.ac();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RowPath.prototype, "d", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.ac();
            },
            enumerable: true,
            configurable: true
        });
        RowPath.prototype.ac = function () {
            this.l = (this.n * 1000000) + this.m;
        };
        RowPath.prototype.getHashCode = function () {
            return this.l;
        };
        RowPath.prototype.equals = function (a) {
            var b = a;
            if (this.a != b.a) {
                return false;
            }
            if (this.n != b.n) {
                return false;
            }
            if (this.m != b.m) {
                return false;
            }
            return true;
        };
        RowPath.prototype.toString = function () {
            return "F" + igniteuiReactCore.enumGetBox(FixedCellPositions_$type, this.a) + "." + this.n + "." + this.m;
        };
        Object.defineProperty(RowPath.prototype, "g", {
            get: function () {
                return ((this.m == -100 || this.m == -101) && this.n == -100);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RowPath.prototype, "h", {
            get: function () {
                return this.m == -101;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RowPath.prototype, "j", {
            get: function () {
                return (this.m == -200 || this.m == -201);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RowPath.prototype, "i", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RowPath.prototype, "o", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                this.k = a;
            },
            enumerable: true,
            configurable: true
        });
        RowPath.prototype.aa = function () {
            var a = new RowPath(this.x, this.w);
            a.b = this.b;
            a.i = this.i;
            a.o = this.o;
            return a;
        };
        RowPath.$t = igniteuiReactCore.markType(RowPath, 'RowPath');
        return RowPath;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridViewportChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridViewportChangedEventArgs, _super);
        function GridViewportChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.g = 0;
            _this.d = 0;
            _this.h = 0;
            _this.e = 0;
            _this.f = 0;
            _this.c = 0;
            _this.a = 0;
            _this.b = 0;
            return _this;
        }
        GridViewportChangedEventArgs.$t = igniteuiReactCore.markType(GridViewportChangedEventArgs, 'GridViewportChangedEventArgs');
        return GridViewportChangedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates some simple date formats to be used.
     */
    var DateTimeFormats = /*@__PURE__*/ (function (DateTimeFormats) {
        /**
         * A standard short date format is used.
         */
        DateTimeFormats[DateTimeFormats["DateShort"] = 0] = "DateShort";
        /**
         * A standard long date format is used.
         */
        DateTimeFormats[DateTimeFormats["DateLong"] = 1] = "DateLong";
        /**
         * A standard short time format is used.
         */
        DateTimeFormats[DateTimeFormats["TimeShort"] = 2] = "TimeShort";
        /**
         * A standard long time format is used.
         */
        DateTimeFormats[DateTimeFormats["TimeLong"] = 3] = "TimeLong";
        /**
         * A standard short date/time format is used.
         */
        DateTimeFormats[DateTimeFormats["DateTimeShort"] = 4] = "DateTimeShort";
        /**
         * A standard long date/time format is used.
         */
        DateTimeFormats[DateTimeFormats["DateTimeLong"] = 5] = "DateTimeLong";
        return DateTimeFormats;
    })({});
    /**
     * @hidden
     */
    var DateTimeFormats_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DateTimeFormats', 'DateShort,0|DateLong,1|TimeShort,2|TimeLong,3|DateTimeShort,4|DateTimeLong,5');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ModelStates_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ModelStates', 'New,0|Recycled,1|Inview,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CellPath = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellPath, _super);
        function CellPath(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = this;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        var c = _rest[0];
                        var d = _rest[1];
                        var e = _rest[2];
                        var f = _rest[3];
                        var g = [d, e, f];
                        {
                            var i = g[0];
                            var j = g[1];
                            var k = g[2];
                            _this = _super.call(this, j, k) || this;
                            _this.ax = 0;
                            _this.ay = 0;
                            _this.aw = -1;
                            _this.ar = false;
                            _this.ae = false;
                            _this.ad = false;
                            _this.ao = false;
                            _this.af = false;
                            _this.ax = i;
                            _this.ac();
                        }
                        _this.b = c;
                        _this.ac();
                    }
                    break;
                case 1:
                    {
                        var c = _rest[0];
                        var d = _rest[1];
                        var e = _rest[2];
                        _this = _super.call(this, d, e) || this;
                        _this.ax = 0;
                        _this.ay = 0;
                        _this.aw = -1;
                        _this.ar = false;
                        _this.ae = false;
                        _this.ad = false;
                        _this.ao = false;
                        _this.af = false;
                        _this.ax = c;
                        _this.ac();
                    }
                    break;
            }
            return _this;
        }
        Object.defineProperty(CellPath.prototype, "az", {
            get: function () {
                return this.ax;
            },
            set: function (a) {
                this.ax = a;
                this.ac();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "a5", {
            get: function () {
                return this.ay;
            },
            set: function (a) {
                this.ay = a;
            },
            enumerable: true,
            configurable: true
        });
        CellPath.prototype.ac = function () {
            _super.prototype.ac.call(this);
            this.aw = (this.az * 100000000) + _super.prototype.getHashCode.call(this);
        };
        CellPath.prototype.getHashCode = function () {
            return this.aw;
        };
        CellPath.prototype.equals = function (a) {
            if (!_super.prototype.equals.call(this, a)) {
                return false;
            }
            var b = a;
            if (a == null) {
                return false;
            }
            if (this.ax != b.ax) {
                return false;
            }
            if (this.at != b.at) {
                return false;
            }
            if (this.aq != b.aq) {
                return false;
            }
            return true;
        };
        CellPath.prototype.toString = function () {
            return this.ax + "." + _super.prototype.toString.call(this);
        };
        CellPath.prototype.aa = function () {
            var a = new CellPath(0, this.b, this.ax, this.x, this.w);
            a.a5 = this.a5;
            a.at = this.at;
            a.aq = this.aq;
            a.i = this.i;
            a.o = this.o;
            a.d = this.d;
            a.ao = this.ao;
            a.af = this.af;
            a.ar = this.ar;
            return a;
        };
        Object.defineProperty(CellPath.prototype, "as", {
            get: function () {
                return (this.ax == -300);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "ag", {
            get: function () {
                return ((this.ax >= 0 || this.ax == -800 || this.ax == -400) && this.w >= 0 && this.w >= 0);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "au", {
            get: function () {
                return this.ax == -400 || this.ax == -401 || this.ax == -402;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "aj", {
            get: function () {
                return this.g && !this.as;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "ap", {
            get: function () {
                return this.w == -102 && this.ax == -400;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "al", {
            get: function () {
                return (this.w == -103 || this.w == -104) && this.az == -500;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "an", {
            get: function () {
                return (this.w == -103 || this.w == -104) && this.az == -501;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "ak", {
            get: function () {
                return this.w == -100 && this.az == -500;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "am", {
            get: function () {
                return this.w == -100 && this.az == -501;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "at", {
            get: function () {
                return this.ae;
            },
            set: function (a) {
                this.ae = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "aq", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                this.ad = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "av", {
            get: function () {
                return this.at || this.aq;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "ah", {
            get: function () {
                return this.az == -1000 && this.w == -1000;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPath.prototype, "ai", {
            get: function () {
                return this.az == -1001 && this.w == -1001;
            },
            enumerable: true,
            configurable: true
        });
        CellPath.$t = igniteuiReactCore.markType(CellPath, 'CellPath', RowPath.$);
        return CellPath;
    }(RowPath));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ModelTypes_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ModelTypes', 'ColumnHeader,0|Cell,1|SectionHeader,2|SectionFooter,3|RowSeparator,4|VerticalSeparator,5|ResizeSeparator,6');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the desired horizontal alignment of the cell content.
     */
    var CellContentHorizontalAlignment = /*@__PURE__*/ (function (CellContentHorizontalAlignment) {
        /**
         * Align left.
         */
        CellContentHorizontalAlignment[CellContentHorizontalAlignment["Left"] = 0] = "Left";
        /**
         * Align center.
         */
        CellContentHorizontalAlignment[CellContentHorizontalAlignment["Center"] = 1] = "Center";
        /**
         * Align right.
         */
        CellContentHorizontalAlignment[CellContentHorizontalAlignment["Right"] = 2] = "Right";
        /**
         * Align stretch
         */
        CellContentHorizontalAlignment[CellContentHorizontalAlignment["Stretch"] = 3] = "Stretch";
        /**
         * Align auto
         */
        CellContentHorizontalAlignment[CellContentHorizontalAlignment["Auto"] = 4] = "Auto";
        return CellContentHorizontalAlignment;
    })({});
    /**
     * @hidden
     */
    var CellContentHorizontalAlignment_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CellContentHorizontalAlignment', 'Left,0|Center,1|Right,2|Stretch,3|Auto,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the desired vertical alignment of the cell content.
     */
    var CellContentVerticalAlignment = /*@__PURE__*/ (function (CellContentVerticalAlignment) {
        /**
         * Align top.
         */
        CellContentVerticalAlignment[CellContentVerticalAlignment["Top"] = 0] = "Top";
        /**
         * Align center.
         */
        CellContentVerticalAlignment[CellContentVerticalAlignment["Center"] = 1] = "Center";
        /**
         * Align bottom.
         */
        CellContentVerticalAlignment[CellContentVerticalAlignment["Bottom"] = 2] = "Bottom";
        /**
         * Align stretch
         */
        CellContentVerticalAlignment[CellContentVerticalAlignment["Stretch"] = 3] = "Stretch";
        /**
         * Align auto
         */
        CellContentVerticalAlignment[CellContentVerticalAlignment["Auto"] = 4] = "Auto";
        return CellContentVerticalAlignment;
    })({});
    /**
     * @hidden
     */
    var CellContentVerticalAlignment_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CellContentVerticalAlignment', 'Top,0|Center,1|Bottom,2|Stretch,3|Auto,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates how to break lines of text for a cell.
     */
    var TextCellLineBreakMode = /*@__PURE__*/ (function (TextCellLineBreakMode) {
        /**
         * Truncates the text content at the end and displays an ellipsis character if it can't fit on a line.
         */
        TextCellLineBreakMode[TextCellLineBreakMode["Ellipsis"] = 0] = "Ellipsis";
        /**
         * Keeps the text on a single line, but does not attempt to insert an ellipsis character.
         */
        TextCellLineBreakMode[TextCellLineBreakMode["NoWrap"] = 1] = "NoWrap";
        /**
         * If possible for the current platform, wraps to a new line on a word break, if necessary.
         */
        TextCellLineBreakMode[TextCellLineBreakMode["WordWrap"] = 2] = "WordWrap";
        /**
         * If possible for the current platform, wraps to a new line whenever necessary.
         */
        TextCellLineBreakMode[TextCellLineBreakMode["CharacterWrap"] = 3] = "CharacterWrap";
        return TextCellLineBreakMode;
    })({});
    /**
     * @hidden
     */
    var TextCellLineBreakMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('TextCellLineBreakMode', 'Ellipsis,0|NoWrap,1|WordWrap,2|CharacterWrap,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the direction a column should be sorted in.
     */
    var ColumnSortDirection = /*@__PURE__*/ (function (ColumnSortDirection) {
        /**
         * Not sort applied.
         */
        ColumnSortDirection[ColumnSortDirection["None"] = 0] = "None";
        /**
         * Sort is ascending.
         */
        ColumnSortDirection[ColumnSortDirection["Ascending"] = 1] = "Ascending";
        /**
         * Sort is descending.
         */
        ColumnSortDirection[ColumnSortDirection["Descending"] = 2] = "Descending";
        return ColumnSortDirection;
    })({});
    /**
     * @hidden
     */
    var ColumnSortDirection_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnSortDirection', 'None,0|Ascending,1|Descending,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumeration defining different positions a column can be fixed against.
     */
    var PinnedPositions = /*@__PURE__*/ (function (PinnedPositions) {
        /**
         * The column is not fixed.
         */
        PinnedPositions[PinnedPositions["None"] = 0] = "None";
        /**
         * The column is pinned against the left side of the grid.
         */
        PinnedPositions[PinnedPositions["Left"] = 1] = "Left";
        /**
         * The column is pinned against the right side of the grid.
         */
        PinnedPositions[PinnedPositions["Right"] = 2] = "Right";
        return PinnedPositions;
    })({});
    /**
     * @hidden
     */
    var PinnedPositions_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('PinnedPositions', 'None,0|Left,1|Right,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridStyleRepository = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridStyleRepository, _super);
        function GridStyleRepository() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(GridStyleRepository, "bi", {
            get: function () {
                if (GridStyleRepository.ap == null) {
                    var a_1 = "#babfc7";
                    GridStyleRepository.ap = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_1;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ap;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bk", {
            get: function () {
                if (GridStyleRepository.ar == null) {
                    var a_2 = "#dde2eb";
                    GridStyleRepository.ar = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_2;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ar;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bc", {
            get: function () {
                if (GridStyleRepository.aj == null) {
                    GridStyleRepository.aj = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.color = igniteuiReactCore.Color.u(255, 224, 224, 224);
                        return $ret;
                    })());
                }
                return GridStyleRepository.aj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a2", {
            get: function () {
                if (GridStyleRepository.z == null) {
                    var a_3 = "#babfc7";
                    GridStyleRepository.z = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_3;
                        return $ret;
                    })());
                }
                return GridStyleRepository.z;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a0", {
            get: function () {
                if (GridStyleRepository.x == null) {
                    var a_4 = "#babfc7";
                    GridStyleRepository.x = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_4;
                        return $ret;
                    })());
                }
                return GridStyleRepository.x;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bm", {
            get: function () {
                if (GridStyleRepository.at == null) {
                    var a_5 = "#ff80ab";
                    GridStyleRepository.at = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_5;
                        return $ret;
                    })());
                }
                return GridStyleRepository.at;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bn", {
            get: function () {
                if (GridStyleRepository.au == null) {
                    var a_6 = "#181d1f";
                    GridStyleRepository.au = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_6;
                        return $ret;
                    })());
                }
                return GridStyleRepository.au;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "av", {
            get: function () {
                if (GridStyleRepository.s == null) {
                    var a_7 = "#2196f3";
                    GridStyleRepository.s = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_7;
                        return $ret;
                    })());
                }
                return GridStyleRepository.s;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "l", {
            get: function () {
                if (GridStyleRepository.g == null) {
                    GridStyleRepository.g = new igniteuiReactCore.FontInfo();
                    GridStyleRepository.g.d = igniteuiReactCore.DeviceUtils.f(13);
                    GridStyleRepository.g.n = "'Segoe UI', Verdana";
                }
                return GridStyleRepository.g;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "k", {
            get: function () {
                if (GridStyleRepository.f == null) {
                    GridStyleRepository.f = new igniteuiReactCore.FontInfo();
                    GridStyleRepository.f.d = igniteuiReactCore.DeviceUtils.f(13);
                    GridStyleRepository.f.q = "italic";
                    GridStyleRepository.f.n = "'Segoe UI', Verdana";
                }
                return GridStyleRepository.f;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "h", {
            get: function () {
                if (GridStyleRepository.c == null) {
                    GridStyleRepository.c = new igniteuiReactCore.FontInfo();
                    GridStyleRepository.c.d = igniteuiReactCore.DeviceUtils.f(14);
                    GridStyleRepository.c.n = "'Segoe UI', Verdana";
                }
                return GridStyleRepository.c;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "j", {
            get: function () {
                if (GridStyleRepository.d == null) {
                    GridStyleRepository.d = new igniteuiReactCore.FontInfo();
                    GridStyleRepository.d.d = igniteuiReactCore.DeviceUtils.f(12);
                    GridStyleRepository.d.s = "600";
                    GridStyleRepository.d.n = "'Segoe UI', Verdana";
                }
                return GridStyleRepository.d;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "i", {
            get: function () {
                if (GridStyleRepository.e == null) {
                    GridStyleRepository.e = new igniteuiReactCore.FontInfo();
                    GridStyleRepository.e.d = igniteuiReactCore.DeviceUtils.f(12);
                    GridStyleRepository.e.n = "'Segoe UI', Verdana";
                }
                return GridStyleRepository.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "ba", {
            get: function () {
                if (GridStyleRepository.ah == null) {
                    GridStyleRepository.ah = new igniteuiReactCore.Brush();
                    GridStyleRepository.ah.color = igniteuiReactCore.Color.u(255, 210, 234, 253);
                }
                return GridStyleRepository.ah;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "aw", {
            get: function () {
                if (GridStyleRepository.t == null) {
                    GridStyleRepository.t = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = "White";
                        return $ret;
                    })());
                }
                return GridStyleRepository.t;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a1", {
            get: function () {
                if (GridStyleRepository.y == null) {
                    var a = "#f3f9fe";
                    GridStyleRepository.y = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.color = igniteuiReactCore.Color.u(255, 232, 244, 254);
                        return $ret;
                    })());
                }
                return GridStyleRepository.y;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bh", {
            get: function () {
                if (GridStyleRepository.ao == null) {
                    var a_8 = "#F8F8F8";
                    GridStyleRepository.ao = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_8;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ao;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bl", {
            get: function () {
                if (GridStyleRepository.as == null) {
                    var a_9 = "#181d1f";
                    GridStyleRepository.as = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_9;
                        return $ret;
                    })());
                }
                return GridStyleRepository.as;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bj", {
            get: function () {
                if (GridStyleRepository.aq == null) {
                    var a_10 = "#181d1f";
                    GridStyleRepository.aq = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_10;
                        return $ret;
                    })());
                }
                return GridStyleRepository.aq;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a8", {
            get: function () {
                if (GridStyleRepository.af == null) {
                    var a_11 = "#fafafa";
                    GridStyleRepository.af = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_11;
                        return $ret;
                    })());
                }
                return GridStyleRepository.af;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a7", {
            get: function () {
                if (GridStyleRepository.ae == null) {
                    GridStyleRepository.ae = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = "#f5f5dc";
                        return $ret;
                    })());
                }
                return GridStyleRepository.ae;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bb", {
            get: function () {
                if (GridStyleRepository.ai == null) {
                    var a_12 = "#ffffff";
                    GridStyleRepository.ai = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_12;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ai;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a4", {
            get: function () {
                if (GridStyleRepository.ab == null) {
                    var a_13 = "#ffffff";
                    GridStyleRepository.ab = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_13;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ab;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a6", {
            get: function () {
                if (GridStyleRepository.ad == null) {
                    var a_14 = "#f8f8f8";
                    GridStyleRepository.ad = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_14;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ad;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a9", {
            get: function () {
                if (GridStyleRepository.ag == null) {
                    var a_15 = "#fafafa";
                    GridStyleRepository.ag = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_15;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ag;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bd", {
            get: function () {
                if (GridStyleRepository.ak == null) {
                    var a_16 = "#0099FF";
                    GridStyleRepository.ak = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_16;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ak;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "be", {
            get: function () {
                if (GridStyleRepository.al == null) {
                    var a_17 = "#181d1f";
                    GridStyleRepository.al = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_17;
                        return $ret;
                    })());
                }
                return GridStyleRepository.al;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "ay", {
            get: function () {
                if (GridStyleRepository.v == null) {
                    var a_18 = "#2196f3";
                    GridStyleRepository.v = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_18;
                        return $ret;
                    })());
                }
                return GridStyleRepository.v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a5", {
            get: function () {
                if (GridStyleRepository.ac == null) {
                    var a_19 = "#2196f3";
                    GridStyleRepository.ac = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_19;
                        return $ret;
                    })());
                }
                return GridStyleRepository.ac;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a3", {
            get: function () {
                if (GridStyleRepository.aa == null) {
                    var a_20 = "#babfc7";
                    GridStyleRepository.aa = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_20;
                        return $ret;
                    })());
                }
                return GridStyleRepository.aa;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "az", {
            get: function () {
                if (GridStyleRepository.w == null) {
                    var a_21 = "#181d1f";
                    GridStyleRepository.w = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_21;
                        return $ret;
                    })());
                }
                return GridStyleRepository.w;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "a", {
            get: function () {
                return 2;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "b", {
            get: function () {
                return 3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "o", {
            get: function () {
                return igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(30));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "p", {
            get: function () {
                return igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(36));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "n", {
            get: function () {
                return igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(40));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "ax", {
            get: function () {
                if (GridStyleRepository.u == null) {
                    var a_22 = "#babfc7";
                    GridStyleRepository.u = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_22;
                        return $ret;
                    })());
                }
                return GridStyleRepository.u;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bp", {
            get: function () {
                return GridStyleRepository.bo;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "r", {
            get: function () {
                return GridStyleRepository.q;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bg", {
            get: function () {
                if (GridStyleRepository.an == null) {
                    var a_23 = "#ff0000";
                    GridStyleRepository.an = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.fill = a_23;
                        return $ret;
                    })());
                }
                return GridStyleRepository.an;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridStyleRepository, "bf", {
            get: function () {
                if (GridStyleRepository.am == null) {
                    GridStyleRepository.am = ((function () {
                        var $ret = new igniteuiReactCore.Brush();
                        $ret.color = igniteuiReactCore.Color.u(0, 0, 0, 0);
                        return $ret;
                    })());
                }
                return GridStyleRepository.am;
            },
            enumerable: true,
            configurable: true
        });
        GridStyleRepository.$t = igniteuiReactCore.markType(GridStyleRepository, 'GridStyleRepository');
        GridStyleRepository.ap = null;
        GridStyleRepository.ar = null;
        GridStyleRepository.aj = null;
        GridStyleRepository.z = null;
        GridStyleRepository.x = null;
        GridStyleRepository.at = null;
        GridStyleRepository.au = null;
        GridStyleRepository.s = null;
        GridStyleRepository.g = null;
        GridStyleRepository.f = null;
        GridStyleRepository.m = 0.54;
        GridStyleRepository.c = null;
        GridStyleRepository.d = null;
        GridStyleRepository.e = null;
        GridStyleRepository.ah = null;
        GridStyleRepository.t = null;
        GridStyleRepository.y = null;
        GridStyleRepository.ao = null;
        GridStyleRepository.as = null;
        GridStyleRepository.aq = null;
        GridStyleRepository.af = null;
        GridStyleRepository.ae = null;
        GridStyleRepository.ai = null;
        GridStyleRepository.ab = null;
        GridStyleRepository.ad = null;
        GridStyleRepository.ag = null;
        GridStyleRepository.ak = null;
        GridStyleRepository.al = null;
        GridStyleRepository.v = null;
        GridStyleRepository.ac = null;
        GridStyleRepository.aa = null;
        GridStyleRepository.w = null;
        GridStyleRepository.u = null;
        GridStyleRepository.bo = new igniteuiReactCore.Thickness(0, 1);
        GridStyleRepository.q = new igniteuiReactCore.CornerRadius(0, 3);
        GridStyleRepository.an = null;
        GridStyleRepository.am = null;
        return GridStyleRepository;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellModelExport, _super);
        function CellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.r = 0;
            _this.s = 0;
            _this.n = 0;
            _this.o = 0;
            _this.k = 0;
            _this.q = 0;
            _this.m = 0;
            _this.h = 0;
            _this.l = 0;
            _this.i = 0;
            _this.a = null;
            _this.b = null;
            _this.d = 0;
            _this.e = 0;
            _this.aa = null;
            _this.c = null;
            _this.w = null;
            _this.x = null;
            _this.y = null;
            _this.j = 0;
            _this.u = null;
            _this.v = null;
            _this.p = 0;
            _this.f = 0;
            _this.t = 0;
            _this.g = false;
            _this.z = null;
            return _this;
        }
        CellModelExport.prototype.ab = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{ ");
            a.l("type : \"" + this.ac + "\", ");
            a.l("x : " + this.r + ", ");
            a.l("y : " + this.s + ", ");
            a.l("snappedX : " + this.n + ", ");
            a.l("snappedY : " + this.o + ", ");
            a.l("height : " + this.k + ", ");
            a.l("width : " + this.q + ", ");
            a.l("lineBreakMode: \"" + this.z + "\", ");
            a.l("selectedStatus : " + this.m + ", ");
            a.l("activationStatus : " + this.h + ", ");
            a.l("virtualizationPercentage : " + this.p + ", ");
            a.l("backgroundBrushData : " + this.a.serialize() + ", ");
            if (this.b != null) {
                a.l("borderBrushData : " + this.b.serialize() + ", ");
            }
            a.l("opacity : " + this.l + ", ");
            a.l("contentOpacity : " + this.i + ", ");
            if (this.d != null) {
                a.l("horizontalAlignment : " + this.d + ", ");
            }
            if (this.e != null) {
                a.l("verticalAlignment : " + this.e + ", ");
            }
            a.l("renderValue : \"" + this.aa + "\", ");
            if (this.c != null) {
                a.l("textColor : " + this.c.serialize() + ", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.w)) {
                a.l("fontStyle : \"" + this.w + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.x)) {
                a.l("fontVariant : \"" + this.x + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.y)) {
                a.l("fontWeight : \"" + this.y + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.u)) {
                a.l("fontFamily : \"" + this.u + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.v)) {
                a.l("fontStretch : \"" + this.v + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.j)) {
                a.l("fontSize : " + this.j + ", ");
            }
            a.l("sortDirection : " + this.f + ", ");
            a.l("indent : " + this.t + ", ");
            a.l("isCollapsable : " + this.g.toString().toLowerCase() + ", ");
            this.ad(a);
            var b = a.toString();
            if (igniteuiReactCore.stringEndsWith(b, ", ")) {
                b = b.substr(0, b.length - 2);
            }
            b += "} ";
            return b;
        };
        CellModelExport.prototype.get_ac = function () {
            return "Cell";
        };
        Object.defineProperty(CellModelExport.prototype, "ac", {
            get: function () {
                return this.get_ac();
            },
            enumerable: true,
            configurable: true
        });
        CellModelExport.prototype.ad = function (a) {
        };
        CellModelExport.$t = igniteuiReactCore.markType(CellModelExport, 'CellModelExport');
        return CellModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates how summaries are displayed inside groups.
     */
    var GroupSummaryDisplayMode = /*@__PURE__*/ (function (GroupSummaryDisplayMode) {
        /**
         * Group summaries are displayed in a flat list in the spanning group header.
         */
        GroupSummaryDisplayMode[GroupSummaryDisplayMode["List"] = 0] = "List";
        /**
         * The group header is rendered as cells and summary values are rendered inside the cells
         * aligned with their column.
         */
        GroupSummaryDisplayMode[GroupSummaryDisplayMode["Cells"] = 1] = "Cells";
        /**
         * Group summaries are displayed as summary rows at the top of the group.
         */
        GroupSummaryDisplayMode[GroupSummaryDisplayMode["RowTop"] = 2] = "RowTop";
        /**
         * Group summaries are displayed as summary rows at the bottom of the group.
         */
        GroupSummaryDisplayMode[GroupSummaryDisplayMode["RowBottom"] = 3] = "RowBottom";
        /**
         * No summaries are displayed in the group.
         */
        GroupSummaryDisplayMode[GroupSummaryDisplayMode["None"] = 4] = "None";
        return GroupSummaryDisplayMode;
    })({});
    /**
     * @hidden
     */
    var GroupSummaryDisplayMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GroupSummaryDisplayMode', 'List,0|Cells,1|RowTop,2|RowBottom,3|None,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DateTimeCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DateTimeCellModelExport, _super);
        function DateTimeCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.af = new Date();
            _this.ag = 0;
            _this.ae = false;
            return _this;
        }
        DateTimeCellModelExport.prototype.get_ac = function () {
            return "DateTimeCell";
        };
        DateTimeCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
            a.l("dateTimeFormat : " + this.ag + ", ");
        };
        DateTimeCellModelExport.$t = igniteuiReactCore.markType(DateTimeCellModelExport, 'DateTimeCellModelExport', CellModelExport.$);
        return DateTimeCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates what editor type to use for cell editing.
     */
    var EditorType = /*@__PURE__*/ (function (EditorType) {
        /**
         * Default edit type used in cell editing.
         */
        EditorType[EditorType["Default"] = 0] = "Default";
        /**
         * Use a combo editor for cell editing.
         */
        EditorType[EditorType["Combo"] = 1] = "Combo";
        return EditorType;
    })({});
    /**
     * @hidden
     */
    var EditorType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('EditorType', 'Default,0|Combo,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var EditorCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditorCellModelExport, _super);
        function EditorCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.af = false;
            _this.ag = null;
            _this.ae = 0;
            _this.ah = null;
            return _this;
        }
        EditorCellModelExport.prototype.get_ac = function () {
            return "EditorCell";
        };
        EditorCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
            a.l("isHidden: " + this.af.toString().toLowerCase() + ", ");
            a.l("editValue: '" + this.ag + "', ");
            a.l("dataType: '" + igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, this.ae) + "', ");
            a.l("errorMessage: '" + this.ah + "', ");
        };
        EditorCellModelExport.$t = igniteuiReactCore.markType(EditorCellModelExport, 'EditorCellModelExport', CellModelExport.$);
        return EditorCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SummaryCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryCellModelExport, _super);
        function SummaryCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ai = null;
            _this.ao = null;
            _this.ae = null;
            _this.af = null;
            _this.al = null;
            _this.am = null;
            _this.an = null;
            _this.ag = 0;
            _this.aj = null;
            _this.ak = null;
            _this.ar = null;
            _this.as = null;
            _this.at = null;
            _this.ah = 0;
            _this.ap = null;
            _this.aq = null;
            return _this;
        }
        SummaryCellModelExport.prototype.get_ac = function () {
            return "SummaryCell";
        };
        SummaryCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
            a.l("summaryLabel : \"" + this.ai + "\", ");
            a.l("summaryValue : \"" + this.ao + "\", ");
            if (this.ae != null) {
                a.l("summaryLabelColor : " + this.ae.serialize() + ", ");
            }
            if (this.af != null) {
                a.l("summaryValueColor : " + this.af.serialize() + ", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.al)) {
                a.l("summaryLabelFontStyle : \"" + this.al + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.am)) {
                a.l("summaryLabelFontVariant : \"" + this.am + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.an)) {
                a.l("summaryLabelFontWeight : \"" + this.an + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.ag)) {
                a.l("summaryLabelFontSize : " + this.ag + ", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.aj)) {
                a.l("summaryLabelFontFamily : \"" + this.aj + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ak)) {
                a.l("summaryLabelFontStretch : \"" + this.ak + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ar)) {
                a.l("summaryValueFontStyle : \"" + this.ar + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.as)) {
                a.l("summaryValueFontVariant : \"" + this.as + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.at)) {
                a.l("summaryValueFontWeight : \"" + this.at + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.ah)) {
                a.l("summaryValueFontSize : " + this.ah + ", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ap)) {
                a.l("summaryValueFontFamily : \"" + this.ap + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.aq)) {
                a.l("summaryValueFontStretch : \"" + this.aq + "\", ");
            }
        };
        SummaryCellModelExport.$t = igniteuiReactCore.markType(SummaryCellModelExport, 'SummaryCellModelExport', CellModelExport.$);
        return SummaryCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates how the images will be stretched.
     */
    var ImageStretchOptions = /*@__PURE__*/ (function (ImageStretchOptions) {
        /**
         * Images stretch but try to maintain aspect ratio.
         */
        ImageStretchOptions[ImageStretchOptions["Uniform"] = 0] = "Uniform";
        /**
         * Image fills all available space but breaks aspect ratio.
         */
        ImageStretchOptions[ImageStretchOptions["Fill"] = 1] = "Fill";
        /**
         * Image is displayed unstreteched.
         */
        ImageStretchOptions[ImageStretchOptions["None"] = 2] = "None";
        return ImageStretchOptions;
    })({});
    /**
     * @hidden
     */
    var ImageStretchOptions_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ImageStretchOptions', 'Uniform,0|Fill,1|None,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the image resource type to use.
     */
    var ImageResourceType = /*@__PURE__*/ (function (ImageResourceType) {
        /**
         * Image resource type will attempt to be determined from any scheme specifiers on the paths.
         */
        ImageResourceType[ImageResourceType["Unspecified"] = 0] = "Unspecified";
        /**
         * Images are a local platform specific resource in the application.
         */
        ImageResourceType[ImageResourceType["LocalResource"] = 1] = "LocalResource";
        /**
         * Images are a local platform specific asset in the application. For platforms that don't support assets, this will fall back on local resource.
         */
        ImageResourceType[ImageResourceType["LocalAsset"] = 2] = "LocalAsset";
        /**
         * Images are a .NET embedded resource in the application. Path needs to be a valid embedded resource identifier.
         */
        ImageResourceType[ImageResourceType["EmbeddedResource"] = 3] = "EmbeddedResource";
        /**
         * Images are a remote URL resource.
         */
        ImageResourceType[ImageResourceType["RemoteResource"] = 4] = "RemoteResource";
        return ImageResourceType;
    })({});
    /**
     * @hidden
     */
    var ImageResourceType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ImageResourceType', 'Unspecified,0|LocalResource,1|LocalAsset,2|EmbeddedResource,3|RemoteResource,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ImageCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ImageCellModelExport, _super);
        function ImageCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ae = null;
            return _this;
        }
        ImageCellModelExport.prototype.get_ac = function () {
            return "ImageCell";
        };
        ImageCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
            a.l("imagePath : \"" + this.ae + "\", ");
        };
        ImageCellModelExport.$t = igniteuiReactCore.markType(ImageCellModelExport, 'ImageCellModelExport', CellModelExport.$);
        return ImageCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NumericCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(NumericCellModelExport, _super);
        function NumericCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ae = 0;
            _this.af = 0;
            _this.ag = 0;
            return _this;
        }
        NumericCellModelExport.prototype.get_ac = function () {
            return "NumericCell";
        };
        NumericCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
            a.l("numericValue : " + this.ae + ", ");
            a.l("maxDecimalPlaces : " + this.af + ", ");
            a.l("minDecimalPlaces : " + this.ag + ", ");
        };
        NumericCellModelExport.$t = igniteuiReactCore.markType(NumericCellModelExport, 'NumericCellModelExport', CellModelExport.$);
        return NumericCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RowSeparatorModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowSeparatorModelExport, _super);
        function RowSeparatorModelExport() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        RowSeparatorModelExport.prototype.get_ac = function () {
            return "RowSeparator";
        };
        RowSeparatorModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
        };
        RowSeparatorModelExport.$t = igniteuiReactCore.markType(RowSeparatorModelExport, 'RowSeparatorModelExport', CellModelExport.$);
        return RowSeparatorModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GroupData = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GroupData, _super);
        function GroupData() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = null;
            _this.a = null;
            _this.b = null;
            return _this;
        }
        GroupData.$t = igniteuiReactCore.markType(GroupData, 'GroupData');
        return GroupData;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SummaryData = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryData, _super);
        function SummaryData() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.e = null;
            _this.b = null;
            _this.a = 0;
            _this.c = null;
            _this.d = null;
            return _this;
        }
        SummaryData.$t = igniteuiReactCore.markType(SummaryData, 'SummaryData');
        return SummaryData;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SectionHeaderCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SectionHeaderCellModelExport, _super);
        function SectionHeaderCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.af = null;
            _this.ag = null;
            _this.ae = null;
            _this.al = null;
            _this.ai = null;
            _this.ak = null;
            _this.aj = null;
            _this.ah = null;
            _this.am = null;
            return _this;
        }
        SectionHeaderCellModelExport.prototype.get_ac = function () {
            return "SectionHeaderCell";
        };
        SectionHeaderCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
            var b = "groupNames : [ ";
            var c = "groupValues : [ ";
            for (var d = 0; d < this.af.length; d++) {
                b += "\"" + this.af[d] + "\", ";
                c += "\"" + this.ag[d] + "\", ";
            }
            var e = "summaryNames : [ ";
            var f = "summaryValues : [ ";
            var g = "summaryOperands : [ ";
            var h = "summaryFormattedText : [ ";
            if (this.ai != null) {
                for (var i = 0; i < this.ai.length; i++) {
                    e += "\"" + this.ai[i] + "\", ";
                    f += "\"" + this.ak[i] + "\", ";
                    g += "\"" + igniteuiReactCore.enumGetBox(igniteuiReactCore.SummaryOperand_$type, this.aj[i]) + "\", ";
                    h += "\"" + this.ah[i] + "\", ";
                }
            }
            a.l(b + " ], ");
            a.l(c + " ], ");
            a.l("formattedText : \"" + this.al + "\", ");
            a.l(e + " ], ");
            a.l(f + " ], ");
            a.l(g + " ], ");
            a.l(h + " ], ");
            a.l("fullSummaryFormattedText : \"" + this.am + "\", ");
        };
        SectionHeaderCellModelExport.$t = igniteuiReactCore.markType(SectionHeaderCellModelExport, 'SectionHeaderCellModelExport', CellModelExport.$);
        return SectionHeaderCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateCellModelExport, _super);
        function TemplateCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ae = null;
            return _this;
        }
        TemplateCellModelExport.prototype.get_ac = function () {
            return "TemplateCell";
        };
        TemplateCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
        };
        TemplateCellModelExport.$t = igniteuiReactCore.markType(TemplateCellModelExport, 'TemplateCellModelExport', CellModelExport.$);
        return TemplateCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TextCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextCellModelExport, _super);
        function TextCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.af = null;
            _this.ae = null;
            return _this;
        }
        TextCellModelExport.prototype.get_ac = function () {
            return "TextCell";
        };
        TextCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
            a.l("textValue : \"" + this.af + "\", ");
            a.l("formatString : \"" + this.ae + "\", ");
        };
        TextCellModelExport.$t = igniteuiReactCore.markType(TextCellModelExport, 'TextCellModelExport', CellModelExport.$);
        return TextCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var SortIndicatorStyle = /*@__PURE__*/ (function (SortIndicatorStyle) {
        /**
         * The sort indicator is rendered as a single arrow that points in the direction of the sort.
         */
        SortIndicatorStyle[SortIndicatorStyle["Default"] = 0] = "Default";
        /**
         * The sort indicator is rendered as two arrows pointing opposite of each other.  The direction of the sort determines which arrow
         * is faded and which is fully opaque.
         */
        SortIndicatorStyle[SortIndicatorStyle["FadingUpDownArrows"] = 1] = "FadingUpDownArrows";
        /**
         * The sort indicator is rendered as two arrows without the stem, one ontop of the other.  The direction of the sort determines which arrow
         * is faded and which is fully opaque.
         */
        SortIndicatorStyle[SortIndicatorStyle["FadingSimpleUpDownArrows"] = 2] = "FadingSimpleUpDownArrows";
        /**
         * No style is set.
         */
        SortIndicatorStyle[SortIndicatorStyle["Unset"] = 3] = "Unset";
        return SortIndicatorStyle;
    })({});
    /**
     * @hidden
     */
    var SortIndicatorStyle_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SortIndicatorStyle', 'Default,0|FadingUpDownArrows,1|FadingSimpleUpDownArrows,2|Unset,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates what type of alignment to use for the column options icon.
     */
    var ColumnOptionsIconAlignment = /*@__PURE__*/ (function (ColumnOptionsIconAlignment) {
        /**
         * Use the default alignment.
         */
        ColumnOptionsIconAlignment[ColumnOptionsIconAlignment["Unset"] = 0] = "Unset";
        /**
         * The icon is not aligned so it will appear alongside the header text.
         */
        ColumnOptionsIconAlignment[ColumnOptionsIconAlignment["None"] = 1] = "None";
        /**
         * The icon is aligned with the edge of the column but opposite the alignment of the header text.
         */
        ColumnOptionsIconAlignment[ColumnOptionsIconAlignment["Opposite"] = 2] = "Opposite";
        return ColumnOptionsIconAlignment;
    })({});
    /**
     * @hidden
     */
    var ColumnOptionsIconAlignment_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnOptionsIconAlignment', 'Unset,0|None,1|Opposite,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates how the column options icon will behave in the column header cell.
     */
    var ColumnOptionsIconBehavior = /*@__PURE__*/ (function (ColumnOptionsIconBehavior) {
        /**
         * Use the default behavior which is AppearOnHoverAnimate.
         */
        ColumnOptionsIconBehavior[ColumnOptionsIconBehavior["Unset"] = 0] = "Unset";
        /**
         * The column options icon is always visible.
         */
        ColumnOptionsIconBehavior[ColumnOptionsIconBehavior["AlwaysVisible"] = 1] = "AlwaysVisible";
        /**
         * The column options icon will appear when the header cell is hovered.
         */
        ColumnOptionsIconBehavior[ColumnOptionsIconBehavior["AppearOnHover"] = 2] = "AppearOnHover";
        /**
         * The column options icon will animate into view when the header cell is hovered.
         */
        ColumnOptionsIconBehavior[ColumnOptionsIconBehavior["AppearOnHoverAnimate"] = 3] = "AppearOnHoverAnimate";
        return ColumnOptionsIconBehavior;
    })({});
    /**
     * @hidden
     */
    var ColumnOptionsIconBehavior_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnOptionsIconBehavior', 'Unset,0|AlwaysVisible,1|AppearOnHover,2|AppearOnHoverAnimate,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TextHeaderCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextHeaderCellModelExport, _super);
        function TextHeaderCellModelExport() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TextHeaderCellModelExport.prototype.get_ac = function () {
            return "TextHeaderCell";
        };
        TextHeaderCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
        };
        TextHeaderCellModelExport.$t = igniteuiReactCore.markType(TextHeaderCellModelExport, 'TextHeaderCellModelExport', TextCellModelExport.$);
        return TextHeaderCellModelExport;
    }(TextCellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates what should occur when entering edit mode.
     */
    var EditModeType = /*@__PURE__*/ (function (EditModeType) {
        /**
         * Edit mode is disabled.
         */
        EditModeType[EditModeType["None"] = 0] = "None";
        /**
         * Allow cells to enter edit mode and commit the value on exit.
         */
        EditModeType[EditModeType["Cell"] = 1] = "Cell";
        /**
         * Allows cells to enter edit mode but changes will be cached for later commit.
         */
        EditModeType[EditModeType["CellBatch"] = 2] = "CellBatch";
        /**
         * Allow rows to enter edit mode and commit the value on exit.
         */
        EditModeType[EditModeType["Row"] = 3] = "Row";
        return EditModeType;
    })({});
    /**
     * @hidden
     */
    var EditModeType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('EditModeType', 'None,0|Cell,1|CellBatch,2|Row,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ColumnResizingMode = /*@__PURE__*/ (function (ColumnResizingMode) {
        ColumnResizingMode[ColumnResizingMode["Deferred"] = 0] = "Deferred";
        ColumnResizingMode[ColumnResizingMode["Immediate"] = 1] = "Immediate";
        ColumnResizingMode[ColumnResizingMode["None"] = 2] = "None";
        return ColumnResizingMode;
    })({});
    /**
     * @hidden
     */
    var ColumnResizingMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnResizingMode', 'Deferred,0|Immediate,1|None,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ColumnMovingMode = /*@__PURE__*/ (function (ColumnMovingMode) {
        ColumnMovingMode[ColumnMovingMode["Deferred"] = 0] = "Deferred";
        ColumnMovingMode[ColumnMovingMode["None"] = 1] = "None";
        return ColumnMovingMode;
    })({});
    /**
     * @hidden
     */
    var ColumnMovingMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnMovingMode', 'Deferred,0|None,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnWidth = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnWidth, _super);
        function ColumnWidth() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.g = null;
            _this.c = false;
            _this.f = 0;
            _this.d = 0;
            return _this;
        }
        Object.defineProperty(ColumnWidth.prototype, "e", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnWidth, "a", {
            get: function () {
                return ((function () {
                    var $ret = new ColumnWidth();
                    $ret.c = true;
                    $ret.e = 0;
                    $ret.f = 1;
                    return $ret;
                })());
            },
            enumerable: true,
            configurable: true
        });
        ColumnWidth.parse = function (a) {
            if (a == null) {
                return new ColumnWidth();
            }
            a = a.trim();
            var b = igniteuiReactCore.stringContains(a, "*");
            if (b || igniteuiReactCore.stringContains(a, "min=") || igniteuiReactCore.stringContains(a, "Min=") || igniteuiReactCore.stringContains(a, ",")) {
                var c = new ColumnWidth();
                c.c = b;
                a = igniteuiReactCore.stringReplace(a, " ", "");
                a = igniteuiReactCore.stringReplace(a, "min=", ",");
                a = igniteuiReactCore.stringReplace(a, "Min=", ",");
                a = igniteuiReactCore.stringReplace(a, "*,,", "*");
                a = igniteuiReactCore.stringReplace(a, "*,", "*");
                a = igniteuiReactCore.stringReplace(a, ",,", ",");
                var d = a.split('*');
                var e_1 = new igniteuiReactCore.List$1(igniteuiReactCore.String_$type, 0);
                for (var f = 0; f < d.length; f++) {
                    var g = d[f].split(',');
                    for (var h = 0; h < g.length; h++) {
                        e_1.add(g[h]);
                    }
                }
                var i_1 = e_1._inner[0];
                if (i_1 != null) {
                    i_1 = i_1.trim();
                }
                var j_1;
                if (igniteuiReactCore.stringIsNullOrEmpty(i_1)) {
                    j_1 = 1;
                }
                else {
                    if (!((function () { var k = igniteuiReactCore.tryParseNumber(i_1, j_1); j_1 = k.p1; return k.ret; })())) {
                        return new ColumnWidth();
                    }
                }
                c.f = j_1;
                if (e_1.count > 1 && e_1._inner[1] != null) {
                    e_1._inner[1] = igniteuiReactCore.stringReplace(e_1._inner[1], ">", "");
                    var k_1;
                    if (((function () { var l = igniteuiReactCore.tryParseNumber(e_1._inner[1], k_1); k_1 = l.p1; return l.ret; })())) {
                        c.e = k_1;
                    }
                }
                return c;
            }
            else {
                var l = new ColumnWidth();
                l.c = false;
                var m_1;
                if (!((function () { var n = igniteuiReactCore.tryParseNumber(a, m_1); m_1 = n.p1; return n.ret; })())) {
                    return new ColumnWidth();
                }
                l.f = m_1;
                return l;
            }
        };
        ColumnWidth.$t = igniteuiReactCore.markType(ColumnWidth, 'ColumnWidth');
        return ColumnWidth;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates what should occur on a header click event.
     */
    var HeaderClickAction = /*@__PURE__*/ (function (HeaderClickAction) {
        /**
         * Sorting by one column is permitted and toggles between ascending and descending.
         */
        HeaderClickAction[HeaderClickAction["SortByOneColumnOnly"] = 0] = "SortByOneColumnOnly";
        /**
         * Sorting by multiple columns is permitted and each toggle between ascending and descending.
         */
        HeaderClickAction[HeaderClickAction["SortByMultipleColumns"] = 1] = "SortByMultipleColumns";
        /**
         * Sorting by one column is permitted and toggles between ascending, descending and unsorted.
         */
        HeaderClickAction[HeaderClickAction["SortByOneColumnOnlyTriState"] = 2] = "SortByOneColumnOnlyTriState";
        /**
         * Sorting by multiple columns is permitted and toggles between ascending, descending and unsorted.
         */
        HeaderClickAction[HeaderClickAction["SortByMultipleColumnsTriState"] = 3] = "SortByMultipleColumnsTriState";
        /**
         * No action is triggered.
         */
        HeaderClickAction[HeaderClickAction["None"] = 4] = "None";
        return HeaderClickAction;
    })({});
    /**
     * @hidden
     */
    var HeaderClickAction_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('HeaderClickAction', 'SortByOneColumnOnly,0|SortByMultipleColumns,1|SortByOneColumnOnlyTriState,2|SortByMultipleColumnsTriState,3|None,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates what type of click action will activate edit mode.
     */
    var EditModeClickAction = /*@__PURE__*/ (function (EditModeClickAction) {
        /**
         * Mouse clicks will be ignored for edit mode activation.
         */
        EditModeClickAction[EditModeClickAction["None"] = 0] = "None";
        /**
         * A single click is required to enter edit mode.
         */
        EditModeClickAction[EditModeClickAction["SingleClick"] = 1] = "SingleClick";
        /**
         * A double click is required to enter edit mode.
         */
        EditModeClickAction[EditModeClickAction["DoubleClick"] = 2] = "DoubleClick";
        return EditModeClickAction;
    })({});
    /**
     * @hidden
     */
    var EditModeClickAction_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('EditModeClickAction', 'None,0|SingleClick,1|DoubleClick,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how columns animate into view.
     */
    var ColumnShowingAnimationMode = /*@__PURE__*/ (function (ColumnShowingAnimationMode) {
        /**
         * Automatically selects the correct animation mode.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation should be performed.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["None"] = 1] = "None";
        /**
         * Cells slide in from the left.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromLeft"] = 2] = "SlideFromLeft";
        /**
         * Cells slide in from the right.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromRight"] = 3] = "SlideFromRight";
        /**
         * Cells slide in from the top.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromTop"] = 4] = "SlideFromTop";
        /**
         * Cells slide in from the bottom.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromBottom"] = 5] = "SlideFromBottom";
        /**
         * Cells fade in.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["FadeIn"] = 6] = "FadeIn";
        /**
         * Cells slide in from the left and fade in.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromLeftAndFadeIn"] = 7] = "SlideFromLeftAndFadeIn";
        /**
         * Cells slide in from the right and fade in.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromRightAndFadeIn"] = 8] = "SlideFromRightAndFadeIn";
        /**
         * Cells slide in from the top and fade in.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromTopAndFadeIn"] = 9] = "SlideFromTopAndFadeIn";
        /**
         * Cells slide in from the bottom and fade in.
         */
        ColumnShowingAnimationMode[ColumnShowingAnimationMode["SlideFromBottomAndFadeIn"] = 10] = "SlideFromBottomAndFadeIn";
        return ColumnShowingAnimationMode;
    })({});
    /**
     * @hidden
     */
    var ColumnShowingAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnShowingAnimationMode', 'Auto,0|None,1|SlideFromLeft,2|SlideFromRight,3|SlideFromTop,4|SlideFromBottom,5|FadeIn,6|SlideFromLeftAndFadeIn,7|SlideFromRightAndFadeIn,8|SlideFromTopAndFadeIn,9|SlideFromBottomAndFadeIn,10');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how changes to column properties are animated.
     */
    var ColumnPropertyUpdatingAnimationMode = /*@__PURE__*/ (function (ColumnPropertyUpdatingAnimationMode) {
        /**
         * Automatically decides on the animation mode to use.
         */
        ColumnPropertyUpdatingAnimationMode[ColumnPropertyUpdatingAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        ColumnPropertyUpdatingAnimationMode[ColumnPropertyUpdatingAnimationMode["None"] = 1] = "None";
        /**
         * The previous value and the next value are interpolated between.
         */
        ColumnPropertyUpdatingAnimationMode[ColumnPropertyUpdatingAnimationMode["Interpolate"] = 2] = "Interpolate";
        /**
         * Deep values within the previous and next value are interpolated between.
         */
        ColumnPropertyUpdatingAnimationMode[ColumnPropertyUpdatingAnimationMode["InterpolateDeep"] = 3] = "InterpolateDeep";
        return ColumnPropertyUpdatingAnimationMode;
    })({});
    /**
     * @hidden
     */
    var ColumnPropertyUpdatingAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnPropertyUpdatingAnimationMode', 'Auto,0|None,1|Interpolate,2|InterpolateDeep,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how data loaded animations are displayed.
     */
    var CellDataLoadedAnimationMode = /*@__PURE__*/ (function (CellDataLoadedAnimationMode) {
        /**
         * The correct animation mode is automatically selected.
         */
        CellDataLoadedAnimationMode[CellDataLoadedAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        CellDataLoadedAnimationMode[CellDataLoadedAnimationMode["None"] = 1] = "None";
        /**
         * The previous value and the next value are crossfaded between.
         */
        CellDataLoadedAnimationMode[CellDataLoadedAnimationMode["CrossFade"] = 2] = "CrossFade";
        return CellDataLoadedAnimationMode;
    })({});
    /**
     * @hidden
     */
    var CellDataLoadedAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CellDataLoadedAnimationMode', 'Auto,0|None,1|CrossFade,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the option for how row selection is animated.
     */
    var RowSelectionAnimationMode = /*@__PURE__*/ (function (RowSelectionAnimationMode) {
        /**
         * The correct animation mode is automatically selected.
         */
        RowSelectionAnimationMode[RowSelectionAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        RowSelectionAnimationMode[RowSelectionAnimationMode["None"] = 1] = "None";
        /**
         * The selection color and the normal background color are blended between.
         */
        RowSelectionAnimationMode[RowSelectionAnimationMode["ColorBlend"] = 2] = "ColorBlend";
        return RowSelectionAnimationMode;
    })({});
    /**
     * @hidden
     */
    var RowSelectionAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('RowSelectionAnimationMode', 'Auto,0|None,1|ColorBlend,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the option for how row selection is animated.
     */
    var RowHoverAnimationMode = /*@__PURE__*/ (function (RowHoverAnimationMode) {
        /**
         * The correct animation mode is automatically selected.
         */
        RowHoverAnimationMode[RowHoverAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        RowHoverAnimationMode[RowHoverAnimationMode["None"] = 1] = "None";
        /**
         * The selection color and the normal background color are blended between.
         */
        RowHoverAnimationMode[RowHoverAnimationMode["ColorBlend"] = 2] = "ColorBlend";
        return RowHoverAnimationMode;
    })({});
    /**
     * @hidden
     */
    var RowHoverAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('RowHoverAnimationMode', 'Auto,0|None,1|ColorBlend,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how cell selection is animated.
     */
    var CellSelectionAnimationMode = /*@__PURE__*/ (function (CellSelectionAnimationMode) {
        /**
         * The correct animation mode is automatically selected.
         */
        CellSelectionAnimationMode[CellSelectionAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        CellSelectionAnimationMode[CellSelectionAnimationMode["None"] = 1] = "None";
        /**
         * The selection color and the normal background color are blended between.
         */
        CellSelectionAnimationMode[CellSelectionAnimationMode["ColorBlend"] = 2] = "ColorBlend";
        return CellSelectionAnimationMode;
    })({});
    /**
     * @hidden
     */
    var CellSelectionAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CellSelectionAnimationMode', 'Auto,0|None,1|ColorBlend,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the built in easing type to use for an animation.
     */
    var GridEasingFunctionType = /*@__PURE__*/ (function (GridEasingFunctionType) {
        /**
         * Use linear easing.
         */
        GridEasingFunctionType[GridEasingFunctionType["Linear"] = 0] = "Linear";
        /**
         * Use cubic in/out easing.
         */
        GridEasingFunctionType[GridEasingFunctionType["CubicInOut"] = 1] = "CubicInOut";
        /**
         * Use exponential in/out easing.
         */
        GridEasingFunctionType[GridEasingFunctionType["ExponentialInOut"] = 2] = "ExponentialInOut";
        /**
         * Use circle in/out easing.
         */
        GridEasingFunctionType[GridEasingFunctionType["CircleInOut"] = 3] = "CircleInOut";
        return GridEasingFunctionType;
    })({});
    /**
     * @hidden
     */
    var GridEasingFunctionType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GridEasingFunctionType', 'Linear,0|CubicInOut,1|ExponentialInOut,2|CircleInOut,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridAnimationPhaseSettings = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridAnimationPhaseSettings, _super);
        function GridAnimationPhaseSettings() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.p = null;
            _this.g = 300;
            _this.h = 0;
            _this.i = -1;
            _this.j = -1;
            _this.f = 300;
            _this.d = false;
            _this.b = 1;
            _this.propertyChanged = null;
            return _this;
        }
        Object.defineProperty(GridAnimationPhaseSettings.prototype, "l", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (b != this.g) {
                    this.x("DurationMilliseconds", b, this.g);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationPhaseSettings.prototype, "m", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                var b = this.h;
                this.h = a;
                if (b != this.h) {
                    this.x("HoldInitialMilliseconds", b, this.h);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationPhaseSettings.prototype, "n", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                if (b != this.i) {
                    this.x("PerItemDelayMilliseconds", b, this.i);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationPhaseSettings.prototype, "o", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.x("SubItemDurationMilliseconds", b, this.j);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationPhaseSettings.prototype, "k", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.x("DesiredSubItemDurationMilliseconds", b, this.f);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationPhaseSettings.prototype, "e", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                if (b != this.d) {
                    this.x("ShouldItemsFinishSimultaneously", b, this.d);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationPhaseSettings.prototype, "c", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (b != this.b) {
                    this.x("EasingFunctionType", igniteuiReactCore.enumGetBox(GridEasingFunctionType_$type, b), igniteuiReactCore.enumGetBox(GridEasingFunctionType_$type, this.b));
                }
            },
            enumerable: true,
            configurable: true
        });
        GridAnimationPhaseSettings.prototype.x = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
        };
        GridAnimationPhaseSettings.prototype.a = function () {
            var _this = this;
            return ((function () {
                var $ret = new GridAnimationPhaseSettings();
                $ret.l = _this.l;
                $ret.c = _this.c;
                $ret.m = _this.m;
                $ret.n = _this.n;
                $ret.e = _this.e;
                $ret.o = _this.o;
                $ret.k = _this.k;
                return $ret;
            })());
        };
        GridAnimationPhaseSettings.$t = igniteuiReactCore.markType(GridAnimationPhaseSettings, 'GridAnimationPhaseSettings', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return GridAnimationPhaseSettings;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnAnimationSettings = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnAnimationSettings, _super);
        function GridColumnAnimationSettings() {
            var _this = _super.call(this) || this;
            _this.y = null;
            _this.i = null;
            _this.a = null;
            _this.b = null;
            _this.k = null;
            _this.l = null;
            _this.j = null;
            _this.g = null;
            _this.h = null;
            _this.e = null;
            _this.f = null;
            _this.d = null;
            _this.c = null;
            _this.propertyChanged = null;
            _this.a = new GridAnimationPhaseSettings();
            _this.a.l = 1000;
            _this.a.c = 1;
            _this.a.m = 500;
            _this.a.e = false;
            _this.k = _this.a.a();
            _this.i = new GridAnimationPhaseSettings();
            _this.i.l = 1000;
            _this.i.c = 1;
            _this.i.e = false;
            _this.b = new GridAnimationPhaseSettings();
            _this.b.c = 1;
            _this.b.l = 300;
            _this.l = _this.b.a();
            _this.e = _this.a.a();
            _this.e.m = 0;
            _this.f = new GridAnimationPhaseSettings();
            _this.f.m = 1200;
            _this.f.l = 300;
            _this.f.c = 1;
            _this.g = new GridAnimationPhaseSettings();
            _this.g.l = 1000;
            _this.g.c = 1;
            _this.g.m = 500;
            _this.g.e = false;
            _this.h = new GridAnimationPhaseSettings();
            _this.h.c = 1;
            _this.h.l = 800;
            _this.d = _this.a.a();
            _this.d.m = 0;
            _this.c = new GridAnimationPhaseSettings();
            _this.c.m = 0;
            _this.c.l = 300;
            _this.c.c = 0;
            _this.j = new GridAnimationPhaseSettings();
            _this.j.c = 1;
            _this.j.l = 200;
            return _this;
        }
        Object.defineProperty(GridColumnAnimationSettings.prototype, "u", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                this.av("ColumnPropertyUpdatingMainPhase", b, this.i);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "m", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                this.av("ColumnAddingMainPhase", b, this.a);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "n", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                this.av("ColumnAddingPrePhase", b, this.b);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "w", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                this.k = a;
                this.av("ColumnShowingMainPhase", b, this.k);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "x", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                this.av("ColumnShowingPrePhase", b, this.l);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "v", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                this.av("ColumnResizingMainPhase", b, this.j);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "s", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                this.av("ColumnMovingMainPhase", b, this.g);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "t", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                var b = this.h;
                this.h = a;
                this.av("ColumnMovingPrePhase", b, this.h);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "q", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                this.av("ColumnHidingMainPhase", b, this.e);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "r", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                this.av("ColumnHidingPostPhase", b, this.f);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "p", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                this.av("ColumnExchangingMainPhase", b, this.d);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnAnimationSettings.prototype, "o", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                this.av("ColumnExchangingCleanupPhase", b, this.c);
            },
            enumerable: true,
            configurable: true
        });
        GridColumnAnimationSettings.prototype.av = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.aw(a, b, c);
        };
        GridColumnAnimationSettings.prototype.aw = function (a, b, c) {
            switch (a) {
                case "ColumnAddingMainPhase":
                    if (b != null) {
                        var d = b;
                        d.propertyChanged = igniteuiReactCore.delegateRemove(d.propertyChanged, igniteuiReactCore.runOn(this, this.al));
                    }
                    if (c != null) {
                        var e = c;
                        e.propertyChanged = igniteuiReactCore.delegateCombine(e.propertyChanged, igniteuiReactCore.runOn(this, this.al));
                    }
                    break;
                case "ColumnAddingPrePhase":
                    if (b != null) {
                        var f = b;
                        f.propertyChanged = igniteuiReactCore.delegateRemove(f.propertyChanged, igniteuiReactCore.runOn(this, this.am));
                    }
                    if (c != null) {
                        var g = c;
                        g.propertyChanged = igniteuiReactCore.delegateCombine(g.propertyChanged, igniteuiReactCore.runOn(this, this.am));
                    }
                    break;
                case "ColumnShowingMainPhase":
                    if (b != null) {
                        var h = b;
                        h.propertyChanged = igniteuiReactCore.delegateRemove(h.propertyChanged, igniteuiReactCore.runOn(this, this.at));
                    }
                    if (c != null) {
                        var i = c;
                        i.propertyChanged = igniteuiReactCore.delegateCombine(i.propertyChanged, igniteuiReactCore.runOn(this, this.at));
                    }
                    break;
                case "ColumnShowingPrePhase":
                    if (b != null) {
                        var j = b;
                        j.propertyChanged = igniteuiReactCore.delegateRemove(j.propertyChanged, igniteuiReactCore.runOn(this, this.au));
                    }
                    if (c != null) {
                        var k = c;
                        k.propertyChanged = igniteuiReactCore.delegateCombine(k.propertyChanged, igniteuiReactCore.runOn(this, this.au));
                    }
                    break;
                case "ColumnMovingMainPhase":
                    if (b != null) {
                        var l = b;
                        l.propertyChanged = igniteuiReactCore.delegateRemove(l.propertyChanged, igniteuiReactCore.runOn(this, this.ar));
                    }
                    if (c != null) {
                        var m = c;
                        m.propertyChanged = igniteuiReactCore.delegateCombine(m.propertyChanged, igniteuiReactCore.runOn(this, this.ar));
                    }
                    break;
                case "ColumnMovingPrePhase":
                    if (b != null) {
                        var n = b;
                        n.propertyChanged = igniteuiReactCore.delegateRemove(n.propertyChanged, igniteuiReactCore.runOn(this, this.as));
                    }
                    if (c != null) {
                        var o = c;
                        o.propertyChanged = igniteuiReactCore.delegateCombine(o.propertyChanged, igniteuiReactCore.runOn(this, this.as));
                    }
                    break;
                case "ColumnHidingMainPhase":
                    if (b != null) {
                        var p = b;
                        p.propertyChanged = igniteuiReactCore.delegateRemove(p.propertyChanged, igniteuiReactCore.runOn(this, this.ap));
                    }
                    if (c != null) {
                        var q = c;
                        q.propertyChanged = igniteuiReactCore.delegateCombine(q.propertyChanged, igniteuiReactCore.runOn(this, this.ap));
                    }
                    break;
                case "ColumnHidingPostPhase":
                    if (b != null) {
                        var r = b;
                        r.propertyChanged = igniteuiReactCore.delegateRemove(r.propertyChanged, igniteuiReactCore.runOn(this, this.aq));
                    }
                    if (c != null) {
                        var s = c;
                        s.propertyChanged = igniteuiReactCore.delegateCombine(s.propertyChanged, igniteuiReactCore.runOn(this, this.aq));
                    }
                    break;
                case "ColumnExchangingMainPhase":
                    if (b != null) {
                        var t = b;
                        t.propertyChanged = igniteuiReactCore.delegateRemove(t.propertyChanged, igniteuiReactCore.runOn(this, this.ao));
                    }
                    if (c != null) {
                        var u = c;
                        u.propertyChanged = igniteuiReactCore.delegateCombine(u.propertyChanged, igniteuiReactCore.runOn(this, this.ao));
                    }
                    break;
                case "ColumnExchangingCleanupPhase":
                    if (b != null) {
                        var v = b;
                        v.propertyChanged = igniteuiReactCore.delegateRemove(v.propertyChanged, igniteuiReactCore.runOn(this, this.an));
                    }
                    if (c != null) {
                        var w = c;
                        w.propertyChanged = igniteuiReactCore.delegateCombine(w.propertyChanged, igniteuiReactCore.runOn(this, this.an));
                    }
                    break;
            }
        };
        GridColumnAnimationSettings.prototype.al = function (a, b) {
            this.av("ColumnAddingMainPhase", this.m, this.m);
        };
        GridColumnAnimationSettings.prototype.am = function (a, b) {
            this.av("ColumnAddingPrePhase", this.n, this.n);
        };
        GridColumnAnimationSettings.prototype.at = function (a, b) {
            this.av("ColumnShowingMainPhase", this.w, this.w);
        };
        GridColumnAnimationSettings.prototype.au = function (a, b) {
            this.av("ColumnShowingPrePhase", this.x, this.x);
        };
        GridColumnAnimationSettings.prototype.ar = function (a, b) {
            this.av("ColumnMovingMainPhase", this.s, this.s);
        };
        GridColumnAnimationSettings.prototype.as = function (a, b) {
            this.av("ColumnMovingPrePhase", this.t, this.t);
        };
        GridColumnAnimationSettings.prototype.ap = function (a, b) {
            this.av("ColumnHidingMainPhase", this.q, this.q);
        };
        GridColumnAnimationSettings.prototype.aq = function (a, b) {
            this.av("ColumnHidingPostPhase", this.r, this.r);
        };
        GridColumnAnimationSettings.prototype.ao = function (a, b) {
            this.av("ColumnExchangingMainPhase", this.p, this.p);
        };
        GridColumnAnimationSettings.prototype.an = function (a, b) {
            this.av("ColumnExchangingCleanupPhase", this.o, this.o);
        };
        GridColumnAnimationSettings.$t = igniteuiReactCore.markType(GridColumnAnimationSettings, 'GridColumnAnimationSettings', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return GridColumnAnimationSettings;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridAnimationSettings = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridAnimationSettings, _super);
        function GridAnimationSettings() {
            var _this = _super.call(this) || this;
            _this.i = null;
            _this.b = null;
            _this.d = null;
            _this.a = null;
            _this.c = null;
            _this.propertyChanged = null;
            _this.b = new GridAnimationPhaseSettings();
            _this.b.l = 500;
            _this.b.c = 1;
            _this.b.e = false;
            _this.d = new GridAnimationPhaseSettings();
            _this.d.l = 300;
            _this.d.c = 1;
            _this.d.n = 0;
            _this.d.e = true;
            _this.a = new GridAnimationPhaseSettings();
            _this.a.l = 0;
            _this.a.c = 1;
            _this.a.n = 0;
            _this.a.e = true;
            _this.c = new GridAnimationPhaseSettings();
            _this.c.l = 100;
            _this.c.c = 1;
            _this.c.n = 0;
            _this.c.e = true;
            return _this;
        }
        Object.defineProperty(GridAnimationSettings.prototype, "f", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                this.p("CellDataLoadedMainPhase", b, this.b);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationSettings.prototype, "h", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                this.p("RowSelectionMainPhase", b, this.d);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationSettings.prototype, "e", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                this.p("CellActivationMainPhase", b, this.a);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridAnimationSettings.prototype, "g", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                this.p("RowHoverMainPhase", b, this.c);
            },
            enumerable: true,
            configurable: true
        });
        GridAnimationSettings.prototype.p = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.q(a, b, c);
        };
        GridAnimationSettings.prototype.q = function (a, b, c) {
            switch (a) {
                case "CellDataLoadedMainPhase":
                    if (b != null) {
                        var d = b;
                        d.propertyChanged = igniteuiReactCore.delegateRemove(d.propertyChanged, igniteuiReactCore.runOn(this, this.o));
                    }
                    if (c != null) {
                        var e = c;
                        e.propertyChanged = igniteuiReactCore.delegateCombine(e.propertyChanged, igniteuiReactCore.runOn(this, this.o));
                    }
                    break;
                case "RowSelectionMainPhase":
                    if (b != null) {
                        var f = b;
                        f.propertyChanged = igniteuiReactCore.delegateRemove(f.propertyChanged, igniteuiReactCore.runOn(this, this.r));
                    }
                    if (c != null) {
                        var g = c;
                        g.propertyChanged = igniteuiReactCore.delegateCombine(g.propertyChanged, igniteuiReactCore.runOn(this, this.r));
                    }
                    break;
                case "CellActivationMainPhase":
                    if (b != null) {
                        var h = b;
                        h.propertyChanged = igniteuiReactCore.delegateRemove(h.propertyChanged, igniteuiReactCore.runOn(this, this.n));
                    }
                    if (c != null) {
                        var i = c;
                        i.propertyChanged = igniteuiReactCore.delegateCombine(i.propertyChanged, igniteuiReactCore.runOn(this, this.n));
                    }
                    break;
            }
        };
        GridAnimationSettings.prototype.o = function (a, b) {
            this.p("CellDataLoadedMainPhase", this.f, this.f);
        };
        GridAnimationSettings.prototype.r = function (a, b) {
            this.p("RowSelectionMainPhase", this.h, this.h);
        };
        GridAnimationSettings.prototype.n = function (a, b) {
            this.p("CellActivationMainPhase", this.e, this.e);
        };
        GridAnimationSettings.$t = igniteuiReactCore.markType(GridAnimationSettings, 'GridAnimationSettings', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return GridAnimationSettings;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how columns animate while resizing.
     */
    var ColumnResizingAnimationMode = /*@__PURE__*/ (function (ColumnResizingAnimationMode) {
        /**
         * Automatically decides on the animation mode to use.
         */
        ColumnResizingAnimationMode[ColumnResizingAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        ColumnResizingAnimationMode[ColumnResizingAnimationMode["None"] = 1] = "None";
        /**
         * The column width interpolates to the new width.
         */
        ColumnResizingAnimationMode[ColumnResizingAnimationMode["Interpolate"] = 2] = "Interpolate";
        return ColumnResizingAnimationMode;
    })({});
    /**
     * @hidden
     */
    var ColumnResizingAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnResizingAnimationMode', 'Auto,0|None,1|Interpolate,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how columns animate while moving.
     */
    var ColumnMovingAnimationMode = /*@__PURE__*/ (function (ColumnMovingAnimationMode) {
        /**
         * Automatically decides on the animation mode to use.
         */
        ColumnMovingAnimationMode[ColumnMovingAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        ColumnMovingAnimationMode[ColumnMovingAnimationMode["None"] = 1] = "None";
        /**
         * The cells slide on top of the others to its desired position.
         */
        ColumnMovingAnimationMode[ColumnMovingAnimationMode["SlideOver"] = 2] = "SlideOver";
        return ColumnMovingAnimationMode;
    })({});
    /**
     * @hidden
     */
    var ColumnMovingAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnMovingAnimationMode', 'Auto,0|None,1|SlideOver,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how column hiding is animated.
     */
    var ColumnHidingAnimationMode = /*@__PURE__*/ (function (ColumnHidingAnimationMode) {
        /**
         * The correct animation mode is automatically selected.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["None"] = 1] = "None";
        /**
         * The cells slide to the left.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToLeft"] = 2] = "SlideToLeft";
        /**
         * The cells slide to the right.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToRight"] = 3] = "SlideToRight";
        /**
         * The cells slide to the top.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToTop"] = 4] = "SlideToTop";
        /**
         * The cells slide to the bottom.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToBottom"] = 5] = "SlideToBottom";
        /**
         * The cells fade out.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["FadeOut"] = 6] = "FadeOut";
        /**
         * The cells slide to the left and fade out.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToLeftAndFadeOut"] = 7] = "SlideToLeftAndFadeOut";
        /**
         * The cells slide to the right and fade out.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToRightAndFadeOut"] = 8] = "SlideToRightAndFadeOut";
        /**
         * The cells slide to the top and fade out.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToTopAndFadeOut"] = 9] = "SlideToTopAndFadeOut";
        /**
         * The cells slide to the bottom and fade out.
         */
        ColumnHidingAnimationMode[ColumnHidingAnimationMode["SlideToBottomAndFadeOut"] = 10] = "SlideToBottomAndFadeOut";
        return ColumnHidingAnimationMode;
    })({});
    /**
     * @hidden
     */
    var ColumnHidingAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnHidingAnimationMode', 'Auto,0|None,1|SlideToLeft,2|SlideToRight,3|SlideToTop,4|SlideToBottom,5|FadeOut,6|SlideToLeftAndFadeOut,7|SlideToRightAndFadeOut,8|SlideToTopAndFadeOut,9|SlideToBottomAndFadeOut,10');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how column exchanging is animated.
     */
    var ColumnExchangingAnimationMode = /*@__PURE__*/ (function (ColumnExchangingAnimationMode) {
        /**
         * The correct animation mode is automatically selected.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["Auto"] = 0] = "Auto";
        /**
         * No animation is performed.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["None"] = 1] = "None";
        /**
         * The cells slide to the left.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToLeft"] = 2] = "SlideToLeft";
        /**
         * The cells slide to the right.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToRight"] = 3] = "SlideToRight";
        /**
         * The cells slide to the top.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToTop"] = 4] = "SlideToTop";
        /**
         * The cells slide to the bottom.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToBottom"] = 5] = "SlideToBottom";
        /**
         * The cells crossfade.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["Crossfade"] = 6] = "Crossfade";
        /**
         * The cells slide to the left and crossfade.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToLeftAndCrossfade"] = 7] = "SlideToLeftAndCrossfade";
        /**
         * The cells slide to the right and crossfade.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToRightAndCrossfade"] = 8] = "SlideToRightAndCrossfade";
        /**
         * The cells slide to the top and crossfade.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToTopAndCrossfade"] = 9] = "SlideToTopAndCrossfade";
        /**
         * The cells slide to the bottom and crossfade.
         */
        ColumnExchangingAnimationMode[ColumnExchangingAnimationMode["SlideToBottomAndCrossfade"] = 10] = "SlideToBottomAndCrossfade";
        return ColumnExchangingAnimationMode;
    })({});
    /**
     * @hidden
     */
    var ColumnExchangingAnimationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnExchangingAnimationMode', 'Auto,0|None,1|SlideToLeft,2|SlideToRight,3|SlideToTop,4|SlideToBottom,5|Crossfade,6|SlideToLeftAndCrossfade,7|SlideToRightAndCrossfade,8|SlideToTopAndCrossfade,9|SlideToBottomAndCrossfade,10');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the selection mode to use for the grid.
     */
    var GridSelectionMode = /*@__PURE__*/ (function (GridSelectionMode) {
        /**
         * No selection should be peformed based on interaction.
         */
        GridSelectionMode[GridSelectionMode["None"] = 0] = "None";
        /**
         * A single row is permitted to be selected at a time from interaction.
         */
        GridSelectionMode[GridSelectionMode["SingleRow"] = 1] = "SingleRow";
        /**
         * Multiple rows are permitted to be selected at a time from interaction.
         */
        GridSelectionMode[GridSelectionMode["MultipleRow"] = 2] = "MultipleRow";
        /**
         * A single cell is permitted to be selected at a time from interaction.
         */
        GridSelectionMode[GridSelectionMode["SingleCell"] = 3] = "SingleCell";
        /**
         * Multiple cells are permitted to be selected at a time from interaction.
         */
        GridSelectionMode[GridSelectionMode["MultipleCell"] = 4] = "MultipleCell";
        /**
         * Multiple cells are allowed to be selected however they are stored as ranges not individual cells.
         */
        GridSelectionMode[GridSelectionMode["RangeCell"] = 5] = "RangeCell";
        return GridSelectionMode;
    })({});
    /**
     * @hidden
     */
    var GridSelectionMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GridSelectionMode', 'None,0|SingleRow,1|MultipleRow,2|SingleCell,3|MultipleCell,4|RangeCell,5');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the activation mode to use for the grid.
     */
    var GridActivationMode = /*@__PURE__*/ (function (GridActivationMode) {
        /**
         * No activation should be peformed based on interaction.
         */
        GridActivationMode[GridActivationMode["None"] = 0] = "None";
        /**
         * A single cell is permitted to be activated at a time.
         */
        GridActivationMode[GridActivationMode["Cell"] = 1] = "Cell";
        return GridActivationMode;
    })({});
    /**
     * @hidden
     */
    var GridActivationMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GridActivationMode', 'None,0|Cell,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the selection mode to use for the grid.
     */
    var GridSelectionBehavior = /*@__PURE__*/ (function (GridSelectionBehavior) {
        /**
         * Rows and cells are selected using a toggleable behavior. Modifier selection is ignored (CTRL and SHIFT).
         */
        GridSelectionBehavior[GridSelectionBehavior["Toggle"] = 0] = "Toggle";
        /**
         * Only one row or cell is selected at a time and modifier keys are required to multi-select them.
         */
        GridSelectionBehavior[GridSelectionBehavior["ModifierBased"] = 1] = "ModifierBased";
        return GridSelectionBehavior;
    })({});
    /**
     * @hidden
     */
    var GridSelectionBehavior_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GridSelectionBehavior', 'Toggle,0|ModifierBased,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSelectedItemsCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedItemsCollection, _super);
        function GridSelectedItemsCollection() {
            return _super.call(this, igniteuiReactCore.Base.$, 0) || this;
        }
        Object.defineProperty(GridSelectedItemsCollection.prototype, "ae", {
            get: function () {
                return this;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedItemsCollection.prototype.af = function (a) {
            this.collectionChanged = igniteuiReactCore.delegateCombine(this.collectionChanged, a);
        };
        GridSelectedItemsCollection.$t = igniteuiReactCore.markType(GridSelectedItemsCollection, 'GridSelectedItemsCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(igniteuiReactCore.Base.$));
        return GridSelectedItemsCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CellRange = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellRange, _super);
        function CellRange() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.g = -2147483648;
            _this.e = -2147483648;
            _this.h = -2147483648;
            _this.f = -2147483648;
            return _this;
        }
        Object.defineProperty(CellRange.prototype, "k", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                this.g = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellRange.prototype, "i", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellRange.prototype, "l", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellRange.prototype, "j", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
            },
            enumerable: true,
            configurable: true
        });
        CellRange.prototype.b = function (a, b) {
            return this.d(a) && this.c(b);
        };
        CellRange.prototype.d = function (a) {
            return a >= this.l && a <= this.j;
        };
        CellRange.prototype.c = function (a) {
            return a >= this.k && a <= this.i;
        };
        CellRange.prototype.a = function () {
            var a = new CellRange();
            a.k = this.k;
            a.i = this.i;
            a.l = this.l;
            a.j = this.j;
            return a;
        };
        CellRange.$t = igniteuiReactCore.markType(CellRange, 'CellRange');
        return CellRange;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSelectedCellRangesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedCellRangesCollection, _super);
        function GridSelectedCellRangesCollection() {
            return _super.call(this, CellRange.$, 0) || this;
        }
        Object.defineProperty(GridSelectedCellRangesCollection.prototype, "ae", {
            get: function () {
                return this;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedCellRangesCollection.$t = igniteuiReactCore.markType(GridSelectedCellRangesCollection, 'GridSelectedCellRangesCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(CellRange.$));
        return GridSelectedCellRangesCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridCellPosition = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridCellPosition, _super);
        function GridCellPosition() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this.c = null;
            return _this;
        }
        Object.defineProperty(GridCellPosition.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                this.a = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellPosition.prototype, "d", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
            },
            enumerable: true,
            configurable: true
        });
        GridCellPosition.$t = igniteuiReactCore.markType(GridCellPosition, 'GridCellPosition');
        return GridCellPosition;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnSortDescription = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnSortDescription, _super);
        function ColumnSortDescription(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = _super.call(this) || this;
            _this.e = null;
            _this.b = 0;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        var c = _rest[0];
                        _this.f = c;
                    }
                    break;
                case 2:
                    {
                        var c = _rest[0];
                        var d = _rest[1];
                        _this.f = c;
                        _this.c = d;
                    }
                    break;
            }
            return _this;
        }
        Object.defineProperty(ColumnSortDescription.prototype, "f", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                this.e = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSortDescription.prototype, "c", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                this.b = a;
            },
            enumerable: true,
            configurable: true
        });
        ColumnSortDescription.prototype.equals = function (a) {
            var b = a;
            if (b == null) {
                return _super.prototype.equals.call(this, a);
            }
            return b.f == this.f && b.c == this.c;
        };
        ColumnSortDescription.prototype.getHashCode = function () {
            return igniteuiReactCore.Base.getHashCodeStatic(this.f) * 17 + this.c;
        };
        ColumnSortDescription.$t = igniteuiReactCore.markType(ColumnSortDescription, 'ColumnSortDescription');
        return ColumnSortDescription;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnSortDescriptionCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnSortDescriptionCollection, _super);
        function ColumnSortDescriptionCollection() {
            var _this = _super.call(this) || this;
            _this.f = new igniteuiReactCore.SyncableObservableCollection$2(ColumnSortDescription.$, igniteuiReactCore.SortDescription.$, 0);
            _this.a = null;
            var a = _this.f;
            a.compare = function (b, c) {
                if (b.f == c.propertyName) {
                    return true;
                }
                return false;
            };
            a.createFrom = function (b) { return new ColumnSortDescription(2, b.propertyName, b.direction); };
            a.createTo = function (b) {
                var c = b.c;
                return igniteuiReactCore.SortDescription.create(b.f, c);
            };
            return _this;
        }
        Object.defineProperty(ColumnSortDescriptionCollection.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                if (a == null) {
                    this.f.syncTarget = null;
                    this.a = null;
                    return;
                }
                this.a = a;
                this.f.syncTarget = this.a.getInner();
            },
            enumerable: true,
            configurable: true
        });
        ColumnSortDescriptionCollection.prototype.g = function (a) {
            return this.f.add(a);
        };
        ColumnSortDescriptionCollection.prototype.n = function (a, b) {
            this.f.add1(a, b);
        };
        ColumnSortDescriptionCollection.prototype.m = function () {
            this.f.clear();
        };
        ColumnSortDescriptionCollection.prototype.get = function (a) {
            return this.f.get(a);
        };
        ColumnSortDescriptionCollection.prototype.j = function (a) {
            return this.f.indexOf(a);
        };
        ColumnSortDescriptionCollection.prototype.h = function (a) {
            return this.f.remove1(a);
        };
        ColumnSortDescriptionCollection.prototype.d = function (a) {
            return this.f.remove(a);
        };
        ColumnSortDescriptionCollection.prototype.set = function (a, b) {
            return this.f.set(a, b);
        };
        ColumnSortDescriptionCollection.prototype.size = function () {
            return this.f.size();
        };
        ColumnSortDescriptionCollection.prototype.l = function (a) {
            this.f.addListener(a);
        };
        ColumnSortDescriptionCollection.prototype.o = function (a) {
            this.f.removeListener(a);
        };
        Object.defineProperty(ColumnSortDescriptionCollection.prototype, "i", {
            get: function () {
                return this.f.all;
            },
            enumerable: true,
            configurable: true
        });
        ColumnSortDescriptionCollection.$t = igniteuiReactCore.markType(ColumnSortDescriptionCollection, 'ColumnSortDescriptionCollection');
        return ColumnSortDescriptionCollection;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FormatGroupTextEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(FormatGroupTextEventArgs, _super);
        function FormatGroupTextEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = null;
            _this.a = null;
            _this.c = null;
            _this.b = null;
            return _this;
        }
        FormatGroupTextEventArgs.$t = igniteuiReactCore.markType(FormatGroupTextEventArgs, 'FormatGroupTextEventArgs');
        return FormatGroupTextEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnGroupDescription = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnGroupDescription, _super);
        function ColumnGroupDescription(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = this;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        _this = _super.call(this, 0) || this;
                        _this.t = null;
                        _this.h = null;
                        _this.r = null;
                        _this.g = null;
                        _this.p = null;
                        _this.s = null;
                        _this.o = false;
                        _this.m = 0;
                        _this.l = null;
                        _this.k = null;
                        _this.formatText = null;
                        _this.o = false;
                        _this.m = 11;
                    }
                    break;
                case 1:
                    {
                        var c = _rest[0];
                        _this = _super.call(this, 1, c) || this;
                        _this.t = null;
                        _this.h = null;
                        _this.r = null;
                        _this.g = null;
                        _this.p = null;
                        _this.s = null;
                        _this.o = false;
                        _this.m = 0;
                        _this.l = null;
                        _this.k = null;
                        _this.formatText = null;
                        _this.o = false;
                        _this.m = 11;
                    }
                    break;
                case 2:
                    {
                        var c = _rest[0];
                        var d = _rest[1];
                        _this = _super.call(this, 2, c, d) || this;
                        _this.t = null;
                        _this.h = null;
                        _this.r = null;
                        _this.g = null;
                        _this.p = null;
                        _this.s = null;
                        _this.o = false;
                        _this.m = 0;
                        _this.l = null;
                        _this.k = null;
                        _this.formatText = null;
                        _this.o = false;
                        _this.m = 11;
                    }
                    break;
            }
            return _this;
        }
        Object.defineProperty(ColumnGroupDescription.prototype, "x", {
            get: function () {
                return this.t;
            },
            set: function (a) {
                this.t = a;
                this.y();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnGroupDescription.prototype, "j", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
                this.y();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnGroupDescription.prototype, "u", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                this.r = a;
                this.y();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnGroupDescription.prototype, "i", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                this.g = a;
                this.y();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnGroupDescription.prototype, "q", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                this.p = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnGroupDescription.prototype, "v", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                this.s = a;
            },
            enumerable: true,
            configurable: true
        });
        ColumnGroupDescription.prototype.y = function () {
            if (this.x != null) {
                this.l = new igniteuiReactCore.BindingFormatter();
                this.l.j = this.x;
                this.l.d = this.j;
            }
            else {
                this.l = null;
            }
            if (this.u != null) {
                this.k = new igniteuiReactCore.BindingFormatter();
                this.k.j = this.u;
                this.k.d = this.i;
            }
            else {
                this.k = null;
            }
        };
        ColumnGroupDescription.prototype.w = function (a, b, c) {
            var _this = this;
            var d = null;
            if (this.formatText != null) {
                d = ((function () {
                    var $ret = new FormatGroupTextEventArgs();
                    $ret.d = _this.f;
                    $ret.a = a;
                    $ret.c = b;
                    $ret.b = c;
                    return $ret;
                })());
                this.formatText(this, d);
            }
            return d == null ? c : d.b;
        };
        ColumnGroupDescription.$t = igniteuiReactCore.markType(ColumnGroupDescription, 'ColumnGroupDescription', ColumnSortDescription.$);
        return ColumnGroupDescription;
    }(ColumnSortDescription));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnGroupDescriptionCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnGroupDescriptionCollection, _super);
        function ColumnGroupDescriptionCollection() {
            var _this = _super.call(this) || this;
            _this.f = new igniteuiReactCore.SyncableObservableCollection$2(ColumnGroupDescription.$, igniteuiReactCore.SortDescription.$, 0);
            _this.a = null;
            var a = _this.f;
            a.compare = function (b, c) {
                if (b.f == c.propertyName) {
                    return true;
                }
                return false;
            };
            a.createFrom = function (b) { return new ColumnGroupDescription(2, b.propertyName, b.direction); };
            a.createTo = function (b) {
                var c = b.c;
                return igniteuiReactCore.SortDescription.create(b.f, c);
            };
            return _this;
        }
        Object.defineProperty(ColumnGroupDescriptionCollection.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                if (a == null) {
                    this.f.syncTarget = null;
                    this.a = null;
                    return;
                }
                this.a = a;
                this.f.syncTarget = this.a.getInner();
            },
            enumerable: true,
            configurable: true
        });
        ColumnGroupDescriptionCollection.prototype.g = function (a) {
            return this.f.add(a);
        };
        ColumnGroupDescriptionCollection.prototype.n = function (a, b) {
            this.f.add1(a, b);
        };
        ColumnGroupDescriptionCollection.prototype.m = function () {
            this.f.clear();
        };
        ColumnGroupDescriptionCollection.prototype.get = function (a) {
            return this.f.get(a);
        };
        ColumnGroupDescriptionCollection.prototype.j = function (a) {
            return this.f.indexOf(a);
        };
        ColumnGroupDescriptionCollection.prototype.h = function (a) {
            return this.f.remove1(a);
        };
        ColumnGroupDescriptionCollection.prototype.d = function (a) {
            return this.f.remove(a);
        };
        ColumnGroupDescriptionCollection.prototype.set = function (a, b) {
            return this.f.set(a, b);
        };
        ColumnGroupDescriptionCollection.prototype.size = function () {
            return this.f.size();
        };
        ColumnGroupDescriptionCollection.prototype.l = function (a) {
            this.f.addListener(a);
        };
        ColumnGroupDescriptionCollection.prototype.o = function (a) {
            this.f.removeListener(a);
        };
        Object.defineProperty(ColumnGroupDescriptionCollection.prototype, "i", {
            get: function () {
                return this.f.all;
            },
            enumerable: true,
            configurable: true
        });
        ColumnGroupDescriptionCollection.$t = igniteuiReactCore.markType(ColumnGroupDescriptionCollection, 'ColumnGroupDescriptionCollection');
        return ColumnGroupDescriptionCollection;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FormatSummaryTextEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(FormatSummaryTextEventArgs, _super);
        function FormatSummaryTextEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = null;
            _this.b = null;
            _this.a = null;
            _this.d = null;
            _this.e = null;
            return _this;
        }
        FormatSummaryTextEventArgs.$t = igniteuiReactCore.markType(FormatSummaryTextEventArgs, 'FormatSummaryTextEventArgs');
        return FormatSummaryTextEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnSummaryDescription = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnSummaryDescription, _super);
        function ColumnSummaryDescription(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = _super.call(this) || this;
            _this.r = false;
            _this.g = 0;
            _this.aa = null;
            _this.m = 0;
            _this.i = null;
            _this.x = null;
            _this.z = null;
            _this.ab = null;
            _this.b = null;
            _this.y = null;
            _this.a = null;
            _this.f = null;
            _this.e = null;
            _this.v = null;
            _this.s = 10;
            _this.formatText = null;
            _this.provideCalculator = null;
            _this.k = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        var c = _rest[0];
                        _this.af = c;
                        _this.n = 4;
                    }
                    break;
                case 2:
                    {
                        var c = _rest[0];
                        var d = _rest[1];
                        _this.af = c;
                        _this.n = d;
                    }
                    break;
            }
            return _this;
        }
        Object.defineProperty(ColumnSummaryDescription.prototype, "af", {
            get: function () {
                return this.aa;
            },
            set: function (a) {
                this.aa = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "n", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                this.m = a;
                switch (this.m) {
                    case 0:
                        this.j = new igniteuiReactCore.MinSummaryCalculator();
                        break;
                    case 1:
                        this.j = new igniteuiReactCore.MaxSummaryCalculator();
                        break;
                    case 2:
                        this.j = new igniteuiReactCore.SumSummaryCalculator();
                        break;
                    case 3:
                        this.j = new igniteuiReactCore.AverageSummaryCalculator();
                        break;
                    case 4:
                        this.j = new igniteuiReactCore.CountSummaryCalculator();
                        break;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "j", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "ac", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                this.x = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "ae", {
            get: function () {
                return this.z;
            },
            set: function (a) {
                this.z = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "ag", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                this.ab = a;
                this.ah();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "d", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                this.b = a;
                this.ah();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "ad", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                this.y = a;
                this.ah();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "c", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                this.a = a;
                this.ah();
            },
            enumerable: true,
            configurable: true
        });
        ColumnSummaryDescription.prototype.ah = function () {
            if (this.ag != null) {
                this.f = new igniteuiReactCore.BindingFormatter();
                this.f.j = this.ag;
                this.f.d = this.d;
            }
            else {
                this.f = null;
            }
            if (this.ad != null) {
                this.e = new igniteuiReactCore.BindingFormatter();
                this.e.j = this.ad;
                this.e.d = this.c;
            }
            else {
                this.e = null;
            }
        };
        Object.defineProperty(ColumnSummaryDescription.prototype, "w", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                this.v = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnSummaryDescription.prototype, "u", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                this.s = a;
            },
            enumerable: true,
            configurable: true
        });
        ColumnSummaryDescription.prototype.equals = function (a) {
            var b = a;
            if (b == null) {
                return _super.prototype.equals.call(this, a);
            }
            return b.af == this.af && b.n == this.n;
        };
        ColumnSummaryDescription.prototype.getHashCode = function () {
            return igniteuiReactCore.Base.getHashCodeStatic(this.af) * 17 + this.n;
        };
        ColumnSummaryDescription.prototype.o = function (a, b, c) {
            var _this = this;
            var d = ((function () {
                var $ret = new FormatSummaryTextEventArgs();
                $ret.c = _this.af;
                $ret.b = _this.ae;
                $ret.a = a;
                $ret.d = b;
                $ret.e = c;
                return $ret;
            })());
            if (this.formatText != null) {
                this.formatText(this, d);
            }
            return d;
        };
        Object.defineProperty(ColumnSummaryDescription.prototype, "l", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                if (b != null) {
                    b.provideCalculator = igniteuiReactCore.delegateRemove(b.provideCalculator, igniteuiReactCore.runOn(this, this.ai));
                }
                this.k = a;
                if (this.k != null) {
                    var c = this.k;
                    c.provideCalculator = igniteuiReactCore.delegateCombine(c.provideCalculator, igniteuiReactCore.runOn(this, this.ai));
                }
            },
            enumerable: true,
            configurable: true
        });
        ColumnSummaryDescription.prototype.ai = function (a, b) {
            if (this.provideCalculator != null) {
                this.provideCalculator(this, b);
                this.j = b.a;
            }
        };
        ColumnSummaryDescription.$t = igniteuiReactCore.markType(ColumnSummaryDescription, 'ColumnSummaryDescription');
        return ColumnSummaryDescription;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnSummaryDescriptionCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnSummaryDescriptionCollection, _super);
        function ColumnSummaryDescriptionCollection() {
            var _this = _super.call(this) || this;
            _this.f = new igniteuiReactCore.SyncableObservableCollection$2(ColumnSummaryDescription.$, igniteuiReactCore.SummaryDescription.$, 0);
            _this.a = null;
            var a = _this.f;
            a.compare = function (b, c) { return b.af == c.propertyName && b.n == c.operand && b.j == c.calculator && b.l == c; };
            a.createFrom = function (b) {
                var c = new ColumnSummaryDescription(1, b.propertyName);
                c.n = b.operand;
                c.j = b.calculator;
                c.l = b;
                return c;
            };
            a.createTo = function (b) {
                var c = new igniteuiReactCore.SummaryDescription(1, b.af);
                c.operand = b.n;
                c.calculator = b.j;
                b.l = c;
                return c;
            };
            return _this;
        }
        Object.defineProperty(ColumnSummaryDescriptionCollection.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                if (a == null) {
                    this.f.syncTarget = null;
                    this.a = null;
                    return;
                }
                this.a = a;
                this.f.syncTarget = this.a.g();
            },
            enumerable: true,
            configurable: true
        });
        ColumnSummaryDescriptionCollection.prototype.g = function (a) {
            return this.f.add(a);
        };
        ColumnSummaryDescriptionCollection.prototype.n = function (a, b) {
            this.f.add1(a, b);
        };
        ColumnSummaryDescriptionCollection.prototype.m = function () {
            this.f.clear();
        };
        ColumnSummaryDescriptionCollection.prototype.get = function (a) {
            return this.f.get(a);
        };
        ColumnSummaryDescriptionCollection.prototype.j = function (a) {
            return this.f.indexOf(a);
        };
        ColumnSummaryDescriptionCollection.prototype.h = function (a) {
            return this.f.remove1(a);
        };
        ColumnSummaryDescriptionCollection.prototype.d = function (a) {
            return this.f.remove(a);
        };
        ColumnSummaryDescriptionCollection.prototype.set = function (a, b) {
            return this.f.set(a, b);
        };
        ColumnSummaryDescriptionCollection.prototype.size = function () {
            return this.f.size();
        };
        ColumnSummaryDescriptionCollection.prototype.l = function (a) {
            this.f.addListener(a);
        };
        ColumnSummaryDescriptionCollection.prototype.o = function (a) {
            this.f.removeListener(a);
        };
        Object.defineProperty(ColumnSummaryDescriptionCollection.prototype, "i", {
            get: function () {
                return this.f.all;
            },
            enumerable: true,
            configurable: true
        });
        ColumnSummaryDescriptionCollection.$t = igniteuiReactCore.markType(ColumnSummaryDescriptionCollection, 'ColumnSummaryDescriptionCollection');
        return ColumnSummaryDescriptionCollection;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterExpressionsEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterExpressionsEventArgs, _super);
        function GridFilterExpressionsEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        GridFilterExpressionsEventArgs.$t = igniteuiReactCore.markType(GridFilterExpressionsEventArgs, 'GridFilterExpressionsEventArgs');
        return GridFilterExpressionsEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IPlatformPixelConverter_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IPlatformPixelConverter');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DefaultPlatformPixelConverter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DefaultPlatformPixelConverter, _super);
        function DefaultPlatformPixelConverter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DefaultPlatformPixelConverter.prototype.devicePixelsToPixel = function (a) {
            return a;
        };
        DefaultPlatformPixelConverter.$t = igniteuiReactCore.markType(DefaultPlatformPixelConverter, 'DefaultPlatformPixelConverter', igniteuiReactCore.Base.$, [IPlatformPixelConverter_$type]);
        return DefaultPlatformPixelConverter;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridGroupDescriptionsChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridGroupDescriptionsChangedEventArgs, _super);
        function GridGroupDescriptionsChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._groupDescriptions = null;
            return _this;
        }
        Object.defineProperty(GridGroupDescriptionsChangedEventArgs.prototype, "groupDescriptions", {
            get: function () {
                return this._groupDescriptions;
            },
            set: function (a) {
                this._groupDescriptions = a;
            },
            enumerable: true,
            configurable: true
        });
        GridGroupDescriptionsChangedEventArgs.$t = igniteuiReactCore.markType(GridGroupDescriptionsChangedEventArgs, 'GridGroupDescriptionsChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridGroupDescriptionsChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSortDescriptionsChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSortDescriptionsChangedEventArgs, _super);
        function GridSortDescriptionsChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._sortDescriptions = null;
            return _this;
        }
        Object.defineProperty(GridSortDescriptionsChangedEventArgs.prototype, "sortDescriptions", {
            get: function () {
                return this._sortDescriptions;
            },
            set: function (a) {
                this._sortDescriptions = a;
            },
            enumerable: true,
            configurable: true
        });
        GridSortDescriptionsChangedEventArgs.$t = igniteuiReactCore.markType(GridSortDescriptionsChangedEventArgs, 'GridSortDescriptionsChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridSortDescriptionsChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSelectedItemsChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedItemsChangedEventArgs, _super);
        function GridSelectedItemsChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._currentItems = null;
            _this._addedItems = null;
            _this._removedItems = null;
            return _this;
        }
        Object.defineProperty(GridSelectedItemsChangedEventArgs.prototype, "currentItems", {
            get: function () {
                return this._currentItems;
            },
            set: function (a) {
                this._currentItems = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedItemsChangedEventArgs.prototype, "addedItems", {
            get: function () {
                return this._addedItems;
            },
            set: function (a) {
                this._addedItems = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedItemsChangedEventArgs.prototype, "removedItems", {
            get: function () {
                return this._removedItems;
            },
            set: function (a) {
                this._removedItems = a;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedItemsChangedEventArgs.$t = igniteuiReactCore.markType(GridSelectedItemsChangedEventArgs, 'GridSelectedItemsChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridSelectedItemsChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSelectedKeysChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedKeysChangedEventArgs, _super);
        function GridSelectedKeysChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._currentKeys = null;
            _this._addedKeys = null;
            _this._removedKeys = null;
            return _this;
        }
        Object.defineProperty(GridSelectedKeysChangedEventArgs.prototype, "currentKeys", {
            get: function () {
                return this._currentKeys;
            },
            set: function (a) {
                this._currentKeys = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedKeysChangedEventArgs.prototype, "addedKeys", {
            get: function () {
                return this._addedKeys;
            },
            set: function (a) {
                this._addedKeys = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedKeysChangedEventArgs.prototype, "removedKeys", {
            get: function () {
                return this._removedKeys;
            },
            set: function (a) {
                this._removedKeys = a;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedKeysChangedEventArgs.$t = igniteuiReactCore.markType(GridSelectedKeysChangedEventArgs, 'GridSelectedKeysChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridSelectedKeysChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSelectedCellRangesChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedCellRangesChangedEventArgs, _super);
        function GridSelectedCellRangesChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._currentRanges = null;
            _this._addedRanges = null;
            _this._removedRanges = null;
            _this._updatedRanges = null;
            return _this;
        }
        Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "currentRanges", {
            get: function () {
                return this._currentRanges;
            },
            set: function (a) {
                this._currentRanges = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "addedRanges", {
            get: function () {
                return this._addedRanges;
            },
            set: function (a) {
                this._addedRanges = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "removedRanges", {
            get: function () {
                return this._removedRanges;
            },
            set: function (a) {
                this._removedRanges = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedCellRangesChangedEventArgs.prototype, "updatedRanges", {
            get: function () {
                return this._updatedRanges;
            },
            set: function (a) {
                this._updatedRanges = a;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedCellRangesChangedEventArgs.$t = igniteuiReactCore.markType(GridSelectedCellRangesChangedEventArgs, 'GridSelectedCellRangesChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridSelectedCellRangesChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridDataCommittedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridDataCommittedEventArgs, _super);
        function GridDataCommittedEventArgs(a, b) {
            var _this = _super.call(this) || this;
            _this.b = 0;
            _this.a = null;
            _this.b = a;
            _this.a = b;
            return _this;
        }
        GridDataCommittedEventArgs.$t = igniteuiReactCore.markType(GridDataCommittedEventArgs, 'GridDataCommittedEventArgs');
        return GridDataCommittedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridDataCommittingEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridDataCommittingEventArgs, _super);
        function GridDataCommittingEventArgs(a, b) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.b = 0;
            _this.b = a;
            _this.a = b;
            return _this;
        }
        GridDataCommittingEventArgs.$t = igniteuiReactCore.markType(GridDataCommittingEventArgs, 'GridDataCommittingEventArgs');
        return GridDataCommittingEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DefinitionPropertyUpdatedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DefinitionPropertyUpdatedEventArgs, _super);
        function DefinitionPropertyUpdatedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._propertyName = null;
            _this._animationType = 0;
            _this._oldValue = null;
            _this._newValue = null;
            return _this;
        }
        Object.defineProperty(DefinitionPropertyUpdatedEventArgs.prototype, "propertyName", {
            get: function () {
                return this._propertyName;
            },
            set: function (a) {
                this._propertyName = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionPropertyUpdatedEventArgs.prototype, "animationType", {
            get: function () {
                return this._animationType;
            },
            set: function (a) {
                this._animationType = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionPropertyUpdatedEventArgs.prototype, "oldValue", {
            get: function () {
                return this._oldValue;
            },
            set: function (a) {
                this._oldValue = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionPropertyUpdatedEventArgs.prototype, "newValue", {
            get: function () {
                return this._newValue;
            },
            set: function (a) {
                this._newValue = a;
            },
            enumerable: true,
            configurable: true
        });
        DefinitionPropertyUpdatedEventArgs.$t = igniteuiReactCore.markType(DefinitionPropertyUpdatedEventArgs, 'DefinitionPropertyUpdatedEventArgs', igniteuiReactCore.EventArgs.$);
        return DefinitionPropertyUpdatedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Enumerates the options for how cell property animates are applied.
     */
    var CellPropertyAnimationType = /*@__PURE__*/ (function (CellPropertyAnimationType) {
        /**
         * The property is animated as a double value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["DoubleValue"] = 0] = "DoubleValue";
        /**
         * The property is animated as a number value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["NumberValue"] = 1] = "NumberValue";
        /**
         * The property is animated as a brush value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["BrushValue"] = 2] = "BrushValue";
        /**
         * The property is animated as a font value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["FontValue"] = 3] = "FontValue";
        /**
         * The property is animated as a enum value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["EnumValue"] = 4] = "EnumValue";
        /**
         * The property is animated as a bool value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["BoolValue"] = 5] = "BoolValue";
        /**
         * The property is animated as an int value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["IntValue"] = 6] = "IntValue";
        /**
         * The property is animated as a date value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["DateValue"] = 7] = "DateValue";
        /**
         * The propety is animated as a string value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["StringValue"] = 8] = "StringValue";
        /**
         * The property is animated as an object value.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["ObjectValue"] = 9] = "ObjectValue";
        /**
         * The property value is ignored and not propagated to live cells.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["IgnoredValue"] = 10] = "IgnoredValue";
        /**
         * The property value is not animated.
         */
        CellPropertyAnimationType[CellPropertyAnimationType["None"] = 11] = "None";
        return CellPropertyAnimationType;
    })({});
    /**
     * @hidden
     */
    var CellPropertyAnimationType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CellPropertyAnimationType', 'DoubleValue,0|NumberValue,1|BrushValue,2|FontValue,3|EnumValue,4|BoolValue,5|IntValue,6|DateValue,7|StringValue,8|ObjectValue,9|IgnoredValue,10|None,11');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSizeChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSizeChangedEventArgs, _super);
        function GridSizeChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = 0;
            _this.a = 0;
            return _this;
        }
        GridSizeChangedEventArgs.$t = igniteuiReactCore.markType(GridSizeChangedEventArgs, 'GridSizeChangedEventArgs');
        return GridSizeChangedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnStates_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnStates', 'Detached,0|Showing,1|Hiding,2|Hidden,3|Swapping,4|Visible,5|Moving,6');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridLayerExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridLayerExport, _super);
        function GridLayerExport(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.c = null;
            _this.c = a;
            _this.a = new igniteuiReactCore.List$1(CellModelExport.$, 0);
            return _this;
        }
        Object.defineProperty(GridLayerExport.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        GridLayerExport.prototype.e = function (a) {
            this.a.add(a);
        };
        GridLayerExport.prototype.f = function () {
            this.a.clear();
        };
        GridLayerExport.prototype.d = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.u("{");
            a.u("name: \"" + this.c + "\", cells: [");
            for (var b = 0; b < this.a.count; b++) {
                a.l(this.a._inner[b].ab());
                if (b < this.a.count - 1) {
                    a.l(", ");
                }
            }
            a.l("]");
            a.l("}");
            return a.toString();
        };
        GridLayerExport.$t = igniteuiReactCore.markType(GridLayerExport, 'GridLayerExport');
        return GridLayerExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var VisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(VisualModelExport, _super);
        function VisualModelExport() {
            var _this = _super.call(this) || this;
            _this.ae = null;
            _this.ah = 0;
            _this.ag = 0;
            _this.an = 0;
            _this.am = 0;
            _this.ak = 0;
            _this.al = 0;
            _this.ai = 0;
            _this.aq = 0;
            _this.ar = 0;
            _this.as = 0;
            _this.ap = 0;
            _this.ao = 0;
            _this.at = 0;
            _this.x = null;
            _this.a = null;
            _this.aa = null;
            _this.b = null;
            _this.r = null;
            _this.q = null;
            _this.s = null;
            _this.h = null;
            _this.c = null;
            _this.k = null;
            _this.f = null;
            _this.g = null;
            _this.w = null;
            _this.u = null;
            _this.t = null;
            _this.v = null;
            _this.z = null;
            _this.y = null;
            _this.o = null;
            _this.n = null;
            _this.ac = null;
            _this.ab = null;
            _this.j = null;
            _this.i = null;
            _this.e = null;
            _this.d = null;
            _this.m = null;
            _this.l = null;
            _this.ad = null;
            _this.p = null;
            _this.aj = 0;
            _this.af = null;
            _this.au = 0;
            _this.ae = igniteuiReactCore.RectData.empty;
            _this.x = new GridLayerExport("SubContentLayer");
            _this.a = new GridLayerExport("ContentLayer");
            _this.aa = new GridLayerExport("SuperContentLayer");
            _this.b = new GridLayerExport("DecoratorLayer");
            _this.r = new GridLayerExport("PinnedRowsSubLayer");
            _this.q = new GridLayerExport("PinnedRowsLayer");
            _this.s = new GridLayerExport("PinnedRowsSuperLayer");
            _this.h = new GridLayerExport("FixedSubContentLayer");
            _this.c = new GridLayerExport("FixedContentLayer");
            _this.k = new GridLayerExport("FixedSuperContentLayer");
            _this.f = new GridLayerExport("FixedPinnedRowsLayer");
            _this.g = new GridLayerExport("FixedSeparatorLayer");
            _this.w = new GridLayerExport("SectionLayer");
            _this.u = new GridLayerExport("PinnedSectionSubLayer");
            _this.t = new GridLayerExport("PinnedSectionLayer");
            _this.v = new GridLayerExport("PinnedSectionSuperLayer");
            _this.z = new GridLayerExport("SubHeaderLayer");
            _this.y = new GridLayerExport("SubHeaderDecoratorLayer");
            _this.o = new GridLayerExport("HeaderLayer");
            _this.n = new GridLayerExport("HeaderDecoratorLayer");
            _this.ac = new GridLayerExport("SuperHeaderLayer");
            _this.ab = new GridLayerExport("SuperHeaderDecoratorLayer");
            _this.j = new GridLayerExport("FixedSubHeaderLayer");
            _this.i = new GridLayerExport("FixedSubHeaderDecoratorLayer");
            _this.e = new GridLayerExport("FixedHeaderLayer");
            _this.d = new GridLayerExport("FixedHeaderDecoratorLayer");
            _this.m = new GridLayerExport("FixedSuperHeaderLayer");
            _this.l = new GridLayerExport("FixedSuperHeaderDecoratorLayer");
            _this.ad = new GridLayerExport("VerticalSeparatorLayer");
            _this.p = new GridLayerExport("HiddenLayer");
            _this.aj = 1;
            return _this;
        }
        VisualModelExport.prototype.ax = function () {
            this.af = new igniteuiReactCore.List$1(GridLayerExport.$, 0);
            this.af.add(this.x);
            this.af.add(this.a);
            this.af.add(this.aa);
            this.af.add(this.b);
            this.af.add(this.r);
            this.af.add(this.q);
            this.af.add(this.s);
            this.af.add(this.h);
            this.af.add(this.c);
            this.af.add(this.k);
            this.af.add(this.f);
            this.af.add(this.g);
            this.af.add(this.w);
            this.af.add(this.u);
            this.af.add(this.t);
            this.af.add(this.v);
            this.af.add(this.z);
            this.af.add(this.y);
            this.af.add(this.o);
            this.af.add(this.n);
            this.af.add(this.ac);
            this.af.add(this.ab);
            this.af.add(this.j);
            this.af.add(this.i);
            this.af.add(this.e);
            this.af.add(this.d);
            this.af.add(this.m);
            this.af.add(this.l);
            this.af.add(this.ad);
        };
        VisualModelExport.prototype.aw = function () {
            this.x.f();
            this.a.f();
            this.aa.f();
            this.b.f();
            this.r.f();
            this.q.f();
            this.s.f();
            this.h.f();
            this.c.f();
            this.k.f();
            this.f.f();
            this.g.f();
            this.w.f();
            this.u.f();
            this.t.f();
            this.v.f();
            this.z.f();
            this.y.f();
            this.o.f();
            this.n.f();
            this.ac.f();
            this.ab.f();
            this.j.f();
            this.i.f();
            this.e.f();
            this.d.f();
            this.m.f();
            this.l.f();
            this.ad.f();
        };
        VisualModelExport.prototype.av = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("top : " + this.as + ", ");
            a.l("left : " + this.ap + ", ");
            a.l("height : " + this.ao + ", ");
            a.l("width : " + this.at + ", ");
            a.l("absoluteWidth : " + this.ah + ", ");
            a.l("absoluteHeight : " + this.ag + ", ");
            a.l("headerHeight : " + this.an + ", ");
            a.l("fixedRowHeight : " + this.am + ", ");
            a.l("fixedColumnWidthLeft : " + this.ak + ", ");
            a.l("fixedColumnWidthRight : " + this.al + ", ");
            a.l("dipScalingRatio: " + this.aj + ", ");
            a.l("columnSpacing : " + this.ai + ", ");
            a.l("separatorLeft : " + this.aq + ", ");
            a.l("separatorRight : " + this.ar + ", ");
            for (var b = 0; b < this.af.count; b++) {
                var c = this.af._inner[b].c.charAt(0).toString().toLowerCase() + this.af._inner[b].c.substr(1);
                a.l(c + ": " + this.af._inner[b].d() + ", ");
            }
            a.l("actualVisibleRegion: { left: " + this.ae.left + ", top: " + this.ae.top + ", width: " + this.ae.width + ", height: " + this.ae.height + "}");
            a.l("}");
            return a.toString();
        };
        VisualModelExport.$t = igniteuiReactCore.markType(VisualModelExport, 'VisualModelExport');
        return VisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridActiveCellChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridActiveCellChangedEventArgs, _super);
        function GridActiveCellChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._newActiveCell = null;
            _this._oldActiveCell = null;
            return _this;
        }
        Object.defineProperty(GridActiveCellChangedEventArgs.prototype, "newActiveCell", {
            get: function () {
                return this._newActiveCell;
            },
            set: function (a) {
                this._newActiveCell = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridActiveCellChangedEventArgs.prototype, "oldActiveCell", {
            get: function () {
                return this._oldActiveCell;
            },
            set: function (a) {
                this._oldActiveCell = a;
            },
            enumerable: true,
            configurable: true
        });
        GridActiveCellChangedEventArgs.$t = igniteuiReactCore.markType(GridActiveCellChangedEventArgs, 'GridActiveCellChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridActiveCellChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridRowEditStartedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridRowEditStartedEventArgs, _super);
        function GridRowEditStartedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this._item = null;
            return _this;
        }
        Object.defineProperty(GridRowEditStartedEventArgs.prototype, "item", {
            get: function () {
                return this._item;
            },
            set: function (a) {
                this._item = a;
            },
            enumerable: true,
            configurable: true
        });
        GridRowEditStartedEventArgs.$t = igniteuiReactCore.markType(GridRowEditStartedEventArgs, 'GridRowEditStartedEventArgs');
        return GridRowEditStartedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridRowEditEndedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridRowEditEndedEventArgs, _super);
        function GridRowEditEndedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this._item = null;
            return _this;
        }
        Object.defineProperty(GridRowEditEndedEventArgs.prototype, "item", {
            get: function () {
                return this._item;
            },
            set: function (a) {
                this._item = a;
            },
            enumerable: true,
            configurable: true
        });
        GridRowEditEndedEventArgs.$t = igniteuiReactCore.markType(GridRowEditEndedEventArgs, 'GridRowEditEndedEventArgs');
        return GridRowEditEndedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridAnimationManagerAnimationCreatedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridAnimationManagerAnimationCreatedEventArgs, _super);
        function GridAnimationManagerAnimationCreatedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            return _this;
        }
        GridAnimationManagerAnimationCreatedEventArgs.$t = igniteuiReactCore.markType(GridAnimationManagerAnimationCreatedEventArgs, 'GridAnimationManagerAnimationCreatedEventArgs');
        return GridAnimationManagerAnimationCreatedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridAnimationManagerAnimationCompletedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridAnimationManagerAnimationCompletedEventArgs, _super);
        function GridAnimationManagerAnimationCompletedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            return _this;
        }
        GridAnimationManagerAnimationCompletedEventArgs.$t = igniteuiReactCore.markType(GridAnimationManagerAnimationCompletedEventArgs, 'GridAnimationManagerAnimationCompletedEventArgs');
        return GridAnimationManagerAnimationCompletedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridAnimationManagerAnimationCanceledEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridAnimationManagerAnimationCanceledEventArgs, _super);
        function GridAnimationManagerAnimationCanceledEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            return _this;
        }
        GridAnimationManagerAnimationCanceledEventArgs.$t = igniteuiReactCore.markType(GridAnimationManagerAnimationCanceledEventArgs, 'GridAnimationManagerAnimationCanceledEventArgs');
        return GridAnimationManagerAnimationCanceledEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnSpacer = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnSpacer, _super);
        function GridColumnSpacer() {
            var _this = _super.call(this) || this;
            _this.g = 0;
            _this.h = 0;
            _this.m = 0;
            _this.c = false;
            _this.l = 0;
            _this.b = false;
            _this.a = false;
            _this.m = GridColumnSpacer.k;
            GridColumnSpacer.k++;
            return _this;
        }
        Object.defineProperty(GridColumnSpacer.prototype, "i", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                this.g = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSpacer.prototype, "j", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSpacer.prototype, "o", {
            get: function () {
                return this.m;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSpacer.prototype, "f", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSpacer.prototype, "n", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                this.l = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSpacer.prototype, "e", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                this.b = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSpacer.prototype, "d", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                this.a = a;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnSpacer.$t = igniteuiReactCore.markType(GridColumnSpacer, 'GridColumnSpacer');
        GridColumnSpacer.k = 0;
        return GridColumnSpacer;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnSpacerCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnSpacerCollection, _super);
        function GridColumnSpacerCollection() {
            return _super.call(this, GridColumnSpacer.$, 0) || this;
        }
        GridColumnSpacerCollection.prototype.ac = function () {
            var a = this.count;
            var b = 0;
            for (var c = 0; c < a; c++) {
                b = b + this._inner[c].i;
            }
            return b;
        };
        GridColumnSpacerCollection.prototype.ag = function () {
            var a = this.count;
            var b = 0;
            for (var c = 0; c < a; c++) {
                if (this._inner[c].f) {
                    b = b + this._inner[c].i;
                }
            }
            return b;
        };
        GridColumnSpacerCollection.prototype.ae = function () {
            var a = this.count;
            var b = 0;
            for (var c = 0; c < a; c++) {
                if (!this._inner[c].f) {
                    b = b + this._inner[c].i;
                }
            }
            return b;
        };
        GridColumnSpacerCollection.prototype.ah = function () {
            var a = this.count;
            var b = 0;
            for (var c = 0; c < a; c++) {
                if (this._inner[c].i > 0) {
                    b = b + this._inner[c].j;
                }
            }
            return b;
        };
        GridColumnSpacerCollection.prototype.ad = function (a) {
            var b = this.count;
            var c = 0;
            for (var d = 0; d < b; d++) {
                if (!this._inner[d].d && !(this._inner[d].n == a)) {
                    c = c + this._inner[d].i;
                }
            }
            return c;
        };
        GridColumnSpacerCollection.prototype.af = function (a) {
            var b = this.count;
            var c = 0;
            for (var d = 0; d < b; d++) {
                if (this._inner[d].d && !(this._inner[d].n == a)) {
                    c = c + this._inner[d].i;
                }
            }
            return c;
        };
        GridColumnSpacerCollection.$t = igniteuiReactCore.markType(GridColumnSpacerCollection, 'GridColumnSpacerCollection', igniteuiReactCore.List$1.$.specialize(GridColumnSpacer.$));
        return GridColumnSpacerCollection;
    }(igniteuiReactCore.List$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CellStyleRequestedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellStyleRequestedEventArgs, _super);
        function CellStyleRequestedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._styleKey = null;
            _this._resolvedValue = null;
            _this._rowNumber = 0;
            return _this;
        }
        Object.defineProperty(CellStyleRequestedEventArgs.prototype, "styleKey", {
            get: function () {
                return this._styleKey;
            },
            set: function (a) {
                this._styleKey = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellStyleRequestedEventArgs.prototype, "resolvedValue", {
            get: function () {
                return this._resolvedValue;
            },
            set: function (a) {
                this._resolvedValue = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellStyleRequestedEventArgs.prototype, "rowNumber", {
            get: function () {
                return this._rowNumber;
            },
            set: function (a) {
                this._rowNumber = a;
            },
            enumerable: true,
            configurable: true
        });
        CellStyleRequestedEventArgs.$t = igniteuiReactCore.markType(CellStyleRequestedEventArgs, 'CellStyleRequestedEventArgs', igniteuiReactCore.EventArgs.$);
        return CellStyleRequestedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalculationParameters = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CalculationParameters, _super);
        function CalculationParameters() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.j = 0;
            _this.g = 0;
            _this.h = 0;
            _this.i = 0;
            _this.b = null;
            _this.a = null;
            _this.k = 0;
            _this.m = 0;
            _this.l = 0;
            _this.n = 0;
            _this.d = 0;
            _this.f = 0;
            _this.e = 0;
            _this.c = false;
            _this.o = null;
            return _this;
        }
        CalculationParameters.$t = igniteuiReactCore.markType(CalculationParameters, 'CalculationParameters');
        return CalculationParameters;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnPropertySetter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnPropertySetter, _super);
        function ColumnPropertySetter(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.c = null;
            _this.d = null;
            _this.b = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        var c = _rest[0];
                        var d = _rest[1];
                        var e = _rest[2];
                        _this.c = c;
                        _this.d = d;
                        _this.b = e;
                    }
                    break;
            }
            return _this;
        }
        ColumnPropertySetter.$t = igniteuiReactCore.markType(ColumnPropertySetter, 'ColumnPropertySetter');
        return ColumnPropertySetter;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnPropertySettersCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnPropertySettersCollection, _super);
        function ColumnPropertySettersCollection() {
            return _super.call(this, ColumnPropertySetter.$, 0) || this;
        }
        ColumnPropertySettersCollection.$t = igniteuiReactCore.markType(ColumnPropertySettersCollection, 'ColumnPropertySettersCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(ColumnPropertySetter.$));
        return ColumnPropertySettersCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ResponsiveStateEnteringEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsiveStateEnteringEventArgs, _super);
        function ResponsiveStateEnteringEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ResponsiveStateEnteringEventArgs.$t = igniteuiReactCore.markType(ResponsiveStateEnteringEventArgs, 'ResponsiveStateEnteringEventArgs', igniteuiReactCore.EventArgs.$);
        return ResponsiveStateEnteringEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ResponsiveStateEnteredEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsiveStateEnteredEventArgs, _super);
        function ResponsiveStateEnteredEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ResponsiveStateEnteredEventArgs.$t = igniteuiReactCore.markType(ResponsiveStateEnteredEventArgs, 'ResponsiveStateEnteredEventArgs', igniteuiReactCore.EventArgs.$);
        return ResponsiveStateEnteredEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ResponsiveStateExitedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsiveStateExitedEventArgs, _super);
        function ResponsiveStateExitedEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ResponsiveStateExitedEventArgs.$t = igniteuiReactCore.markType(ResponsiveStateExitedEventArgs, 'ResponsiveStateExitedEventArgs', igniteuiReactCore.EventArgs.$);
        return ResponsiveStateExitedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IExternalGrid_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IExternalGrid');
    /**
     * @hidden
     */
    var DefaultCellActionManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DefaultCellActionManager, _super);
        function DefaultCellActionManager(a, b) {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.a = null;
            _this.c = false;
            _this.d = false;
            _this.b = a;
            _this.a = b;
            return _this;
        }
        DefaultCellActionManager.prototype.clickExpansionIndicator = function () {
            if (this.b != null && this.a != null) {
                this.b.ru(this.a);
            }
        };
        DefaultCellActionManager.prototype.clickCell = function (a) {
            if (this.b != null && this.a != null) {
                this.b.qr(this.a, this.c, this.d, a);
            }
        };
        DefaultCellActionManager.prototype.dragStarted = function () {
            if (this.b != null && this.b.aq != null) {
                this.b.rs(this.b.aq, this.mousePosition.x, this.mousePosition.y, this.c);
                this.mouseUpCell(this.mousePosition.x, this.mousePosition.y);
            }
        };
        DefaultCellActionManager.prototype.previewPointerDownCell = function () {
            if (this.b != null && this.a != null) {
                this.b.q2(this.a);
            }
        };
        DefaultCellActionManager.prototype.previewPointerUpCell = function () {
            if (this.b != null && this.a != null) {
                this.b.q3(this.a);
            }
        };
        DefaultCellActionManager.prototype.pointerDownCell = function () {
            if (this.b != null && this.a != null) {
                this.b.q0(this.a);
            }
        };
        DefaultCellActionManager.prototype.pointerUpCell = function () {
            if (this.b != null && this.a != null) {
                this.b.q1(this.a);
            }
        };
        DefaultCellActionManager.prototype.mouseDownCell = function (a, b) {
            if (this.b != null && this.a != null) {
                this.b.qy(this.a, a, b);
            }
        };
        DefaultCellActionManager.prototype.mouseUpCell = function (a, b) {
            if (this.b != null && this.a != null) {
                this.b.qz(this.a, a, b);
            }
        };
        DefaultCellActionManager.prototype.mouseLeaveCell = function (a, b) {
            if (this.b != null && this.a != null) {
                this.b.qx(this.a, a, b);
            }
        };
        DefaultCellActionManager.prototype.mouseEnterCell = function (a, b) {
            if (this.b != null && this.a != null) {
                this.b.qw(this.a, a, b);
            }
        };
        DefaultCellActionManager.prototype.mouseIsOver = function (a, b) {
            if (this.b != null && this.a != null) {
                this.b.ry(this.a, a, b);
            }
        };
        DefaultCellActionManager.prototype.doubleClicked = function () {
            if (this.b != null && this.a != null) {
                this.b.qt(this.a);
            }
        };
        DefaultCellActionManager.prototype.getColumnFilterCondition = function () {
            if (this.b == null) {
                return null;
            }
            return this.b.o(this.a);
        };
        DefaultCellActionManager.prototype.getColumnPropertyType = function () {
            if (this.b == null) {
                return 11;
            }
            return this.b.p(this.a);
        };
        DefaultCellActionManager.prototype.columnFilterChanging = function (a) {
            if (this.b == null) {
                return;
            }
            this.b.pv(this.a, a);
        };
        DefaultCellActionManager.prototype.columnFilterChanged = function (a) {
            if (this.b == null) {
                return;
            }
            this.b.pu(this.a, a);
        };
        DefaultCellActionManager.prototype.isCellDown = function () {
            if (this.b != null && this.b.aq != null && this.a != null) {
                return this.b.aq.equals(this.a.k);
            }
            return false;
        };
        Object.defineProperty(DefaultCellActionManager.prototype, "isLeaveActionDesired", {
            get: function () {
                if (this.a.k.h) {
                    return true;
                }
                return this.b.h4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isEnterActionDesired", {
            get: function () {
                return this.b.h4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isClickActionDesired", {
            get: function () {
                return this.b.hh;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isHoverActionDesired", {
            get: function () {
                return this.b.hw;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isPreviewPointerDownActionDesired", {
            get: function () {
                return this.b.h1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isPreviewPointerUpActionDesired", {
            get: function () {
                return this.b.h2;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isPointerDownActionDesired", {
            get: function () {
                return this.b.hz;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isPointerUpActionDesired", {
            get: function () {
                return this.b.h0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isControlPressed", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isShiftPressed", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                this.d = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isDrag", {
            get: function () {
                return this.b.dragger.isDragActive;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isMouseDown", {
            get: function () {
                return this.b.aq != null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "mousePosition", {
            get: function () {
                return this.b.vo;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefaultCellActionManager.prototype, "isGridDragging", {
            get: function () {
                if (this.b != null && this.b.dragger != null) {
                    return this.b.dragger.isDragActive;
                }
                else {
                    return false;
                }
            },
            enumerable: true,
            configurable: true
        });
        DefaultCellActionManager.prototype.updateCellEditValue = function (a) {
            var b = igniteuiReactCore.typeCast(EditorCellModel.$, this.a);
            if (b != null) {
                b.le = a;
            }
        };
        DefaultCellActionManager.prototype.editorCellLostFocus = function () {
            if (this.b != null) {
                this.b.rt(igniteuiReactCore.typeCast(EditorCellModel.$, this.a));
            }
        };
        DefaultCellActionManager.prototype.cancelEditMode = function (a) {
            if (this.b != null) {
                this.b.ha(a);
            }
        };
        DefaultCellActionManager.$t = igniteuiReactCore.markType(DefaultCellActionManager, 'DefaultCellActionManager', igniteuiReactCore.Base.$, [ICellActionManager_$type]);
        return DefaultCellActionManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var IGridInfoRequestor_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IGridInfoRequestor');
    /**
     * @hidden
     */
    var DefaultGridInfoRequestor = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DefaultGridInfoRequestor, _super);
        function DefaultGridInfoRequestor(a, b) {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.a = null;
            _this.b = a;
            _this.a = b;
            return _this;
        }
        DefaultGridInfoRequestor.prototype.getColumn = function () {
            if (this.b == null) {
                return null;
            }
            return this.b.a0(this.a.k);
        };
        DefaultGridInfoRequestor.prototype.getDensity = function () {
            if (this.b == null) {
                return 3;
            }
            return this.b.fg;
        };
        DefaultGridInfoRequestor.prototype.getTheme = function () {
            if (this.b == null) {
                return 0;
            }
            return 1;
        };
        DefaultGridInfoRequestor.prototype.setViewportChangedHandler = function (a) {
            if (this.b != null && a != null) {
                var b = this.b;
                b.viewportChanged = igniteuiReactCore.delegateCombine(b.viewportChanged, a);
            }
        };
        DefaultGridInfoRequestor.prototype.removeViewportChangedHandler = function (a) {
            if (this.b != null && a != null) {
                var b = this.b;
                b.viewportChanged = igniteuiReactCore.delegateRemove(b.viewportChanged, a);
            }
        };
        DefaultGridInfoRequestor.$t = igniteuiReactCore.markType(DefaultGridInfoRequestor, 'DefaultGridInfoRequestor', igniteuiReactCore.Base.$, [IGridInfoRequestor_$type]);
        return DefaultGridInfoRequestor;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var DateTimeColumnValueFormatter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DateTimeColumnValueFormatter, _super);
        function DateTimeColumnValueFormatter() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this.b = false;
            _this.f = null;
            _this.e = null;
            _this.c = null;
            _this.d = null;
            _this.g = null;
            _this.h = null;
            return _this;
        }
        DateTimeColumnValueFormatter.prototype.k = function () {
            this.b = true;
        };
        DateTimeColumnValueFormatter.prototype.j = function (a) {
            this.a = a.kw;
            this.b = false;
        };
        DateTimeColumnValueFormatter.prototype.i = function (a) {
            if (+a == +(igniteuiReactCore.dateMinValue())) {
                return "";
            }
            var b = (Intl && Intl.DateTimeFormat);
            if (b) {
                var format_ = null;
                switch (this.a) {
                    case 4:
                        if (this.f == null) {
                            this.f = (new Intl.DateTimeFormat([], { month: 'numeric', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' }));
                        }
                        format_ = this.f;
                        break;
                    case 5:
                        if (this.e == null) {
                            this.e = (new Intl.DateTimeFormat([], { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' }));
                        }
                        format_ = this.e;
                        break;
                    case 1:
                        if (this.c == null) {
                            this.c = (new Intl.DateTimeFormat([], { weekday: 'long', month: 'long', day: 'numeric', year: 'numeric' }));
                        }
                        format_ = this.c;
                        break;
                    case 0:
                        if (this.d == null) {
                            this.d = (new Intl.DateTimeFormat([], { month: 'numeric', day: 'numeric', year: 'numeric' }));
                        }
                        format_ = this.d;
                        break;
                    case 3:
                        if (this.g == null) {
                            this.g = (new Intl.DateTimeFormat([], { hour: 'numeric', minute: 'numeric', second: 'numeric' }));
                        }
                        format_ = this.g;
                        break;
                    case 2:
                        if (this.h == null) {
                            this.h = (new Intl.DateTimeFormat([], { hour: 'numeric', minute: 'numeric' }));
                        }
                        format_ = this.h;
                        break;
                }
                var date_ = a;
                return (format_.format(date_));
            }
            else {
                var date_ = a;
                switch (this.a) {
                    case 4: return (date_.toLocaleString());
                    case 5: return (date_.toLocaleString());
                    case 1: return (date_.toLocaleDateString());
                    case 0: return (date_.toLocaleDateString());
                    case 3: return (date_.toLocaleTimeString());
                    case 2: return (date_.toLocaleTimeString());
                }
                return a.toString();
            }
        };
        DateTimeColumnValueFormatter.$t = igniteuiReactCore.markType(DateTimeColumnValueFormatter, 'DateTimeColumnValueFormatter');
        return DateTimeColumnValueFormatter;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var CellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellModel, _super);
        function CellModel() {
            var _this = _super.call(this) || this;
            _this.n = null;
            _this.r = null;
            _this.s = 0;
            _this.i0 = null;
            _this.j = null;
            _this.ej = 0;
            _this.a5 = false;
            _this.ba = false;
            _this.as = false;
            _this.aq = false;
            _this.a3 = false;
            _this.bb = false;
            _this.au = false;
            _this.a4 = false;
            _this.c = null;
            _this.d = null;
            _this.am = false;
            _this.an = false;
            _this.al = false;
            _this.c1 = 0;
            _this.bc = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Boolean_$type, 0);
            _this.cu = -1;
            _this.a = null;
            _this.be = null;
            _this.p = null;
            _this.gl = null;
            _this.bw = 0;
            _this.bx = 0;
            _this.c8 = 0;
            _this.c9 = 0;
            _this.bm = 1;
            _this.bl = 1;
            _this.bj = 1;
            _this.bq = 1;
            _this.bk = 1;
            _this.bo = 0;
            _this.bt = 0;
            _this.bp = 0;
            _this.bu = 0;
            _this.c0 = 0;
            _this.da = 0;
            _this.ao = false;
            _this.u = 0;
            _this.bs = 0;
            _this.bi = 0;
            _this.bn = 0;
            _this.e = 0;
            _this.g = 1;
            _this.jz = null;
            _this.j0 = null;
            _this.jw = null;
            _this.jx = null;
            _this.jv = null;
            _this.j2 = null;
            _this.j6 = null;
            _this.j3 = null;
            _this.j7 = null;
            _this.j8 = null;
            _this.j5 = null;
            _this.j4 = null;
            _this.br = 0.3;
            _this.gk = null;
            _this.gr = "";
            _this.j9 = null;
            _this.jy = null;
            _this.j1 = null;
            _this.ac = null;
            _this.aa = null;
            _this.y = 0;
            _this.bv = 0;
            _this.c5 = 0;
            _this.c7 = 0;
            _this.c6 = 0;
            _this.c4 = 0;
            _this.cn = 0;
            _this.cp = 0;
            _this.co = 0;
            _this.cm = 0;
            _this.cr = 0;
            _this.ct = 0;
            _this.cs = 0;
            _this.cq = 0;
            _this.cf = 1;
            _this.ch = 1;
            _this.cg = 1;
            _this.ce = 1;
            _this.cx = 2;
            _this.cz = 2;
            _this.cy = 2;
            _this.cw = 2;
            _this.cj = 0;
            _this.cl = 0;
            _this.ck = 0;
            _this.ci = 0;
            _this.l = 0;
            _this.aj = false;
            _this.ag = false;
            _this.w = 0;
            _this.ab = null;
            _this.ai = false;
            _this.ah = false;
            _this.gq = null;
            _this.a1 = false;
            _this.cv = -1;
            _this.ak = false;
            _this.gj = 0;
            _this.propertyChanged = null;
            _this.cellReconciling = null;
            _this.t = 0;
            _this.ej = -1;
            _this.jr();
            _this.ke = GridStyleRepository.aw;
            return _this;
        }
        Object.defineProperty(CellModel.prototype, "o", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                this.n = a;
            },
            enumerable: true,
            configurable: true
        });
        CellModel.ez = function (a) {
            if (CellModel.bf == null || CellModel.bf == undefined) {
                CellModel.bf = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Number_$type, 0);
            }
            if (CellModel.bf.containsKey(a)) {
                return CellModel.bf.item(a);
            }
            var b = CellModel.c3;
            CellModel.c3++;
            CellModel.c2 = b;
            CellModel.bf.item(a, b);
            return b;
        };
        Object.defineProperty(CellModel.prototype, "t", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                var b = this.s;
                this.s = a;
                if (this.s != b) {
                    this.jm("State", CellModel.f8, igniteuiReactCore.enumGetBox(ModelStates_$type, b), igniteuiReactCore.enumGetBox(ModelStates_$type, this.s));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "k", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (this.j != b) {
                    this.jm("Path", CellModel.fu, b, this.j);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "a6", {
            get: function () {
                return this.am;
            },
            set: function (a) {
                var b = this.am;
                this.am = a;
                if (this.am != b) {
                    this.jm("IsRowPinned", CellModel.fc, b, this.am);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "a7", {
            get: function () {
                return this.an;
            },
            set: function (a) {
                var b = this.an;
                this.an = a;
                if (this.an != b) {
                    this.jm("IsRowSticky", CellModel.fd, b, this.an);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "a2", {
            get: function () {
                return this.al;
            },
            set: function (a) {
                var b = this.al;
                this.al = a;
                if (this.al != b) {
                    this.jm("IsLastStickyRow", CellModel.fb, b, this.al);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "e5", {
            get: function () {
                return this.c1;
            },
            set: function (a) {
                var b = this.c1;
                this.c1 = a;
                if (this.c1 != b) {
                    this.jm("Indent", CellModel.e6, b, this.c1);
                }
            },
            enumerable: true,
            configurable: true
        });
        CellModel.prototype.at = function (a) {
            if (this.bc.containsKey(a)) {
                return this.bc.item(a);
            }
            return false;
        };
        CellModel.prototype.ax = function (propertyId_) {
            if (this.cu == -1) {
                return false;
            }
            var a = ((propertyId_ / 32) | 0);
            var b = propertyId_ % 32;
            return ((this.a[a] >> b) & 1) != 0;
        };
        CellModel.prototype.aw = function (a) {
            var b = CellModel.bf.f(a);
            if (b != undefined) {
                return this.ax(b);
            }
            if (this.at(a)) {
                return true;
            }
            return false;
        };
        CellModel.prototype.je = function (propertyId_) {
            if (this.cu == -1) {
                this.cu = igniteuiReactCore.truncate(Math.ceil(CellModel.c2 / 32));
                this.a = new Array(propertyId_);
            }
            var a = ((propertyId_ / 32) | 0);
            var b = propertyId_ % 32;
            this.a[a] = this.a[a] | (1 << b);
        };
        CellModel.prototype.jb = function () {
            for (var a = 0; a < this.cu; a++) {
                this.a[a] = 0;
            }
        };
        CellModel.prototype.jf = function (a) {
            var b = CellModel.bf.f(a);
            if (b != undefined) {
                this.je(b);
                return;
            }
            this.bc.item(a, true);
        };
        CellModel.prototype.jm = function (a, b, c, d) {
            this.je(b);
            this.jp(a, c, d);
            if (this.o != null) {
                this.o.sk();
            }
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
        };
        CellModel.prototype.jp = function (a, b, c) {
            switch (a) {
                case "State":
                    this.a5 = true;
                    this.ba = true;
                    this.as = true;
                    this.bb = true;
                    break;
                case "LeftOffset":
                case "TopOffset":
                case "LeftPercentOffset":
                case "TopPercentOffset":
                case "X":
                case "Y":
                    this.a5 = true;
                    break;
                case "Width":
                case "Height":
                    this.ba = true;
                    break;
                case "RowItem":
                    this.jn();
                    break;
                case "Background":
                case "SelectedBackground":
                case "SelectedStatus":
                case "HoverBackground":
                case "HoverStatus":
                case "IsLastStickyRow":
                case "StickyRowBackground":
                case "PinnedRowBackground":
                case "LastStickyRowBackground":
                    this.jh();
                    break;
                case "IsRowSticky":
                case "IsRowPinned":
                case "PinnedRowOpacity":
                    this.jh();
                    this.jk();
                    break;
                case "Border":
                case "ActivationBorder":
                case "ErrorBorder":
                case "BorderLeftWidth":
                case "BorderTopWidth":
                case "BorderBottomWidth":
                case "BorderRightWidth":
                case "ActivationBorderLeftWidth":
                case "ActivationBorderTopWidth":
                case "ActivationBorderBottomWidth":
                case "ActivationBorderRightWidth":
                case "ActivationStatus":
                case "EditError":
                case "ErrorBorderLeftWidth":
                case "ErrorBorderTopWidth":
                case "ErrorBorderBottomWidth":
                case "ErrorBorderRightWidth":
                    this.aq = true;
                    this.ji();
                    break;
                case "PaddingLeft":
                case "PaddingTop":
                case "PaddingBottom":
                case "PaddingRight":
                    this.ji();
                    break;
                case "Opacity":
                    this.jj();
                    break;
                case "ContentOpacity":
                case "EditOpacity":
                    this.jk();
                    break;
                case "IsEdited":
                case "IsDeleted":
                    this.jo();
                    this.jk();
                    this.jl();
                    this.as = true;
                    break;
                case "TextColor":
                case "DeletedTextColor":
                    this.jo();
                    break;
                case "FontInfo":
                case "EditFontInfo":
                    this.jl();
                    break;
                case "Path": break;
                default:
                    this.as = true;
                    break;
            }
        };
        CellModel.prototype.jn = function () {
        };
        CellModel.prototype.jh = function () {
            var a = this.ke;
            if (this.a2 && this.kk != null) {
                a = this.kk;
            }
            else if (this.a7 && this.ko != null) {
                a = this.ko;
            }
            else if (this.a6 && this.kl != null) {
                a = this.kl;
            }
            if (this.kj != null) {
                a = this.ki(a, this.kj, this.b3);
            }
            this.kb = this.ki(a, this.km, this.b8);
        };
        CellModel.prototype.ji = function () {
            var a = false;
            if (this.by != 0 && this.ka != null) {
                a = true;
            }
            if (this.hl != null) {
                var b = this.er - this.eb;
                var c = this.ew - this.eg;
                var d = this.eu - this.ee;
                var e = this.ep - this.d9;
                this.d1 = Math.max(0, this.fo - b);
                this.d5 = Math.max(0, this.fs - c);
                this.d3 = Math.max(0, this.fq - d);
                this.dz = Math.max(0, this.fm - e);
                this.dp = Math.max(0, this.eb + b);
                this.du = Math.max(0, this.eg + c);
                this.ds = Math.max(0, this.ee + d);
                this.dm = Math.max(0, this.d9 + e);
                this.kc = this.kh;
            }
            else {
                if (a && (this.eb == 0 || this.eg == 0 || this.ee == 0 || this.d9 == 0)) {
                    var f = this.dd - this.eb;
                    var g = this.di - this.eg;
                    var h = this.dg - this.ee;
                    var i = this.db - this.d9;
                    this.d1 = Math.max(0, this.fo - f);
                    this.d5 = Math.max(0, this.fs - g);
                    this.d3 = Math.max(0, this.fq - h);
                    this.dz = Math.max(0, this.fm - i);
                    this.dp = Math.max(0, this.eb + f);
                    this.du = Math.max(0, this.eg + g);
                    this.ds = Math.max(0, this.ee + h);
                    this.dm = Math.max(0, this.d9 + i);
                }
                else {
                    this.d1 = this.fo;
                    this.d5 = this.fs;
                    this.d3 = this.fq;
                    this.dz = this.fm;
                    this.dp = this.eb;
                    this.du = this.eg;
                    this.ds = this.ee;
                    this.dm = this.d9;
                }
                var j = this.kf;
                this.kc = this.ki(j, this.ka, this.by);
            }
        };
        CellModel.prototype.jj = function () {
            this.b0 = this.b6;
        };
        CellModel.prototype.jk = function () {
            if (this.ay && !this.av) {
                this.bz = this.b2;
            }
            else if (this.a6 && !this.a7) {
                this.bz = this.b7;
            }
            else {
                this.bz = this.b1;
            }
        };
        CellModel.prototype.jo = function () {
            if (this.av) {
                this.kd = this.kg;
            }
            else {
                this.kd = this.kp;
            }
        };
        CellModel.prototype.jl = function () {
            if (this.ay || this.av) {
                this.ad = this.ae;
            }
            else {
                this.ad = this.af;
            }
        };
        CellModel.prototype.ki = function (a, b, c) {
            if (c == 0) {
                return a;
            }
            if (c == 1) {
                return b;
            }
            return igniteuiReactCore.BrushUtil.k(a, c, b, 0);
        };
        CellModel.prototype.jr = function () {
            this.js();
        };
        CellModel.prototype.js = function () {
            this.jb();
            if (this.be != null) {
                this.be.clear();
            }
            this.b8 = 0;
            this.as = true;
            this.a5 = true;
            this.ba = true;
            this.a3 = false;
        };
        CellModel.prototype.jt = function (a, b) {
            if (this.be == null) {
                this.be = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Base.$, 0);
            }
            var c = null;
            if (this.be.containsKey(a)) {
                c = this.be.item(a);
            }
            this.be.item(a, b);
            var d = false;
            if (c == null && b != null) {
                d = true;
            }
            if (c != null) {
                if (!igniteuiReactCore.Base.equalsStatic(c, b)) {
                    d = true;
                }
            }
            if (d) {
                this.jf(a);
                this.as = true;
                if (this.o != null) {
                    this.o.sk();
                }
            }
        };
        CellModel.prototype.ap = function (a) {
            if (this.be == null) {
                return false;
            }
            return this.be.containsKey(a);
        };
        CellModel.prototype.jq = function (a) {
            if (this.be == null) {
                return;
            }
            if (this.be.containsKey(a)) {
                this.be.removeItem(a);
            }
        };
        CellModel.prototype.gm = function (a) {
            if (this.be == null) {
                return null;
            }
            if (this.be.containsKey(a)) {
                return this.be.item(a);
            }
            return null;
        };
        Object.defineProperty(CellModel.prototype, "q", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                var b = this.p;
                this.p = a;
                if (this.p != b) {
                    this.a3 = true;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "gp", {
            get: function () {
                return this.gl;
            },
            set: function (a) {
                var b = this.gl;
                this.gl = a;
                if (this.gl != b) {
                    this.jm("RowItem", CellModel.fz, b, this.gl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "cc", {
            get: function () {
                return this.bw;
            },
            set: function (a) {
                var b = this.bw;
                this.bw = a;
                if (this.bw != b) {
                    this.jm("X", CellModel.gh, b, this.bw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "cd", {
            get: function () {
                return this.bx;
            },
            set: function (a) {
                var b = this.bx;
                this.bx = a;
                if (this.bx != b) {
                    this.jm("Y", CellModel.gi, b, this.bx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "f2", {
            get: function () {
                return this.c8;
            },
            set: function (a) {
                var b = this.c8;
                this.c8 = a;
                if (this.c8 != b) {
                    this.jm("SnappedX", CellModel.f3, b, this.c8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "f4", {
            get: function () {
                return this.c9;
            },
            set: function (a) {
                var b = this.c9;
                this.c9 = a;
                if (this.c9 != b) {
                    this.jm("SnappedY", CellModel.f5, b, this.c9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b2", {
            get: function () {
                return this.bm;
            },
            set: function (a) {
                var b = this.bm;
                this.bm = a;
                if (this.bm != b) {
                    this.jm("EditOpacity", CellModel.eo, b, this.bm);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b1", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (this.bl != b) {
                    this.jm("ContentOpacity", CellModel.ei, b, this.bl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "bz", {
            get: function () {
                return this.bj;
            },
            set: function (a) {
                var b = this.bj;
                this.bj = a;
                if (this.bj != b) {
                    this.jm("ActualContentOpacity", CellModel.dw, b, this.bj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b6", {
            get: function () {
                return this.bq;
            },
            set: function (a) {
                var b = this.bq;
                this.bq = a;
                if (this.bq != b) {
                    this.jm("Opacity", CellModel.fk, b, this.bq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b0", {
            get: function () {
                return this.bk;
            },
            set: function (a) {
                var b = this.bk;
                this.bk = a;
                if (this.bk != b) {
                    this.jm("ActualOpacity", CellModel.dy, b, this.bk);
                }
            },
            enumerable: true,
            configurable: true
        });
        CellModel.prototype.jg = function () {
            if (this.cellReconciling != null) {
                this.cellReconciling(this);
            }
        };
        Object.defineProperty(CellModel.prototype, "b4", {
            get: function () {
                return this.bo;
            },
            set: function (a) {
                var b = this.bo;
                this.bo = a;
                if (this.bo != b) {
                    this.jm("LeftOffset", CellModel.fg, b, this.bo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b9", {
            get: function () {
                return this.bt;
            },
            set: function (a) {
                var b = this.bt;
                this.bt = a;
                if (this.bt != b) {
                    this.jm("TopOffset", CellModel.gb, b, this.bt);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b5", {
            get: function () {
                return this.bp;
            },
            set: function (a) {
                var b = this.bp;
                this.bp = a;
                if (this.bp != b) {
                    this.jm("LeftPercentOffset", CellModel.fh, b, this.bp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ca", {
            get: function () {
                return this.bu;
            },
            set: function (a) {
                var b = this.bu;
                this.bu = a;
                if (this.bu != b) {
                    this.jm("TopPercentOffset", CellModel.gc, b, this.bu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "e0", {
            get: function () {
                return this.c0;
            },
            set: function (a) {
                var b = this.c0;
                this.c0 = a;
                if (this.c0 != b) {
                    this.jm("Height", CellModel.e1, b, this.c0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "gf", {
            get: function () {
                return this.da;
            },
            set: function (a) {
                var b = this.da;
                this.da = a;
                if (this.da != b) {
                    this.jm("Width", CellModel.gg, b, this.da);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "a9", {
            get: function () {
                return this.ao;
            },
            set: function (a) {
                var b = this.ao;
                this.ao = a;
                if (this.ao != b) {
                    this.jm("IsSelected", CellModel.fe, b, this.ao);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "v", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (this.u != b) {
                    this.jm("ModelType", CellModel.fj, igniteuiReactCore.enumGetBox(ModelTypes_$type, b), igniteuiReactCore.enumGetBox(ModelTypes_$type, this.u));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b8", {
            get: function () {
                return this.bs;
            },
            set: function (a) {
                var b = this.bs;
                this.bs = a;
                if (this.bs != b) {
                    this.jm("SelectedStatus", CellModel.f1, b, this.bs);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "by", {
            get: function () {
                return this.bi;
            },
            set: function (a) {
                var b = this.bi;
                this.bi = a;
                if (this.bi != b) {
                    this.jm("ActivationStatus", CellModel.dk, b, this.bi);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b3", {
            get: function () {
                return this.bn;
            },
            set: function (a) {
                var b = this.bn;
                this.bn = a;
                if (this.bn != b) {
                    this.jm("HoverStatus", CellModel.e4, b, this.bn);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "f", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                if (this.e != b) {
                    this.jm("HorizontalAlignment", CellModel.e2, igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.e));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "h", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (this.g != b) {
                    this.jm("VerticalAlignment", CellModel.gd, igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.e));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ke", {
            get: function () {
                return this.jz;
            },
            set: function (a) {
                var b = this.jz;
                this.jz = a;
                if (this.jz != b) {
                    this.jm("Background", CellModel.d8, b, this.jz);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kf", {
            get: function () {
                return this.j0;
            },
            set: function (a) {
                var b = this.j0;
                this.j0 = a;
                if (this.j0 != b) {
                    this.jm("Border", CellModel.ed, b, this.j0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kb", {
            get: function () {
                return this.jw;
            },
            set: function (a) {
                var b = this.jw;
                this.jw = a;
                if (this.jw != b) {
                    this.jm("ActualBackground", CellModel.dl, b, this.jw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kc", {
            get: function () {
                return this.jx;
            },
            set: function (a) {
                var b = this.jx;
                this.jx = a;
                if (this.jx != b) {
                    this.jm("ActualBorder", CellModel.dr, b, this.jx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ka", {
            get: function () {
                return this.jv;
            },
            set: function (a) {
                var b = this.jv;
                this.jv = a;
                if (this.jv != b) {
                    this.jm("ActivationBorder", CellModel.df, b, this.jv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kh", {
            get: function () {
                return this.j2;
            },
            set: function (a) {
                var b = this.j2;
                this.j2 = a;
                if (this.j2 != b) {
                    this.jm("ErrorBorder", CellModel.et, b, this.j2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "km", {
            get: function () {
                return this.j6;
            },
            set: function (a) {
                var b = this.j6;
                this.j6 = a;
                if (this.j6 != b) {
                    this.jm("SelectedBackground", CellModel.f0, b, this.j6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kj", {
            get: function () {
                return this.j3;
            },
            set: function (a) {
                var b = this.j3;
                this.j3 = a;
                if (this.j3 != b) {
                    this.jm("HoverBackground", CellModel.e3, b, this.j3);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kn", {
            get: function () {
                return this.j7;
            },
            set: function (a) {
                var b = this.j7;
                this.j7 = a;
                if (this.j7 != b) {
                    this.jm("SortIndicatorColor", CellModel.f7, b, this.j7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ko", {
            get: function () {
                return this.j8;
            },
            set: function (a) {
                var b = this.j8;
                this.j8 = a;
                if (this.j8 != b) {
                    this.jm("StickyRowBackground", CellModel.f9, b, this.j8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kl", {
            get: function () {
                return this.j5;
            },
            set: function (a) {
                var b = this.j5;
                this.j5 = a;
                if (this.j5 != b) {
                    this.jm("PinnedRowBackground", CellModel.fw, b, this.j5);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kk", {
            get: function () {
                return this.j4;
            },
            set: function (a) {
                var b = this.j4;
                this.j4 = a;
                if (this.j4 != b) {
                    this.jm("LastStickyRowBackground", CellModel.ff, b, this.j4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "b7", {
            get: function () {
                return this.br;
            },
            set: function (a) {
                var b = this.br;
                this.br = a;
                if (this.br != b) {
                    this.jm("PinnedRowOpacity", CellModel.fx, b, this.br);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "go", {
            get: function () {
                return this.gk;
            },
            set: function (a) {
                var b = this.gk;
                this.gk = a;
                if (this.gk != b) {
                    this.jm("OriginalValue", CellModel.fl, b, this.gk);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ip", {
            get: function () {
                return this.gr;
            },
            set: function (a) {
                var b = this.gr;
                this.gr = a;
                if (this.gr != b) {
                    this.jm("RenderValue", CellModel.fy, b, this.gr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kp", {
            get: function () {
                return this.j9;
            },
            set: function (a) {
                var b = this.j9;
                this.j9 = a;
                if (this.j9 != b) {
                    this.jm("TextColor", CellModel.ga, b, this.j9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kd", {
            get: function () {
                return this.jy;
            },
            set: function (a) {
                var b = this.jy;
                this.jy = a;
                if (this.jy != b) {
                    this.jm("ActualTextColor", CellModel.d7, b, this.jy);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "kg", {
            get: function () {
                return this.j1;
            },
            set: function (a) {
                var b = this.j1;
                this.j1 = a;
                if (this.j1 != b) {
                    this.jm("DeletedTextColor", CellModel.ek, b, this.j1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "af", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (this.ac != b) {
                    this.jm("FontInfo", CellModel.ey, b, this.ac);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ad", {
            get: function () {
                return this.aa;
            },
            set: function (a) {
                var b = this.aa;
                this.aa = a;
                if (this.aa != b) {
                    this.jm("ActualFontInfo", CellModel.dx, b, this.aa);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "z", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                var b = this.y;
                this.y = a;
                if (this.y != b) {
                    this.jm("LineBreakMode", CellModel.fi, igniteuiReactCore.enumGetBox(TextCellLineBreakMode_$type, b), igniteuiReactCore.enumGetBox(TextCellLineBreakMode_$type, this.y));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "cb", {
            get: function () {
                return this.bv;
            },
            set: function (a) {
                var b = this.bv;
                this.bv = a;
                if (this.bv != b) {
                    this.jm("VirtualizationPercentage", CellModel.ge, b, this.bv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "fo", {
            get: function () {
                return this.c5;
            },
            set: function (a) {
                var b = this.c5;
                this.c5 = a;
                if (this.c5 != b) {
                    this.jm("PaddingLeft", CellModel.fp, b, this.c5);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "fs", {
            get: function () {
                return this.c7;
            },
            set: function (a) {
                var b = this.c7;
                this.c7 = a;
                if (this.c7 != b) {
                    this.jm("PaddingTop", CellModel.ft, b, this.c7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "fq", {
            get: function () {
                return this.c6;
            },
            set: function (a) {
                var b = this.c6;
                this.c6 = a;
                if (this.c6 != b) {
                    this.jm("PaddingRight", CellModel.fr, b, this.c6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "fm", {
            get: function () {
                return this.c4;
            },
            set: function (a) {
                var b = this.c4;
                this.c4 = a;
                if (this.c4 != b) {
                    this.jm("PaddingBottom", CellModel.fn, b, this.c4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "d1", {
            get: function () {
                return this.cn;
            },
            set: function (a) {
                var b = this.cn;
                this.cn = a;
                if (this.cn != b) {
                    this.jm("ActualPaddingLeft", CellModel.d2, b, this.cn);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "d5", {
            get: function () {
                return this.cp;
            },
            set: function (a) {
                var b = this.cp;
                this.cp = a;
                if (this.cp != b) {
                    this.jm("ActualPaddingTop", CellModel.d6, b, this.cp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "d3", {
            get: function () {
                return this.co;
            },
            set: function (a) {
                var b = this.co;
                this.co = a;
                if (this.co != b) {
                    this.jm("ActualPaddingRight", CellModel.d4, b, this.co);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "dz", {
            get: function () {
                return this.cm;
            },
            set: function (a) {
                var b = this.cm;
                this.cm = a;
                if (this.cm != b) {
                    this.jm("ActualPaddingBottom", CellModel.d0, b, this.cm);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "eb", {
            get: function () {
                return this.cr;
            },
            set: function (a) {
                var b = this.cr;
                this.cr = a;
                if (this.cr != b) {
                    this.jm("BorderLeftWidth", CellModel.ec, b, this.cr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "eg", {
            get: function () {
                return this.ct;
            },
            set: function (a) {
                var b = this.ct;
                this.ct = a;
                if (this.ct != b) {
                    this.jm("BorderTopWidth", CellModel.eh, b, this.ct);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ee", {
            get: function () {
                return this.cs;
            },
            set: function (a) {
                var b = this.cs;
                this.cs = a;
                if (this.cs != b) {
                    this.jm("BorderRightWidth", CellModel.ef, b, this.cs);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "d9", {
            get: function () {
                return this.cq;
            },
            set: function (a) {
                var b = this.cq;
                this.cq = a;
                if (this.cq != b) {
                    this.jm("BorderBottomWidth", CellModel.ea, b, this.cq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "dd", {
            get: function () {
                return this.cf;
            },
            set: function (a) {
                var b = this.cf;
                this.cf = a;
                if (this.cf != b) {
                    this.jm("ActivationBorderLeftWidth", CellModel.de, b, this.cf);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "di", {
            get: function () {
                return this.ch;
            },
            set: function (a) {
                var b = this.ch;
                this.ch = a;
                if (this.ch != b) {
                    this.jm("ActivationBorderTopWidth", CellModel.dj, b, this.ch);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "dg", {
            get: function () {
                return this.cg;
            },
            set: function (a) {
                var b = this.cg;
                this.cg = a;
                if (this.cg != b) {
                    this.jm("ActivationBorderRightWidth", CellModel.dh, b, this.cg);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "db", {
            get: function () {
                return this.ce;
            },
            set: function (a) {
                var b = this.ce;
                this.ce = a;
                if (this.ce != b) {
                    this.jm("ActivationBorderBottomWidth", CellModel.dc, b, this.ce);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "er", {
            get: function () {
                return this.cx;
            },
            set: function (a) {
                var b = this.cx;
                this.cx = a;
                if (this.cx != b) {
                    this.jm("ErrorBorderLeftWidth", CellModel.es, b, this.cx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ew", {
            get: function () {
                return this.cz;
            },
            set: function (a) {
                var b = this.cz;
                this.cz = a;
                if (this.cz != b) {
                    this.jm("ErrorBorderTopWidth", CellModel.ex, b, this.cz);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "eu", {
            get: function () {
                return this.cy;
            },
            set: function (a) {
                var b = this.cy;
                this.cy = a;
                if (this.cy != b) {
                    this.jm("ErrorBorderRightWidth", CellModel.ev, b, this.cy);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ep", {
            get: function () {
                return this.cw;
            },
            set: function (a) {
                var b = this.cw;
                this.cw = a;
                if (this.cw != b) {
                    this.jm("ErrorBorderBottomWidth", CellModel.eq, b, this.cw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "dp", {
            get: function () {
                return this.cj;
            },
            set: function (a) {
                var b = this.cj;
                this.cj = a;
                if (this.cj != b) {
                    this.jm("ActualBorderLeftWidth", CellModel.dq, b, this.cj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "du", {
            get: function () {
                return this.cl;
            },
            set: function (a) {
                var b = this.cl;
                this.cl = a;
                if (this.cl != b) {
                    this.jm("ActualBorderTopWidth", CellModel.dv, b, this.cl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ds", {
            get: function () {
                return this.ck;
            },
            set: function (a) {
                var b = this.ck;
                this.ck = a;
                if (this.ck != b) {
                    this.jm("ActualBorderRightWidth", CellModel.dt, b, this.ck);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "dm", {
            get: function () {
                return this.ci;
            },
            set: function (a) {
                var b = this.ci;
                this.ci = a;
                if (this.ci != b) {
                    this.jm("ActualBorderBottomWidth", CellModel.dn, b, this.ci);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "m", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                if (this.l != b) {
                    this.jm("SortDirection", CellModel.f6, igniteuiReactCore.enumGetBox(ColumnSortDirection_$type, b), igniteuiReactCore.enumGetBox(ColumnSortDirection_$type, this.l));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "az", {
            get: function () {
                return this.aj;
            },
            set: function (a) {
                var b = this.aj;
                this.aj = a;
                if (this.aj != b) {
                    this.jm("IsExpanded", CellModel.fa, b, this.aj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ar", {
            get: function () {
                return this.ag;
            },
            set: function (a) {
                var b = this.ag;
                this.ag = a;
                if (this.ag != b) {
                    this.jm("IsCollapsable", CellModel.e7, b, this.ag);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "x", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (this.w != b) {
                    this.jm("Pinned", CellModel.fv, igniteuiReactCore.enumGetBox(PinnedPositions_$type, b), igniteuiReactCore.enumGetBox(PinnedPositions_$type, this.w));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ae", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                var b = this.ab;
                this.ab = a;
                if (this.ab != b) {
                    this.jm("EditFontInfo", CellModel.em, b, this.ab);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "ay", {
            get: function () {
                return this.ai;
            },
            set: function (a) {
                var b = this.ai;
                this.ai = a;
                if (this.ai != b) {
                    this.jm("IsEdited", CellModel.e9, b, this.ai);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "av", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (this.ah != b) {
                    this.jm("IsDeleted", CellModel.e8, b, this.ah);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "hl", {
            get: function () {
                return this.gq;
            },
            set: function (a) {
                var b = this.gq;
                this.gq = a;
                if (this.gq != b) {
                    this.jm("EditError", CellModel.el, b, this.gq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "en", {
            get: function () {
                return this.cv;
            },
            set: function (a) {
                this.cv = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellModel.prototype, "a0", {
            get: function () {
                return this.ak;
            },
            set: function (a) {
                this.ak = a;
            },
            enumerable: true,
            configurable: true
        });
        CellModel.prototype.i9 = function () {
            this.ja();
        };
        CellModel.prototype.ja = function () {
            this.a5 = false;
            this.ba = false;
            this.as = false;
            this.aq = false;
            this.a3 = false;
            this.bb = false;
            this.au = false;
            this.jb();
        };
        CellModel.prototype.b = function (a) {
            if (a == null) {
                a = new CellModelExport();
            }
            a.r = this.cc;
            a.s = this.cd;
            a.n = this.f2;
            a.o = this.f4;
            a.k = this.e0;
            a.q = this.gf;
            a.m = this.b8;
            a.h = this.by;
            a.z = igniteuiReactCore.EnumUtil.getName(TextCellLineBreakMode_$type, this.z);
            a.a = igniteuiReactCore.AppearanceHelper.a(this.kb);
            a.b = igniteuiReactCore.AppearanceHelper.a(this.kc);
            a.l = this.b0;
            a.i = this.bz;
            a.t = this.e5;
            a.g = this.ar;
            a.d = this.f;
            a.e = this.h;
            a.aa = this.ip;
            a.p = this.cb;
            a.f = this.m;
            a.c = igniteuiReactCore.AppearanceHelper.a(this.kd);
            if (this.ad != null) {
                var b = this.ad;
                if (this.o != null && b.n == null) {
                    var c = this.o.externalGrid.renderer;
                    var d = igniteuiReactCore.FontUtil.getFontInfoFromString(c, b.fontString);
                    b.n = d.n;
                    b.d = d.d;
                    b.o = d.o;
                    b.q = d.q;
                    b.r = d.r;
                    b.s = d.s;
                }
                if (b.n != null) {
                    a.u = b.n;
                }
                if (!igniteuiReactCore.isNaN_(b.d)) {
                    a.j = b.d;
                }
                if (b.s != null) {
                    a.y = b.s;
                }
                if (b.q != null) {
                    a.w = b.q;
                }
                if (b.o != null) {
                    a.v = b.q;
                }
            }
            return a;
        };
        CellModel.prototype.jd = function () {
            if (CellModel.bg == null) {
                CellModel.bg = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Delegate_$type, 0);
                CellModel.bg.addItem("X", function (a, b) { return a.cc = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("Y", function (a, b) { return a.cd = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("SnappedX", function (a, b) { return a.f2 = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("SnappedY", function (a, b) { return a.f4 = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ContentOpacity", function (a, b) { return a.b1 = b; });
                CellModel.bg.addItem("Opacity", function (a, b) { return a.b6 = b; });
                CellModel.bg.addItem("LeftOffset", function (a, b) { return a.b4 = b; });
                CellModel.bg.addItem("LeftPercentOffset", function (a, b) { return a.b5 = b; });
                CellModel.bg.addItem("TopOffset", function (a, b) { return a.b9 = b; });
                CellModel.bg.addItem("TopPercentOffset", function (a, b) { return a.ca = b; });
                CellModel.bg.addItem("Height", function (a, b) { return a.e0 = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("Width", function (a, b) { return a.gf = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("IsSelected", function (a, b) { return a.a9 = b; });
                CellModel.bg.addItem("ModelType", function (a, b) { return a.v = igniteuiReactCore.EnumUtil.getEnumValue(ModelTypes_$type, b); });
                CellModel.bg.addItem("SelectedStatus", function (a, b) { return a.b8 = b; });
                CellModel.bg.addItem("ActivationStatus", function (a, b) { return a.by = b; });
                CellModel.bg.addItem("HoverStatus", function (a, b) { return a.b3 = b; });
                CellModel.bg.addItem("HorizontalAlignment", function (a, b) { return a.f = igniteuiReactCore.EnumUtil.getEnumValue(CellContentHorizontalAlignment_$type, b); });
                CellModel.bg.addItem("VerticalAlignment", function (a, b) { return a.h = igniteuiReactCore.EnumUtil.getEnumValue(CellContentVerticalAlignment_$type, b); });
                CellModel.bg.addItem("Background", function (a, b) { return a.ke = b; });
                CellModel.bg.addItem("Border", function (a, b) { return a.kf = b; });
                CellModel.bg.addItem("ActivationBorder", function (a, b) { return a.ka = b; });
                CellModel.bg.addItem("SelectedBackground", function (a, b) { return a.km = b; });
                CellModel.bg.addItem("HoverBackground", function (a, b) { return a.kj = b; });
                CellModel.bg.addItem("RenderValue", function (a, b) { return a.ip = b; });
                CellModel.bg.addItem("OriginalValue", function (a, b) { return a.go = b; });
                CellModel.bg.addItem("TextColor", function (a, b) { return a.kp = b; });
                CellModel.bg.addItem("SortIndicatorColor", function (a, b) { return a.kn = b; });
                CellModel.bg.addItem("FontInfo", function (a, b) { return a.af = b; });
                CellModel.bg.addItem("LineBreakMode", function (a, b) { return a.z = igniteuiReactCore.EnumUtil.getEnumValue(TextCellLineBreakMode_$type, b); });
                CellModel.bg.addItem("VirtualizationPercentage", function (a, b) { return a.cb = b; });
                CellModel.bg.addItem("PaddingLeft", function (a, b) { return a.fo = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("PaddingTop", function (a, b) { return a.fs = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("PaddingRight", function (a, b) { return a.fq = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("PaddingBottom", function (a, b) { return a.fm = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("BorderLeftWidth", function (a, b) { return a.eb = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("BorderTopWidth", function (a, b) { return a.eg = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("BorderRightWidth", function (a, b) { return a.ee = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("BorderBottomWidth", function (a, b) { return a.d9 = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ActivationBorderLeftWidth", function (a, b) { return a.dd = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ActivationBorderTopWidth", function (a, b) { return a.di = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ActivationBorderRightWidth", function (a, b) { return a.dg = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ActivationBorderBottomWidth", function (a, b) { return a.db = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("SortDirection", function (a, b) { return a.m = igniteuiReactCore.EnumUtil.getEnumValue(ColumnSortDirection_$type, b); });
                CellModel.bg.addItem("PinnedRowBackground", function (a, b) { return a.kl = b; });
                CellModel.bg.addItem("StickyRowBackground", function (a, b) { return a.ko = b; });
                CellModel.bg.addItem("LastStickyRowBackground", function (a, b) { return a.kk = b; });
                CellModel.bg.addItem("PinnedRowOpacity", function (a, b) { return a.b7 = b; });
                CellModel.bg.addItem("Pinned", function (a, b) { return a.x = igniteuiReactCore.EnumUtil.getEnumValue(PinnedPositions_$type, b); });
                CellModel.bg.addItem("IsEdited", function (a, b) { return a.ay = b; });
                CellModel.bg.addItem("IsDeleted", function (a, b) { return a.av = b; });
                CellModel.bg.addItem("DeletedTextColor", function (a, b) { return a.kg = b; });
                CellModel.bg.addItem("EditOpacity", function (a, b) { return a.b2 = b; });
                CellModel.bg.addItem("EditFontInfo", function (a, b) { return a.ae = b; });
                CellModel.bg.addItem("ErrorBorder", function (a, b) { return a.kh = b; });
                CellModel.bg.addItem("ErrorBorderLeftWidth", function (a, b) { return a.er = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ErrorBorderTopWidth", function (a, b) { return a.ew = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ErrorBorderBottomWidth", function (a, b) { return a.ep = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("ErrorBorderRightWidth", function (a, b) { return a.eu = igniteuiReactCore.typeGetValue(b); });
                CellModel.bg.addItem("EditError", function (a, b) { return a.hl = b; });
            }
        };
        CellModel.prototype.jc = function () {
            if (CellModel.bd == null) {
                CellModel.bd = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Delegate_$type, 0);
                CellModel.bd.addItem("X", function (a) { return a.cc; });
                CellModel.bd.addItem("Y", function (a) { return a.cd; });
                CellModel.bd.addItem("SnappedX", function (a) { return a.f2; });
                CellModel.bd.addItem("SnappedY", function (a) { return a.f4; });
                CellModel.bd.addItem("ContentOpacity", function (a) { return a.b1; });
                CellModel.bd.addItem("Opacity", function (a) { return a.b6; });
                CellModel.bd.addItem("LeftOffset", function (a) { return a.b4; });
                CellModel.bd.addItem("LeftPercentOffset", function (a) { return a.b5; });
                CellModel.bd.addItem("TopOffset", function (a) { return a.b9; });
                CellModel.bd.addItem("TopPercentOffset", function (a) { return a.ca; });
                CellModel.bd.addItem("Height", function (a) { return a.e0; });
                CellModel.bd.addItem("Width", function (a) { return a.gf; });
                CellModel.bd.addItem("IsSelected", function (a) { return a.a9; });
                CellModel.bd.addItem("ModelType", function (a) { return igniteuiReactCore.enumGetBox(ModelTypes_$type, a.v); });
                CellModel.bd.addItem("SelectedStatus", function (a) { return a.b8; });
                CellModel.bd.addItem("ActivationStatus", function (a) { return a.by; });
                CellModel.bd.addItem("HorizontalAlignment", function (a) { return igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, a.f); });
                CellModel.bd.addItem("VerticalAlignment", function (a) { return igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, a.h); });
                CellModel.bd.addItem("Background", function (a) { return a.ke; });
                CellModel.bd.addItem("Border", function (a) { return a.kf; });
                CellModel.bd.addItem("ActivationBorder", function (a) { return a.ka; });
                CellModel.bd.addItem("SelectedBackground", function (a) { return a.km; });
                CellModel.bd.addItem("HoverBackground", function (a) { return a.kj; });
                CellModel.bd.addItem("RenderValue", function (a) { return a.ip; });
                CellModel.bd.addItem("OriginalValue", function (a) { return a.go; });
                CellModel.bd.addItem("TextColor", function (a) { return a.kp; });
                CellModel.bd.addItem("SortIndicatorColor", function (a) { return a.kn; });
                CellModel.bd.addItem("FontInfo", function (a) { return a.af; });
                CellModel.bd.addItem("LineBreakMode", function (a) { return igniteuiReactCore.enumGetBox(TextCellLineBreakMode_$type, a.z); });
                CellModel.bd.addItem("VirtualizationPercentage", function (a) { return a.cb; });
                CellModel.bd.addItem("PaddingLeft", function (a) { return a.fo; });
                CellModel.bd.addItem("PaddingTop", function (a) { return a.fs; });
                CellModel.bd.addItem("PaddingRight", function (a) { return a.fq; });
                CellModel.bd.addItem("PaddingBottom", function (a) { return a.fm; });
                CellModel.bd.addItem("BorderLeftWidth", function (a) { return a.eb; });
                CellModel.bd.addItem("BorderTopWidth", function (a) { return a.eg; });
                CellModel.bd.addItem("BorderRightWidth", function (a) { return a.ee; });
                CellModel.bd.addItem("BorderBottomWidth", function (a) { return a.d9; });
                CellModel.bd.addItem("ActivationBorderLeftWidth", function (a) { return a.dd; });
                CellModel.bd.addItem("ActivationBorderTopWidth", function (a) { return a.di; });
                CellModel.bd.addItem("ActivationBorderRightWidth", function (a) { return a.dg; });
                CellModel.bd.addItem("ActivationBorderBottomWidth", function (a) { return a.db; });
                CellModel.bd.addItem("SortDirection", function (a) { return igniteuiReactCore.enumGetBox(ColumnSortDirection_$type, a.m); });
                CellModel.bd.addItem("PinnedRowBackground", function (a) { return a.kl; });
                CellModel.bd.addItem("StickyRowBackground", function (a) { return a.ko; });
                CellModel.bd.addItem("LastStickyRowBackground", function (a) { return a.kk; });
                CellModel.bd.addItem("PinnedRowOpacity", function (a) { return a.b7; });
                CellModel.bd.addItem("Pinned", function (a) { return igniteuiReactCore.enumGetBox(PinnedPositions_$type, a.x); });
                CellModel.bd.addItem("IsEdited", function (a) { return a.ay; });
                CellModel.bd.addItem("IsDeleted", function (a) { return a.av; });
                CellModel.bd.addItem("DeletedTextColor", function (a) { return a.kg; });
                CellModel.bd.addItem("EditOpacity", function (a) { return a.b2; });
                CellModel.bd.addItem("EditFontInfo", function (a) { return a.ae; });
                CellModel.bd.addItem("ErrorBorder", function (a) { return a.kh; });
                CellModel.bd.addItem("ErrorBorderLeftWidth", function (a) { return a.er; });
                CellModel.bd.addItem("ErrorBorderTopWidth", function (a) { return a.ew; });
                CellModel.bd.addItem("ErrorBorderBottomWidth", function (a) { return a.ep; });
                CellModel.bd.addItem("ErrorBorderRightWidth", function (a) { return a.eu; });
                CellModel.bd.addItem("EditError", function (a) { return a.hl; });
            }
        };
        CellModel.prototype.ju = function (a, b) {
            this.jd();
            if (CellModel.bg.containsKey(a)) {
                CellModel.bg.item(a)(this, b);
            }
            else {
                this.jt(a, b);
            }
        };
        CellModel.prototype.gn = function (a) {
            this.jc();
            if (CellModel.bd.containsKey(a)) {
                return CellModel.bd.item(a)(this);
            }
            if (this.ap(a)) {
                return this.gm(a);
            }
            return null;
        };
        CellModel.prototype.a8 = function (a) {
            return (a != 1 || (a == 1 && this.n.dy == 1)) && a != 2 && a != 4 && a != 5;
        };
        CellModel.$t = igniteuiReactCore.markType(CellModel, 'CellModel');
        CellModel.c3 = 0;
        CellModel.c2 = 0;
        CellModel.bf = null;
        CellModel.f8 = CellModel.ez("State");
        CellModel.fu = CellModel.ez("Path");
        CellModel.fc = CellModel.ez("IsRowPinned");
        CellModel.fd = CellModel.ez("IsRowSticky");
        CellModel.fb = CellModel.ez("IsLastStickyRow");
        CellModel.e6 = CellModel.ez("Indent");
        CellModel.fz = CellModel.ez("RowItem");
        CellModel.gh = CellModel.ez("X");
        CellModel.gi = CellModel.ez("Y");
        CellModel.f3 = CellModel.ez("SnappedX");
        CellModel.f5 = CellModel.ez("SnappedY");
        CellModel.eo = CellModel.ez("EditOpacity");
        CellModel.ei = CellModel.ez("ContentOpacity");
        CellModel.dw = CellModel.ez("ActualContentOpacity");
        CellModel.fk = CellModel.ez("Opacity");
        CellModel.dy = CellModel.ez("ActualOpacity");
        CellModel.fg = CellModel.ez("LeftOffset");
        CellModel.gb = CellModel.ez("TopOffset");
        CellModel.fh = CellModel.ez("LeftPercentOffset");
        CellModel.gc = CellModel.ez("TopPercentOffset");
        CellModel.e1 = CellModel.ez("Height");
        CellModel.gg = CellModel.ez("Width");
        CellModel.fe = CellModel.ez("IsSelected");
        CellModel.fj = CellModel.ez("ModelType");
        CellModel.f1 = CellModel.ez("SelectedStatus");
        CellModel.dk = CellModel.ez("ActivationStatus");
        CellModel.e4 = CellModel.ez("HoverStatus");
        CellModel.e2 = CellModel.ez("HorizontalAlignment");
        CellModel.gd = CellModel.ez("VerticalAlignment");
        CellModel.d8 = CellModel.ez("Background");
        CellModel.ed = CellModel.ez("Border");
        CellModel.dl = CellModel.ez("ActualBackground");
        CellModel.dr = CellModel.ez("ActualBorder");
        CellModel.df = CellModel.ez("ActivationBorder");
        CellModel.et = CellModel.ez("ErrorBorder");
        CellModel.f0 = CellModel.ez("SelectedBackground");
        CellModel.e3 = CellModel.ez("HoverBackground");
        CellModel.f7 = CellModel.ez("SortIndicatorColor");
        CellModel.f9 = CellModel.ez("StickyRowBackground");
        CellModel.fw = CellModel.ez("PinnedRowBackground");
        CellModel.ff = CellModel.ez("LastStickyRowBackground");
        CellModel.fx = CellModel.ez("PinnedRowOpacity");
        CellModel.fl = CellModel.ez("OriginalValue");
        CellModel.fy = CellModel.ez("RenderValue");
        CellModel.ga = CellModel.ez("TextColor");
        CellModel.d7 = CellModel.ez("ActualTextColor");
        CellModel.ek = CellModel.ez("DeletedTextColor");
        CellModel.ey = CellModel.ez("FontInfo");
        CellModel.dx = CellModel.ez("ActualFontInfo");
        CellModel.fi = CellModel.ez("LineBreakMode");
        CellModel.ge = CellModel.ez("VirtualizationPercentage");
        CellModel.fp = CellModel.ez("PaddingLeft");
        CellModel.ft = CellModel.ez("PaddingTop");
        CellModel.fr = CellModel.ez("PaddingRight");
        CellModel.fn = CellModel.ez("PaddingBottom");
        CellModel.d2 = CellModel.ez("ActualPaddingLeft");
        CellModel.d6 = CellModel.ez("ActualPaddingTop");
        CellModel.d4 = CellModel.ez("ActualPaddingRight");
        CellModel.d0 = CellModel.ez("ActualPaddingBottom");
        CellModel.ec = CellModel.ez("BorderLeftWidth");
        CellModel.eh = CellModel.ez("BorderTopWidth");
        CellModel.ef = CellModel.ez("BorderRightWidth");
        CellModel.ea = CellModel.ez("BorderBottomWidth");
        CellModel.de = CellModel.ez("ActivationBorderLeftWidth");
        CellModel.dj = CellModel.ez("ActivationBorderTopWidth");
        CellModel.dh = CellModel.ez("ActivationBorderRightWidth");
        CellModel.dc = CellModel.ez("ActivationBorderBottomWidth");
        CellModel.es = CellModel.ez("ErrorBorderLeftWidth");
        CellModel.ex = CellModel.ez("ErrorBorderTopWidth");
        CellModel.ev = CellModel.ez("ErrorBorderRightWidth");
        CellModel.eq = CellModel.ez("ErrorBorderBottomWidth");
        CellModel.dq = CellModel.ez("ActualBorderLeftWidth");
        CellModel.dv = CellModel.ez("ActualBorderTopWidth");
        CellModel.dt = CellModel.ez("ActualBorderRightWidth");
        CellModel.dn = CellModel.ez("ActualBorderBottomWidth");
        CellModel.f6 = CellModel.ez("SortDirection");
        CellModel.fa = CellModel.ez("IsExpanded");
        CellModel.e7 = CellModel.ez("IsCollapsable");
        CellModel.fv = CellModel.ez("Pinned");
        CellModel.em = CellModel.ez("EditFontInfo");
        CellModel.e9 = CellModel.ez("IsEdited");
        CellModel.e8 = CellModel.ez("IsDeleted");
        CellModel.el = CellModel.ez("EditError");
        CellModel.bg = null;
        CellModel.bd = null;
        return CellModel;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var DateTimeCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DateTimeCellModel, _super);
        function DateTimeCellModel() {
            var _this = _super.call(this) || this;
            _this.kz = new Date();
            _this.lb = null;
            _this.kq = null;
            _this.ks = null;
            _this.k9 = null;
            _this._formatOverride = null;
            _this.kv = 0;
            _this.kt = null;
            _this.kx = false;
            _this.k0 = igniteuiReactCore.dateMinValue();
            _this.je(DateTimeCellModel.k2);
            _this.a0 = true;
            return _this;
        }
        Object.defineProperty(DateTimeCellModel.prototype, "k0", {
            get: function () {
                return this.kz;
            },
            set: function (a) {
                var b = this.kz;
                this.kz = a;
                if (+(this.kz) != +b) {
                    this.jm("DateTimeValue", DateTimeCellModel.k2, b, this.kz);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeCellModel.prototype, "lh", {
            get: function () {
                return this.lb;
            },
            set: function (a) {
                var b = this.lb;
                this.lb = a;
                if (this.lb != b) {
                    this.jm("FormatStringOverride", DateTimeCellModel.k5, b, this.lb);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeCellModel.prototype, "kr", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (this.kq != b) {
                    this.jm("FormatSpecifiers", DateTimeCellModel.k4, b, this.kq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeCellModel.prototype, "la", {
            get: function () {
                return this._formatOverride;
            },
            set: function (a) {
                var b = this._formatOverride;
                this._formatOverride = a;
                if (this._formatOverride != b) {
                    this.jm("FormatOverride", DateTimeCellModel.k3, b, this._formatOverride);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeCellModel.prototype, "kw", {
            get: function () {
                return this.kv;
            },
            set: function (a) {
                var b = this.kv;
                this.kv = a;
                if (this.kv != b) {
                    this.jm("DateTimeFormat", DateTimeCellModel.k1, igniteuiReactCore.enumGetBox(DateTimeFormats_$type, b), igniteuiReactCore.enumGetBox(DateTimeFormats_$type, this.kv));
                }
            },
            enumerable: true,
            configurable: true
        });
        DateTimeCellModel.prototype.le = function (a) {
            if (this.ks != null) {
                return this.ks.i(a);
            }
            if (this._formatOverride != null) {
                var date_ = a;
                return (this._formatOverride.format(date_));
            }
            this.kt.j(this);
            return this.kt.i(a);
        };
        Object.defineProperty(DateTimeCellModel.prototype, "ku", {
            get: function () {
                return this.kt;
            },
            set: function (a) {
                var b = this.kt;
                this.kt = a;
                if (this.kt != b) {
                    this.jm("Formatter", DateTimeCellModel.k6, b, this.kt);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeCellModel.prototype, "ky", {
            get: function () {
                return this.kx;
            },
            set: function (a) {
                var b = this.kx;
                this.kx = a;
                if (this.kx != b) {
                    this.jm("IsOffsetValue", DateTimeCellModel.k7, b, this.kx);
                }
            },
            enumerable: true,
            configurable: true
        });
        DateTimeCellModel.prototype.jp = function (a, b, c) {
            switch (a) {
                case "FormatStringOverride":
                case "FormatSpecifiers":
                    if (this.lh != null) {
                        this.ks = new igniteuiReactCore.BindingFormatter();
                        this.ks.j = this.lh;
                        this.ks.d = this.kr;
                    }
                    else {
                        this.ks = null;
                    }
                    break;
            }
            _super.prototype.jp.call(this, a, b, c);
        };
        DateTimeCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "DateTimeFormat") {
                this.kw = igniteuiReactCore.EnumUtil.getEnumValue(DateTimeFormats_$type, b);
            }
            if (a == "DateTimeValue") {
                this.k0 = b;
            }
            if (a == "IsOffsetValue") {
                this.ky = b;
            }
            if (a == "FormatOverride") {
                this.la = b;
            }
        };
        DateTimeCellModel.prototype.gn = function (a) {
            if (a == "DateTimeFormat") {
                return igniteuiReactCore.enumGetBox(DateTimeFormats_$type, this.kw);
            }
            if (a == "DateTimeValue") {
                return this.k0;
            }
            if (a == "IsOffsetValue") {
                return this.ky;
            }
            if (a == "FormatOverride") {
                return this.la;
            }
            return _super.prototype.gn.call(this, a);
        };
        DateTimeCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new DateTimeCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.af = this.k0;
            b.ag = this.kw;
            b.ae = this.ky;
            return b;
        };
        DateTimeCellModel.$t = igniteuiReactCore.markType(DateTimeCellModel, 'DateTimeCellModel', CellModel.$);
        DateTimeCellModel.k2 = CellModel.ez("DateTimeValue");
        DateTimeCellModel.k5 = CellModel.ez("FormatStringOverride");
        DateTimeCellModel.k4 = CellModel.ez("FormatSpecifiers");
        DateTimeCellModel.k3 = CellModel.ez("FormatOverride");
        DateTimeCellModel.k1 = CellModel.ez("DateTimeFormat");
        DateTimeCellModel.k6 = CellModel.ez("Formatter");
        DateTimeCellModel.k7 = CellModel.ez("IsOffsetValue");
        return DateTimeCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var EditorCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditorCellModel, _super);
        function EditorCellModel() {
            var _this = _super.call(this) || this;
            _this.k1 = 0;
            _this.k0 = 0;
            _this.ky = true;
            _this.ku = null;
            _this.ks = 0;
            _this.lg = null;
            _this.lc = null;
            _this.kw = 0;
            _this.lb = null;
            _this.lf = null;
            _this.kq = null;
            _this.i0 = "editorCell";
            return _this;
        }
        Object.defineProperty(EditorCellModel.prototype, "kz", {
            get: function () {
                return this.ky;
            },
            set: function (a) {
                var b = this.ky;
                this.ky = a;
                if (b != this.ky) {
                    this.jm("IsHidden", EditorCellModel.la, b, this.ky);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "kv", {
            get: function () {
                return this.ku;
            },
            set: function (a) {
                var b = this.ku;
                this.ku = a;
                if (b != this.ku) {
                    this.jm("EditTarget", EditorCellModel.k7, b, this.ku);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "kt", {
            get: function () {
                return this.ks;
            },
            set: function (a) {
                var b = this.ks;
                this.ks = a;
                if (b != this.ks) {
                    this.jm("DataType", EditorCellModel.k2, igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, this.ks));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "lp", {
            get: function () {
                return this.lg;
            },
            set: function (a) {
                var b = this.lg;
                this.lg = a;
                if (b != this.lg) {
                    this.jm("ErrorMessage", EditorCellModel.k9, b, this.lg);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "le", {
            get: function () {
                return this.lc;
            },
            set: function (a) {
                var b = this.lc;
                this.lc = a;
                if (b != this.lc) {
                    this.jm("EditValue", EditorCellModel.k8, b, this.lc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "kx", {
            get: function () {
                return this.kw;
            },
            set: function (a) {
                var b = this.kw;
                this.kw = a;
                if (b != this.kw) {
                    this.jm("EditorType", EditorCellModel.k5, igniteuiReactCore.enumGetBox(EditorType_$type, b), igniteuiReactCore.enumGetBox(EditorType_$type, this.kw));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "ld", {
            get: function () {
                return this.lb;
            },
            set: function (a) {
                var b = this.lb;
                this.lb = a;
                if (b != this.lb) {
                    this.jm("EditorItemsSource", EditorCellModel.k3, b, this.lb);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "lj", {
            get: function () {
                return this.lf;
            },
            set: function (a) {
                var b = this.lf;
                this.lf = a;
                if (b != this.lf) {
                    this.jm("EditorTextField", EditorCellModel.k4, b, this.lf);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCellModel.prototype, "kr", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (b != this.kq) {
                    this.jm("EditorValueField", EditorCellModel.k6, b, this.kq);
                }
            },
            enumerable: true,
            configurable: true
        });
        EditorCellModel.prototype.jp = function (a, b, c) {
            _super.prototype.jp.call(this, a, b, c);
            switch (a) {
                case "IsHidden":
                    this.a5 = true;
                    break;
                case "EditTarget":
                    this.ls(b);
                    this.lu();
                    this.as = true;
                    break;
                case "OriginalValue":
                case "DataType":
                    this.as = true;
                    break;
                case "ErrorMessage":
                    this.lu();
                    this.as = true;
                    break;
            }
        };
        EditorCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "IsHidden") {
                this.kz = b;
            }
            else if (a == "DataType") {
                this.kt = igniteuiReactCore.EnumUtil.getEnumValue(igniteuiReactCore.DataSourceSchemaPropertyType_$type, b);
            }
            else if (a == "ErrorMessage") {
                this.lp = b;
            }
            else if (a == "EditValue") {
                this.le = b;
            }
        };
        EditorCellModel.prototype.gn = function (a) {
            switch (a) {
                case "IsHidden": return this.kz;
                case "DataType": return igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, this.kt);
                case "ErrorMessage": return this.lp;
                case "EditValue": return this.le;
            }
            return _super.prototype.gn.call(this, a);
        };
        EditorCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new EditorCellModelExport();
            }
            var b = _super.prototype.b.call(this, a);
            b.af = this.kz;
            b.ae = this.kt;
            b.ag = this.le != null ? this.le.toString() : null;
            b.ah = this.lp;
            return b;
        };
        EditorCellModel.prototype.ls = function (a) {
            if (a != null) {
                var b = a;
                b.propertyChanged = igniteuiReactCore.delegateRemove(b.propertyChanged, igniteuiReactCore.runOn(this, this.lt));
            }
            if (this.kv != null) {
                this.cc = this.kv.cc;
                this.cd = this.kv.cd;
                this.gf = this.kv.gf;
                this.e0 = this.kv.e0;
                this.k0 = this.kv.k.az;
                this.k1 = this.kv.k.w;
                this.go = this.kv.go;
                this.lp = this.kv.hl;
                this.fo = this.kv.d1;
                this.fs = this.kv.d5;
                this.fq = this.kv.d3;
                this.fm = this.kv.dz;
                this.ka = this.kv.ka;
                this.dd = this.kv.dd + 1;
                this.di = this.kv.di + 1;
                this.dg = this.kv.dg + 1;
                this.db = this.kv.db + 1;
                this.by = 1;
                this.af = this.kv.af;
                var c = this.kv;
                c.propertyChanged = igniteuiReactCore.delegateCombine(c.propertyChanged, igniteuiReactCore.runOn(this, this.lt));
            }
            else {
                this.lp = null;
            }
        };
        EditorCellModel.prototype.lu = function () {
            if (this.kv != null) {
                if (this.lp != null) {
                    this.ka = GridStyleRepository.bg;
                }
                else {
                    this.ka = this.kv.ka;
                }
            }
        };
        EditorCellModel.prototype.lt = function (a, b) {
            switch (b.propertyName) {
                case "X":
                    this.cc = this.kv.cc;
                    break;
                case "Y":
                    this.cd = this.kv.cd;
                    break;
                case "Width":
                    this.gf = this.kv.gf;
                    break;
                case "Height":
                    this.e0 = this.kv.e0;
                    break;
                case "Path":
                    if (this.k1 != this.kv.k.w || this.k0 != this.kv.k.az) {
                        this.kv = null;
                    }
                    break;
                case "OriginalValue":
                    this.le = this.kv.go;
                    break;
            }
        };
        EditorCellModel.$t = igniteuiReactCore.markType(EditorCellModel, 'EditorCellModel', CellModel.$);
        EditorCellModel.la = CellModel.ez("IsHidden");
        EditorCellModel.k7 = CellModel.ez("EditTarget");
        EditorCellModel.k2 = CellModel.ez("DataType");
        EditorCellModel.k9 = CellModel.ez("ErrorMessage");
        EditorCellModel.k8 = CellModel.ez("EditValue");
        EditorCellModel.k5 = CellModel.ez("EditorType");
        EditorCellModel.k3 = CellModel.ez("EditorItemsSource");
        EditorCellModel.k4 = CellModel.ez("EditorTextField");
        EditorCellModel.k6 = CellModel.ez("EditorValueField");
        return EditorCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var EditorRowCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditorRowCellModel, _super);
        function EditorRowCellModel() {
            var _this = _super.call(this) || this;
            _this.ks = 0;
            _this.kq = null;
            _this.i0 = "editorRowCell";
            _this.a0 = false;
            return _this;
        }
        Object.defineProperty(EditorRowCellModel.prototype, "kr", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (b != this.kq) {
                    this.jm("EditTarget", EditorRowCellModel.kt, b, this.kq);
                }
            },
            enumerable: true,
            configurable: true
        });
        EditorRowCellModel.prototype.jp = function (a, b, c) {
            _super.prototype.jp.call(this, a, b, c);
            switch (a) {
                case "EditTarget":
                    this.kv(b);
                    break;
            }
        };
        EditorRowCellModel.prototype.kv = function (a) {
            if (a != null) {
                var b = a;
                b.propertyChanged = igniteuiReactCore.delegateRemove(b.propertyChanged, igniteuiReactCore.runOn(this, this.kw));
            }
            if (this.kr != null) {
                this.cd = this.kr.cd;
                this.e0 = this.kr.e0;
                this.cc = this.o.model.b0;
                this.gf = this.o.model.absoluteWidth;
                this.ks = this.kr.k.w;
                var c = this.kr;
                c.propertyChanged = igniteuiReactCore.delegateCombine(c.propertyChanged, igniteuiReactCore.runOn(this, this.kw));
            }
        };
        EditorRowCellModel.prototype.kw = function (a, b) {
            switch (b.propertyName) {
                case "Y":
                    this.cd = this.kr.cd;
                    break;
                case "Height":
                    this.e0 = this.kr.e0;
                    break;
                case "Path":
                    if (this.ks != this.kr.k.w) {
                        this.kr = null;
                    }
                    break;
            }
        };
        EditorRowCellModel.$t = igniteuiReactCore.markType(EditorRowCellModel, 'EditorRowCellModel', CellModel.$);
        EditorRowCellModel.kt = CellModel.ez("EditTarget");
        return EditorRowCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var SummaryCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryCellModel, _super);
        function SummaryCellModel() {
            var _this = _super.call(this) || this;
            _this.kw = null;
            _this.kx = null;
            _this.k4 = null;
            _this.kq = null;
            _this.a0 = true;
            return _this;
        }
        Object.defineProperty(SummaryCellModel.prototype, "ky", {
            get: function () {
                return this.kw;
            },
            set: function (a) {
                var b = this.kw;
                this.kw = a;
                if (this.kw != b) {
                    this.jm("ResolvedSummaryLabel", SummaryCellModel.ks, b, this.kw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryCellModel.prototype, "k0", {
            get: function () {
                return this.kx;
            },
            set: function (a) {
                var b = this.kx;
                this.kx = a;
                if (this.kx != b) {
                    this.jm("ResolvedSummaryValue", SummaryCellModel.kt, b, this.kx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryCellModel.prototype, "k5", {
            get: function () {
                return this.k4;
            },
            set: function (a) {
                var b = this.k4;
                this.k4 = a;
                if (this.k4 != b) {
                    this.jm("SummaryLabelTextColor", SummaryCellModel.kv, b, this.k4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryCellModel.prototype, "kr", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (this.kq != b) {
                    this.jm("SummaryLabelFontInfo", SummaryCellModel.ku, b, this.kq);
                }
            },
            enumerable: true,
            configurable: true
        });
        SummaryCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new SummaryCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.ai = this.ky;
            b.ao = this.k0;
            b.ae = igniteuiReactCore.AppearanceHelper.a(this.k5);
            b.af = igniteuiReactCore.AppearanceHelper.a(this.kp);
            if (this.kr != null) {
                var c = this.kr;
                if (this.o != null && c.n == null) {
                    var d = this.o.externalGrid.renderer;
                    var e = igniteuiReactCore.FontUtil.getFontInfoFromString(d, c.fontString);
                    c.n = e.n;
                    c.d = e.d;
                    c.o = e.o;
                    c.q = e.q;
                    c.r = e.r;
                    c.s = e.s;
                }
                if (c.n != null) {
                    b.aj = c.n;
                }
                if (!igniteuiReactCore.isNaN_(c.d)) {
                    b.ag = c.d;
                }
                if (c.s != null) {
                    b.an = c.s;
                }
                if (c.q != null) {
                    b.al = c.q;
                }
                if (c.o != null) {
                    b.ak = c.q;
                }
            }
            if (this.af != null) {
                var f = this.af;
                if (this.o != null && f.n == null) {
                    var g = this.o.externalGrid.renderer;
                    var h = igniteuiReactCore.FontUtil.getFontInfoFromString(g, f.fontString);
                    f.n = h.n;
                    f.d = h.d;
                    f.o = h.o;
                    f.q = h.q;
                    f.r = h.r;
                    f.s = h.s;
                }
                if (f.n != null) {
                    b.ap = f.n;
                }
                if (!igniteuiReactCore.isNaN_(f.d)) {
                    b.ah = f.d;
                }
                if (f.s != null) {
                    b.at = f.s;
                }
                if (f.q != null) {
                    b.ar = f.q;
                }
                if (f.o != null) {
                    b.aq = f.q;
                }
            }
            return b;
        };
        SummaryCellModel.prototype.a8 = function (a) {
            return a == 4 || a == 5;
        };
        SummaryCellModel.$t = igniteuiReactCore.markType(SummaryCellModel, 'SummaryCellModel', CellModel.$);
        SummaryCellModel.ks = CellModel.ez("ResolvedSummaryLabel");
        SummaryCellModel.kt = CellModel.ez("ResolvedSummaryValue");
        SummaryCellModel.kv = CellModel.ez("SummaryLabelTextColor");
        SummaryCellModel.ku = CellModel.ez("SummaryLabelFontInfo");
        return SummaryCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var VerticalSeparatorCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(VerticalSeparatorCellModel, _super);
        function VerticalSeparatorCellModel() {
            var _this = _super.call(this) || this;
            _this.kq = true;
            return _this;
        }
        Object.defineProperty(VerticalSeparatorCellModel.prototype, "kr", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (b != this.kq) {
                    this.jm("IsHitTestVisible", VerticalSeparatorCellModel.ks, b, this.kq);
                }
            },
            enumerable: true,
            configurable: true
        });
        VerticalSeparatorCellModel.$t = igniteuiReactCore.markType(VerticalSeparatorCellModel, 'VerticalSeparatorCellModel', CellModel.$);
        VerticalSeparatorCellModel.ks = CellModel.ez("IsHitTestVisible");
        return VerticalSeparatorCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var ImageCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ImageCellModel, _super);
        function ImageCellModel() {
            var _this = _super.call(this) || this;
            _this.kx = "";
            _this.ks = 0;
            _this.kq = 0;
            _this.f = 3;
            _this.a0 = true;
            return _this;
        }
        Object.defineProperty(ImageCellModel.prototype, "ky", {
            get: function () {
                return this.kx;
            },
            set: function (a) {
                var b = this.kx;
                this.kx = a;
                if (this.kx != b) {
                    this.jm("ImagePath", ImageCellModel.ku, b, this.kx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageCellModel.prototype, "kt", {
            get: function () {
                return this.ks;
            },
            set: function (a) {
                var b = this.ks;
                this.ks = a;
                if (this.ks != b) {
                    this.jm("ImageStretchOption", ImageCellModel.kw, igniteuiReactCore.enumGetBox(ImageStretchOptions_$type, b), igniteuiReactCore.enumGetBox(ImageStretchOptions_$type, this.ks));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageCellModel.prototype, "kr", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (this.kq != b) {
                    this.jm("ImageResourceType", ImageCellModel.kv, igniteuiReactCore.enumGetBox(ImageResourceType_$type, b), igniteuiReactCore.enumGetBox(ImageResourceType_$type, this.kq));
                }
            },
            enumerable: true,
            configurable: true
        });
        ImageCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new ImageCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.ae = this.ky;
            return b;
        };
        ImageCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "ImageStretchOption") {
                this.kt = igniteuiReactCore.EnumUtil.getEnumValue(ImageStretchOptions_$type, b);
            }
            if (a == "ImageResourceType") {
                this.kr = igniteuiReactCore.EnumUtil.getEnumValue(ImageResourceType_$type, b);
            }
            if (a == "ImagePath") {
                this.ky = b;
            }
        };
        ImageCellModel.prototype.gn = function (a) {
            if (a == "ImageStretchOption") {
                return igniteuiReactCore.enumGetBox(ImageStretchOptions_$type, this.kt);
            }
            if (a == "ImageResourceType") {
                return igniteuiReactCore.enumGetBox(ImageResourceType_$type, this.kr);
            }
            if (a == "ImagePath") {
                return this.ky;
            }
            return _super.prototype.gn.call(this, a);
        };
        ImageCellModel.$t = igniteuiReactCore.markType(ImageCellModel, 'ImageCellModel', CellModel.$);
        ImageCellModel.ku = CellModel.ez("ImagePath");
        ImageCellModel.kw = CellModel.ez("ImageStretchOption");
        ImageCellModel.kv = CellModel.ez("ImageResourceType");
        return ImageCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var NumericCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(NumericCellModel, _super);
        function NumericCellModel() {
            var _this = _super.call(this) || this;
            _this.ky = NaN;
            _this.kt = false;
            _this.lm = null;
            _this.kq = null;
            _this.ks = null;
            _this.lk = null;
            _this._formatOverride = null;
            _this.ln = null;
            _this.lp = null;
            _this.lo = null;
            _this.lq = "";
            _this.k0 = 5;
            _this.k1 = 0;
            _this.k2 = -1;
            _this.ku = false;
            _this.f = 2;
            _this.a0 = true;
            return _this;
        }
        Object.defineProperty(NumericCellModel.prototype, "kz", {
            get: function () {
                return this.ky;
            },
            set: function (a) {
                var b = this.ky;
                this.ky = a;
                if (this.ky != b) {
                    this.jm("NumericValue", NumericCellModel.lf, b, this.ky);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "kv", {
            get: function () {
                return this.kt;
            },
            set: function (a) {
                var b = this.kt;
                this.kt = a;
                if (this.kt != b) {
                    this.jm("HasDecimalValue", NumericCellModel.k6, b, this.kt);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "lt", {
            get: function () {
                return this.lm;
            },
            set: function (a) {
                var b = this.lm;
                this.lm = a;
                if (this.lm != b) {
                    this.jm("FormatStringOverride", NumericCellModel.k5, b, this.lm);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "kr", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (this.kq != b) {
                    this.jm("FormatSpecifiers", NumericCellModel.k4, b, this.kq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "ll", {
            get: function () {
                return this._formatOverride;
            },
            set: function (a) {
                var b = this._formatOverride;
                this._formatOverride = a;
                if (this._formatOverride != b) {
                    this.jm("FormatOverride", NumericCellModel.k3, b, this._formatOverride);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "lz", {
            get: function () {
                return this.ln;
            },
            set: function (a) {
                var b = this.ln;
                this.ln = a;
                if (this.ln != b) {
                    this.jm("NegativePrefix", NumericCellModel.ld, b, this.ln);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "l4", {
            get: function () {
                return this.lp;
            },
            set: function (a) {
                var b = this.lp;
                this.lp = a;
                if (this.lp != b) {
                    this.jm("PositivePrefix", NumericCellModel.lg, b, this.lp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "l1", {
            get: function () {
                return this.lo;
            },
            set: function (a) {
                var b = this.lo;
                this.lo = a;
                if (this.lo != b) {
                    this.jm("NegativeSuffix", NumericCellModel.le, b, this.lo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "l6", {
            get: function () {
                return this.lq;
            },
            set: function (a) {
                var b = this.lq;
                this.lq = a;
                if (this.lq != b) {
                    this.jm("PositiveSuffix", NumericCellModel.lh, b, this.lq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "k7", {
            get: function () {
                return this.k0;
            },
            set: function (a) {
                var b = this.k0;
                this.k0 = a;
                if (this.k0 != b) {
                    this.jm("MaxFractionDigits", NumericCellModel.k8, b, this.k0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "k9", {
            get: function () {
                return this.k1;
            },
            set: function (a) {
                var b = this.k1;
                this.k1 = a;
                if (this.k1 != b) {
                    this.jm("MinFractionDigits", NumericCellModel.la, b, this.k1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "lb", {
            get: function () {
                return this.k2;
            },
            set: function (a) {
                var b = this.k2;
                this.k2 = a;
                if (this.k2 != b) {
                    this.jm("MinIntegerDigits", NumericCellModel.lc, b, this.k2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericCellModel.prototype, "kx", {
            get: function () {
                return this.ku;
            },
            set: function (a) {
                var b = this.ku;
                this.ku = a;
                if (this.ku != b) {
                    this.jm("ShowGroupingSeparator", NumericCellModel.li, b, this.ku);
                }
            },
            enumerable: true,
            configurable: true
        });
        NumericCellModel.prototype.kw = function () {
            if (this.ax(NumericCellModel.la) || this.ax(NumericCellModel.k8) || this.ax(NumericCellModel.lc) || this.ax(NumericCellModel.lh) || this.ax(NumericCellModel.le) || this.ax(NumericCellModel.lg) || this.ax(NumericCellModel.ld) || this.ax(NumericCellModel.k3) || this.ax(NumericCellModel.li)) {
                return true;
            }
            return false;
        };
        NumericCellModel.prototype.jp = function (a, b, c) {
            switch (a) {
                case "FormatStringOverride":
                case "FormatSpecifiers":
                    if (this.lt != null) {
                        this.ks = new igniteuiReactCore.BindingFormatter();
                        this.ks.j = this.lt;
                        this.ks.d = this.kr;
                    }
                    else {
                        this.ks = null;
                    }
                    break;
            }
            _super.prototype.jp.call(this, a, b, c);
        };
        NumericCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "NumericValue") {
                this.kz = b;
            }
            if (a == "NegativePrefix") {
                this.lz = b;
            }
            if (a == "PositivePrefix") {
                this.l4 = b;
            }
            if (a == "NegativeSuffix") {
                this.l1 = b;
            }
            if (a == "PositiveSuffix") {
                this.l6 = b;
            }
            if (a == "MinFractionDigits") {
                this.k9 = igniteuiReactCore.typeGetValue(b);
            }
            if (a == "MaxFractionDigits") {
                this.k7 = igniteuiReactCore.typeGetValue(b);
            }
            if (a == "MinIntegerDigits") {
                this.lb = igniteuiReactCore.typeGetValue(b);
            }
            if (a == "ShowGroupingSeparator") {
                this.kx = b;
            }
            if (a == "FormatOverride") {
                this.ll = b;
            }
        };
        NumericCellModel.prototype.gn = function (a) {
            if (a == "NumericValue") {
                return this.kz;
            }
            if (a == "NegativePrefix") {
                return this.lz;
            }
            if (a == "PositivePrefix") {
                return this.l4;
            }
            if (a == "NegativeSuffix") {
                return this.lz;
            }
            if (a == "PositiveSuffix") {
                return this.l6;
            }
            if (a == "MinFractionDigits") {
                return this.k9;
            }
            if (a == "MaxFractionDigits") {
                return this.k7;
            }
            if (a == "MinIntegerDigits") {
                return this.lb;
            }
            if (a == "ShowGroupingSeparator") {
                return this.kx;
            }
            if (a == "FormatOverride") {
                return this.ll;
            }
            return _super.prototype.gn.call(this, a);
        };
        NumericCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new NumericCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.ae = this.kz;
            return b;
        };
        NumericCellModel.$t = igniteuiReactCore.markType(NumericCellModel, 'NumericCellModel', CellModel.$);
        NumericCellModel.lf = CellModel.ez("NumericValue");
        NumericCellModel.k6 = CellModel.ez("HasDecimalValue");
        NumericCellModel.k5 = CellModel.ez("FormatStringOverride");
        NumericCellModel.k4 = CellModel.ez("FormatSpecifiers");
        NumericCellModel.k3 = CellModel.ez("FormatOverride");
        NumericCellModel.ld = CellModel.ez("NegativePrefix");
        NumericCellModel.lg = CellModel.ez("PositivePrefix");
        NumericCellModel.le = CellModel.ez("NegativeSuffix");
        NumericCellModel.lh = CellModel.ez("PositiveSuffix");
        NumericCellModel.k8 = CellModel.ez("MaxFractionDigits");
        NumericCellModel.la = CellModel.ez("MinFractionDigits");
        NumericCellModel.lc = CellModel.ez("MinIntegerDigits");
        NumericCellModel.li = CellModel.ez("ShowGroupingSeparator");
        return NumericCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var RowSeparatorModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowSeparatorModel, _super);
        function RowSeparatorModel() {
            return _super.call(this) || this;
        }
        RowSeparatorModel.prototype.b = function (a) {
            if (a == null) {
                a = new RowSeparatorModelExport();
            }
            a = _super.prototype.b.call(this, a);
            return a;
        };
        RowSeparatorModel.$t = igniteuiReactCore.markType(RowSeparatorModel, 'RowSeparatorModel', CellModel.$);
        return RowSeparatorModel;
    }(CellModel));
    /**
     * @hidden
     */
    var SectionHeaderCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SectionHeaderCellModel, _super);
        function SectionHeaderCellModel() {
            var _this = _super.call(this) || this;
            _this.kq = null;
            _this.kr = null;
            _this.k2 = null;
            _this.k1 = null;
            _this.ku = 4;
            _this.a0 = true;
            return _this;
        }
        Object.defineProperty(SectionHeaderCellModel.prototype, "ks", {
            get: function () {
                return this.kq;
            },
            set: function (a) {
                var b = this.kq;
                this.kq = a;
                if (this.kq != b) {
                    this.jm("Groups", SectionHeaderCellModel.kw, b, this.kq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeaderCellModel.prototype, "kt", {
            get: function () {
                return this.kr;
            },
            set: function (a) {
                var b = this.kr;
                this.kr = a;
                if (this.kr != b) {
                    this.jm("Summaries", SectionHeaderCellModel.kz, b, this.kr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeaderCellModel.prototype, "k6", {
            get: function () {
                return this.k2;
            },
            set: function (a) {
                var b = this.k2;
                this.k2 = a;
                if (this.k2 != b) {
                    this.jm("ResolvedText", SectionHeaderCellModel.ky, b, this.k2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeaderCellModel.prototype, "k4", {
            get: function () {
                return this.k1;
            },
            set: function (a) {
                var b = this.k1;
                this.k1 = a;
                if (this.k1 != b) {
                    this.jm("ResolvedSummaryText", SectionHeaderCellModel.kx, b, this.k1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeaderCellModel.prototype, "kv", {
            get: function () {
                return this.ku;
            },
            set: function (a) {
                var b = this.ku;
                this.ku = a;
                if (this.ku != b) {
                    this.jm("SummaryDisplayMode", SectionHeaderCellModel.k0, igniteuiReactCore.enumGetBox(GroupSummaryDisplayMode_$type, b), igniteuiReactCore.enumGetBox(GroupSummaryDisplayMode_$type, this.ku));
                }
            },
            enumerable: true,
            configurable: true
        });
        SectionHeaderCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "Groups") {
                this.ks = b;
            }
            else if (a == "SummaryDisplayMode") {
                this.kv = igniteuiReactCore.EnumUtil.getEnumValue(GroupSummaryDisplayMode_$type, b);
            }
        };
        SectionHeaderCellModel.prototype.gn = function (a) {
            if (a == "Groups") {
                return this.ks;
            }
            else if (a == "IsCollapsable") {
                return this.ar;
            }
            else if (a == "SummaryDisplayMode") {
                return igniteuiReactCore.enumGetBox(GroupSummaryDisplayMode_$type, this.kv);
            }
            return _super.prototype.gn.call(this, a);
        };
        SectionHeaderCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new SectionHeaderCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.af = new Array(this.ks.length);
            b.ag = new Array(this.ks.length);
            b.ae = new Array(this.ks.length);
            b.al = this.k6;
            b.ai = new Array(this.kt.length);
            b.ak = new Array(this.kt.length);
            b.aj = new Array(this.kt.length);
            b.ah = new Array(this.kt.length);
            b.am = this.k4;
            for (var c = 0; c < this.ks.length; c++) {
                b.af[c] = this.ks[c].c;
                b.ag[c] = this.ks[c].a;
                b.ae[c] = this.ks[c].b;
            }
            for (var d = 0; d < this.kt.length; d++) {
                b.ai[d] = this.kt[d].e;
                b.ak[d] = this.kt[d].b;
                b.aj[d] = this.kt[d].a;
                b.ah[d] = this.kt[d].c;
            }
            return b;
        };
        SectionHeaderCellModel.prototype.a8 = function (a) {
            return a == 1;
        };
        SectionHeaderCellModel.$t = igniteuiReactCore.markType(SectionHeaderCellModel, 'SectionHeaderCellModel', CellModel.$);
        SectionHeaderCellModel.kw = CellModel.ez("Groups");
        SectionHeaderCellModel.kz = CellModel.ez("Summaries");
        SectionHeaderCellModel.ky = CellModel.ez("ResolvedText");
        SectionHeaderCellModel.kx = CellModel.ez("ResolvedSummaryText");
        SectionHeaderCellModel.k0 = CellModel.ez("SummaryDisplayMode");
        return SectionHeaderCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var TemplateCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateCellModel, _super);
        function TemplateCellModel() {
            var _this = _super.call(this) || this;
            _this.kr = null;
            _this.a0 = true;
            return _this;
        }
        Object.defineProperty(TemplateCellModel.prototype, "ks", {
            get: function () {
                return this.kr;
            },
            set: function (a) {
                var b = this.kr;
                this.kr = a;
                if (this.kr != b) {
                    this.jm("Value", TemplateCellModel.kq, b, this.kr);
                }
            },
            enumerable: true,
            configurable: true
        });
        TemplateCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "Value") {
                this.ks = b;
            }
        };
        TemplateCellModel.prototype.gn = function (a) {
            if (a == "Value") {
                return this.ks;
            }
            return _super.prototype.gn.call(this, a);
        };
        TemplateCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new TemplateCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.ae = this.ks;
            return b;
        };
        TemplateCellModel.$t = igniteuiReactCore.markType(TemplateCellModel, 'TemplateCellModel', CellModel.$);
        TemplateCellModel.kq = CellModel.ez("Value");
        return TemplateCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var TextCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextCellModel, _super);
        function TextCellModel() {
            var _this = _super.call(this) || this;
            _this.kr = "";
            _this.a0 = true;
            return _this;
        }
        Object.defineProperty(TextCellModel.prototype, "ks", {
            get: function () {
                return this.kr;
            },
            set: function (a) {
                var b = this.kr;
                this.kr = a;
                if (this.kr != b) {
                    this.jm("TextValue", TextCellModel.kq, b, this.kr);
                }
            },
            enumerable: true,
            configurable: true
        });
        TextCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "TextValue") {
                this.ks = b;
            }
        };
        TextCellModel.prototype.gn = function (a) {
            if (a == "TextValue") {
                return this.ks;
            }
            return _super.prototype.gn.call(this, a);
        };
        TextCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new TextCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.af = this.ks;
            return b;
        };
        TextCellModel.$t = igniteuiReactCore.markType(TextCellModel, 'TextCellModel', CellModel.$);
        TextCellModel.kq = CellModel.ez("TextValue");
        return TextCellModel;
    }(CellModel));
    /**
     * @hidden
     */
    var TextHeaderCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextHeaderCellModel, _super);
        function TextHeaderCellModel() {
            var _this = _super.call(this) || this;
            _this.k0 = false;
            _this.ky = 0;
            _this.ku = 0;
            _this.lc = null;
            _this.kw = 0;
            return _this;
        }
        Object.defineProperty(TextHeaderCellModel.prototype, "k1", {
            get: function () {
                return this.k0;
            },
            set: function (a) {
                var b = this.k0;
                this.k0 = a;
                if (this.k0 != b) {
                    this.jm("IsColumnOptionsEnabled", TextHeaderCellModel.k5, b, this.k0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCellModel.prototype, "kz", {
            get: function () {
                return this.ky;
            },
            set: function (a) {
                var b = this.ky;
                this.ky = a;
                if (this.ky != b) {
                    this.jm("SortIndicatorStyle", TextHeaderCellModel.k6, igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, b), igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, this.ky));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCellModel.prototype, "kv", {
            get: function () {
                return this.ku;
            },
            set: function (a) {
                var b = this.ku;
                this.ku = a;
                if (this.ku != b) {
                    this.jm("ColumnOptionsIconAlignment", TextHeaderCellModel.k2, igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, this.ku));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCellModel.prototype, "ld", {
            get: function () {
                return this.lc;
            },
            set: function (a) {
                var b = this.lc;
                this.lc = a;
                if (this.lc != b) {
                    this.jm("ColumnOptionsIconColor", TextHeaderCellModel.k4, b, this.lc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCellModel.prototype, "kx", {
            get: function () {
                return this.kw;
            },
            set: function (a) {
                var b = this.kw;
                this.kw = a;
                if (this.kw != b) {
                    this.jm("ColumnOptionsIconBehavior", TextHeaderCellModel.k3, igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, this.kw));
                }
            },
            enumerable: true,
            configurable: true
        });
        TextHeaderCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "IsColumnOptionsEnabled") {
                this.k1 = b;
            }
            else if (a == "SortIndicatorStyle") {
                this.kz = igniteuiReactCore.EnumUtil.getEnumValue(SortIndicatorStyle_$type, b);
            }
            else if (a == "ColumnOptionsIconAlignment") {
                this.kv = igniteuiReactCore.EnumUtil.getEnumValue(ColumnOptionsIconAlignment_$type, b);
            }
            else if (a == "ColumnOptionsIconColor") {
                this.ld = b;
            }
            else if (a == "ColumnOptionsIconBehavior") {
                this.kx = igniteuiReactCore.EnumUtil.getEnumValue(ColumnOptionsIconBehavior_$type, b);
            }
        };
        TextHeaderCellModel.prototype.gn = function (a) {
            if (a == "IsColumnOptionsEnabled") {
                return this.k1;
            }
            if (a == "SortIndicatorStyle") {
                return igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, this.kz);
            }
            if (a == "ColumnOptionsIconAlignment") {
                return igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, this.kv);
            }
            if (a == "ColumnOptionsIconColor") {
                return this.ld;
            }
            if (a == "ColumnOptionsIconBehavior") {
                return igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, this.kx);
            }
            return _super.prototype.gn.call(this, a);
        };
        TextHeaderCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new TextHeaderCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            return b;
        };
        TextHeaderCellModel.$t = igniteuiReactCore.markType(TextHeaderCellModel, 'TextHeaderCellModel', TextCellModel.$);
        TextHeaderCellModel.k5 = CellModel.ez("IsColumnOptionsEnabled");
        TextHeaderCellModel.k6 = CellModel.ez("SortIndicatorStyle");
        TextHeaderCellModel.k2 = CellModel.ez("ColumnOptionsIconAlignment");
        TextHeaderCellModel.k4 = CellModel.ez("ColumnOptionsIconColor");
        TextHeaderCellModel.k3 = CellModel.ez("ColumnOptionsIconBehavior");
        return TextHeaderCellModel;
    }(TextCellModel));
    /**
     * @hidden
     */
    var ICellPresenter_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'ICellPresenter');
    /**
     * @hidden
     */
    var DataSourceNotificationBridge = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataSourceNotificationBridge, _super);
        function DataSourceNotificationBridge(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        DataSourceNotificationBridge.prototype.rangeActualized = function (a, b) {
            this.a.rk(a, b);
        };
        DataSourceNotificationBridge.prototype.notifySetItem = function (a, b, c) {
            this.a.r9(a, b, c);
        };
        DataSourceNotificationBridge.prototype.notifyClearItems = function () {
            this.a.q6();
        };
        DataSourceNotificationBridge.prototype.notifyInsertItem = function (a, b) {
            this.a.rv(a, b);
        };
        DataSourceNotificationBridge.prototype.notifyRemoveItem = function (a, b) {
            this.a.r0(a, b);
        };
        DataSourceNotificationBridge.$t = igniteuiReactCore.markType(DataSourceNotificationBridge, 'DataSourceNotificationBridge', igniteuiReactCore.Base.$, [igniteuiReactCore.IDataSourceUpdateNotifier_$type]);
        return DataSourceNotificationBridge;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnController = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnController, _super);
        function ColumnController(a, b, c) {
            var _this = _super.call(this) || this;
            _this.i = null;
            _this.n = false;
            _this.c = null;
            _this.a = null;
            _this.u = new igniteuiReactCore.HashSet$1(igniteuiReactCore.String_$type, 0);
            _this.m = false;
            _this.k = null;
            _this.l = null;
            _this.n = b;
            _this.i = a;
            _this.l = c;
            return _this;
        }
        Object.defineProperty(ColumnController.prototype, "p", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.m = false;
                }
                this.t();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnController.prototype, "d", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.m = false;
                }
                this.t();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnController.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.m = false;
                    this.u.clear();
                    for (var c = 0; c < this.a.length; c++) {
                        this.u.add_1(this.a[c]);
                    }
                }
                this.t();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnController.prototype, "j", {
            get: function () {
                return this.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnController.prototype, "o", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                this.m = a;
            },
            enumerable: true,
            configurable: true
        });
        ColumnController.prototype.t = function () {
            if (this.m) {
                return false;
            }
            if (this.c == null) {
                return false;
            }
            var a = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Boolean_$type, 0);
            for (var b = 0; b < this.i.count; b++) {
                var c = this.i._inner[b];
                if (!c.f8) {
                    a.item(c.hy, true);
                }
            }
            var d = false;
            for (var e = this.i.count - 1; e >= 0; e--) {
                if (this.i._inner[e].f8) {
                    this.k.removeExternalColumn(this.i._inner[e].externalObject);
                }
            }
            if (this.n && this.c != null) {
                d = this.q(a, this.c);
            }
            this.m = true;
            if (d) {
                this.l();
            }
            return d;
        };
        ColumnController.prototype.q = function (a, b) {
            var c = new GridColumnCollection();
            for (var d = 0; d < b.propertyNames.length; d++) {
                var e = b.propertyNames[d];
                if (!a.containsKey(e)) {
                    if (this.b != null && !this.u.contains(e)) {
                        continue;
                    }
                    var f = this.e(e, b.propertyTypes[d]);
                    c.add(f);
                    a.item(e, true);
                }
            }
            var g = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Boolean_$type, 0);
            for (var h = 0; h < c.count; h++) {
                g.item(c._inner[h].hy, true);
            }
            var i = false;
            var j = this.i.count;
            for (var k = 0; k < c.count; k++) {
                i = true;
                this.k.insertExternalColumnAtIndex(j + k, c._inner[k].externalObject);
            }
            return i;
        };
        ColumnController.prototype.e = function (a, b) {
            var c = null;
            switch (b) {
                case 8:
                case 9:
                    c = this.k.createDateTimeColumn(a);
                    break;
                case 5:
                case 6:
                case 7:
                case 1:
                case 3:
                case 4:
                case 10:
                    c = this.k.createNumericColumn(a);
                    break;
                case 11:
                    c = this.k.createTextColumn(a);
                    break;
                case 0:
                case 2:
                    c = this.k.createTextColumn(a);
                    break;
            }
            c.hy = a;
            c.f8 = true;
            c.id = (igniteuiReactCore.createGuid());
            return c;
        };
        ColumnController.prototype.h = function (a) {
            if (a.az < 0 || this.i.count == 0 || this.i.count <= a.az) {
                return null;
            }
            return this.i._inner[a.az];
        };
        ColumnController.prototype.f = function (a) {
            for (var b = 0; b < this.i.count; b++) {
                if (this.i._inner[b].g2 == a) {
                    return this.i._inner[b];
                }
            }
            return null;
        };
        ColumnController.prototype.g = function (a) {
            for (var b = 0; b < this.i.count; b++) {
                if (this.i._inner[b].h0() == a) {
                    return this.i._inner[b];
                }
            }
            return null;
        };
        ColumnController.prototype.r = function (a) {
            return false;
        };
        ColumnController.prototype.s = function (a) {
            return false;
        };
        ColumnController.$t = igniteuiReactCore.markType(ColumnController, 'ColumnController');
        return ColumnController;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var EditingManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditingManager, _super);
        function EditingManager(a) {
            var _this = _super.call(this) || this;
            _this.f = null;
            _this.c = null;
            _this.b = null;
            _this.e = null;
            _this.n = 0;
            _this.m = 0;
            _this.j = false;
            _this._item = null;
            _this.k = false;
            _this.f = a;
            _this.n = -1;
            _this.m = -1;
            return _this;
        }
        Object.defineProperty(EditingManager.prototype, "item", {
            get: function () {
                return this._item;
            },
            set: function (a) {
                this._item = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditingManager.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditingManager.prototype, "a", {
            get: function () {
                return this.d != null ? this.d.kv : null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditingManager.prototype, "l", {
            get: function () {
                return this.a != null ? this.a.en : -1;
            },
            enumerable: true,
            configurable: true
        });
        EditingManager.prototype.v = function (a) {
            if (a == null || a.k.az < 0 || a.k.w < 0) {
                return;
            }
            if (this.c == null) {
                this.c = new EditorCellModel();
                this.c.c = new DefaultCellActionManager(this.f, this.c);
                this.c.d = new DefaultGridInfoRequestor(this.f, this.c);
                this.c.k = new CellPath(1, -1000, 0, -1000);
                this.c.o = this.f;
                var b = this.f;
                b.viewportChanged = igniteuiReactCore.delegateCombine(b.viewportChanged, igniteuiReactCore.runOn(this, this.r));
            }
            if (this.e == null) {
                this.e = new EditorRowCellModel();
                this.e.k = new CellPath(1, -1001, 0, -1001);
                this.e.o = this.f;
                this.e.ke = GridStyleRepository.bf;
            }
            if (this.j && this.c.lp != null) {
                return;
            }
            this.j = true;
            this.b = this.f.actualColumns._inner[a.k.az];
            var c = this.g(this.b, a.k.w);
            if (this.c.q != c) {
                if (this.c.q != null) {
                    this.c.q.f(this.c.k);
                }
                c.s(this.c.k, this.c);
            }
            this.c.q = c;
            this.c.kv = a;
            this.c.le = a.go;
            this.c.lp = a.hl;
            this.c.kx = this.b.fc;
            this.c.ld = this.b.g4;
            this.c.lj = this.b.hu;
            this.c.kr = this.b.em;
            this.c.kz = false;
            this.c.kt = this.f.actualDataSource.resolveSchemaPropertyType(this.b.hy);
            this.n = a.k.w;
            this.m = a.k.az;
            this.item = a.gp;
            a.a1 = true;
            if (this.f.cf == 3) {
                if (this.e.q != this.f.model.ar) {
                    if (this.e.q != null) {
                        this.e.q.f(this.e.k);
                    }
                    this.f.model.ar.s(this.e.k, this.e);
                }
                this.e.q = this.f.model.ar;
                this.e.kr = a;
                this.e.by = 1;
                if (this.f.uz != null) {
                    this.e.ka = this.f.uz;
                }
                else {
                    this.e.ka = GridStyleRepository.av;
                }
                this.e.dd = igniteuiReactCore.truncate(this.f.v0.c);
                this.e.di = igniteuiReactCore.truncate(this.f.v0.e);
                this.e.dg = igniteuiReactCore.truncate(this.f.v0.d);
                this.e.db = igniteuiReactCore.truncate(this.f.v0.b);
            }
            this.s();
        };
        EditingManager.prototype.h = function (a, b) {
            if (this.c != null && this.c.kv != null && this.j) {
                var c = true;
                if (a) {
                    c = this.f.i2(this.c.kv, this.c.le);
                }
                else {
                    if (this.l != -1) {
                        this.f.so(this.l);
                    }
                    this.c.lp = null;
                }
                if (c && this.c.lp == null) {
                    this.j = false;
                    this.c.kv.a1 = false;
                    this.c.kv = null;
                    this.c.go = null;
                    this.c.le = null;
                    this.c.kz = true;
                    this.c.cc = -1000;
                    this.c.cd = -1000;
                    this.b = null;
                    if (this.f.cf == 3 && b) {
                        this.e.kr = null;
                        this.e.by = 0;
                        this.e.cc = -1000;
                        this.e.cd = -1000;
                    }
                    this.s();
                }
            }
            return !this.j;
        };
        EditingManager.prototype.p = function () {
            if (this.e != null && this.f.cf == 3) {
                this.e.kr = null;
                this.e.by = 0;
                this.e.cc = -1000;
                this.e.cd = -1000;
                this.n = -1;
            }
        };
        EditingManager.prototype.t = function (a) {
            if (this.c != null) {
                this.c.lp = a;
                this.s();
            }
        };
        EditingManager.prototype.u = function (a) {
            if (this.c != null) {
                this.c.kv = a;
            }
            if (this.e != null) {
                this.e.kr = a;
            }
        };
        EditingManager.prototype.i = function (a) {
            return a.k.w == this.n;
        };
        EditingManager.prototype.s = function () {
            this.f.renderingEngine.refresh(this.f.model, false);
        };
        EditingManager.prototype.g = function (a, b) {
            if (a.fk != 0) {
                if (this.f.d9.isRowPinned(b)) {
                    return this.f.model.ar;
                }
                else {
                    return this.f.model.av;
                }
            }
            else {
                if (this.f.d9.isRowPinned(b)) {
                    return this.f.model.a2;
                }
                else {
                    return this.f.model.ba;
                }
            }
        };
        EditingManager.prototype.r = function (a, b) {
            this.q();
        };
        EditingManager.prototype.q = function () {
            if (!this.j) {
                return;
            }
            var a = this.f.vp.top + this.f.kk + this.f.lg + this.f.model.cv;
            var b = this.f.vp.bottom;
            var c = this.f.vp.left;
            var d = this.f.vp.right;
            if (this.d.cc > d || this.d.cc + this.d.gf < c || this.d.cd > b || this.d.cd + this.d.e0 < a) {
                if (this.d.q != null) {
                    this.f.de.j(this.d.k, this.d.q, this.f.model);
                    this.d.q = null;
                }
            }
            else {
                if (this.d.q == null && this.b != null && this.a != null) {
                    var e = this.g(this.b, this.a.k.w);
                    e.s(this.d.k, this.d);
                    this.d.q = e;
                }
            }
            if (this.e.cd > b || this.e.cd + this.e.e0 < a) {
                if (this.e.q != null) {
                    this.f.de.j(this.e.k, this.e.q, this.f.model);
                    this.e.q = null;
                }
            }
            else {
                if (this.e.q == null && this.b != null && this.a != null) {
                    var f = this.f.model.ar;
                    f.s(this.e.k, this.e);
                    this.e.q = f;
                }
            }
        };
        EditingManager.$t = igniteuiReactCore.markType(EditingManager, 'EditingManager');
        return EditingManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Grid = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Grid, _super);
        function Grid() {
            var _this = _super.call(this) || this;
            _this.lm = null;
            _this._propertySetter = null;
            _this.ed = null;
            _this.eb = null;
            _this.columnExchangingAnimationCompleted = null;
            _this.columnExchangingAnimationCanceled = null;
            _this.columnShowingAnimationCompleted = null;
            _this.columnShowingAnimationCanceled = null;
            _this.filterExpressionsChanging = null;
            _this.filterExpressionsChanged = null;
            _this.columnMovingAnimationCompleted = null;
            _this.columnMovingAnimationCanceled = null;
            _this.columnHidingAnimationCompleted = null;
            _this.columnHidingAnimationCanceled = null;
            _this.cellPreviewPointerDown = null;
            _this.cellPreviewPointerUp = null;
            _this.cellPointerDown = null;
            _this.cellPointerUp = null;
            _this.cellClicked = null;
            _this.j3 = -1;
            _this.bt = 0;
            _this.bf = 0;
            _this.d5 = null;
            _this.gk = true;
            _this.ua = null;
            _this.t2 = null;
            _this.vu = new igniteuiReactCore.Thickness(0, 1);
            _this.vo = null;
            _this.aq = null;
            _this.gc = false;
            _this.hb = false;
            _this.j6 = -1;
            _this.ke = -1;
            _this.gm = false;
            _this.gl = false;
            _this.jd = 0;
            _this.jk = 0;
            _this.ji = 0;
            _this.jj = 0;
            _this.i3 = new Date();
            _this.i8 = 0;
            _this.i9 = 0;
            _this.ja = 0;
            _this.jb = 0;
            _this.as = null;
            _this.ki = 0;
            _this.kh = 0;
            _this.gv = false;
            _this.ka = -1;
            _this.kj = -1;
            _this.ej = 0;
            _this.an = null;
            _this.i6 = -1;
            _this.jh = 0;
            _this.je = 0;
            _this.jf = 0;
            _this.am = null;
            _this.hx = false;
            _this.gy = false;
            _this.g0 = false;
            _this.gx = false;
            _this.cj = new GridAnimationManager();
            _this._delayedExecutionManager = null;
            _this.ek = null;
            _this.d8 = null;
            _this.a1 = null;
            _this.dd = new GridLayerController();
            _this.e5 = new SpatialEngine();
            _this.c8 = null;
            _this.ez = null;
            _this.ai = null;
            _this.e3 = null;
            _this.cb = null;
            _this.fz = null;
            _this.ex = null;
            _this.ev = new SectionFooter();
            _this.e7 = null;
            _this.e9 = null;
            _this.et = null;
            _this.d1 = null;
            _this.d3 = null;
            _this.bv = null;
            _this.bh = null;
            _this.eh = null;
            _this.b = null;
            _this.c = null;
            _this.fb = new VisibilityEngine();
            _this._viewportManager = null;
            _this.i5 = 0;
            _this.i4 = 0;
            _this.ff = 2;
            _this.jz = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(36));
            _this.kb = -1;
            _this.b8 = ColumnWidth.a;
            _this.i7 = 0;
            _this.jy = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(36));
            _this.j4 = -1;
            _this.kg = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.ln = null;
            _this.kf = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.kd = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.j2 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.dz = 0;
            _this.ce = 1;
            _this.cc = 2;
            _this.f4 = true;
            _this.kc = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.gj = true;
            _this.bx = 1;
            _this.bo = 0;
            _this.ak = 0;
            _this.er = 1;
            _this.eo = 1;
            _this.av = 1;
            _this.cy = new GridColumnAnimationSettings();
            _this.cl = new GridAnimationSettings();
            _this.bq = 1;
            _this.by = 1;
            _this.bc = 1;
            _this.a9 = 1;
            _this.a3 = 1;
            _this.vv = new igniteuiReactCore.Thickness(1, 0, 0, 0, 0);
            _this.ds = 5;
            _this.cg = 1;
            _this.dq = 1;
            _this.f8 = false;
            _this.ab = new GridSelectedItemsCollection();
            _this.af = new GridSelectedKeysCollection();
            _this.dl = new GridSelectedCellsCollection();
            _this.di = new GridSelectedCellRangesCollection();
            _this.f7 = false;
            _this.aa = new GridSelectedItemsCollection();
            _this.ae = new GridSelectedKeysCollection();
            _this.gb = true;
            _this.gh = true;
            _this.gi = true;
            _this.tw = null;
            _this.ug = null;
            _this.uj = null;
            _this.un = null;
            _this.jg = NaN;
            _this.fi = null;
            _this.jc = NaN;
            _this.t1 = null;
            _this.ui = null;
            _this.t9 = null;
            _this.t8 = null;
            _this.cv = null;
            _this.cu = null;
            _this.tv = null;
            _this.tx = null;
            _this.t6 = null;
            _this.e1 = 0;
            _this.fh = null;
            _this.uf = null;
            _this.uh = null;
            _this.fk = null;
            _this.fl = null;
            _this.fn = null;
            _this.um = null;
            _this.fm = null;
            _this.fo = null;
            _this.uq = null;
            _this.uk = null;
            _this.uo = null;
            _this.ul = null;
            _this.up = null;
            _this.j9 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(2));
            _this.j5 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.t5 = null;
            _this.t3 = null;
            _this.t7 = null;
            _this.fj = null;
            _this.ub = null;
            _this.t4 = null;
            _this.ue = null;
            _this.uc = null;
            _this.ud = null;
            _this.j1 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(4));
            _this.j0 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(2));
            _this.t0 = null;
            _this.ty = null;
            _this.gu = false;
            _this.bj = 0;
            _this.tz = null;
            _this.bl = 0;
            _this.tu = null;
            _this.vt = GridStyleRepository.bp;
            _this.vr = GridStyleRepository.bp;
            _this.vs = new igniteuiReactCore.Thickness(0, NaN);
            _this.go = false;
            _this.tp = GridStyleRepository.r;
            _this.to = new igniteuiReactCore.CornerRadius(0, NaN);
            _this.tn = GridStyleRepository.r;
            _this.ga = true;
            _this.fx = new DefaultPlatformPixelConverter();
            _this.d6 = null;
            _this.em = null;
            _this.fd = new VisualModel();
            _this.b3 = null;
            _this.a6 = null;
            _this.u = null;
            _this.b6 = null;
            _this.sortDescriptionsChanged = null;
            _this.groupDescriptionsChanged = null;
            _this.columnHiddenChanged = null;
            _this.columnPinnedChanged = null;
            _this.cellValueChanging = null;
            _this.dataCommitted = null;
            _this.dataCommitting = null;
            _this.gw = false;
            _this.s = 0;
            _this.ge = false;
            _this.gd = false;
            _this.f5 = false;
            _this.q = 0;
            _this.gg = false;
            _this.gf = true;
            _this.f6 = false;
            _this.dx = 4;
            _this.f3 = true;
            _this.propertyChanged = null;
            _this.gt = false;
            _this.y = null;
            _this.w = null;
            _this.d = null;
            _this.a = null;
            _this.f2 = true;
            _this.sizeChanged = null;
            _this.viewportChanged = null;
            _this.j7 = -1;
            _this.j8 = -1;
            _this.i0 = false;
            _this.actualColumnsChanged = null;
            _this.c0 = new GridColumnCollection();
            _this.gn = false;
            _this.iy = false;
            _this.iz = false;
            _this.f1 = false;
            _this.hh = false;
            _this.hw = false;
            _this.gz = false;
            _this.ar = null;
            _this.columnsAutoGenerated = null;
            _this.selectedItemsChanged = null;
            _this.selectedKeysChanged = null;
            _this.selectedCellsChanged = null;
            _this.activeCellChanged = null;
            _this.selectedCellRangesChanged = null;
            _this.at = null;
            _this.f9 = false;
            _this.gs = true;
            _this.gr = true;
            _this.gq = true;
            _this.columnWidthChanged = null;
            _this.cellEditStarted = null;
            _this.cellEditEnded = null;
            _this.rowEditStarted = null;
            _this.rowEditEnded = null;
            _this.gp = false;
            _this.ey = new SectionHeader();
            _this.eu = new RowSeparator();
            _this.d2 = new HeaderRowSeparator();
            _this.d4 = new HeaderSeparator();
            _this.bw = new ColumnResizingSeparator();
            _this.bi = new ColumnMovingSeparator();
            _this.ei = new PinnedAreaSeparator();
            _this.e8 = new SummaryRowRoot();
            _this.fa = new SummaryRowSection();
            _this.vs = _this.vt;
            _this.to = _this.tp;
            _this.tu = GridStyleRepository.ax;
            _this.a1 = new ColumnController(_this.c0, _this.g3, igniteuiReactCore.runOn(_this, _this.qk));
            var a = _this.a1.j;
            a.collectionChanged = igniteuiReactCore.delegateCombine(a.collectionChanged, igniteuiReactCore.runOn(_this, _this.pk));
            _this.d8 = new DataAdapter(_this.a1);
            _this.em = new ResponsiveStatesCollection();
            _this.ek = new ResponsiveEngine(_this);
            _this.ek.g = _this.em;
            _this.hh = _this.iq();
            _this.hw = _this.ir();
            _this.e0 = new SelectionManager(_this, _this.ck);
            _this.aj = new ActivationManager(_this, _this.ck);
            _this.ab.af(igniteuiReactCore.runOn(_this, _this.s5));
            _this.af.af(igniteuiReactCore.runOn(_this, _this.s6));
            _this.dl.an(igniteuiReactCore.runOn(_this, _this.s4));
            var b = _this.di;
            b.collectionChanged = igniteuiReactCore.delegateCombine(b.collectionChanged, igniteuiReactCore.runOn(_this, _this.s3));
            _this.aa.af(igniteuiReactCore.runOn(_this, _this.se));
            _this.ae.af(igniteuiReactCore.runOn(_this, _this.sf));
            _this.b3 = new ColumnSortDescriptionCollection();
            _this.a6 = new ColumnGroupDescriptionCollection();
            _this.b6 = new ColumnSummaryDescriptionCollection();
            _this.b3.l(igniteuiReactCore.runOn(_this, _this.tb));
            _this.a6.l(igniteuiReactCore.runOn(_this, _this.p6));
            _this.b6.l(igniteuiReactCore.runOn(_this, _this.tc));
            _this.u = new igniteuiReactCore.FilterExpressionCollection();
            _this.u.m(igniteuiReactCore.runOn(_this, _this.p3));
            _this.e4 = new SortManager(_this);
            _this.cb = new EditingManager(_this);
            _this.d5 = new HoverManager(_this);
            return _this;
        }
        Object.defineProperty(Grid.prototype, "lq", {
            get: function () {
                return this.lm;
            },
            set: function (a) {
                this.lm = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "propertySetter", {
            get: function () {
                return this._propertySetter;
            },
            set: function (a) {
                this._propertySetter = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "externalGrid", {
            get: function () {
                return this.ed;
            },
            set: function (a) {
                this.ed = a;
                if (this.a2 != null) {
                    this.a2.k = this.ed;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "dragger", {
            get: function () {
                return this.eb;
            },
            set: function (a) {
                if (this.eb != null) {
                    var b = this.eb;
                    b.onDrag = igniteuiReactCore.delegateRemove(b.onDrag, igniteuiReactCore.runOn(this, this.rn));
                    var c = this.eb;
                    c.onDragEnd = igniteuiReactCore.delegateCombine(c.onDragEnd, igniteuiReactCore.runOn(this, this.rp));
                }
                this.eb = a;
                var d = this.eb;
                d.onDrag = igniteuiReactCore.delegateCombine(d.onDrag, igniteuiReactCore.runOn(this, this.rn));
                var e = this.eb;
                e.onDragEnd = igniteuiReactCore.delegateCombine(e.onDragEnd, igniteuiReactCore.runOn(this, this.rp));
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.q8 = function (a) {
            if (this.columnExchangingAnimationCompleted != null) {
                this.columnExchangingAnimationCompleted(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.q7 = function (a) {
            if (this.columnExchangingAnimationCanceled != null) {
                this.columnExchangingAnimationCanceled(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.o = function (a) {
            var b = this.a0(a.k);
            if (b == null) {
                return null;
            }
            return b.eo;
        };
        Grid.prototype.p = function (a) {
            var b = this.a0(a.k);
            if (b == null) {
                return 11;
            }
            if (this.actualDataSource == null) {
                return 11;
            }
            return this.actualDataSource.resolveSchemaPropertyType(b.hy);
        };
        Grid.prototype.rh = function (a) {
            if (this.columnShowingAnimationCompleted != null) {
                this.columnShowingAnimationCompleted(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.pv = function (a, b) {
            var _this = this;
            var c = this.a0(a.k);
            if (c == null) {
                return;
            }
            if (!igniteuiReactCore.Base.equalsStatic(c.eo, b)) {
                c.eo = b;
                if (this.filterExpressionsChanging != null) {
                    this.filterExpressionsChanging(this, ((function () {
                        var $ret = new GridFilterExpressionsEventArgs();
                        $ret.a = _this.v;
                        return $ret;
                    })()));
                }
            }
        };
        Grid.prototype.pu = function (a, b) {
            var c = this.a0(a.k);
            if (c == null) {
                return;
            }
            if (!igniteuiReactCore.Base.equalsStatic(c.eo, b)) {
                c.eo = b;
            }
        };
        Grid.prototype.rg = function (a) {
            if (this.columnShowingAnimationCanceled != null) {
                this.columnShowingAnimationCanceled(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.re = function (a) {
            if (this.columnMovingAnimationCompleted != null) {
                this.columnMovingAnimationCompleted(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.rd = function (a) {
            if (this.columnMovingAnimationCanceled != null) {
                this.columnMovingAnimationCanceled(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.ra = function (a) {
            if (this.columnHidingAnimationCompleted != null) {
                this.columnHidingAnimationCompleted(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.q9 = function (a) {
            if (this.columnHidingAnimationCanceled != null) {
                this.columnHidingAnimationCanceled(a.externalObject, new igniteuiReactCore.EventArgs());
            }
        };
        Grid.prototype.q2 = function (a) {
            var _this = this;
            if (this.cellPreviewPointerDown != null) {
                this.cellPreviewPointerDown(a, ((function () {
                    var $ret = new GridCellEventArgs();
                    $ret.cellInfo = a;
                    $ret.grid = _this;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.q3 = function (a) {
            var _this = this;
            if (this.cellPreviewPointerUp != null) {
                this.cellPreviewPointerUp(a, ((function () {
                    var $ret = new GridCellEventArgs();
                    $ret.cellInfo = a;
                    $ret.grid = _this;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.q0 = function (a) {
            var _this = this;
            if (this.cellPointerDown != null) {
                this.cellPointerDown(a, ((function () {
                    var $ret = new GridCellEventArgs();
                    $ret.cellInfo = a;
                    $ret.grid = _this;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.q1 = function (a) {
            var _this = this;
            if (this.cellPointerUp != null) {
                this.cellPointerUp(a, ((function () {
                    var $ret = new GridCellEventArgs();
                    $ret.cellInfo = a;
                    $ret.grid = _this;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.r4 = function (a, b) {
            this.qb(a);
        };
        Grid.prototype.ru = function (a) {
            if (a.v == 2) {
                this.tj(a.k.w);
            }
        };
        Grid.prototype.tj = function (a) {
            if (this.cb.j) {
                if (!this.ha(true)) {
                    return;
                }
                if (this.cf == 3) {
                    this.p1(true);
                }
            }
            var b = !this.actualDataSource.getIsRowExpandedAtIndex(a);
            this.actualDataSource.setIsRowExpandedAtIndex(a, b);
            var c = this.actualDataSource.getRowLevel(a);
            if (a < this.model.bf.w) {
                this.s2(a - c);
            }
        };
        Grid.prototype.rt = function (a) {
            if (a != null && this.cf != 3) {
                this.ha(true);
            }
        };
        Grid.prototype.qt = function (a) {
            if (a.v == 1) {
                if (this.hr()) {
                    if (this.cd == 2) {
                        this.ix(a);
                    }
                }
            }
        };
        Grid.prototype.qr = function (a, b, c, d) {
            var _this = this;
            this.externalGrid.focusScroller();
            if (a.v == 1) {
                if (this.cb.j && a != this.cb.a) {
                    if (!this.ha(true)) {
                        return;
                    }
                }
                if (a.k.w != this.j3) {
                    this.p1(true);
                }
                if (d && this.hr()) {
                    if (this.cd == 1 || (this.cf == 3 && a.k.w == this.j3)) {
                        this.ix(a);
                    }
                }
            }
            else if (a.v == 2 || a.v == 3) {
                this.ha(true);
                this.p1(true);
            }
            if (a.v == 0 && this.d0 != 4) {
                this.e4.d(this.a0(a.k));
            }
            if (this.dt == 5) {
                if (a.k.ag && !a.k.au) {
                    var e = this.model.br._inner[a.k.az].n;
                    if (this.dr == 1) {
                        if (b) {
                            this.si(a.k.w, e);
                        }
                        else {
                            if (c && this.at != null) {
                                var f = e;
                                var g = a.k.w;
                                this.dj.remove(this.at);
                                this.pm(Math.min(this.at.k, f), Math.max(this.at.k, f), Math.min(this.at.l, g), Math.max(this.at.l, g));
                            }
                            else {
                                this.sp();
                                this.pm(e, e, a.k.w, a.k.w);
                            }
                        }
                    }
                    else if (this.dr == 0) {
                        this.si(a.k.w, e);
                    }
                }
            }
            else {
                if (this.dr == 0) {
                    this.e0.an(a);
                }
                else if (this.dr == 1) {
                    if (b) {
                        this.e0.an(a);
                    }
                    else {
                        this.e0.am(a);
                    }
                }
            }
            if (this.ch == 1) {
                this.aj.x(a);
            }
            if (this.cellClicked != null) {
                this.cellClicked(a, ((function () {
                    var $ret = new GridCellEventArgs();
                    $ret.cellInfo = a;
                    $ret.grid = _this;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.si = function (a, b) {
            var c = false;
            for (var d = 0; d < this.dj.count; d++) {
                var e = this.dj._inner[d];
                if (e.k == b && e.i == b && e.l == a && e.j == a) {
                    this.sq(this.dj._inner[d]);
                    c = true;
                    break;
                }
            }
            if (!c) {
                this.pm(b, b, a, a);
            }
        };
        Object.defineProperty(Grid.prototype, "bu", {
            get: function () {
                return this.bt;
            },
            set: function (a) {
                var b = this.bt;
                this.bt = a;
                if (b != this.bt) {
                    this.rz("ColumnResizingMode", igniteuiReactCore.enumGetBox(ColumnResizingMode_$type, b), igniteuiReactCore.enumGetBox(ColumnResizingMode_$type, this.bt));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "bg", {
            get: function () {
                return this.bf;
            },
            set: function (a) {
                var b = this.bf;
                this.bf = a;
                if (b != this.bf) {
                    this.rz("ColumnMovingMode", igniteuiReactCore.enumGetBox(ColumnMovingMode_$type, b), igniteuiReactCore.enumGetBox(ColumnMovingMode_$type, this.bf));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "h4", {
            get: function () {
                return this.gk;
            },
            set: function (a) {
                var b = this.gk;
                this.gk = a;
                if (b != this.gk) {
                    this.rz("IsRowHoverEnabled", b, this.gk);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u7", {
            get: function () {
                return this.ua;
            },
            set: function (a) {
                var b = this.ua;
                this.ua = a;
                if (b != this.ua) {
                    this.rz("RowHoverBackground", b, this.ua);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "uz", {
            get: function () {
                return this.t2;
            },
            set: function (a) {
                var b = this.t2;
                this.t2 = a;
                if (b != this.t2) {
                    this.rz("EditRowBorder", b, this.t2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "v0", {
            get: function () {
                return this.vu;
            },
            set: function (a) {
                var b = this.vu;
                this.vu = a;
                if (b != this.vu) {
                    this.rz("EditRowBorderWidth", b, this.vu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.qy = function (a, b, c) {
            this.aq = a.k.aa();
            this.vo = { $type: igniteuiReactCore.Point_$type, x: b, y: c };
            this.gc = a.a6 && a.a7;
            if (this.dragger != null && this.bu != 2 && this.aq.h) {
                var d = this.a2.j._inner[a.k.az];
                if (d.ge) {
                    var e = this.model.br._inner[this.aq.az];
                    this.jh = e.k;
                    this.je = this.model.cf;
                    this.jf = this.model.cg;
                    this.ji = this.model.actualVisibleRegion.left;
                    this.jj = this.model.actualVisibleRegion.top;
                    var f = this.dragger.view.transformPoint(b, c);
                    this.ld = igniteuiReactCore.truncate((f.x + this.ji)) - (igniteuiReactCore.intDivide(this.kp, 2));
                    this.i6 = -1;
                    this.externalGrid.setResizeCursor();
                    this.dragger.dragStart(b, c, this.model.actualVisibleRegion.x, this.model.actualVisibleRegion.y, 1, this.aq, false);
                    if (this.bu == 0) {
                        this.sk();
                    }
                }
            }
        };
        Grid.prototype.qz = function (a, b, c) {
            this.aq = null;
        };
        Grid.prototype.qx = function (a, b, c) {
            var d = 0;
            for (var e = 0; e < this.model.br.count; e++) {
                var f = this.model.br._inner[e];
                d += f.k;
            }
            var g = this.dragger.view.transformPoint(b, c);
            if ((this.dragger == null || !this.dragger.isDragActive) && g.x >= d) {
                this.externalGrid.setDefaultCursor();
            }
            if (this.h4) {
                this.d5.f(-1);
            }
        };
        Object.defineProperty(Grid.prototype, "lb", {
            get: function () {
                return this.j6;
            },
            set: function (a) {
                this.j6 = a;
                this.hb = true;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.qw = function (a, b, c) {
            if (this.h4) {
                var d = false;
                var e = -1;
                if (a.k.ag || a.k.as || a.k.ah) {
                    d = true;
                    e = a.k.w;
                    if (a.k.ah && this.cb.j) {
                        e = this.cb.a.k.w;
                    }
                }
                else if (a.k.g || a.k.j) {
                    d = true;
                }
                if (d) {
                    if (this.i0) {
                        this.lb = e;
                    }
                    else {
                        this.d5.f(e);
                    }
                }
            }
        };
        Grid.prototype.ry = function (a, b, c) {
            if (this.dragger == null || !this.dragger.isDragActive) {
                if (a.k.h && this.bu != 2) {
                    var d = this.a2.j._inner[a.k.az];
                    if (d.ge) {
                        this.externalGrid.setResizeCursor();
                    }
                }
                else {
                    this.externalGrid.setDefaultCursor();
                }
            }
            else if (this.dragger.dragType != 1 && this.dragger.dragType != 2) {
                this.externalGrid.setDefaultCursor();
            }
        };
        Grid.prototype.pq = function () {
            if (this.ke != -1) {
                this.fz.teardownTicking(this.ke);
                this.ke = -1;
            }
        };
        Grid.prototype.rs = function (a, b, c, d) {
            this.ji = this.model.actualVisibleRegion.left;
            this.jj = this.model.actualVisibleRegion.top;
            if ((this.dragger == null || !this.dragger.isDragActive) && a.g && !a.h && this.bg != 1) {
                var e = this.a0(a);
                if (e != null && e.gc) {
                    this.externalGrid.ensureColumnsAreManual();
                }
                this.externalGrid.setHandCursor();
                this.dragger.dragStart(b, c, this.model.actualVisibleRegion.x, this.model.actualVisibleRegion.y, 2, a, d);
            }
            else if (this.dt == 5 && a.ag && !a.au) {
                if (!d) {
                    this.sp();
                }
                this.ki = a.w;
                this.kh = this.model.br._inner[a.az].n;
                this.gv = this.gc;
                if (this.ch == 1) {
                    this.aj.w(a);
                }
                this.dragger.dragStart(b, c, this.model.actualVisibleRegion.x, this.model.actualVisibleRegion.y, 0, a, d);
            }
        };
        Grid.prototype.rp = function (a, b) {
            this.pq();
            this.as = null;
            this.an = null;
            this.ka = -1;
            this.aq = null;
            if (this.dragger == null) {
                return;
            }
            if (this.dragger.dragType == 1) {
                this.externalGrid.setDefaultCursor();
                if (this.bu == 0) {
                    if (this.i6 != -1) {
                        var c = this.model.br._inner[this.dragger.cellPath.az];
                        this.ck.ag(this, this.cz, c, this.i6);
                    }
                    else {
                        this.renderingEngine.refresh(this.model, false);
                    }
                }
            }
            else if (this.dragger.dragType == 2) {
                this.externalGrid.setDefaultCursor();
                if (this.bg == 0) {
                    var d = true;
                    if ((this.kj != -1 && this.kj != this.dragger.cellPath.az) || this.ej != this.columns._inner[this.dragger.cellPath.az].fk) {
                        var e = this.columns._inner[this.dragger.cellPath.az].fk;
                        if (e != this.ej) {
                            this.iz = true;
                            this.qf(this.dragger.cellPath.az, this.kj);
                            this.iz = false;
                            this.sd(this.columns._inner[this.kj], this.ej);
                        }
                        else {
                            this.qf(this.dragger.cellPath.az, this.kj);
                        }
                        d = false;
                    }
                    if (d) {
                        this.sk();
                    }
                    this.kj = -1;
                }
            }
        };
        Grid.prototype.rn = function (a, b) {
            if (this.dragger == null) {
                return;
            }
            this.i8 = b.startX;
            this.i9 = b.startY;
            this.ja = b.currentX;
            this.jb = b.currentY;
            switch (this.dragger.dragType) {
                case 0:
                    this.rr(false);
                    break;
                case 1:
                    this.rq();
                    break;
                case 2:
                    this.ro(false);
                    break;
            }
        };
        Object.defineProperty(Grid.prototype, "ld", {
            get: function () {
                return this.ka;
            },
            set: function (a) {
                if (this.ka != a) {
                    this.ka = a;
                }
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.ro = function (a) {
            var _this = this;
            if (this.dragger == null) {
                return;
            }
            var b = this.ja + this.model.actualVisibleRegion.x;
            if (a || !this.g4(b, NaN)) {
                var c = this.dragger.cellPath.az;
                var d = this.ld;
                this.ej = 0;
                for (var e = 0; e < this.model.br.count; e++) {
                    var f = this.model.br._inner[e];
                    if (f.a == 3) {
                        continue;
                    }
                    var g = f.l;
                    if (f.d == 1) {
                        g = f.l + this.model.actualVisibleRegion.x;
                    }
                    var h = g + f.k;
                    var i = g + (igniteuiReactCore.intDivide(f.k, 2));
                    if ((f.n == 0 && b < g) || (b > g && b <= i)) {
                        d = g;
                        if (e != c) {
                            c = e < this.dragger.cellPath.az ? e : e - 1;
                        }
                        if (f.d != 1 && d < this.model.actualVisibleRegion.x + this.model.cf) {
                            d = this.model.actualVisibleRegion.x + this.model.cf;
                        }
                        this.ej = f.d;
                        break;
                    }
                    else if ((b > i && b < h) || (e == this.model.br.count - 1 && b > h)) {
                        d = h - this.kn;
                        if (e != c) {
                            c = e < this.dragger.cellPath.az ? e + 1 : e;
                        }
                        this.ej = f.d;
                        break;
                    }
                }
                if (d != this.ld) {
                    var j = this.ld;
                    this.ld = igniteuiReactCore.truncate(d);
                    if (j == -1) {
                        this.renderingEngine.invalidateVisibility(function () { return _this.fc.l(_this); });
                        this.renderingEngine.refresh(this.model, true);
                    }
                    else {
                        if (this.an == null) {
                            this.an = this.de.c(new CellPath(1, -400, 0, -102), this.model);
                        }
                        this.an.cc = this.ld;
                        this.renderingEngine.refresh(this.model, false);
                    }
                    this.kj = c;
                }
            }
        };
        Grid.prototype.rq = function () {
            var _this = this;
            var a = this.a2.h(this.dragger.cellPath);
            if (this.an == null) {
                this.an = this.de.c(new CellPath(1, -400, 0, -102), this.model);
            }
            var b = (this.ja + this.model.actualVisibleRegion.x) - this.i8;
            var c = igniteuiReactCore.isNaN_(a.gm) ? igniteuiReactCore.isNaN_(this.jn) ? 0 : this.jn : a.gm;
            this.i6 = Math.max(this.jh + b, Math.max(c, 10));
            var d = 20;
            if (a.fk == 1) {
                d = Math.min(20, this.vp.width - this.model.cf);
                var e = this.vp.width - d - this.model.cg;
                var f = this.je + (this.i6 - this.jh);
                if (f > e) {
                    this.i6 = this.i6 - (f - e);
                }
            }
            else if (a.fk == 2) {
                d = Math.min(20, this.vp.width - this.model.cg);
                var g = this.vp.width - d - this.model.cf;
                var h = this.jf + (this.i6 - this.jh);
                if (h > g) {
                    this.i6 = this.i6 - (h - g);
                }
            }
            if (this.bu == 0) {
                this.ld = igniteuiReactCore.truncate((this.i8 - this.jh + this.i6)) - (igniteuiReactCore.intDivide(this.kp, 2));
                if (this.an != null) {
                    this.an.cc = this.ld;
                    this.renderingEngine.refresh(this.model, false);
                }
            }
            else {
                var i = ((function () {
                    var $ret = new ColumnWidth();
                    $ret.f = _this.i6;
                    $ret.c = false;
                    return $ret;
                })());
                if (!igniteuiReactCore.isNaN_(a.gm)) {
                    i.e = a.gm;
                }
                a.width = i;
            }
        };
        Grid.prototype.rr = function (a) {
            if (a || !this.g4(this.ja + this.model.actualVisibleRegion.x, this.jb + this.model.actualVisibleRegion.y)) {
                var b = this.ja + this.model.actualVisibleRegion.x;
                var c = this.vq(b, this.i9, this.ja, this.jb);
                var d = this.au(c, this.ki, this.kh, this.gv);
                if (this.as == null) {
                    this.as = d;
                    this.pl(this.as);
                }
                else {
                    this.tm(d);
                }
            }
        };
        Grid.prototype.vq = function (a, b, c, d) {
            c += this.model.actualVisibleRegion.x;
            d += this.model.actualVisibleRegion.y;
            return new igniteuiReactCore.Rect(0, Math.min(a, c), Math.min(b, d), Math.abs(c - a), Math.abs(d - b));
        };
        Grid.prototype.ap = function (a, b) {
            if (this.fd == null) {
                return null;
            }
            return this.fd.e(a, b);
        };
        Grid.prototype.au = function (a, b, c, d) {
            var e = this.model.al.q;
            var f = this.model.a0.q;
            var g = this.model.a3.q;
            var h = this.model.an.q;
            var i = new igniteuiReactCore.List$1(CellModel.$, 1, f);
            i.o(e);
            i.o(g);
            i.o(h);
            var j = b;
            var k = c;
            var l = this.ja + this.model.actualVisibleRegion.x;
            for (var m = 0; m < i.count; m++) {
                var n = i._inner[m];
                if (!n.k.ag || n.k.au) {
                    continue;
                }
                if (l < this.model.actualVisibleRegion.x + this.model.cf && n.k.d != 1) {
                    continue;
                }
                if (l > this.model.actualVisibleRegion.right - this.model.cg && n.k.d != 2) {
                    continue;
                }
                if (this.dt == 5) {
                    if (d) {
                        if (!n.a6 || (n.a6 && !n.a7)) {
                            continue;
                        }
                    }
                    else {
                        if (n.a6 && n.a7) {
                            continue;
                        }
                    }
                    var o = new igniteuiReactCore.Rect(0, n.cc, n.cd, n.gf, n.e0);
                    if (a.intersectsWith(o)) {
                        var p = this.model.br._inner[n.k.az].n;
                        var q = Math.abs(n.k.w - b);
                        var r = Math.abs(Math.max(0, p) - c);
                        var s = Math.abs(j - b);
                        var t = Math.abs(k - c);
                        if (q > s) {
                            j = n.k.w;
                        }
                        if (r > t && !n.k.au) {
                            k = p;
                        }
                    }
                }
            }
            var u = new CellRange();
            u.k = Math.min(c, k);
            u.i = Math.max(c, k);
            u.l = Math.min(b, j);
            u.j = Math.max(b, j);
            return u;
        };
        Grid.prototype.g4 = function (a, b) {
            var c = 20;
            var d = 20;
            var e = new igniteuiReactCore.Rect(0, this.model.actualVisibleRegion.x + d, this.model.actualVisibleRegion.y + c, this.model.actualVisibleRegion.width - d * 2, this.model.actualVisibleRegion.height - c * 2);
            var f = 5;
            var g = 1000;
            var h = 5;
            var i = 1000;
            if (!this.gv && !igniteuiReactCore.isNaN_(b)) {
                if (b > e.bottom) {
                    var j = b - e.bottom;
                    this.jk = Math.min(j * f, g);
                    this.gm = true;
                }
                else if (b < e.top) {
                    var k = e.top - b;
                    this.jk = -Math.min(k * f, g);
                    this.gm = true;
                }
                else {
                    this.jk = 0;
                    this.gm = false;
                }
            }
            if (a > e.right) {
                var l = a - e.right;
                this.jd = Math.min(l * h, i);
                this.gl = true;
            }
            else if (a < e.left) {
                var m = e.left - a;
                this.jd = -Math.min(m * h, i);
                this.gl = true;
            }
            else {
                this.jd = 0;
                this.gl = false;
            }
            if ((this.gm || this.gl) && this.ke == -1) {
                this.i3 = igniteuiReactCore.dateNow();
                this.ke = this.fz.setupTicking(igniteuiReactCore.runOn(this, this.p0));
                this.fz.requestFrame(this.ke);
            }
            if (!this.gm && !this.gl) {
                this.pq();
            }
            return this.gl || this.gm;
        };
        Grid.prototype.p0 = function () {
            if (this.dragger == null) {
                return;
            }
            var a = igniteuiReactCore.dateNow();
            var b = igniteuiReactCore.timeSpanTotalSeconds((+a - +(this.i3)));
            this.i3 = a;
            this.ji = Math.max(this.ji + this.jd * b, 0);
            this.jj = Math.max(this.jj + this.jk * b, 0);
            if (this.model.absoluteWidth > 0 && this.model.actualVisibleRegion.width > 0 && this.ji + this.model.actualVisibleRegion.width > this.model.absoluteWidth) {
                this.ji = Math.round(this.model.absoluteWidth - this.model.actualVisibleRegion.width);
            }
            if (this.model.absoluteHeight > 0 && this.model.actualVisibleRegion.height > 0 && this.jj + this.model.actualVisibleRegion.height > this.model.absoluteHeight) {
                this.jj = Math.round(this.model.absoluteHeight - this.model.actualVisibleRegion.height);
            }
            this.viewportManager.moveViewportTo(igniteuiReactCore.truncate(this.ji), igniteuiReactCore.truncate(this.jj));
            switch (this.dragger.dragType) {
                case 0:
                    this.rr(true);
                    break;
                case 1:
                    this.rq();
                    break;
                case 2:
                    this.ro(true);
                    break;
            }
            this.fz.requestFrame(this.ke);
        };
        Grid.prototype.tm = function (a) {
            if (a.k != this.as.k || a.i != this.as.i || a.l != this.as.l || a.j != this.as.j) {
                this.as.k = a.k;
                this.as.i = a.i;
                this.as.l = a.l;
                this.as.j = a.j;
                this.g0 = true;
                this.e0.at();
                this.g0 = false;
                this.qi(this.as);
            }
        };
        Grid.prototype.sv = function (a) {
            if (this.actualDataSource != null && this.actualDataSource.actualSchema != null) {
                a.m = this.actualDataSource.resolveSchemaPropertyType(a.f);
                a.o = true;
            }
        };
        Grid.prototype.sw = function (a) {
            if (this.actualDataSource != null && this.actualDataSource.actualSchema != null) {
                a.g = this.actualDataSource.resolveSchemaPropertyType(a.af);
                a.r = true;
            }
        };
        Grid.prototype.tc = function (a, b) {
            switch (b.action) {
                case 0:
                    if (b.newItems != null) {
                        for (var c = 0; c < b.newItems.count; c++) {
                            var d = b.newItems.item(c);
                            if (!d.r) {
                                this.sw(d);
                            }
                        }
                    }
                    break;
            }
        };
        Grid.prototype.p6 = function (a, b) {
            var _this = this;
            switch (b.action) {
                case 0:
                    if (b.newItems != null) {
                        for (var c = 0; c < b.newItems.count; c++) {
                            var d = b.newItems.item(c);
                            if (!d.o) {
                                this.sv(d);
                            }
                        }
                    }
                    break;
            }
            if (this.groupDescriptionsChanged != null) {
                this.groupDescriptionsChanged(this, ((function () {
                    var $ret = new GridGroupDescriptionsChangedEventArgs();
                    $ret.groupDescriptions = _this.a7;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.p3 = function (a, b) {
            var _this = this;
            if (this.filterExpressionsChanged != null) {
                this.filterExpressionsChanged(this, ((function () {
                    var $ret = new GridFilterExpressionsEventArgs();
                    $ret.a = _this.v;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.tb = function (a, b) {
            var e_1, _a;
            var _this = this;
            this.hx = true;
            try {
                switch (b.action) {
                    case 0:
                        if (b.newItems != null) {
                            for (var c = 0; c < b.newItems.count; c++) {
                                var d = b.newItems.item(c);
                                this.ti(d.f, this.b5(d.c));
                            }
                        }
                        break;
                    case 1:
                        if (b.oldItems != null) {
                            for (var e = 0; e < b.oldItems.count; e++) {
                                var f = b.oldItems.item(e);
                                this.ti(f.f, 0);
                            }
                        }
                        break;
                    case 2:
                        if (b.oldItems != null) {
                            for (var g = 0; g < b.oldItems.count; g++) {
                                var h = b.oldItems.item(g);
                                this.ti(h.f, 0);
                            }
                        }
                        if (b.newItems != null) {
                            for (var i = 0; i < b.newItems.count; i++) {
                                var j = b.newItems.item(i);
                                this.ti(j.f, this.b5(j.c));
                            }
                        }
                        break;
                    case 4:
                        try {
                            for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.columns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                                var k = _c.value;
                                k.e6 = 0;
                            }
                        }
                        catch (e_1_1) {
                            e_1 = { error: e_1_1 };
                        }
                        finally {
                            try {
                                if (_c && !_c.done && (_a = _b.return))
                                    _a.call(_b);
                            }
                            finally {
                                if (e_1)
                                    throw e_1.error;
                            }
                        }
                        break;
                }
                if (this.sortDescriptionsChanged != null) {
                    this.sortDescriptionsChanged(this, ((function () {
                        var $ret = new GridSortDescriptionsChangedEventArgs();
                        $ret.sortDescriptions = _this.b4;
                        return $ret;
                    })()));
                }
            }
            finally {
                this.hx = false;
            }
        };
        Grid.prototype.ti = function (a, b) {
            for (var c = 0; c < this.columns.count; c++) {
                if (this.columns._inner[c].hy == a) {
                    this.columns._inner[c].e6 = b;
                }
            }
        };
        Grid.prototype.b5 = function (a) {
            switch (a) {
                case 0: return 1;
                case 1: return 2;
            }
            return 0;
        };
        Grid.prototype.s5 = function (a, b) {
            var e_2, _a, e_3, _b, e_4, _c;
            var _this = this;
            if (!this.hd && this.actualDataSource != null) {
                if (!this.gy) {
                    this.gy = true;
                    switch (b.action) {
                        case 0:
                            if (b.newItems != null) {
                                for (var c = 0; c < b.newItems.count; c++) {
                                    var d = this.d9.getItemKey(this.i(), b.newItems.item(c));
                                    this.ah.ae.insert(c + b.newStartingIndex, d);
                                }
                            }
                            break;
                        case 1:
                            if (b.oldItems != null) {
                                for (var e = 0; e < b.oldItems.count; e++) {
                                    this.ah.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            break;
                        case 2:
                            if (b.oldItems != null) {
                                for (var f = 0; f < b.oldItems.count; f++) {
                                    this.ah.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            if (b.newItems != null) {
                                for (var g = 0; g < b.newItems.count; g++) {
                                    var h = this.d9.getItemKey(this.i(), b.newItems.item(g));
                                    this.ah.ae.insert(g + b.newStartingIndex, h);
                                }
                            }
                            break;
                        case 4:
                            this.ah.clear();
                            try {
                                for (var _d = tslib_1.__values(igniteuiReactCore.fromEnum(this.ad.ae)), _e = _d.next(); !_e.done; _e = _d.next()) {
                                    var i = _e.value;
                                    var j = this.d9.getItemKey(this.i(), i);
                                    this.ah.add(j);
                                }
                            }
                            catch (e_2_1) {
                                e_2 = { error: e_2_1 };
                            }
                            finally {
                                try {
                                    if (_e && !_e.done && (_a = _d.return))
                                        _a.call(_d);
                                }
                                finally {
                                    if (e_2)
                                        throw e_2.error;
                                }
                            }
                            break;
                    }
                    this.e0.av();
                    this.gy = false;
                }
            }
            if (this.h7) {
                if (this.selectedItemsChanged != null) {
                    var k_1 = null;
                    if (b.newItems != null && b.newItems.count > 0) {
                        k_1 = new GridSelectedItemsCollection();
                        try {
                            for (var _f = tslib_1.__values(igniteuiReactCore.fromEn(b.newItems)), _g = _f.next(); !_g.done; _g = _f.next()) {
                                var l = _g.value;
                                k_1.add1(l);
                            }
                        }
                        catch (e_3_1) {
                            e_3 = { error: e_3_1 };
                        }
                        finally {
                            try {
                                if (_g && !_g.done && (_b = _f.return))
                                    _b.call(_f);
                            }
                            finally {
                                if (e_3)
                                    throw e_3.error;
                            }
                        }
                    }
                    var m_1 = null;
                    if (b.oldItems != null && b.oldItems.count > 0) {
                        m_1 = new GridSelectedItemsCollection();
                        try {
                            for (var _h = tslib_1.__values(igniteuiReactCore.fromEn(b.oldItems)), _j = _h.next(); !_j.done; _j = _h.next()) {
                                var n = _j.value;
                                m_1.add1(n);
                            }
                        }
                        catch (e_4_1) {
                            e_4 = { error: e_4_1 };
                        }
                        finally {
                            try {
                                if (_j && !_j.done && (_c = _h.return))
                                    _c.call(_h);
                            }
                            finally {
                                if (e_4)
                                    throw e_4.error;
                            }
                        }
                    }
                    this.selectedItemsChanged(this, ((function () {
                        var $ret = new GridSelectedItemsChangedEventArgs();
                        $ret.addedItems = k_1;
                        $ret.removedItems = m_1;
                        $ret.currentItems = _this.ad;
                        return $ret;
                    })()));
                }
            }
        };
        Grid.prototype.s6 = function (a, b) {
            var e_5, _a, e_6, _b, e_7, _c;
            var _this = this;
            if (!this.hd && this.actualDataSource != null) {
                if (!this.gy) {
                    this.gy = true;
                    switch (b.action) {
                        case 0:
                            if (b.newItems != null) {
                                for (var c = 0; c < b.newItems.count; c++) {
                                    var d = this.d9.getItemForKey(b.newItems.item(c));
                                    this.ad.ae.insert1(c + b.newStartingIndex, d);
                                }
                            }
                            break;
                        case 1:
                            if (b.oldItems != null) {
                                for (var e = 0; e < b.oldItems.count; e++) {
                                    this.ad.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            break;
                        case 2:
                            if (b.oldItems != null) {
                                for (var f = 0; f < b.oldItems.count; f++) {
                                    this.ad.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            if (b.newItems != null) {
                                for (var g = 0; g < b.newItems.count; g++) {
                                    var h = this.d9.getItemForKey(b.newItems.item(g));
                                    this.ad.ae.insert1(g + b.newStartingIndex, h);
                                }
                            }
                            break;
                        case 4:
                            this.ad.clear();
                            try {
                                for (var _d = tslib_1.__values(igniteuiReactCore.fromEnum(this.ah.ae)), _e = _d.next(); !_e.done; _e = _d.next()) {
                                    var i = _e.value;
                                    var j = this.d9.getItemForKey(i);
                                    this.ad.add1(j);
                                }
                            }
                            catch (e_5_1) {
                                e_5 = { error: e_5_1 };
                            }
                            finally {
                                try {
                                    if (_e && !_e.done && (_a = _d.return))
                                        _a.call(_d);
                                }
                                finally {
                                    if (e_5)
                                        throw e_5.error;
                                }
                            }
                            break;
                    }
                    this.e0.av();
                    this.gy = false;
                }
            }
            if (this.h7) {
                if (this.selectedKeysChanged != null) {
                    var k_2 = null;
                    if (b.newItems != null && b.newItems.count > 0) {
                        k_2 = new GridSelectedKeysCollection();
                        try {
                            for (var _f = tslib_1.__values(igniteuiReactCore.fromEn(b.newItems)), _g = _f.next(); !_g.done; _g = _f.next()) {
                                var l = _g.value;
                                k_2.add(l);
                            }
                        }
                        catch (e_6_1) {
                            e_6 = { error: e_6_1 };
                        }
                        finally {
                            try {
                                if (_g && !_g.done && (_b = _f.return))
                                    _b.call(_f);
                            }
                            finally {
                                if (e_6)
                                    throw e_6.error;
                            }
                        }
                    }
                    var m_2 = null;
                    if (b.oldItems != null && b.oldItems.count > 0) {
                        m_2 = new GridSelectedKeysCollection();
                        try {
                            for (var _h = tslib_1.__values(igniteuiReactCore.fromEn(b.oldItems)), _j = _h.next(); !_j.done; _j = _h.next()) {
                                var n = _j.value;
                                m_2.add(n);
                            }
                        }
                        catch (e_7_1) {
                            e_7 = { error: e_7_1 };
                        }
                        finally {
                            try {
                                if (_j && !_j.done && (_c = _h.return))
                                    _c.call(_h);
                            }
                            finally {
                                if (e_7)
                                    throw e_7.error;
                            }
                        }
                    }
                    this.selectedKeysChanged(this, ((function () {
                        var $ret = new GridSelectedKeysChangedEventArgs();
                        $ret.addedKeys = k_2;
                        $ret.removedKeys = m_2;
                        $ret.currentKeys = _this.ah;
                        return $ret;
                    })()));
                }
            }
        };
        Grid.prototype.s4 = function (a, b) {
            var e_8, _a, e_9, _b;
            var _this = this;
            switch (b.action) {
                case 0:
                case 2:
                    for (var c = 0; c < b.newItems.count; c++) {
                        (igniteuiReactCore.typeCast(CellKey.$, b.newItems.item(c))).d = this;
                    }
                    break;
            }
            if (!this.hd) {
                this.g0 = true;
                this.e0.au();
                this.g0 = false;
            }
            if (this.h7) {
                var d_1 = null;
                if (b.newItems != null && b.newItems.count > 0) {
                    d_1 = new GridSelectedCellsCollection();
                    try {
                        for (var _c = tslib_1.__values(igniteuiReactCore.fromEn(b.newItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var e = _d.value;
                            d_1.add(e);
                        }
                    }
                    catch (e_8_1) {
                        e_8 = { error: e_8_1 };
                    }
                    finally {
                        try {
                            if (_d && !_d.done && (_a = _c.return))
                                _a.call(_c);
                        }
                        finally {
                            if (e_8)
                                throw e_8.error;
                        }
                    }
                }
                var f_1 = null;
                if (b.oldItems != null && b.oldItems.count > 0) {
                    f_1 = new GridSelectedCellsCollection();
                    try {
                        for (var _e = tslib_1.__values(igniteuiReactCore.fromEn(b.oldItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                            var g = _f.value;
                            f_1.add(g);
                        }
                    }
                    catch (e_9_1) {
                        e_9 = { error: e_9_1 };
                    }
                    finally {
                        try {
                            if (_f && !_f.done && (_b = _e.return))
                                _b.call(_e);
                        }
                        finally {
                            if (e_9)
                                throw e_9.error;
                        }
                    }
                }
                if (this.selectedCellsChanged != null) {
                    this.selectedCellsChanged(this, ((function () {
                        var $ret = new GridSelectedCellsChangedEventArgs();
                        $ret.addedCells = d_1;
                        $ret.removedCells = f_1;
                        $ret.currentCells = _this.dm;
                        return $ret;
                    })()));
                }
            }
        };
        Grid.prototype.s3 = function (a, b) {
            var _this = this;
            this.g0 = true;
            this.e0.at();
            this.g0 = false;
            if (this.h7) {
                if (this.selectedCellRangesChanged != null) {
                    this.selectedCellRangesChanged(this, ((function () {
                        var $ret = new GridSelectedCellRangesChangedEventArgs();
                        $ret.currentRanges = _this.dj;
                        return $ret;
                    })()));
                }
            }
        };
        Grid.prototype.se = function (a, b) {
            var e_10, _a;
            if (!this.hc && this.actualDataSource != null) {
                if (!this.gx) {
                    this.gx = true;
                    switch (b.action) {
                        case 0:
                            if (b.newItems != null) {
                                for (var c = 0; c < b.newItems.count; c++) {
                                    var d = this.d9.getItemKey(this.i(), b.newItems.item(c));
                                    this.ag.ae.insert(c + b.newStartingIndex, d);
                                    this.d9.pinRow(d);
                                }
                            }
                            break;
                        case 1:
                            if (b.oldItems != null) {
                                for (var e = 0; e < b.oldItems.count; e++) {
                                    this.d9.unpinRow(this.ag.ae._inner[b.oldStartingIndex]);
                                    this.ag.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            break;
                        case 2:
                            if (b.oldItems != null) {
                                for (var f = 0; f < b.oldItems.count; f++) {
                                    this.d9.unpinRow(this.ag.ae._inner[b.oldStartingIndex]);
                                    this.ag.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            if (b.newItems != null) {
                                for (var g = 0; g < b.newItems.count; g++) {
                                    var h = this.d9.getItemKey(this.i(), b.newItems.item(g));
                                    this.ag.ae.insert(g + b.newStartingIndex, h);
                                    this.d9.pinRow(h);
                                }
                            }
                            break;
                        case 4:
                            this.ag.clear();
                            this.d9.clearPinnedRows();
                            try {
                                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.ac.ae)), _c = _b.next(); !_c.done; _c = _b.next()) {
                                    var i = _c.value;
                                    var j = this.d9.getItemKey(this.i(), i);
                                    this.ag.add(j);
                                    this.d9.pinRow(j);
                                }
                            }
                            catch (e_10_1) {
                                e_10 = { error: e_10_1 };
                            }
                            finally {
                                try {
                                    if (_c && !_c.done && (_a = _b.return))
                                        _a.call(_b);
                                }
                                finally {
                                    if (e_10)
                                        throw e_10.error;
                                }
                            }
                            break;
                    }
                    this.gx = false;
                }
            }
        };
        Grid.prototype.sf = function (a, b) {
            var e_11, _a;
            if (!this.hc && this.actualDataSource != null) {
                if (!this.gx) {
                    this.gx = true;
                    switch (b.action) {
                        case 0:
                            if (b.newItems != null) {
                                for (var c = 0; c < b.newItems.count; c++) {
                                    var d = this.d9.getItemForKey(b.newItems.item(c));
                                    this.ac.ae.insert1(c + b.newStartingIndex, d);
                                    this.d9.pinRow(b.newItems.item(c));
                                }
                            }
                            break;
                        case 1:
                            if (b.oldItems != null) {
                                for (var e = 0; e < b.oldItems.count; e++) {
                                    this.d9.unpinRow(b.oldItems.item(e));
                                    this.ac.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            break;
                        case 2:
                            if (b.oldItems != null) {
                                for (var f = 0; f < b.oldItems.count; f++) {
                                    this.d9.unpinRow(b.oldItems.item(f));
                                    this.ac.ae.removeAt(b.oldStartingIndex);
                                }
                            }
                            if (b.newItems != null) {
                                for (var g = 0; g < b.newItems.count; g++) {
                                    var h = this.d9.getItemForKey(b.newItems.item(g));
                                    var i = this.d9.indexOfKey(b.newItems.item(g));
                                    this.ac.ae.insert1(g + b.newStartingIndex, h);
                                    this.d9.pinRow(b.newItems.item(g));
                                }
                            }
                            break;
                        case 4:
                            this.ac.clear();
                            this.d9.clearPinnedRows();
                            try {
                                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.ag.ae)), _c = _b.next(); !_c.done; _c = _b.next()) {
                                    var j = _c.value;
                                    var k = this.d9.getItemForKey(j);
                                    this.ac.add1(k);
                                    this.d9.pinRow(j);
                                }
                            }
                            catch (e_11_1) {
                                e_11 = { error: e_11_1 };
                            }
                            finally {
                                try {
                                    if (_c && !_c.done && (_a = _b.return))
                                        _a.call(_b);
                                }
                                finally {
                                    if (e_11)
                                        throw e_11.error;
                                }
                            }
                            break;
                    }
                    this.gx = false;
                }
            }
        };
        Object.defineProperty(Grid.prototype, "ck", {
            get: function () {
                return this.cj;
            },
            set: function (a) {
                this.cj = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "delayedExecutionManager", {
            get: function () {
                return this._delayedExecutionManager;
            },
            set: function (a) {
                this._delayedExecutionManager = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "el", {
            get: function () {
                return this.ek;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "d9", {
            get: function () {
                return this.d8;
            },
            set: function (a) {
                this.d8 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "a2", {
            get: function () {
                return this.a1;
            },
            set: function (a) {
                this.a1 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "de", {
            get: function () {
                return this.dd;
            },
            set: function (a) {
                this.dd = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "e6", {
            get: function () {
                return this.e5;
            },
            set: function (a) {
                this.e5 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "c9", {
            get: function () {
                return this.c8;
            },
            set: function (a) {
                this.c8 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "e0", {
            get: function () {
                return this.ez;
            },
            set: function (a) {
                this.ez = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "aj", {
            get: function () {
                return this.ai;
            },
            set: function (a) {
                this.ai = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "e4", {
            get: function () {
                return this.e3;
            },
            set: function (a) {
                this.e3 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "tickProvider", {
            get: function () {
                return this.fz;
            },
            set: function (a) {
                this.fz = a;
                this.c8 = new GridEffectManager(this.fz, this);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ey", {
            get: function () {
                return this.ex;
            },
            set: function (a) {
                var b = this.ex;
                this.ex = a;
                if (this.ex == null) {
                    this.ex = new SectionHeader();
                }
                this.ex.grid = this;
                if (b != this.ex) {
                    this.rz("SectionHeader", b, this.ex);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ew", {
            get: function () {
                return this.ev;
            },
            set: function (a) {
                this.ev = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "e8", {
            get: function () {
                return this.e7;
            },
            set: function (a) {
                var b = this.e7;
                this.e7 = a;
                if (this.e7 == null) {
                    this.e7 = new SummaryRowRoot();
                }
                this.e7.grid = this;
                if (b != this.e7) {
                    this.rz("SummaryRowRoot", b, this.e7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fa", {
            get: function () {
                return this.e9;
            },
            set: function (a) {
                var b = this.e9;
                this.e9 = a;
                if (this.e9 == null) {
                    this.e9 = new SummaryRowSection();
                }
                this.e9.grid = this;
                if (b != this.e9) {
                    this.rz("SummaryRowSection", b, this.e9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "eu", {
            get: function () {
                return this.et;
            },
            set: function (a) {
                var b = this.et;
                this.et = a;
                if (b != this.et) {
                    this.rz("RowSeparator", b, this.et);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "d2", {
            get: function () {
                return this.d1;
            },
            set: function (a) {
                var b = this.d1;
                this.d1 = a;
                if (b != this.d1) {
                    this.rz("HeaderRowSeparator", b, this.d1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "d4", {
            get: function () {
                return this.d3;
            },
            set: function (a) {
                var b = this.d3;
                this.d3 = a;
                if (b != this.d3) {
                    this.rz("HeaderSeparator", b, this.d3);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "bw", {
            get: function () {
                return this.bv;
            },
            set: function (a) {
                var b = this.bv;
                this.bv = a;
                if (b != this.bv) {
                    this.rz("ColumnResizingSeparator", b, this.bv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "bi", {
            get: function () {
                return this.bh;
            },
            set: function (a) {
                var b = this.bh;
                this.bh = a;
                if (b != this.bh) {
                    this.rz("ColumnMovingSeparator", b, this.bh);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ei", {
            get: function () {
                return this.eh;
            },
            set: function (a) {
                var b = this.eh;
                this.eh = a;
                if (b != this.eh) {
                    this.rz("PinnedAreaSeparator", b, this.eh);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "f", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (b != this.b) {
                    this.rz("AutoGenerateDesiredColumns", b, this.b);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "g", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.rz("DataSourceDesiredProperties", b, this.c);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fc", {
            get: function () {
                return this.fb;
            },
            set: function (a) {
                this.fb = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "viewportManager", {
            get: function () {
                return this._viewportManager;
            },
            set: function (a) {
                this._viewportManager = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "jm", {
            get: function () {
                return this.i5;
            },
            set: function (a) {
                this.i5 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "jl", {
            get: function () {
                return this.i4;
            },
            set: function (a) {
                this.i4 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fg", {
            get: function () {
                return this.ff;
            },
            set: function (a) {
                var b = this.ff;
                this.ff = a;
                if (b != this.ff) {
                    this.rz("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.ff));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "kl", {
            get: function () {
                return this.jz;
            },
            set: function (a) {
                var b = this.jz;
                this.jz = a;
                if (b != this.jz) {
                    this.rz("ActualRowHeight", b, this.jz);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "le", {
            get: function () {
                return this.kb;
            },
            set: function (a) {
                var b = this.kb;
                this.kb = a;
                if (b != this.kb) {
                    this.rz("RowHeight", b, this.kb);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "defaultColumnWidth", {
            get: function () {
                return this.b8;
            },
            set: function (a) {
                var b = this.b8;
                this.b8 = a;
                if (b != this.b8) {
                    this.rz("DefaultColumnWidth", b, this.b8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "jn", {
            get: function () {
                return this.i7;
            },
            set: function (a) {
                var b = this.i7;
                this.i7 = a;
                if (b != this.i7) {
                    this.rz("DefaultColumnMinWidth", b, this.i7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "kk", {
            get: function () {
                return this.jy;
            },
            set: function (a) {
                var b = this.jy;
                this.jy = a;
                if (b != this.jy) {
                    this.rz("ActualHeaderHeight", b, this.jy);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "k6", {
            get: function () {
                return this.j4;
            },
            set: function (a) {
                var b = this.j4;
                this.j4 = a;
                if (b != this.j4) {
                    this.rz("HeaderHeight", b, this.j4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "lk", {
            get: function () {
                return this.kg;
            },
            set: function (a) {
                var b = this.kg;
                this.kg = a;
                if (b != this.kg) {
                    this.rz("SectionHeaderHeight", b, this.kg);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "itemsSource", {
            get: function () {
                return this.ln;
            },
            set: function (a) {
                var b = this.ln;
                this.ln = a;
                if (b != this.ln) {
                    this.rz("ItemsSource", b, this.ln);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "li", {
            get: function () {
                return this.kf;
            },
            set: function (a) {
                var b = this.kf;
                this.kf = a;
                if (b != this.kf) {
                    this.rz("SectionFooterHeight", b, this.kf);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "lh", {
            get: function () {
                return this.kd;
            },
            set: function (a) {
                var b = this.kd;
                this.kd = a;
                if (b != this.kd) {
                    this.rz("RowSpacingHeight", b, this.kd);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "kq", {
            get: function () {
                return this.j2;
            },
            set: function (a) {
                var b = this.j2;
                this.j2 = a;
                if (b != this.j2) {
                    this.rz("ColumnSpacingWidth", b, this.j2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "d0", {
            get: function () {
                return this.dz;
            },
            set: function (a) {
                var b = this.dz;
                this.dz = a;
                if (b != this.dz) {
                    this.rz("HeaderClickAction", igniteuiReactCore.enumGetBox(HeaderClickAction_$type, b), igniteuiReactCore.enumGetBox(HeaderClickAction_$type, this.dz));
                    if ((this.dz == 0 || this.dz == 2) && (b == 1 || b == 3)) {
                        this.e4.h();
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "cf", {
            get: function () {
                return this.ce;
            },
            set: function (a) {
                var b = this.ce;
                this.ce = a;
                if (b != this.ce) {
                    this.rz("EditMode", igniteuiReactCore.enumGetBox(EditModeType_$type, b), igniteuiReactCore.enumGetBox(EditModeType_$type, this.ce));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "cd", {
            get: function () {
                return this.cc;
            },
            set: function (a) {
                var b = this.cc;
                this.cc = a;
                if (b != this.cc) {
                    this.rz("EditModeClickAction", igniteuiReactCore.enumGetBox(EditModeClickAction_$type, b), igniteuiReactCore.enumGetBox(EditModeClickAction_$type, this.cc));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "g3", {
            get: function () {
                return this.f4;
            },
            set: function (a) {
                var b = this.f4;
                this.f4 = a;
                if (b != this.f4) {
                    this.rz("AutoGenerateColumns", b, this.f4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "lg", {
            get: function () {
                return this.kc;
            },
            set: function (a) {
                var b = this.kc;
                this.kc = a;
                if (b != this.kc) {
                    this.rz("RowSeparatorHeight", b, this.kc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hy", {
            get: function () {
                return this.gj;
            },
            set: function (a) {
                var b = this.gj;
                this.gj = a;
                if (b != this.gj) {
                    this.rz("IsPlaceholderRenderingEnabled", b, this.gj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.hi = function (a) {
            return this.b1(a) != 1 && this.hj;
        };
        Grid.prototype.b1 = function (a) {
            if (this.bx == 0) {
                return a.e4();
            }
            return this.bx;
        };
        Object.defineProperty(Grid.prototype, "bz", {
            get: function () {
                return this.bx;
            },
            set: function (a) {
                var b = this.bx;
                this.bx = a;
                this.rz("ColumnAddingAnimationMode", igniteuiReactCore.enumGetBox(ColumnShowingAnimationMode_$type, b), igniteuiReactCore.enumGetBox(ColumnShowingAnimationMode_$type, this.bx));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ho", {
            get: function () {
                return this.bo != 1 && this.hj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "columnPropertyUpdatingAnimationMode", {
            get: function () {
                return this.bo;
            },
            set: function (a) {
                var b = this.bo;
                this.bo = a;
                this.rz("ColumnPropertyUpdatingAnimationMode", igniteuiReactCore.enumGetBox(ColumnPropertyUpdatingAnimationMode_$type, b), igniteuiReactCore.enumGetBox(ColumnPropertyUpdatingAnimationMode_$type, this.bo));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hj", {
            get: function () {
                return this.renderingEngine.initialRefreshFinished;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hf", {
            get: function () {
                return this.ak != 1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "al", {
            get: function () {
                return this.ak;
            },
            set: function (a) {
                var b = this.ak;
                this.ak = a;
                this.rz("CellDataLoadedAnimationMode", igniteuiReactCore.enumGetBox(CellDataLoadedAnimationMode_$type, b), igniteuiReactCore.enumGetBox(CellDataLoadedAnimationMode_$type, this.ak));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "h5", {
            get: function () {
                return this.er != 1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "es", {
            get: function () {
                return this.er;
            },
            set: function (a) {
                var b = this.er;
                this.er = a;
                this.rz("RowSelectionAnimationMode", igniteuiReactCore.enumGetBox(RowSelectionAnimationMode_$type, b), igniteuiReactCore.enumGetBox(RowSelectionAnimationMode_$type, this.er));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "h3", {
            get: function () {
                return this.eo != 1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ep", {
            get: function () {
                return this.eo;
            },
            set: function (a) {
                var b = this.eo;
                this.eo = a;
                if (b != this.eo) {
                    this.rz("RowHoverAnimationMode", igniteuiReactCore.enumGetBox(RowHoverAnimationMode_$type, b), igniteuiReactCore.enumGetBox(RowHoverAnimationMode_$type, this.eo));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hg", {
            get: function () {
                return this.av != 1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "aw", {
            get: function () {
                return this.av;
            },
            set: function (a) {
                var b = this.av;
                this.av = a;
                this.rz("CellSelectionAnimationMode", igniteuiReactCore.enumGetBox(CellSelectionAnimationMode_$type, b), igniteuiReactCore.enumGetBox(CellSelectionAnimationMode_$type, this.av));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "cz", {
            get: function () {
                return this.cy;
            },
            set: function (a) {
                var b = this.cy;
                this.cy = a;
                if (b != this.cy) {
                    this.rz("ColumnAnimationSettings", b, this.cy);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "cm", {
            get: function () {
                return this.cl;
            },
            set: function (a) {
                var b = this.cl;
                this.cl = a;
                if (b != this.cl) {
                    this.rz("AnimationSettings", b, this.cl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.hp = function (a) {
            return this.bs(a) != 1 && this.hj;
        };
        Grid.prototype.bs = function (a) {
            if (this.bq == 0) {
                return a.e3();
            }
            return this.bq;
        };
        Object.defineProperty(Grid.prototype, "br", {
            get: function () {
                return this.bq;
            },
            set: function (a) {
                var b = this.bq;
                this.bq = a;
                this.rz("ColumnResizingAnimationMode", igniteuiReactCore.enumGetBox(ColumnResizingAnimationMode_$type, b), igniteuiReactCore.enumGetBox(ColumnResizingAnimationMode_$type, this.bq));
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.hq = function (a) {
            return this.b2(a) != 1 && this.hj;
        };
        Grid.prototype.b2 = function (a) {
            if (this.by == 0) {
                return a.e4();
            }
            return this.by;
        };
        Object.defineProperty(Grid.prototype, "b0", {
            get: function () {
                return this.by;
            },
            set: function (a) {
                var b = this.by;
                this.by = a;
                this.rz("ColumnShowingAnimationMode", igniteuiReactCore.enumGetBox(ColumnShowingAnimationMode_$type, b), igniteuiReactCore.enumGetBox(ColumnShowingAnimationMode_$type, this.by));
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.hm = function (a) {
            return this.be(a) != 1 && this.hj && !this.iz;
        };
        Grid.prototype.be = function (a) {
            if (this.bc == 0) {
                return 2;
            }
            return this.bc;
        };
        Object.defineProperty(Grid.prototype, "bd", {
            get: function () {
                return this.bc;
            },
            set: function (a) {
                var b = this.bc;
                this.bc = a;
                this.rz("ColumnMovingAnimationMode", igniteuiReactCore.enumGetBox(ColumnMovingAnimationMode_$type, b), igniteuiReactCore.enumGetBox(ColumnMovingAnimationMode_$type, this.bc));
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.hl = function (a) {
            return this.bb(a) != 1 && this.hj;
        };
        Grid.prototype.bb = function (a) {
            if (this.a9 == 0) {
                return a.eu();
            }
            return this.a9;
        };
        Object.defineProperty(Grid.prototype, "ba", {
            get: function () {
                return this.a9;
            },
            set: function (a) {
                var b = this.a9;
                this.a9 = a;
                this.rz("ColumnHidingAnimationMode", igniteuiReactCore.enumGetBox(ColumnHidingAnimationMode_$type, b), igniteuiReactCore.enumGetBox(ColumnHidingAnimationMode_$type, this.a9));
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.hk = function (a) {
            return this.a5(a) != 1 && this.hj;
        };
        Grid.prototype.a5 = function (a) {
            if (this.a3 == 0) {
                return a.et();
            }
            return this.a3;
        };
        Object.defineProperty(Grid.prototype, "a4", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                var b = this.a3;
                this.a3 = a;
                this.rz("ColumnExchangingAnimationMode", igniteuiReactCore.enumGetBox(ColumnExchangingAnimationMode_$type, b), igniteuiReactCore.enumGetBox(ColumnExchangingAnimationMode_$type, this.a3));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "inset", {
            get: function () {
                return this.vv;
            },
            set: function (a) {
                var b = this.vv;
                this.vv = a;
                if (b != this.vv) {
                    this.rz("Inset", b, this.vv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "dt", {
            get: function () {
                return this.ds;
            },
            set: function (a) {
                var b = this.ds;
                this.ds = a;
                if (b != this.ds) {
                    this.rz("SelectionMode", igniteuiReactCore.enumGetBox(GridSelectionMode_$type, b), igniteuiReactCore.enumGetBox(GridSelectionMode_$type, this.ds));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ch", {
            get: function () {
                return this.cg;
            },
            set: function (a) {
                var b = this.cg;
                this.cg = a;
                if (b != this.cg) {
                    this.rz("ActivationMode", igniteuiReactCore.enumGetBox(GridActivationMode_$type, b), igniteuiReactCore.enumGetBox(GridActivationMode_$type, this.cg));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "dr", {
            get: function () {
                return this.dq;
            },
            set: function (a) {
                var b = this.dq;
                this.dq = a;
                if (b != this.dq) {
                    this.rz("SelectionBehavior", igniteuiReactCore.enumGetBox(GridSelectionBehavior_$type, b), igniteuiReactCore.enumGetBox(GridSelectionBehavior_$type, this.dq));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hd", {
            get: function () {
                return this.f8;
            },
            set: function (a) {
                this.f8 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ad", {
            get: function () {
                return this.ab;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ah", {
            get: function () {
                return this.af;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "dm", {
            get: function () {
                return this.dl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "dj", {
            get: function () {
                return this.di;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hc", {
            get: function () {
                return this.f7;
            },
            set: function (a) {
                this.f7 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ac", {
            get: function () {
                return this.aa;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ag", {
            get: function () {
                return this.ae;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.te = function (a, b) {
            var e_12, _a, e_13, _b, e_14, _c;
            if (this.actualDataSource == null) {
                return;
            }
            if (a.ae.count > 0 && b.ae.count == 0) {
                var c = this.i();
                try {
                    for (var _d = tslib_1.__values(igniteuiReactCore.fromEnum(a.ae)), _e = _d.next(); !_e.done; _e = _d.next()) {
                        var d = _e.value;
                        var e = this.d9.getItemKey(c, d);
                        b.ae.add(e);
                    }
                }
                catch (e_12_1) {
                    e_12 = { error: e_12_1 };
                }
                finally {
                    try {
                        if (_e && !_e.done && (_a = _d.return))
                            _a.call(_d);
                    }
                    finally {
                        if (e_12)
                            throw e_12.error;
                    }
                }
            }
            else if (a.ae.count == 0 && b.ae.count > 0) {
                try {
                    for (var _f = tslib_1.__values(igniteuiReactCore.fromEnum(b.ae)), _g = _f.next(); !_g.done; _g = _f.next()) {
                        var f = _g.value;
                        var g = this.d9.getItemForKey(f);
                        a.ae.add1(g);
                    }
                }
                catch (e_13_1) {
                    e_13 = { error: e_13_1 };
                }
                finally {
                    try {
                        if (_g && !_g.done && (_b = _f.return))
                            _b.call(_f);
                    }
                    finally {
                        if (e_13)
                            throw e_13.error;
                    }
                }
            }
            else {
                a.ae.clear();
                try {
                    for (var _h = tslib_1.__values(igniteuiReactCore.fromEnum(b.ae)), _j = _h.next(); !_j.done; _j = _h.next()) {
                        var h = _j.value;
                        var i = this.d9.getItemForKey(h);
                        a.ae.add1(i);
                    }
                }
                catch (e_14_1) {
                    e_14 = { error: e_14_1 };
                }
                finally {
                    try {
                        if (_j && !_j.done && (_c = _h.return))
                            _c.call(_h);
                    }
                    finally {
                        if (e_14)
                            throw e_14.error;
                    }
                }
            }
        };
        Object.defineProperty(Grid.prototype, "hn", {
            get: function () {
                return this.gb;
            },
            set: function (a) {
                var b = this.gb;
                this.gb = a;
                if (b != this.gb) {
                    this.rz("IsColumnOptionsEnabled", b, this.gb);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hu", {
            get: function () {
                return this.gh;
            },
            set: function (a) {
                var b = this.gh;
                this.gh = a;
                if (b != this.gh) {
                    this.rz("IsGroupRowSticky", b, this.gh);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hv", {
            get: function () {
                return this.gi;
            },
            set: function (a) {
                var b = this.gi;
                this.gi = a;
                if (b != this.gi) {
                    this.rz("IsHeaderSeparatorVisible", b, this.gi);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ut", {
            get: function () {
                return this.tw;
            },
            set: function (a) {
                var b = this.tw;
                this.tw = a;
                if (b != this.tw) {
                    this.rz("CellSelectedBackground", b, this.tw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vd", {
            get: function () {
                return this.ug;
            },
            set: function (a) {
                var b = this.ug;
                this.ug = a;
                if (b != this.ug) {
                    this.rz("SectionHeaderSelectedBackground", b, this.ug);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vg", {
            get: function () {
                return this.uj;
            },
            set: function (a) {
                var b = this.uj;
                this.uj = a;
                if (b != this.uj) {
                    this.rz("SummaryRootBackground", b, this.uj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vk", {
            get: function () {
                return this.un;
            },
            set: function (a) {
                var b = this.un;
                this.un = a;
                if (b != this.un) {
                    this.rz("SummarySectionBackground", b, this.un);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "jp", {
            get: function () {
                return this.jg;
            },
            set: function (a) {
                var b = this.jg;
                this.jg = a;
                if (b != this.jg) {
                    this.rz("PinnedRowOpacity", b, this.jg);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fq", {
            get: function () {
                return this.fi;
            },
            set: function (a) {
                var b = this.fi;
                this.fi = a;
                if (b != this.fi) {
                    this.rz("EditTextStyle", b, this.fi);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "jo", {
            get: function () {
                return this.jc;
            },
            set: function (a) {
                var b = this.jc;
                this.jc = a;
                if (b != this.jc) {
                    this.rz("EditOpacity", b, this.jc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "uy", {
            get: function () {
                return this.t1;
            },
            set: function (a) {
                var b = this.t1;
                this.t1 = a;
                if (b != this.t1) {
                    this.rz("DeletedTextColor", b, this.t1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vf", {
            get: function () {
                return this.ui;
            },
            set: function (a) {
                var b = this.ui;
                this.ui = a;
                if (b != this.ui) {
                    this.rz("StickyRowBackground", b, this.ui);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u6", {
            get: function () {
                return this.t9;
            },
            set: function (a) {
                var b = this.t9;
                this.t9 = a;
                if (b != this.t9) {
                    this.rz("PinnedRowBackground", b, this.t9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u5", {
            get: function () {
                return this.t8;
            },
            set: function (a) {
                var b = this.t8;
                this.t8 = a;
                if (b != this.t8) {
                    this.rz("LastStickyRowBackground", b, this.t8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "cw", {
            get: function () {
                return this.cu;
            },
            set: function (a) {
                var b = this.cu;
                this.cu = a;
                if (b != this.cu) {
                    this.rz("ActiveCell", b, this.cu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "us", {
            get: function () {
                return this.tv;
            },
            set: function (a) {
                var b = this.tv;
                this.tv = a;
                if (b != this.tv) {
                    this.rz("CellBackground", b, this.tv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "uu", {
            get: function () {
                return this.tx;
            },
            set: function (a) {
                var b = this.tx;
                this.tx = a;
                if (b != this.tx) {
                    this.rz("CellTextColor", b, this.tx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u3", {
            get: function () {
                return this.t6;
            },
            set: function (a) {
                var b = this.t6;
                this.t6 = a;
                if (b != this.t6) {
                    this.rz("HeaderSortIndicatorColor", b, this.t6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "e2", {
            get: function () {
                return this.e1;
            },
            set: function (a) {
                var b = this.e1;
                this.e1 = a;
                if (b != this.e1) {
                    this.rz("HeaderSortIndicatorStyle", igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, b), igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, this.e1));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fp", {
            get: function () {
                return this.fh;
            },
            set: function (a) {
                var b = this.fh;
                this.fh = a;
                if (b != this.fh) {
                    this.rz("CellTextStyle", b, this.fh);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vc", {
            get: function () {
                return this.uf;
            },
            set: function (a) {
                var b = this.uf;
                this.uf = a;
                if (b != this.uf) {
                    this.rz("SectionHeaderBackground", b, this.uf);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ve", {
            get: function () {
                return this.uh;
            },
            set: function (a) {
                var b = this.uh;
                this.uh = a;
                if (b != this.uh) {
                    this.rz("SectionHeaderTextColor", b, this.uh);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fs", {
            get: function () {
                return this.fk;
            },
            set: function (a) {
                var b = this.fk;
                this.fk = a;
                if (b != this.fk) {
                    this.rz("SectionHeaderTextStyle", b, this.fk);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ft", {
            get: function () {
                return this.fl;
            },
            set: function (a) {
                var b = this.fl;
                this.fl = a;
                if (b != this.fl) {
                    this.rz("SummaryRootLabelTextStyle", b, this.fl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fv", {
            get: function () {
                return this.fn;
            },
            set: function (a) {
                var b = this.fn;
                this.fn = a;
                if (b != this.fn) {
                    this.rz("SummarySectionLabelTextStyle", b, this.fn);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vj", {
            get: function () {
                return this.um;
            },
            set: function (a) {
                var b = this.um;
                this.um = a;
                if (b != this.um) {
                    this.rz("SummaryRootValueTextColor", b, this.um);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fu", {
            get: function () {
                return this.fm;
            },
            set: function (a) {
                var b = this.fm;
                this.fm = a;
                if (b != this.fm) {
                    this.rz("SummaryRootValueTextStyle", b, this.fm);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fw", {
            get: function () {
                return this.fo;
            },
            set: function (a) {
                var b = this.fo;
                this.fo = a;
                if (b != this.fo) {
                    this.rz("SummarySectionValueTextStyle", b, this.fo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vn", {
            get: function () {
                return this.uq;
            },
            set: function (a) {
                var b = this.uq;
                this.uq = a;
                if (b != this.uq) {
                    this.rz("SummarySectionValueTextColor", b, this.uq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vh", {
            get: function () {
                return this.uk;
            },
            set: function (a) {
                var b = this.uk;
                this.uk = a;
                if (b != this.uk) {
                    this.rz("SummaryRootLabelTextColor", b, this.uk);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vl", {
            get: function () {
                return this.uo;
            },
            set: function (a) {
                var b = this.uo;
                this.uo = a;
                if (b != this.uo) {
                    this.rz("SummarySectionLabelTextColor", b, this.uo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vi", {
            get: function () {
                return this.ul;
            },
            set: function (a) {
                var b = this.ul;
                this.ul = a;
                if (b != this.ul) {
                    this.rz("SummaryRootSelectedBackground", b, this.ul);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vm", {
            get: function () {
                return this.up;
            },
            set: function (a) {
                var b = this.up;
                this.up = a;
                if (b != this.up) {
                    this.rz("SummarySectionSelectedBackground", b, this.up);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "lc", {
            get: function () {
                return this.j9;
            },
            set: function (a) {
                var b = this.j9;
                this.j9 = a;
                if (b != this.j9) {
                    this.rz("PinnedAreaSeparatorWidth", b, this.j9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "la", {
            get: function () {
                return this.j5;
            },
            set: function (a) {
                var b = this.j5;
                this.j5 = a;
                if (b != this.j5) {
                    this.rz("HeaderSeparatorWidth", b, this.j5);
                }
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.km = function (a) {
            var b = 3;
            var c = Math.max(b - a, 0);
            if (c % 2 == 1) {
                c += 1;
            }
            return igniteuiReactCore.intDivide(c, 2);
        };
        Object.defineProperty(Grid.prototype, "u2", {
            get: function () {
                return this.t5;
            },
            set: function (a) {
                var b = this.t5;
                this.t5 = a;
                if (b != this.t5) {
                    this.rz("HeaderSeparatorBackground", b, this.t5);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u0", {
            get: function () {
                return this.t3;
            },
            set: function (a) {
                var b = this.t3;
                this.t3 = a;
                if (b != this.t3) {
                    this.rz("HeaderBackground", b, this.t3);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u4", {
            get: function () {
                return this.t7;
            },
            set: function (a) {
                var b = this.t7;
                this.t7 = a;
                if (b != this.t7) {
                    this.rz("HeaderTextColor", b, this.t7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "fr", {
            get: function () {
                return this.fj;
            },
            set: function (a) {
                var b = this.fj;
                this.fj = a;
                if (b != this.fj) {
                    this.rz("HeaderTextStyle", b, this.fj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u8", {
            get: function () {
                return this.ub;
            },
            set: function (a) {
                var b = this.ub;
                this.ub = a;
                if (b != this.ub) {
                    this.rz("RowSeparatorBackground", b, this.ub);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u1", {
            get: function () {
                return this.t4;
            },
            set: function (a) {
                var b = this.t4;
                this.t4 = a;
                if (b != this.t4) {
                    this.rz("HeaderRowSeparatorBackground", b, this.t4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vb", {
            get: function () {
                return this.ue;
            },
            set: function (a) {
                var b = this.ue;
                this.ue = a;
                if (b != this.ue) {
                    this.rz("RowSeparatorStickyRowBackground", b, this.ue);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "u9", {
            get: function () {
                return this.uc;
            },
            set: function (a) {
                var b = this.uc;
                this.uc = a;
                if (b != this.uc) {
                    this.rz("RowSeparatorLastStickyRowBackground", b, this.uc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "va", {
            get: function () {
                return this.ud;
            },
            set: function (a) {
                var b = this.ud;
                this.ud = a;
                if (b != this.ud) {
                    this.rz("RowSeparatorPinnedRowBackground", b, this.ud);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "kp", {
            get: function () {
                return this.j1;
            },
            set: function (a) {
                var b = this.j1;
                this.j1 = a;
                if (b != this.j1) {
                    this.rz("ColumnResizingSeparatorWidth", b, this.j1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "kn", {
            get: function () {
                return this.j0;
            },
            set: function (a) {
                var b = this.j0;
                this.j0 = a;
                if (b != this.j0) {
                    this.rz("ColumnMovingSeparatorWidth", b, this.j0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ux", {
            get: function () {
                return this.t0;
            },
            set: function (a) {
                var b = this.t0;
                this.t0 = a;
                if (b != this.t0) {
                    this.rz("ColumnResizingSeparatorBackground", b, this.t0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "uv", {
            get: function () {
                return this.ty;
            },
            set: function (a) {
                var b = this.ty;
                this.ty = a;
                if (b != this.ty) {
                    this.rz("ColumnMovingSeparatorBackground", b, this.ty);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "iv", {
            get: function () {
                return this.gu;
            },
            set: function (a) {
                var b = this.gu;
                this.gu = a;
                if (b != this.gu) {
                    this.rz("ShiftSectionContent", b, this.gu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "bk", {
            get: function () {
                return this.bj;
            },
            set: function (a) {
                var b = this.bj;
                this.bj = a;
                if (b != this.bj) {
                    this.rz("ColumnOptionsIconAlignment", igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, this.bj));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "uw", {
            get: function () {
                return this.tz;
            },
            set: function (a) {
                var b = this.tz;
                this.tz = a;
                if (b != this.tz) {
                    this.rz("ColumnOptionsIconColor", b, this.tz);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "bm", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (b != this.bl) {
                    this.rz("ColumnOptionsIconBehavior", igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, this.bl));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "border", {
            get: function () {
                return this.tu;
            },
            set: function (a) {
                var b = this.tu;
                this.tu = a;
                if (b != this.tu) {
                    this.rz("Border", b, this.tu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vz", {
            get: function () {
                return this.vt;
            },
            set: function (a) {
                var b = this.vt;
                this.vt = a;
                if (b != this.vt) {
                    this.rz("DefaultBorderWidth", b, this.vt);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vw", {
            get: function () {
                return this.vr;
            },
            set: function (a) {
                var b = this.vr;
                this.vr = a;
                if (b != this.vr) {
                    this.rz("ActualBorderWidth", b, this.vr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vx", {
            get: function () {
                return this.vs;
            },
            set: function (a) {
                var b = this.vs;
                this.vs = a;
                if (b != this.vs) {
                    this.rz("BorderWidth", b, this.vs);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "h7", {
            get: function () {
                return this.go;
            },
            set: function (a) {
                var b = this.go;
                this.go = a;
                if (b != this.go) {
                    this.rz("NotifyOnAllSelectionChanges", b, this.go);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "tt", {
            get: function () {
                return this.tp;
            },
            set: function (a) {
                var b = this.tp;
                this.tp = a;
                if (b != this.tp) {
                    this.rz("DefaultCornerRadius", b, this.tp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ts", {
            get: function () {
                return this.to;
            },
            set: function (a) {
                var b = this.to;
                this.to = a;
                if (b != this.to) {
                    this.rz("CornerRadius", b, this.to);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "tq", {
            get: function () {
                return this.tn;
            },
            set: function (a) {
                var b = this.tn;
                this.tn = a;
                if (b != this.tn) {
                    this.rz("ActualCornerRadius", b, this.tn);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "he", {
            get: function () {
                return this.ga;
            },
            set: function (a) {
                var b = this.ga;
                this.ga = a;
                if (this.ga != b) {
                    this.rz("IsActiveCellStyleEnabled", b, this.ga);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "platformPixelConverter", {
            get: function () {
                return this.fx;
            },
            set: function (a) {
                this.fx = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "renderingEngine", {
            get: function () {
                return this.d6;
            },
            set: function (a) {
                this.d6 = a;
                this.r1(this.d6);
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.r1 = function (a) {
            if (a != null) {
                a.refresh(this.model, false);
            }
        };
        Object.defineProperty(Grid.prototype, "en", {
            get: function () {
                return this.em;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "model", {
            get: function () {
                return this.fd;
            },
            set: function (a) {
                this.fd = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "vp", {
            get: function () {
                return new igniteuiReactCore.Rect(0, this.fd.b3, this.fd.b8, this.fd.b9, this.fd.by);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "b4", {
            get: function () {
                return this.b3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "a7", {
            get: function () {
                return this.a6;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "v", {
            get: function () {
                return this.u;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "b7", {
            get: function () {
                return this.b6;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "t", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                var b = this.s;
                this.s = a;
                this.gw = true;
                if (b != this.s) {
                    this.rz("SummaryScope", igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSummaryScope_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSummaryScope_$type, this.s));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hs", {
            get: function () {
                return this.gd;
            },
            set: function (a) {
                var b = this.gd;
                this.gd = a;
                this.ge = true;
                if (b != this.gd) {
                    this.rz("IsGroupCollapsable", b, this.gd);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "r", {
            get: function () {
                return this.q;
            },
            set: function (a) {
                var b = this.q;
                this.q = a;
                this.f5 = true;
                if (b != this.q) {
                    this.rz("GroupHeaderDisplayMode", igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSectionHeaderDisplayMode_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSectionHeaderDisplayMode_$type, this.q));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "ht", {
            get: function () {
                return this.gf;
            },
            set: function (a) {
                var b = this.gf;
                this.gf = a;
                this.gg = true;
                if (b != this.gf) {
                    this.rz("IsGroupExpandedDefault", b, this.gf);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "dy", {
            get: function () {
                return this.dx;
            },
            set: function (a) {
                var b = this.dx;
                this.dx = a;
                this.f6 = true;
                if (b != this.dx) {
                    this.rz("GroupSummaryDisplayMode", igniteuiReactCore.enumGetBox(GroupSummaryDisplayMode_$type, b), igniteuiReactCore.enumGetBox(GroupSummaryDisplayMode_$type, this.dx));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "g2", {
            get: function () {
                return this.f3;
            },
            set: function (a) {
                this.f3 = a;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.rz = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.sg(a, b, c);
        };
        Grid.prototype.su = function () {
        };
        Grid.prototype.sl = function () {
            var _this = this;
            if (this.i5 == 0) {
                return;
            }
            var a = this.model.absoluteWidth;
            var b = this.model.absoluteHeight;
            this.ip = true;
            this.e6.r(this, this.model, igniteuiReactCore.truncate(this.jm));
            if (a != this.model.absoluteWidth || b != this.model.absoluteHeight) {
                this.externalGrid.onContentSizeChanged();
            }
            this.ip = false;
            this.fc.v();
            this.renderingEngine.invalidateVisibility(function () { return _this.fc.l(_this); });
            this.renderingEngine.refresh(this.model, false);
        };
        Grid.prototype.sm = function () {
            var _this = this;
            if (this.f9) {
                this.p5();
            }
            else {
                this.renderingEngine.invalidateVisibility(function () { return _this.fc.l(_this); });
                this.renderingEngine.refresh(this.model, true);
            }
        };
        Grid.prototype.p5 = function () {
            if (this.f9) {
                this.f9 = false;
                this.sl();
                this.qe();
            }
        };
        Object.defineProperty(Grid.prototype, "ip", {
            get: function () {
                return this.gt;
            },
            set: function (a) {
                this.gt = a;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.sk = function () {
            var _this = this;
            if (this.gt) {
                return;
            }
            this.renderingEngine.invalidateVisibility(function () { return _this.fc.l(_this); });
            this.renderingEngine.refresh(this.model, false);
        };
        Grid.prototype.p4 = function () {
            if (this.actualDataSource != null) {
                this.actualDataSource.flushAutoRefresh();
            }
            this.c9.an(true);
            this.renderingEngine.refresh(this.model, true);
        };
        Object.defineProperty(Grid.prototype, "actualDataSource", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (this.w != b) {
                    this.rz("ActualDataSource", b, this.w);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "l", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                if (this.d != b) {
                    this.rz("PrimaryKey", b, this.d);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "e", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (this.a != b) {
                    this.rz("ActualPrimaryKey", b, this.a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "g1", {
            get: function () {
                return this.f2;
            },
            set: function (a) {
                this.f2 = a;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.sg = function (a, b, c) {
            var _this = this;
            if (a == "ItemsSource") {
                if (this.w != null) {
                    var d = this.w;
                    d.schemaChanged = igniteuiReactCore.delegateRemove(d.schemaChanged, igniteuiReactCore.runOn(this, this.pz));
                    if (this.y != null) {
                        var e = this.y;
                        e.dataCommitted = igniteuiReactCore.delegateRemove(e.dataCommitted, igniteuiReactCore.runOn(this, this.py));
                    }
                    this.w.updateNotifier = null;
                    this.b4.b = null;
                    this.a7.b = null;
                    this.v.syncTarget = null;
                    this.b7.b = null;
                    this.e = this.m();
                }
                if (igniteuiReactCore.typeCast(igniteuiReactCore.IDataSource_$type, this.itemsSource) !== null) {
                    this.actualDataSource = this.itemsSource;
                }
                else {
                    var f = this.externalGrid.createLocalDataSource(this.itemsSource);
                    this.actualDataSource = f;
                }
                if (this.w != null) {
                    this.y = igniteuiReactCore.typeCast(igniteuiReactCore.IEditableDataSource_$type, this.actualDataSource);
                    var g = this.w;
                    g.schemaChanged = igniteuiReactCore.delegateCombine(g.schemaChanged, igniteuiReactCore.runOn(this, this.pz));
                    if (this.y != null) {
                        var h = this.y;
                        h.dataCommitted = igniteuiReactCore.delegateCombine(h.dataCommitted, igniteuiReactCore.runOn(this, this.py));
                    }
                    this.w.updateNotifier = new DataSourceNotificationBridge(this);
                    if (this.w.isVirtual) {
                        this.model.bl = this.hy;
                    }
                    if (this.io) {
                        this.b4.b = this.w.sortDescriptions;
                    }
                    if (this.im) {
                        this.a7.b = this.w.groupDescriptions;
                    }
                    if (this.il) {
                        this.v.syncTarget = this.w.filterExpressions;
                    }
                    this.b7.b = this.w.summaryDescriptions;
                    this.w.propertiesRequested = this.n();
                    if (this.l != null) {
                        this.actualDataSource.primaryKey = this.l;
                    }
                    this.e = this.m();
                    if (this.w.actualSchema != null) {
                        this.delayedExecutionManager.executeIn(function () { return _this.rl(); }, 0);
                        this.d8.setDataSource(this.w);
                    }
                    this.hd = true;
                    this.hc = true;
                    this.gy = true;
                    this.gx = true;
                    this.te(this.ad, this.ah);
                    this.te(this.ac, this.ag);
                    this.e0.av();
                    this.hd = false;
                    this.hc = false;
                    this.gy = false;
                    this.gx = false;
                    for (var i = 0; i < this.ag.ae.count; ++i) {
                        this.d9.pinRow(this.ag.ae._inner[i]);
                    }
                    if (this.ge) {
                        this.actualDataSource.isSectionCollapsable = this.hs;
                    }
                    if (this.f5) {
                        this.actualDataSource.sectionHeaderDisplayMode = this.r;
                    }
                    if (this.gw) {
                        this.actualDataSource.summaryScope = this.t;
                    }
                    if (this.gg) {
                        this.actualDataSource.isSectionExpandedDefault = this.ht;
                    }
                    if (this.f6) {
                        switch (this.dy) {
                            case 1:
                            case 0:
                            case 4:
                                this.actualDataSource.includeSummaryRowsInSection = false;
                                break;
                            case 2:
                                this.actualDataSource.includeSummaryRowsInSection = true;
                                this.actualDataSource.isSectionSummaryRowsAtBottom = false;
                                break;
                            case 3:
                                this.actualDataSource.includeSummaryRowsInSection = true;
                                this.actualDataSource.isSectionSummaryRowsAtBottom = true;
                                break;
                        }
                    }
                    this.tg();
                }
            }
            if (a == "AutoGenerateColumns") {
                this.a2.p = this.g3;
            }
            if (a == "AutoGenerateDesiredColumns") {
                this.a2.b = this.f;
            }
            if (a == "IsPlaceholderRenderingEnabled") {
                if (this.w != null && this.w.isVirtual) {
                    this.model.bl = this.hy;
                }
            }
            if (a == "ColumnResizingMode") {
                this.hw = this.ir();
            }
            if (a == "ActivationMode") {
                this.hh = this.iq();
            }
            if (a == "SelectionMode") {
                this.hh = this.iq();
                switch (this.dt) {
                    case 1:
                        if (this.dj.count > 0) {
                            this.dj.clear();
                        }
                        if (this.dm.count > 0) {
                            this.dm.clear();
                        }
                        if (this.ah.count > 1) {
                            var j = this.ah._inner[this.ah.count - 1];
                            this.ah.clear();
                            this.ah.add(j);
                        }
                        break;
                    case 2:
                        if (this.dj.count > 0) {
                            this.dj.clear();
                        }
                        if (this.dm.count > 0) {
                            this.dm.clear();
                        }
                        break;
                    case 3:
                        if (this.ah.count > 0) {
                            this.ah.clear();
                        }
                        if (this.dj.count > 0) {
                            this.dj.clear();
                        }
                        if (this.dm.count > 1) {
                            var k = this.dm._inner[this.dm.count - 1];
                            this.dm.clear();
                            this.dm.add(k);
                        }
                        break;
                    case 4:
                        if (this.ah.count > 0) {
                            this.ah.clear();
                        }
                        if (this.dj.count > 0) {
                            this.dj.clear();
                        }
                        break;
                    case 5:
                        if (this.dm.count > 0) {
                            this.dm.clear();
                        }
                        if (this.ah.count > 0) {
                            this.ah.clear();
                        }
                        break;
                    case 0:
                        if (this.ah.count > 0) {
                            this.ah.clear();
                        }
                        if (this.dm.count > 0) {
                            this.dm.clear();
                        }
                        if (this.dj.count > 0) {
                            this.dj.clear();
                        }
                        break;
                }
            }
            if (a == "RowSeparator") {
                var l = b;
                var m = c;
                if (l != null) {
                    l.definitionPropertyUpdated = igniteuiReactCore.delegateRemove(l.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.sx));
                    l.grid = null;
                }
                if (m != null) {
                    m.definitionPropertyUpdated = igniteuiReactCore.delegateCombine(m.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.sx));
                    m.grid = this;
                }
                if (this.is()) {
                    if (!l.d0.equals(m.d0)) {
                        this.ck.r(this, null, "Background", 2, l.d0, m.d0, false, true, false, false);
                    }
                    if (!l.d3.equals(m.d3)) {
                        this.ck.r(this, null, "LastStickyRowBackground", 2, l.d3, m.d3, false, true, false, false);
                    }
                    if (!l.d5.equals(m.d5)) {
                        this.ck.r(this, null, "StickyRowBackground", 2, l.d5, m.d5, false, true, false, false);
                    }
                    if (!l.d4.equals(m.d4)) {
                        this.ck.r(this, null, "PinnedRowBackground", 2, l.d4, m.d4, false, true, false, false);
                    }
                }
            }
            if (a == "HeaderRowSeparator") {
                var n = b;
                var o = c;
                if (n != null) {
                    n.definitionPropertyUpdated = igniteuiReactCore.delegateRemove(n.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.p7));
                    n.grid = null;
                }
                if (o != null) {
                    o.definitionPropertyUpdated = igniteuiReactCore.delegateCombine(o.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.p7));
                    o.grid = this;
                }
            }
            if (a == "HeaderSeparator") {
                var p = b;
                var q = c;
                if (p != null) {
                    p.definitionPropertyUpdated = igniteuiReactCore.delegateRemove(p.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.p8));
                    p.grid = null;
                }
                if (q != null) {
                    q.definitionPropertyUpdated = igniteuiReactCore.delegateCombine(q.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.p8));
                    q.grid = this;
                }
            }
            if (a == "ColumnResizingSeparator") {
                var r = b;
                var s = c;
                if (r != null) {
                    r.grid = null;
                }
                if (s != null) {
                    s.grid = this;
                }
            }
            if (a == "ColumnMovingSeparator") {
                var t = b;
                var u = c;
                if (t != null) {
                    t.grid = null;
                }
                if (u != null) {
                    u.grid = this;
                }
            }
            if (a == "DataSourceDesiredProperties") {
                if (this.w != null) {
                    this.w.propertiesRequested = this.g;
                }
            }
            if (a == "PrimaryKey") {
                if (this.actualDataSource != null && this.l != null) {
                    this.actualDataSource.primaryKey = c;
                }
                this.e = this.m();
            }
            if (a == "ActualRowHeight" || a == "ActualHeaderHeight" || a == "RowSeparatorHeight" || a == "IsGroupRowSticky" || a == "IsHeaderSeparatorVisible" || a == "ShiftSectionContent" || a == "PinnedAreaSeparatorWidth") {
                this.hw = this.ir();
                if (this.is()) {
                    this.sl();
                }
            }
            if (a == "DefaultColumnWidth" || a == "DefaultColumnMinWidth" || a == "Inset" || a == "HeaderSeparatorWidth") {
                if (this.model != null && this.model.br != null && this.model.br.count > 0) {
                    this.sl();
                }
            }
            if (a == "SectionHeader") {
                if (b != null) {
                    var v = igniteuiReactCore.typeCast(SectionHeader.$, b);
                    v.sectionHeaderPropertyUpdating = igniteuiReactCore.delegateRemove(v.sectionHeaderPropertyUpdating, igniteuiReactCore.runOn(this, this.r7));
                    v.grid = null;
                }
                if (this.ey != null) {
                    var w = this.ey;
                    w.sectionHeaderPropertyUpdating = igniteuiReactCore.delegateCombine(w.sectionHeaderPropertyUpdating, igniteuiReactCore.runOn(this, this.r7));
                    this.ey.grid = this;
                }
                this.model.bn = true;
                this.sl();
            }
            if (a == "PinnedAreaSeparator") {
                if (b != null) {
                    var x = igniteuiReactCore.typeCast(PinnedAreaSeparator.$, b);
                    x.grid = null;
                }
                if (this.ei != null) {
                    this.ei.grid = this;
                }
                this.sl();
            }
            if (a == "ActiveCell") {
                this.cv = igniteuiReactCore.typeCast(GridCellPosition.$, b);
                this.gz = true;
                if (this.cw != null && this.cw.b >= 0) {
                    this.aj.y(this.cw.b, this.cw.d);
                }
                else {
                    this.aj.aa();
                }
                this.gz = false;
            }
            if (a == "ReactsToSortChanges") {
                var y = c;
                if (!y) {
                    this.b4.b = null;
                }
                else {
                    if (this.w != null) {
                        this.b4.b = this.w.sortDescriptions;
                    }
                }
            }
            if (a == "ReactsToGroupChanges") {
                var z = c;
                if (!z) {
                    this.a7.b = null;
                }
                else {
                    if (this.w != null) {
                        this.a7.b = this.w.groupDescriptions;
                    }
                }
            }
            if (a == "ReactsToFilterChanges") {
                var aa = c;
                if (!aa) {
                    this.v.syncTarget = null;
                }
                else {
                    if (this.w != null) {
                        this.v.syncTarget = this.w.filterExpressions;
                    }
                }
            }
            if (a == "IsGroupCollapsable") {
                if (this.actualDataSource != null) {
                    this.actualDataSource.isSectionCollapsable = c;
                }
            }
            if (a == "GroupHeaderDisplayMode") {
                if (this.actualDataSource != null) {
                    this.actualDataSource.sectionHeaderDisplayMode = igniteuiReactCore.EnumUtil.getEnumValue(igniteuiReactCore.DataSourceSectionHeaderDisplayMode_$type, c);
                }
            }
            if (a == "SummaryScope") {
                if (this.actualDataSource != null) {
                    this.actualDataSource.summaryScope = igniteuiReactCore.EnumUtil.getEnumValue(igniteuiReactCore.DataSourceSummaryScope_$type, c);
                }
            }
            if (a == "IsGroupExpandedDefault") {
                if (this.actualDataSource != null) {
                    this.actualDataSource.isSectionExpandedDefault = c;
                }
            }
            if (a == "GroupSummaryDisplayMode") {
                this.ey.en = this.dy;
                this.model.bn = true;
                if (this.actualDataSource != null) {
                    switch (this.dy) {
                        case 1:
                        case 0:
                        case 4:
                            this.actualDataSource.includeSummaryRowsInSection = false;
                            break;
                        case 2:
                            this.actualDataSource.includeSummaryRowsInSection = true;
                            this.actualDataSource.isSectionSummaryRowsAtBottom = false;
                            break;
                        case 3:
                            this.actualDataSource.includeSummaryRowsInSection = true;
                            this.actualDataSource.isSectionSummaryRowsAtBottom = true;
                            break;
                    }
                }
                this.sl();
            }
            if (a == "Density" || a == "RowHeight") {
                this.rm();
            }
            if (a == "HeaderHeight") {
                this.rm();
                this.externalGrid.setScrollerVerticalTrackInset(this.kk);
            }
            if (a == "DefaultBorderWidth" || a == "BorderWidth") {
                this.vw = this.vy(this.vx, this.vz);
            }
            if (a == "DefaultCornerRadius" || a == "CornerRadius") {
                this.tq = this.tr(this.ts, this.tt);
            }
            if (a == "Border" || a == "ActualCornerRadius" || a == "ActualBorderWidth") {
                this.externalGrid.setBorder(this.border, this.vw.c, this.vw.e, this.vw.d, this.vw.b, this.tq.c, this.tq.d, this.tq.a, this.tq.b);
            }
            if (a == "EditMode") {
                this.tg();
            }
        };
        Grid.prototype.tg = function () {
            if (this.y != null) {
                if (this.cf == 2 || this.cf == 3) {
                    this.y.isBatchingEnabled = true;
                }
                else {
                    this.y.isBatchingEnabled = false;
                }
            }
        };
        Grid.prototype.tr = function (a, b) {
            return new igniteuiReactCore.CornerRadius(1, !igniteuiReactCore.isNaN_(a.c) ? a.c : b.c, !igniteuiReactCore.isNaN_(a.d) ? a.d : b.d, !igniteuiReactCore.isNaN_(a.b) ? a.b : b.b, !igniteuiReactCore.isNaN_(a.a) ? a.a : b.a);
        };
        Grid.prototype.vy = function (a, b) {
            return new igniteuiReactCore.Thickness(1, !igniteuiReactCore.isNaN_(a.c) ? a.c : b.c, !igniteuiReactCore.isNaN_(a.e) ? a.e : b.e, !igniteuiReactCore.isNaN_(a.d) ? a.d : b.d, !igniteuiReactCore.isNaN_(a.b) ? a.b : b.b);
        };
        Grid.prototype.syncBorder = function () {
            if (this.externalGrid != null) {
                this.externalGrid.setBorder(this.border, this.vw.c, this.vw.e, this.vw.d, this.vw.b, this.tq.c, this.tq.d, this.tq.a, this.tq.b);
            }
        };
        Grid.prototype.rm = function () {
            if (this.le == -1) {
                switch (this.fg) {
                    case 0:
                    case 2:
                        this.kl = GridStyleRepository.p;
                        break;
                    case 3:
                        this.kl = GridStyleRepository.o;
                        break;
                    case 1:
                        this.kl = GridStyleRepository.n;
                        break;
                }
            }
            else {
                this.kl = this.le;
            }
            if (this.k6 == -1) {
                switch (this.fg) {
                    case 0:
                    case 2:
                        this.kk = GridStyleRepository.p;
                        break;
                    case 3:
                        this.kk = GridStyleRepository.o;
                        break;
                    case 1:
                        this.kk = GridStyleRepository.n;
                        break;
                }
            }
            else {
                this.kk = this.k6;
            }
        };
        Grid.prototype.m = function () {
            if (this.l != null) {
                return this.l;
            }
            if (this.actualDataSource != null) {
                return this.actualDataSource.actualPrimaryKey;
            }
            return null;
        };
        Grid.prototype.n = function () {
            if (!this.g3 && this.g == null && this.w.propertiesRequested == null && this.columns.count > 0) {
                return this.h();
            }
            if (this.g != null) {
                return this.g;
            }
            return this.w.propertiesRequested;
        };
        Grid.prototype.h = function () {
            var a = new Array(this.columns.count);
            for (var b = 0; b < this.columns.count; b++) {
                a[b] = this.columns._inner[b].hy;
            }
            return a;
        };
        Grid.prototype.sx = function (a, b) {
            this.sy(b.propertyName, b.animationType, b.oldValue, b.newValue, false);
        };
        Grid.prototype.p7 = function (a, b) {
            this.sy(b.propertyName, b.animationType, b.oldValue, b.newValue, true);
        };
        Grid.prototype.p8 = function (a, b) {
            this.p9(b.propertyName, b.animationType, b.oldValue, b.newValue);
        };
        Grid.prototype.sy = function (a, b, c, d, e) {
            if (b == 10) {
                return;
            }
            if (a != null && igniteuiReactCore.stringStartsWith(a, "Actual")) {
                a = a.substr(6);
            }
            this.ck.r(this, null, a, b, c, d, e, true, false, false);
        };
        Grid.prototype.p9 = function (a, b, c, d) {
            if (b == 10) {
                return;
            }
            if (a != null && igniteuiReactCore.stringStartsWith(a, "Actual")) {
                a = a.substr(6);
            }
            for (var e = 0; e < this.model.br.count; e++) {
                var f = this.model.br._inner[e];
                this.ck.r(this, f, a, b, c, d, true, false, false, true);
            }
        };
        Grid.prototype.pz = function (a, b) {
            this.rl();
        };
        Grid.prototype.py = function (a, b) {
            if (this.dataCommitted != null) {
                this.dataCommitted(this, new GridDataCommittedEventArgs(b.commitID, b.changes));
            }
        };
        Grid.prototype.rl = function () {
            this.d8.setDataSource(this.w);
            this.a2.d = this.w.actualSchema;
            this.th();
            for (var a = 0; a < this.a7.i.count; a++) {
                this.sv(this.a7.i.item(a));
            }
            for (var b = 0; b < this.b7.i.count; b++) {
                this.sw(this.b7.i.item(b));
            }
            this.sl();
            this.qe();
        };
        Grid.prototype.qk = function () {
            var e_15, _a;
            if (this.columnsAutoGenerated != null) {
                var a = new GridColumnsAutoGeneratedEventArgs();
                a.columns = this.actualColumns;
                this.columnsAutoGenerated(this, a);
            }
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.actualColumns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    b.gf = false;
                }
            }
            catch (e_15_1) {
                e_15 = { error: e_15_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_15)
                        throw e_15.error;
                }
            }
        };
        Grid.prototype.onSizeChanged = function (a, b) {
            this.jm = a;
            this.jl = b;
            this.ek.y(a, b);
            this.sl();
            if (this.sizeChanged != null) {
                this.sizeChanged(this, ((function () {
                    var $ret = new GridSizeChangedEventArgs();
                    $ret.b = a;
                    $ret.a = b;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.notifyScrollStart = function () {
            this.i0 = true;
        };
        Grid.prototype.notifyScrollStop = function () {
            this.i0 = false;
            if (this.hb) {
                this.d5.f(this.lb);
                this.hb = false;
            }
        };
        Grid.prototype.setViewport = function (a, b, c, d) {
            this.j7 = -1;
            this.j8 = -1;
            var e = c - a;
            var f = new igniteuiReactCore.Rect(0, a, b, c - a, d - b);
            if (f.x != this.model.actualVisibleRegion.x || f.y != this.model.actualVisibleRegion.y || f.width != this.model.actualVisibleRegion.width || f.height != this.model.actualVisibleRegion.height) {
                var g_1 = this.model.actualVisibleRegion;
                this.model.actualVisibleRegion = f;
                this.sm();
                if (this.viewportChanged != null) {
                    this.viewportChanged(this, ((function () {
                        var $ret = new GridViewportChangedEventArgs();
                        $ret.g = f.x;
                        $ret.d = g_1.x;
                        $ret.h = f.y;
                        $ret.e = g_1.y;
                        $ret.f = f.width;
                        $ret.c = g_1.width;
                        $ret.a = f.height;
                        $ret.b = g_1.height;
                        return $ret;
                    })()));
                }
            }
        };
        Object.defineProperty(Grid.prototype, "actualColumns", {
            get: function () {
                return this.a1.j;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "columns", {
            get: function () {
                return this.c0;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.rx = function (a, b, c) {
            var d = this.ca(a.k);
            d.cw(a, this, b, c);
            d.cx(a, this, b, c);
        };
        Grid.prototype.rw = function (a, b, c, d) {
            a.i0 = d;
            var e = this.ca(a.k);
            e.cx(a, this, b, c);
        };
        Grid.prototype.a0 = function (a) {
            return this.a2.h(a);
        };
        Grid.prototype.qa = function (a) {
            a.f7 = true;
            a.gd = true;
        };
        Grid.prototype.p2 = function (a, b) {
            var c = this.columns.indexOf(b);
            if (c == -1) {
                return;
            }
            if ((a != null && a.gc) || (b != null && b.gc)) {
                throw new igniteuiReactCore.InvalidOperationException(1, "Cannot exchange a column created from markup");
            }
            if (this.columns.contains(a)) {
                if (a.gd) {
                    this.externalGrid.removeExternalColumn(a.externalObject);
                }
                else {
                    return;
                }
            }
            var d = this.a4;
            if (d == 0) {
                d = a.et();
            }
            var e = false;
            if (d == 2 || d == 7) {
                e = true;
            }
            a.e8 = 3;
            if (e) {
                this.externalGrid.insertExternalColumnAtIndex(c + 1, a.externalObject);
            }
            else {
                this.externalGrid.insertExternalColumnAtIndex(c, a.externalObject);
            }
            b.fk = a.fk;
            if (!this.hk(a)) {
                a.gd = false;
                a.e8 = 5;
                this.externalGrid.removeExternalColumn(b.externalObject);
                this.q8(a);
            }
            this.sl();
            if (this.hk(a)) {
                var f = this.model.g(b.g2).a;
                b.e8 = 2;
                a.e8 = 1;
                this.ck.ai(this, this.cz, this.model.g(b.g2), this.model.g(a.g2), f);
            }
        };
        Grid.prototype.pk = function (a, b) {
            var _this = this;
            this.e0.w();
            this.aj.ad();
            this.e0.au();
            if (this.iy) {
                return;
            }
            switch (b.action) {
                case 0:
                    if (b.newItems != null) {
                        for (var c = 0; c < b.newItems.count; c++) {
                            this.rb(c + b.newStartingIndex, b.newItems.item(c));
                        }
                    }
                    break;
                case 1:
                    if (b.oldItems != null) {
                        for (var d = 0; d < b.oldItems.count; d++) {
                            this.rf(b.oldStartingIndex, b.oldItems.item(d));
                        }
                    }
                    break;
                case 2:
                    if (b.oldItems != null) {
                        for (var e = 0; e < b.oldItems.count; e++) {
                            this.rf(b.oldStartingIndex, b.oldItems.item(e));
                        }
                    }
                    if (b.newItems != null) {
                        for (var f = 0; f < b.newItems.count; f++) {
                            this.rb(f + b.newStartingIndex, b.newItems.item(f));
                        }
                    }
                    break;
                case 4:
                    this.ri();
                    break;
            }
            this.sl();
            if (!this.gn) {
                this.gn = true;
                this.delayedExecutionManager.executeIn(function () {
                    _this.gn = false;
                    if (_this.actualColumnsChanged != null) {
                        _this.actualColumnsChanged(_this, ((function () {
                            var $ret = new GridColumnsChangedEventArgs();
                            $ret.columns = _this.actualColumns;
                            return $ret;
                        })()));
                    }
                }, 0);
            }
        };
        Grid.prototype.ri = function () {
            this.e6.w(this.de, this.model);
        };
        Grid.prototype.rf = function (a, b) {
            b.grid = null;
            b.propertyChanged = igniteuiReactCore.delegateRemove(b.propertyChanged, igniteuiReactCore.runOn(this, this.ps));
            b.columnCellsPropertyUpdating = igniteuiReactCore.delegateRemove(b.columnCellsPropertyUpdating, igniteuiReactCore.runOn(this, this.pt));
            b.columnHeaderCellsPropertyUpdating = igniteuiReactCore.delegateRemove(b.columnHeaderCellsPropertyUpdating, igniteuiReactCore.runOn(this, this.pw));
            this.e6.v(this.de, a, b, this.model);
            this.sl();
            b.e8 = 0;
            this.e0.ac(a, b);
        };
        Grid.prototype.rb = function (a, b) {
            b.grid = this;
            b.propertyChanged = igniteuiReactCore.delegateCombine(b.propertyChanged, igniteuiReactCore.runOn(this, this.ps));
            b.columnCellsPropertyUpdating = igniteuiReactCore.delegateCombine(b.columnCellsPropertyUpdating, igniteuiReactCore.runOn(this, this.pt));
            b.columnHeaderCellsPropertyUpdating = igniteuiReactCore.delegateCombine(b.columnHeaderCellsPropertyUpdating, igniteuiReactCore.runOn(this, this.pw));
            this.e6.t(a, b, this.model);
            if (b.gd) {
                b.e8 = 3;
            }
            if (this.hi(b) && !b.gd && b.e8 != 3) {
                var c = b.e8;
                b.e8 = 1;
                this.sl();
                this.ck.aq(this, this.cz, this.model.g(b.g2), true, c);
            }
            else {
                this.sl();
            }
            for (var d = 0; d < this.b4.i.count; d++) {
                if (b.hy == this.b4.i.item(d).f) {
                    b.e6 = this.b5(this.b4.i.item(d).c);
                    break;
                }
            }
            this.e0.aa(a, b);
        };
        Grid.prototype.pt = function (a, b, c, d, e) {
            if (b == "Pinned") {
                this.ha(false);
            }
            if (b == "Width" || b == "MinWidth" || b == "Pinned") {
                this.sl();
                this.pr();
                if (b == "Width") {
                    this.rj(a, d);
                }
                return;
            }
            if (c == 10) {
                return;
            }
            var f = this.model.g(a.g2);
            if (f == null) {
                return;
            }
            if (b != null && igniteuiReactCore.stringStartsWith(b, "Actual")) {
                b = b.substr(6);
            }
            if (b == "HeaderText") {
                this.pw(a, "TextValue", c, d, e);
                return;
            }
            if (b == "ColumnOptionsIconAlignment" || b == "ColumnOptionsIconColor" || b == "ColumnOptionsIconBehavior" || b == "IsColumnOptionsEnabled") {
                this.pw(a, b, c, d, e);
                return;
            }
            if (b == "FormatString") {
                if (igniteuiReactCore.typeCast(NumericColumn.$, a) !== null || igniteuiReactCore.typeCast(DateTimeColumn.$, a) !== null) {
                    b = "FormatStringOverride";
                }
            }
            if (b == "SortDirection" && false == this.hx) {
                this.e4.f(a, a.e6);
            }
            this.ck.r(this, f, b, c, d, e, false, false, false, false);
        };
        Grid.prototype.r7 = function (a, b, c, d, e) {
            if (c == 10) {
                return;
            }
            if (b != null && igniteuiReactCore.stringStartsWith(b, "Actual")) {
                b = b.substr(6);
            }
            this.ck.r(this, null, b, c, d, e, false, false, true, false);
        };
        Grid.prototype.pw = function (a, b, c, d, e) {
            if (c == 10) {
                return;
            }
            var f = this.model.g(a.g2);
            if (f == null) {
                return;
            }
            if (b != null && igniteuiReactCore.stringStartsWith(b, "Actual")) {
                b = b.substr(6);
            }
            this.ck.r(this, f, b, c, d, e, true, false, false, false);
        };
        Grid.prototype.sd = function (a, b) {
            var c = b;
            if (c == null) {
                b = 0;
            }
            if ((typeof c == "number")) {
                var d = igniteuiReactCore.typeGetValue(c);
                if ((igniteuiReactCore.EnumUtil.getName(PinnedPositions_$type, d) == undefined)) {
                    b = 0;
                }
                b = d;
            }
            else {
                b = (igniteuiReactCore.typeGetValue(igniteuiReactCore.EnumUtil.parse(PinnedPositions_$type, c, true)));
            }
            var e = this.columns.indexOf(a);
            if (e == -1) {
                return;
            }
            if (a.fk == b) {
                return;
            }
            this.ha(false);
            a.gv = this.e6.k(e, this, this.model);
            a.gw = this.model.br._inner[e].n;
            a.fj = a.fk;
            a.fk = b;
            this.e6.s(this.model);
            var f = a.e8;
            if (this.hm(a)) {
                a.e8 = 6;
                this.ck.ak(this, this.cz, this.model.g(a.g2), f);
            }
        };
        Grid.prototype.qf = function (a, b) {
            var _this = this;
            this.externalGrid.ensureColumnsAreManual();
            var c = this.columns._inner[a];
            b = Math.min(this.columns.count - 1, Math.max(0, b));
            this.iy = true;
            if (c != null && c.gc) {
                throw new igniteuiReactCore.InvalidOperationException(1, "Can't move a column that was created from markup");
            }
            if (b > a) {
                var d = this.columns._inner[b - 1];
                if (d.gc) {
                    throw new igniteuiReactCore.InvalidOperationException(1, "Can't move a column to before columns created from markup");
                }
            }
            else {
                var e = this.columns._inner[b];
                if (e.gc) {
                    throw new igniteuiReactCore.InvalidOperationException(1, "Can't move a column to before columns created from markup");
                }
            }
            this.externalGrid.removeExternalColumn(c.externalObject);
            this.externalGrid.insertExternalColumnAtIndex(b, c.externalObject);
            this.iy = false;
            this.ha(false);
            this.rc(a, b, c);
            if (this.actualColumnsChanged != null) {
                this.actualColumnsChanged(this, ((function () {
                    var $ret = new GridColumnsChangedEventArgs();
                    $ret.columns = _this.actualColumns;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.qg = function (a) {
            this.h6(a, true, true);
        };
        Grid.prototype.qh = function (a) {
            this.h6(a, false, true);
        };
        Grid.prototype.g6 = function (a) {
            return this.h6(a, true, false);
        };
        Grid.prototype.g7 = function (a) {
            return this.h6(a, false, false);
        };
        Grid.prototype.h6 = function (a, b, c) {
            var d = this.actualColumns;
            var e = d.count - 1;
            var f = d._inner[a];
            var g = f.fk;
            var h = -1;
            var i = a;
            do {
                i += b ? -1 : 1;
                if (i < 0 || i > e) {
                    break;
                }
                var j = d._inner[i];
                if (!j.gd && j.fk == g) {
                    h = i;
                }
            } while (h == -1);
            if (h != -1) {
                if (c) {
                    this.qf(a, h);
                }
                return true;
            }
            switch (f.fk) {
                case 0:
                    var k = this.ay(b);
                    if (null == k) {
                        return false;
                    }
                    if (c) {
                        h = d.indexOf(k);
                        this.qf(a, h + (b ? 1 : -1));
                        f.fk = k.fk;
                    }
                    break;
                case 1:
                    if (b) {
                        return false;
                    }
                    if (c) {
                        var l = this.ax(true);
                        if (l == null) {
                            this.sd(d._inner[a], 0);
                        }
                        else {
                            h = d.indexOf(l);
                            this.qf(a, h - 1);
                            f.fk = 0;
                        }
                    }
                    break;
                case 2:
                    if (!b) {
                        return false;
                    }
                    if (c) {
                        var m = this.ax(false);
                        if (m == null) {
                            this.sd(d._inner[a], 0);
                        }
                        else {
                            h = d.indexOf(m);
                            this.qf(a, h + 1);
                            f.fk = 0;
                        }
                    }
                    break;
            }
            return true;
        };
        Grid.prototype.ay = function (a) {
            var b = a ? 1 : 2;
            var c = this.actualColumns;
            var d = this.model.bx;
            var e = d.count - 1;
            var f = a ? 0 : e;
            var g = d._inner[f];
            var h = c._inner[g];
            var i = null;
            while (h.fk == b) {
                i = h;
                f += a ? 1 : -1;
                if (f < 0 || f > e) {
                    break;
                }
                g = d._inner[f];
                h = c._inner[g];
            }
            return i;
        };
        Grid.prototype.ax = function (a) {
            var b = this.actualColumns;
            var c = this.model.bx;
            var d = c.count - 1;
            var e = a ? 0 : d;
            var f = c._inner[e];
            var g = b._inner[f];
            while (g.fk != 0) {
                e += a ? 1 : -1;
                if (e < 0 || e > d) {
                    break;
                }
                f = c._inner[e];
                g = b._inner[f];
            }
            if (g.fk == 0) {
                return g;
            }
            else {
                return null;
            }
        };
        Grid.prototype.rc = function (a, b, c) {
            c.gv = this.e6.k(a, this, this.model);
            c.gu = a;
            c.gw = this.model.br._inner[a].n;
            var d = c.e8;
            this.e6.u(this.de, this.model, a, b, c.g2);
            if (!this.hm(c) && d != 3) {
                c.e8 = 5;
            }
            this.sl();
            if (this.hm(c)) {
                c.e8 = 6;
                this.ck.ak(this, this.cz, this.model.g(c.g2), d);
            }
            this.e0.ab(a, b, c);
        };
        Grid.prototype.ps = function (a, b) {
            var c = a;
            switch (b.propertyName) {
                case "Filter":
                    this.th();
                    break;
                case "IsHidden":
                    if (c.gd) {
                        if (this.hl(c)) {
                            var d = c.e8;
                            c.e8 = 2;
                            this.sl();
                            this.ck.aj(this, this.cz, this.model.g(c.g2), false, d);
                        }
                        else {
                            c.e8 = 3;
                            if (c.f4) {
                                this.externalGrid.ensureColumnsAreManual();
                                this.externalGrid.removeExternalColumn(c.externalObject);
                            }
                            this.sl();
                        }
                    }
                    else {
                        if (this.hq(c)) {
                            var e = c.e8;
                            c.e8 = 1;
                            this.sl();
                            this.ck.aq(this, this.cz, this.model.g(c.g2), false, e);
                        }
                        else {
                            c.e8 = 5;
                            this.ck.ah(this, this.model.g(c.g2));
                            this.c9.ab();
                            this.sl();
                        }
                    }
                    if (this.columnHiddenChanged != null) {
                        this.columnHiddenChanged(this, ((function () {
                            var $ret = new ColumnHiddenChangedEventArgs();
                            $ret.a = c;
                            $ret.b = c.gd;
                            return $ret;
                        })()));
                    }
                    break;
                case "Pinned":
                    if (this.columnPinnedChanged != null) {
                        this.columnPinnedChanged(this, ((function () {
                            var $ret = new ColumnPinnedChangedEventArgs();
                            $ret.a = c;
                            $ret.b = c.fk;
                            return $ret;
                        })()));
                    }
                    break;
            }
        };
        Grid.prototype.th = function () {
            if (this.actualDataSource == null) {
                return;
            }
            var a = this.z(null);
            if (a != null) {
                a.markAutoGenerated();
                var b = false;
                if (this.v != null) {
                    for (var c = 0; c < this.v.j.count; c++) {
                        if (this.v.j.item(c).isAutoGenerated) {
                            this.v.j.item(c, a);
                            b = true;
                            break;
                        }
                    }
                }
                if (!b) {
                    this.v.add(a);
                }
            }
            else {
                for (var d = this.v.j.count - 1; d >= 0; d--) {
                    if (this.v.j.item(d).isAutoGenerated) {
                        this.v.removeAt(d);
                    }
                }
            }
        };
        Grid.prototype.ca = function (a) {
            var b = this.d8.getRowType(a.w);
            if (b != 0 && b != 3) {
                if (a.as) {
                    if (a.g) {
                        return this.d2;
                    }
                    return this.eu;
                }
                switch (b) {
                    case 1: if (this.dy != 1) {
                        return this.ey;
                    }
                    else {
                        return this.a0(a);
                    }
                    case 2: return this.ew;
                    case 4: return this.e8;
                    case 5: return this.fa;
                    default: throw new igniteuiReactCore.NotSupportedException(0);
                }
            }
            else {
                if (a.as) {
                    if (a.g) {
                        return this.d2;
                    }
                    return this.eu;
                }
                else {
                    if (a.ap && this.dragger != null) {
                        if (this.dragger.dragType == 1) {
                            return this.bw;
                        }
                        else if (this.dragger.dragType == 2) {
                            return this.bi;
                        }
                    }
                    if (a.al || a.an || a.ak || a.am) {
                        return this.ei;
                    }
                    var c = this.a0(a);
                    if (a.g) {
                        if (a.h) {
                            return this.d4;
                        }
                        else {
                            return c.header;
                        }
                    }
                    else {
                        return c;
                    }
                }
            }
        };
        Grid.prototype.nc = function (a, b, c, d) {
            return this.ca(a).cl(a, b, c, d);
        };
        Grid.prototype.ao = function (a, b) {
            var c = this.ca(a);
            var d = c.k(a, b);
            d.o = this;
            return d;
        };
        Grid.prototype.lp = function () {
            return this.model.b();
        };
        Grid.prototype.nb = function () {
            var a = this.model.b();
            return a.av();
        };
        Grid.prototype.eq = function (a) {
            return this.d9.getRowPathForRow(a);
        };
        Grid.prototype.s2 = function (a) {
            var e_16, _a;
            var b = igniteuiReactCore.truncate(this.model.actualVisibleRegion.left);
            if (this.j7 != -1) {
                b = this.j7;
            }
            var c = 0;
            var d = 0;
            if (a < 0) {
                a = 0;
            }
            if (a >= this.d9.getRowCount()) {
                a = this.d9.getRowCount() - 1;
            }
            var e = 0;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.model.bv)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    if (d + f.m > a) {
                        e = igniteuiReactCore.truncate(Math.floor(a - d));
                        var g = f.e(e);
                        c = f.f(e);
                        c += igniteuiReactCore.truncate(Math.round(g * ((a - d) - e)));
                    }
                    else {
                        d += f.m;
                        continue;
                    }
                }
            }
            catch (e_16_1) {
                e_16 = { error: e_16_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_16)
                        throw e_16.error;
                }
            }
            var h = this.fc.i(this, this.model, new igniteuiReactCore.Rect(0, b, c, this.model.b9, this.model.by));
            var i = -1;
            var j = -1;
            var k = false;
            for (var l = 0; l < h.count; l++) {
                if (h._inner[l].m == e) {
                    i = l;
                    j = h._inner[l].n;
                    break;
                }
                if (h._inner[l].m > e) {
                    i = l - 1;
                    break;
                }
                switch (h._inner[l].a) {
                    case 3:
                        k = true;
                        break;
                    case 1:
                        k = false;
                        break;
                }
            }
            if (i == -1) {
                i = h.count - 1;
            }
            var m = 0;
            for (var n = i; n >= 0; n--) {
                if (k) {
                    if (h._inner[n].n >= j) {
                        if (h._inner[n].a != 3) {
                            j = h._inner[n].n;
                            k = false;
                        }
                        m += h._inner[n].k + this.lg + this.lh;
                    }
                }
                else {
                    if (h._inner[n].n > j) {
                        if (h._inner[n].a != 3) {
                            j = h._inner[n].n;
                        }
                        m += h._inner[n].k + this.lg + this.lh;
                    }
                }
            }
            c -= igniteuiReactCore.truncate(m);
            c = Math.max(c, 0);
            if (this.model.absoluteHeight > 0 && this.model.actualVisibleRegion.height > 0 && c + this.model.actualVisibleRegion.height > this.model.absoluteHeight) {
                c = igniteuiReactCore.truncate(Math.round(this.model.absoluteHeight - this.model.actualVisibleRegion.height));
            }
            if (c < 0) {
                c = 0;
            }
            this.j8 = c;
            this.j7 = b;
            this.viewportManager.moveViewportTo(b, c);
        };
        Grid.prototype.s1 = function (a) {
            var e_17, _a;
            var b = igniteuiReactCore.truncate(this.model.actualVisibleRegion.left);
            if (this.j7 != -1) {
                b = this.j7;
            }
            var c = 0;
            var d = 0;
            if (a < 0) {
                a = 0;
            }
            if (a >= this.d9.getRowCount()) {
                a = this.d9.getRowCount() - 1;
            }
            var e = 0;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.model.bv)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var f = _c.value;
                    if (d + f.m > a) {
                        var g = igniteuiReactCore.truncate(Math.floor(a - d));
                        var h = f.e(g);
                        e = h;
                        c = f.i + f.f(g);
                        c += igniteuiReactCore.truncate(Math.round(h * ((a - d) - g)));
                    }
                    else {
                        d += f.m;
                        continue;
                    }
                }
            }
            catch (e_17_1) {
                e_17 = { error: e_17_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_17)
                        throw e_17.error;
                }
            }
            c -= this.model.ci;
            c = Math.max(c, 0);
            if (this.model.absoluteHeight > 0 && this.model.actualVisibleRegion.height > 0) {
                c -= igniteuiReactCore.truncate(Math.round(this.model.actualVisibleRegion.height - this.model.cu - (e + this.model.ci)));
            }
            if (this.model.absoluteHeight > 0 && this.model.actualVisibleRegion.height > 0 && c + this.model.actualVisibleRegion.height > this.model.absoluteHeight) {
                c = igniteuiReactCore.truncate(Math.round(this.model.absoluteHeight - this.model.actualVisibleRegion.height));
            }
            if (c < 0) {
                c = 0;
            }
            this.j8 = c;
            this.j7 = b;
            this.viewportManager.moveViewportTo(b, c);
        };
        Grid.prototype.it = function (a) {
            var b = this.kr(a);
            if (b == -1) {
                return false;
            }
            this.s2(b);
            return true;
        };
        Grid.prototype.iu = function (a) {
            var b = this.ks(a);
            if (b == -1) {
                return false;
            }
            this.s2(b);
            return true;
        };
        Grid.prototype.sz = function (a) {
            var b = igniteuiReactCore.truncate(a);
            if (b < 0) {
                b = 0;
                a = 0;
            }
            if (a > this.model.br.count) {
                b = this.model.br.count - 1;
                a = this.model.br.count - 1;
            }
            var c = this.columns._inner[b];
            if (c.fk != 0) {
                return;
            }
            var d = this.e6.k(b, this, this.model);
            var e = igniteuiReactCore.truncate(this.model.actualVisibleRegion.top);
            if (this.j8 != -1) {
                e = this.j8;
            }
            var f = d + igniteuiReactCore.truncate((this.model.br._inner[b].k * (a - b)));
            f -= this.model.cf;
            if (this.model.absoluteWidth > 0 && this.model.actualVisibleRegion.width > 0 && f + this.model.actualVisibleRegion.width > this.model.absoluteWidth) {
                f = igniteuiReactCore.truncate(Math.round(this.model.absoluteWidth - this.model.actualVisibleRegion.width));
            }
            if (f < 0) {
                f = 0;
            }
            this.j8 = e;
            this.j7 = f;
            this.viewportManager.moveViewportTo(f, e);
        };
        Grid.prototype.s0 = function (a) {
            var b = igniteuiReactCore.truncate(a);
            if (b < 0) {
                b = 0;
                a = 0;
            }
            if (a > this.model.br.count) {
                b = this.model.br.count - 1;
                a = this.model.br.count - 1;
            }
            var c = this.columns._inner[b];
            var d = this.e6.k(b, this, this.model);
            var e = igniteuiReactCore.truncate(this.model.actualVisibleRegion.top);
            if (this.j8 != -1) {
                e = this.j8;
            }
            var f = d + igniteuiReactCore.truncate((this.model.br._inner[b].k * (a - b)));
            var g = this.model.actualVisibleRegion.width - this.model.cg;
            if (this.model.absoluteWidth > 0 && g > 0) {
                f -= igniteuiReactCore.truncate(Math.round(g - this.model.br._inner[b].k));
            }
            if (this.model.absoluteWidth > 0 && this.model.actualVisibleRegion.width > 0 && f + this.model.actualVisibleRegion.width > this.model.absoluteWidth) {
                f = igniteuiReactCore.truncate(Math.round(this.model.absoluteWidth - this.model.actualVisibleRegion.width));
            }
            if (f < 0) {
                f = 0;
            }
            this.j8 = e;
            this.j7 = f;
            this.viewportManager.moveViewportTo(f, e);
        };
        Grid.prototype.iw = function (a) {
            return this.hi(a);
        };
        Grid.prototype.rk = function (a, b) {
            if (this.ch == 1 && this.cw != null) {
                if (this.cw.b >= a && this.cw.b <= b) {
                    if (this.activeCellChanged != null) {
                        var c = new GridActiveCellChangedEventArgs();
                        c.newActiveCell = this.cw;
                        c.oldActiveCell = this.cw;
                        this.activeCellChanged(this, c);
                    }
                }
            }
            var d = this.ky();
            var e = this.k2();
            if (b < d || a > e) {
                return;
            }
            if (a < d) {
                a = d;
            }
            if (b > e) {
                b = e;
            }
            if (!this.is()) {
                return;
            }
            this.ck.y(this, a, b, false);
            if (this.d9.getRowCount() != this.model.ck()) {
                this.sl();
            }
            else {
                this.sm();
            }
            this.pr();
        };
        Grid.prototype.pr = function () {
            if (this.model.actualVisibleRegion.isEmpty) {
                return;
            }
            if (this.model.actualVisibleRegion.bottom > this.model.absoluteHeight || this.model.actualVisibleRegion.top > this.model.absoluteHeight) {
                var a = this.d9.getRowCount() - 1;
                if (a < 0) {
                    a = 0;
                }
                this.s2(a);
            }
            if (this.model.actualVisibleRegion.right > this.model.absoluteWidth || this.model.actualVisibleRegion.left > this.model.absoluteWidth) {
                var b = this.a2.j.count - 1;
                if (b < 0) {
                    b = 0;
                }
                this.s0(b);
            }
        };
        Grid.prototype.ku = function (a) {
            return this.e6.i(this.model, a.k);
        };
        Grid.prototype.is = function () {
            return this.model.be != null && this.model.bf != null && this.model.bf.w >= 0 && this.model.be.w >= 0;
        };
        Grid.prototype.k2 = function () {
            return this.e6.i(this.model, this.model.be);
        };
        Grid.prototype.ky = function () {
            return this.e6.i(this.model, this.model.bf);
        };
        Grid.prototype.kw = function () {
            var a = this.e6.b(this.model.actualVisibleRegion.top + this.model.cl + this.model.cm + this.model.cv, this.model);
            return this.e6.i(this.model, a);
        };
        Grid.prototype.k0 = function () {
            var a = this.e6.b(this.model.actualVisibleRegion.bottom - this.model.cu, this.model);
            return this.e6.i(this.model, a);
        };
        Grid.prototype.sb = function () {
            var a = this.ky();
            var b = this.k2();
            this.d9.firstVisibleIndexRequested = a;
            this.d9.lastVisibleIndexRequested = b;
        };
        Object.defineProperty(Grid.prototype, "h1", {
            get: function () {
                return this.cellPreviewPointerDown != null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "h2", {
            get: function () {
                return this.cellPreviewPointerUp != null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "hz", {
            get: function () {
                return this.cellPointerDown != null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "h0", {
            get: function () {
                return this.cellPointerUp != null;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.iq = function () {
            return this.dt != 0 || this.cellClicked != null || this.ch != 0 || this.bu != 2 || this.bg != 1;
        };
        Grid.prototype.ir = function () {
            return (this.bu != 2 && this.hv) || this.bg != 1;
        };
        Grid.prototype.r5 = function (a, b) {
            this.hd = true;
            this.pn(a, b);
            this.hd = false;
        };
        Grid.prototype.r6 = function (a, b) {
            this.hd = true;
            this.st(a, b);
            this.hd = false;
        };
        Grid.prototype.r8 = function (a, b, c) {
            this.hd = true;
            this.tl(a, b, c);
            this.hd = false;
        };
        Grid.prototype.qq = function (a, b) {
            if (!this.gz) {
                var c = new GridCellPosition();
                c.d = b;
                c.b = a;
                this.cw = c;
            }
            if (this.activeCellChanged != null) {
                var d = new GridActiveCellChangedEventArgs();
                d.newActiveCell = this.cw;
                d.oldActiveCell = this.cv;
                this.activeCellChanged(this, d);
            }
        };
        Grid.prototype.qs = function (a, b) {
            if (b == null) {
                return;
            }
            var c = this.cw;
            if (!this.gz) {
                var d = new GridCellPosition();
                d.d = b;
                d.b = a;
                this.cw = d;
            }
            if (this.activeCellChanged != null) {
                var e = new GridActiveCellChangedEventArgs();
                e.newActiveCell = this.cw;
                e.oldActiveCell = c;
                this.activeCellChanged(this, e);
            }
        };
        Grid.prototype.h8 = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            var c = this.cu.b;
            var d = this.cu.d;
            if (c > this.d9.getRowCount() - 1) {
                return false;
            }
            var e = c + 1;
            if (b) {
                e = this.d9.getRowCount() - 1;
            }
            if (e > this.d9.getRowCount() - 1) {
                e = this.d9.getRowCount() - 1;
            }
            if (e == c) {
                return false;
            }
            var f = Math.min(this.aj.r(), this.actualColumns.count - 1);
            f = this.kt(f);
            var g = this.actualColumns._inner[f];
            if (d != g.h0()) {
                d = g.h0();
            }
            if (this.dy != 1) {
                var h = this.d9.getRowType(e);
                if (h == 1 || h == 2) {
                    d = null;
                }
            }
            this.cw = ((function () {
                var $ret = new GridCellPosition();
                $ret.b = e;
                $ret.d = d;
                return $ret;
            })());
            if (this.model.br.count > 0) {
                var i = this.aj.r();
                this.po(e, this.model.br._inner[i].n, false);
            }
            return true;
        };
        Grid.prototype.h9 = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            if (!b || this.cb.j) {
                return false;
            }
            var c = this.kz();
            var d = this.actualColumns._inner[c];
            var e = this.cu.b;
            var f = this.cu.d;
            if (e >= this.d9.getRowCount() - 1 && f == d.h0()) {
                return false;
            }
            e = this.d9.getRowCount() - 1;
            f = d.h0();
            var g = this.d9.getRowType(e);
            if (g == 1 || g == 2) {
                f = null;
            }
            this.cw = ((function () {
                var $ret = new GridCellPosition();
                $ret.b = e;
                $ret.d = f;
                return $ret;
            })());
            this.f1 = true;
            this.s1(e);
            this.f1 = false;
            this.sz(c);
            return true;
        };
        Grid.prototype.kz = function () {
            var a = this.actualColumns.count - 1;
            var b = this.e6.j(a, this.model);
            while (a > 0 && this.actualColumns._inner[b].gd) {
                a--;
                b = this.e6.j(a, this.model);
            }
            return b;
        };
        Grid.prototype.kv = function () {
            var a = 0;
            var b = this.e6.j(a, this.model);
            while (a < this.actualColumns.count - 1 && this.actualColumns._inner[b].gd) {
                a++;
                b = this.e6.j(a, this.model);
            }
            return b;
        };
        Grid.prototype.k4 = function (a, b) {
            if (b === void 0) {
                b = true;
            }
            var c = Math.max(0, a - 1);
            if (!b) {
                c = this.e6.j(c, this.model);
            }
            if (this.actualColumns._inner[c].gd) {
                var d = c;
                var e = this.model.br._inner[c].n;
                while (e > 0 && this.actualColumns._inner[d].gd) {
                    e--;
                    d = this.e6.j(e, this.model);
                }
                if (this.actualColumns._inner[d].gd) {
                    d = c;
                    e = this.model.br._inner[c].n;
                    while (e < this.actualColumns.count - 1 && this.actualColumns._inner[d].gd) {
                        e++;
                        d = this.e6.j(e, this.model);
                    }
                    if (!this.actualColumns._inner[d].gd) {
                        c = d;
                    }
                }
                else {
                    c = d;
                }
            }
            return c;
        };
        Grid.prototype.k3 = function (a, b) {
            if (b === void 0) {
                b = true;
            }
            var c = Math.min(this.actualColumns.count - 1, a + 1);
            if (!b) {
                c = this.e6.j(c, this.model);
            }
            return this.kt(c);
        };
        Grid.prototype.kt = function (a) {
            a = Math.min(a, this.actualColumns.count - 1);
            if (this.actualColumns._inner[a].gd) {
                var b = a;
                var c = this.model.br._inner[b].n;
                while (c < this.actualColumns.count - 1 && this.actualColumns._inner[b].gd) {
                    c++;
                    b = this.e6.j(c, this.model);
                }
                if (this.actualColumns._inner[b].gd) {
                    b = a;
                    c = this.model.br._inner[b].n;
                    while (c > 0 && this.actualColumns._inner[b].gd) {
                        c--;
                        b = this.e6.j(c, this.model);
                    }
                    if (!this.actualColumns._inner[b].gd) {
                        a = b;
                    }
                }
                else {
                    a = b;
                }
            }
            return a;
        };
        Grid.prototype.po = function (a, b, c) {
            if (b <= this.kx()) {
                b = this.e6.j(b, this.model);
                this.sz(b);
            }
            else if (b >= this.k1()) {
                b = this.e6.j(b, this.model);
                this.s0(b);
            }
            if (a <= this.kw()) {
                this.s2(a);
            }
            else if (a >= this.k0()) {
                if (c) {
                    this.s2(a);
                }
                else {
                    this.s1(a);
                }
            }
        };
        Grid.prototype.id = function (a, b) {
            if (!b || this.cb.j) {
                return false;
            }
            var c = this.kv();
            var d = this.actualColumns._inner[c];
            var e = this.cu.b;
            var f = this.cu.d;
            if (e <= 0 && f == d.h0()) {
                return false;
            }
            e = 0;
            f = d.h0();
            if (this.dy != 1) {
                var g = this.d9.getRowType(e);
                if (g == 1 || g == 2) {
                    f = null;
                }
            }
            this.cw = ((function () {
                var $ret = new GridCellPosition();
                $ret.b = e;
                $ret.d = f;
                return $ret;
            })());
            this.f1 = true;
            this.s1(e);
            this.f1 = false;
            this.sz(c);
            return true;
        };
        Grid.prototype.ie = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            var c = this.aj.r();
            var d = this.model.br._inner[c].n;
            var e = this.cu.b;
            var f = this.cu.d;
            if (f == null) {
                return false;
            }
            var g = this.k4(d, false);
            if (b) {
                g = this.kv();
            }
            var h = this.actualColumns._inner[g];
            if (f == h.h0()) {
                return false;
            }
            f = h.h0();
            this.cw = ((function () {
                var $ret = new GridCellPosition();
                $ret.b = e;
                $ret.d = f;
                return $ret;
            })());
            if (this.model.br.count > 0) {
                if (h.fk == 0) {
                    this.po(e, this.model.br._inner[g].n, false);
                }
            }
            return true;
        };
        Grid.prototype.ig = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            var c = this.cu.d;
            var d = this.aj.r();
            var e = this.ky();
            var f = this.k2();
            var g = f - e;
            var h = Math.min(f + 1, this.d9.getRowCount() - 1);
            if (!this.cb.j) {
                var i = this.d9.getRowType(h);
                if (i == 1 || i == 2) {
                    c = null;
                }
                this.cw = ((function () {
                    var $ret = new GridCellPosition();
                    $ret.b = h;
                    $ret.d = c;
                    return $ret;
                })());
            }
            this.po(h, this.model.br._inner[d].n, true);
            return true;
        };
        Grid.prototype.ih = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            var c = this.cu.d;
            var d = this.aj.r();
            var e = this.ky();
            var f = this.k2();
            var g = f - e;
            var h = Math.max(e - g - 1, 0);
            if (!this.cb.j) {
                var i = this.d9.getRowType(h);
                if (i == 1 || i == 2) {
                    c = null;
                }
                this.cw = ((function () {
                    var $ret = new GridCellPosition();
                    $ret.b = h;
                    $ret.d = c;
                    return $ret;
                })());
            }
            this.po(h, this.model.br._inner[d].n, false);
            return true;
        };
        Grid.prototype.ii = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            var c = this.aj.r();
            var d = this.model.br._inner[c].n;
            var e = this.cu.b;
            var f = this.cu.d;
            if (f == null) {
                return false;
            }
            var g = this.k3(d, false);
            if (b) {
                g = this.kz();
            }
            var h = this.actualColumns._inner[g];
            if (f == h.h0()) {
                return false;
            }
            f = h.h0();
            this.cw = ((function () {
                var $ret = new GridCellPosition();
                $ret.b = e;
                $ret.d = f;
                return $ret;
            })());
            if (this.model.br.count > 0) {
                if (h.fk == 0) {
                    this.po(e, this.model.br._inner[g].n, false);
                }
            }
            return true;
        };
        Grid.prototype.ij = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            var c = this.aj.r();
            var d = this.model.br._inner[c].n;
            var e = this.cu.b;
            var f = this.cu.d;
            var g = e;
            var h = f;
            var i = c;
            var j = 0;
            if (g >= 0 && g < this.d9.getRowCount()) {
                j = this.d9.getRowType(g);
            }
            var k = this.dy != 1 && j == 1;
            var l = j != 1 && j != 2 && j != 4 && j != 5;
            if (a) {
                var m = void 0;
                var n = null;
                do {
                    m = this.k4(d, false);
                    n = this.actualColumns._inner[m];
                    if (h == n.h0() || k) {
                        if (g > 0) {
                            g--;
                            j = this.d9.getRowType(g);
                            k = j == 1;
                            l = j != 1 && j != 2 && j != 4 && j != 5;
                            if (this.dy != 1 && j == 1) {
                                m = this.kv();
                            }
                            else {
                                m = this.kz();
                            }
                            n = this.actualColumns._inner[m];
                        }
                        else {
                            return false;
                        }
                    }
                    d = m;
                    h = n.h0();
                } while (this.cb.j && g >= 0 && (!l || !n.ga));
                if (this.dy != 1) {
                    if (j == 1 || j == 2) {
                        h = null;
                    }
                }
                i = m;
            }
            else {
                var o = void 0;
                var p = null;
                do {
                    o = this.k3(d, false);
                    p = this.actualColumns._inner[o];
                    if (h == p.h0() || k) {
                        if (g < this.d9.getRowCount() - 1) {
                            o = this.kv();
                            p = this.actualColumns._inner[o];
                            g++;
                            j = this.d9.getRowType(g);
                            k = j == 1;
                            l = j != 1 && j != 2 && j != 4 && j != 5;
                        }
                        else {
                            return false;
                        }
                    }
                    d = o;
                    h = p.h0();
                } while (this.cb.j && g < this.d9.getRowCount() - 1 && (!l || !p.ga));
                if (this.dy != 1) {
                    if (j == 1 || j == 2) {
                        h = null;
                    }
                }
                i = o;
            }
            if (this.cb.j && (f != h || e != g)) {
                this.ha(true);
                if (!this.cb.j) {
                    this.cw = ((function () {
                        var $ret = new GridCellPosition();
                        $ret.b = g;
                        $ret.d = h;
                        return $ret;
                    })());
                    this.po(g, this.model.br._inner[i].n, false);
                    this.i1();
                }
            }
            else {
                this.cw = ((function () {
                    var $ret = new GridCellPosition();
                    $ret.b = g;
                    $ret.d = h;
                    return $ret;
                })());
                this.po(g, this.model.br._inner[i].n, false);
            }
            return true;
        };
        Grid.prototype.sc = function () {
        };
        Grid.prototype.ik = function (a, b) {
            if (this.ch == 0 || this.cw == null) {
                return false;
            }
            var c = this.cu.b;
            var d = this.cu.d;
            if (c < 0) {
                return false;
            }
            var e = c - 1;
            if (b) {
                e = 0;
            }
            if (e < 0) {
                e = 0;
            }
            if (e == c) {
                return false;
            }
            var f = Math.min(this.aj.r(), this.actualColumns.count - 1);
            f = this.kt(f);
            var g = this.actualColumns._inner[f];
            if (d != g.h0()) {
                d = g.h0();
            }
            if (this.dy != 1) {
                var h = this.d9.getRowType(e);
                if (h == 1 || h == 2) {
                    d = null;
                }
            }
            this.cw = ((function () {
                var $ret = new GridCellPosition();
                $ret.b = e;
                $ret.d = d;
                return $ret;
            })());
            if (this.model.br.count > 0) {
                var i = this.aj.r();
                this.po(e, this.model.br._inner[i].n, false);
            }
            return true;
        };
        Grid.prototype.ia = function (a, b) {
            if (this.cb.j) {
                this.ha(true);
                if (this.cf == 3) {
                    this.p1(true);
                }
            }
            else {
                if (this.ch != 0 && this.cw != null) {
                    var c = this.d9.getRowType(this.cw.b);
                    if (c == 1) {
                        this.tj(this.cw.b);
                    }
                    else if (this.hr() && c == 0) {
                        var d = this.aj.r();
                        var e = this.actualColumns._inner[d];
                        if (e != null && e.ga) {
                            var f = this.model.d(d, this.cw.b);
                            return this.ix(f);
                        }
                    }
                }
            }
            return false;
        };
        Grid.prototype.ib = function () {
            if (this.hr()) {
                if (this.cb.l != -1) {
                    this.y.rejectPendingTransaction(this.cb.l);
                }
                this.ha(false);
                if (this.cf == 3) {
                    this.p1(false);
                }
            }
            return false;
        };
        Grid.prototype.ic = function () {
            return this.i1();
        };
        Grid.prototype.i1 = function () {
            if (this.cb.j) {
                this.ha(true);
                return true;
            }
            if (this.ch != 0 && this.cw != null) {
                var a = this.d9.getRowType(this.cw.b);
                if (this.hr() && (a == 0 || a == 3)) {
                    var b = this.aj.r();
                    var c = this.actualColumns._inner[b];
                    if (c != null && c.ga) {
                        var d = this.model.d(b, this.cw.b);
                        if (d == null) {
                            this.ar = new CellPath(1, b, 0, this.cw.b);
                        }
                        else {
                            this.ix(d);
                        }
                        return true;
                    }
                }
            }
            return false;
        };
        Grid.prototype.ix = function (a) {
            if (!this.hr() || a == null || a.k.az < 0 || a.k.w < 0 || a.k.av) {
                return false;
            }
            this.ar = null;
            this.cb.h(true, false);
            var b = false;
            if (this.cf == 3) {
                if (!this.cb.i(a)) {
                    this.p1(true);
                    b = true;
                }
            }
            var c = this.a0(a.k);
            if (!c.ga) {
                return false;
            }
            this.cb.v(a);
            this.po(a.k.w, a.k.az, false);
            this.j3 = a.k.w;
            var d = this.actualColumns._inner[this.cb.m];
            var e = this.cb.n;
            var f = this.cb.item;
            if (b) {
                this.r3(e, f);
            }
            this.qv(d, e, f);
            return true;
        };
        Grid.prototype.ha = function (a, b) {
            if (b === void 0) {
                b = true;
            }
            if (this.cb.j) {
                var c = this.actualColumns._inner[this.cb.m];
                var d = this.cb.n;
                var e = this.cb.item;
                if (this.cb.h(a, b)) {
                    this.qu(c, d, e);
                    this.externalGrid.focusScroller();
                    return true;
                }
                return false;
            }
            return true;
        };
        Grid.prototype.p1 = function (a) {
            if (this.cf != 3 || this.j3 == -1) {
                return;
            }
            this.j3 = -1;
            var b = this.cb.n;
            var c = this.cb.item;
            this.cb.p();
            this.r2(b, c);
            if (a) {
                this.px();
            }
            else {
                this.pp();
            }
        };
        Grid.prototype.q4 = function (a, b) {
            this.hd = true;
            if (!this.g0) {
                var c = this.dm.af(a, this.a2.f(b).h0());
            }
            if (this.selectedCellsChanged != null) {
                var d = new GridSelectedCellsChangedEventArgs();
                d.addedCells = new GridSelectedCellsCollection();
                d.addedCells.add(this.dm.ai(a, b));
                d.removedCells = new GridSelectedCellsCollection();
                d.currentCells = this.dm;
                this.selectedCellsChanged(this, d);
            }
            this.hd = false;
        };
        Grid.prototype.q5 = function (a, b) {
            this.hd = true;
            var c = this.dm.ai(a, b);
            if (c != null) {
                if (!this.g0) {
                    this.dm.remove(c);
                }
                if (this.selectedCellsChanged != null) {
                    var d = new GridSelectedCellsChangedEventArgs();
                    d.addedCells = new GridSelectedCellsCollection();
                    d.removedCells = new GridSelectedCellsCollection();
                    d.removedCells.add(c);
                    d.currentCells = this.dm;
                    this.selectedCellsChanged(this, d);
                }
            }
            this.hd = false;
        };
        Grid.prototype.pn = function (a, b) {
            var c = this.h7;
            this.h7 = false;
            if (!this.gy) {
                this.ad.add1(a);
                this.ah.add(b);
            }
            this.h7 = c;
            var d = new GridSelectedItemsChangedEventArgs();
            var e = new GridSelectedItemsCollection();
            e.add1(a);
            d.addedItems = e;
            d.currentItems = this.ad;
            if (this.selectedItemsChanged != null) {
                this.selectedItemsChanged(this, d);
            }
            var f = new GridSelectedKeysChangedEventArgs();
            var g = new GridSelectedKeysCollection();
            g.add(b);
            f.addedKeys = g;
            f.currentKeys = this.ah;
            if (this.selectedKeysChanged != null) {
                this.selectedKeysChanged(this, f);
            }
        };
        Grid.prototype.tl = function (a, b, c) {
            var d = this.h7;
            this.h7 = false;
            var e = this.ad.ae._inner[a];
            if (!this.gy) {
                this.ad.ae._inner[a] = b;
            }
            this.h7 = d;
            var f = new GridSelectedItemsChangedEventArgs();
            var g = new GridSelectedItemsCollection();
            g.add1(b);
            f.addedItems = g;
            var h = new GridSelectedItemsCollection();
            h.add1(b);
            f.removedItems = h;
            f.currentItems = this.ad;
            if (this.selectedItemsChanged != null) {
                this.selectedItemsChanged(this, f);
            }
        };
        Grid.prototype.st = function (a, b) {
            var c = this.h7;
            this.h7 = false;
            if (!this.gy) {
                this.ad.remove1(a);
                this.ah.remove(b);
            }
            this.h7 = c;
            var d = new GridSelectedItemsChangedEventArgs();
            var e = new GridSelectedItemsCollection();
            e.add1(a);
            d.removedItems = e;
            d.currentItems = this.ad;
            if (this.selectedItemsChanged != null) {
                this.selectedItemsChanged(this, d);
            }
            var f = new GridSelectedKeysChangedEventArgs();
            var g = new GridSelectedKeysCollection();
            g.add(b);
            f.removedKeys = g;
            f.currentKeys = this.ah;
            if (this.selectedKeysChanged != null) {
                this.selectedKeysChanged(this, f);
            }
        };
        Grid.prototype.pm = function (a, b, c, d) {
            var e = new CellRange();
            e.k = a;
            e.i = b;
            e.l = c;
            e.j = d;
            this.pl(e);
        };
        Grid.prototype.pl = function (a) {
            this.dj.add(a);
            this.at = a;
            if (this.selectedCellRangesChanged != null) {
                var b = new GridSelectedCellRangesChangedEventArgs();
                b.addedRanges = ((function () {
                    var $ret = new GridSelectedCellRangesCollection();
                    $ret.add(a);
                    return $ret;
                })());
                b.currentRanges = this.dj;
                this.selectedCellRangesChanged(this, b);
            }
        };
        Grid.prototype.sq = function (a) {
            if (this.dj.contains(a)) {
                this.dj.remove(a);
                if (this.selectedCellRangesChanged != null) {
                    var b = new GridSelectedCellRangesChangedEventArgs();
                    b.removedRanges = ((function () {
                        var $ret = new GridSelectedCellRangesCollection();
                        $ret.add(a);
                        return $ret;
                    })());
                    b.currentRanges = this.dj;
                    this.selectedCellRangesChanged(this, b);
                }
            }
        };
        Grid.prototype.sp = function () {
            if (this.dj.count > 0) {
                var a = new GridSelectedCellRangesCollection();
                for (var b = 0; b < this.dj.count; b++) {
                    a.add(this.dj._inner[b]);
                }
                this.dj.clear();
                if (this.selectedCellRangesChanged != null) {
                    var c = new GridSelectedCellRangesChangedEventArgs();
                    c.removedRanges = a;
                    c.currentRanges = this.dj;
                    this.selectedCellRangesChanged(this, c);
                }
            }
        };
        Grid.prototype.qi = function (a) {
            if (this.dj.contains(a)) {
                if (this.selectedCellRangesChanged != null) {
                    var b = new GridSelectedCellRangesChangedEventArgs();
                    b.updatedRanges = ((function () {
                        var $ret = new GridSelectedCellRangesCollection();
                        $ret.add(a);
                        return $ret;
                    })());
                    b.currentRanges = this.dj;
                    this.selectedCellRangesChanged(this, b);
                }
            }
        };
        Grid.prototype.r9 = function (a, b, c) {
            this.qb(a);
            if (b != c) {
                this.e0.af(a);
                this.aj.ah(a);
            }
        };
        Grid.prototype.qb = function (a) {
            this.ck.al(this, a, a);
        };
        Grid.prototype.q6 = function () {
            if (this.cb.j) {
                this.ha(false);
                this.j3 = -1;
            }
            this.e0.z();
            this.sl();
            this.qe();
        };
        Grid.prototype.qe = function () {
            if (!this.is()) {
                return;
            }
            var a = this.ky();
            var b = this.k2();
            this.qc(a, b);
        };
        Grid.prototype.qc = function (a, b) {
            var c = this.ky();
            var d = this.k2();
            if (b < c || a > d) {
                return;
            }
            if (a < c) {
                a = c;
            }
            if (b > d) {
                b = d;
            }
            this.ck.y(this, a, b, true);
            this.model.bn = true;
            this.sm();
        };
        Grid.prototype.kx = function () {
            return this.e6.o(this.model.actualVisibleRegion.left + this.model.cf, this, this.model);
        };
        Grid.prototype.k1 = function () {
            return this.e6.o(this.model.actualVisibleRegion.right - this.model.cg, this, this.model);
        };
        Grid.prototype.qd = function (a, b) {
            var c = this.e6.i(this.model, a);
            var d = this.e6.i(this.model, b);
            this.qc(c, d);
        };
        Grid.prototype.sh = function () {
            var _this = this;
            if (!this.f9) {
                this.f9 = true;
                this.fc.v();
                this.renderingEngine.invalidateVisibility(function () { return _this.fc.l(_this); });
                this.renderingEngine.refresh(this.model, false);
            }
        };
        Grid.prototype.rv = function (a, b) {
            var c = this.d9.getRowPathForRow(a);
            this.c9.ae(c);
            this.e0.ad(this.e6.i(this.model, c));
            this.aj.af(this.e6.i(this.model, c));
            this.sh();
        };
        Grid.prototype.r0 = function (a, b) {
            var c = this.d9.getRowPathForRow(a);
            this.c9.af(c);
            this.e0.ae(this.e6.i(this.model, c));
            this.aj.ag(this.e6.i(this.model, c));
            this.sh();
        };
        Grid.prototype.s7 = function (a) {
            for (var b = 0; b < this.ek.g.count; b++) {
                if (this.ek.g._inner[b].n == a) {
                    this.s8(this.ek.g._inner[b]);
                }
            }
        };
        Grid.prototype.s8 = function (a) {
            this.ek.x(a);
        };
        Grid.prototype.qp = function (a, b, c) {
            if (this.w != null) {
                this.w.notifySetItem(a, b, c);
            }
        };
        Grid.prototype.qj = function () {
            if (this.w != null) {
                this.w.notifyClearItems();
            }
        };
        Grid.prototype.ql = function (a, b) {
            if (this.w != null) {
                this.w.notifyInsertItem(a, b);
            }
            ;
        };
        Grid.prototype.qm = function (a, b) {
            if (this.w != null) {
                this.w.notifyRemoveItem(a, b);
            }
            ;
        };
        Grid.prototype.kr = function (a) {
            if (this.w == null) {
                return -1;
            }
            return this.w.indexOfItem(a);
        };
        Grid.prototype.ks = function (a) {
            if (this.w == null) {
                return -1;
            }
            return this.w.indexOfKey(a);
        };
        Grid.prototype.i = function () {
            if (this.actualDataSource != null) {
                return this.actualDataSource.actualPrimaryKey;
            }
            return this.e;
        };
        Grid.prototype.ls = function (a) {
            var b = a.b != null ? a.b : this.a2.g(a.j);
            var c = null;
            if (a.h != null) {
                c = a.h;
            }
            else if (a.primaryKey != null) {
                if (this.i() == null && a.primaryKey.key == null && a.primaryKey.value.length == 1) {
                    c = a.primaryKey.value[0];
                }
                else {
                    c = this.d9.getItemForKey(a.primaryKey);
                }
            }
            if (b != null && c != null) {
                return this.actualDataSource.getItemProperty(c, b.hy);
            }
            return null;
        };
        Grid.prototype.lt = function (a, b) {
            if (b < 0 || b > this.a2.j.count) {
                return null;
            }
            if (a < 0 || a > this.d9.getRowCount() - 1) {
                return null;
            }
            var c = this.actualDataSource.getItemAtIndex(a);
            if (c == null) {
                return null;
            }
            else {
                var d = this.d9.getRowType(a);
                if (d != 0 && d != 3) {
                    return null;
                }
            }
            var e = this.e6.j(b, this.model);
            var f = this.a2.j._inner[e];
            return this.actualDataSource.getItemProperty(c, f.hy);
        };
        Grid.prototype.az = function (a) {
            var b = this.e6.j(a, this.model);
            if (b >= 0 && b < this.a2.j.count) {
                return this.a2.j._inner[b];
            }
            return null;
        };
        Grid.prototype.j = function () {
            if (this.actualDataSource != null) {
                return this.actualDataSource.getRootSummaryResults();
            }
            return null;
        };
        Grid.prototype.k = function (a) {
            if (this.actualDataSource != null) {
                return this.actualDataSource.getSectionSummaryResults(a);
            }
            return null;
        };
        Object.defineProperty(Grid.prototype, "io", {
            get: function () {
                return this.gs;
            },
            set: function (a) {
                var b = this.gs;
                this.gs = a;
                if (b != this.gs) {
                    this.rz("ReactsToSortChanges", b, this.gs);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "im", {
            get: function () {
                return this.gr;
            },
            set: function (a) {
                var b = this.gr;
                this.gr = a;
                if (b != this.gr) {
                    this.rz("ReactsToGroupChanges", b, this.gr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "il", {
            get: function () {
                return this.gq;
            },
            set: function (a) {
                var b = this.gq;
                this.gq = a;
                if (b != this.gq) {
                    this.rz("ReactsToFilterChanges", b, this.gq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.z = function (a) {
            var b = null;
            for (var c = 0; c < this.a2.j.count; c++) {
                var d = this.a2.j._inner[c];
                if (d != a && d.eo != null) {
                    var e = this.actualDataSource.resolveSchemaPropertyType(d.hy);
                    var f = d.eo.a(d.hy, e);
                    if (b != null) {
                        b = igniteuiReactCore.FilterFactory.instance.and(b, f);
                    }
                    else {
                        b = f;
                    }
                }
            }
            return b;
        };
        Grid.prototype.i2 = function (a, b) {
            if (this.actualDataSource != null && a.k.az >= 0 && a.k.az < this.actualColumns.count) {
                var c_1 = this.actualColumns._inner[a.k.az];
                var d = this.actualDataSource.resolveSchemaPropertyType(c_1.hy);
                var e_18 = null;
                try {
                    e_18 = this.lo(d, b);
                }
                catch (f) {
                    this.cb.t(f.message);
                    return false;
                }
                if (e_18 == null && a.go != null || e_18 != null && a.go == null || !igniteuiReactCore.Base.equalsStatic(e_18, a.go)) {
                    if (this.cb.l != -1) {
                        this.y.rejectPendingTransaction(this.cb.l);
                    }
                    this.cb.t(null);
                    var g = this.d9.getItemKey(this.e, a.gp);
                    var h_1 = this.y.updatePropertyAtKey(g.value, c_1.hy, e_18, true);
                    this.gp = true;
                    if (this.cellValueChanging != null) {
                        var i = ((function () {
                            var $ret = new GridCellValueChangingEventArgs();
                            $ret.c = h_1;
                            $ret.cellInfo = a;
                            $ret.b = c_1;
                            $ret.e = a.go;
                            $ret.d = e_18;
                            return $ret;
                        })());
                        this.cellValueChanging(this, i);
                        var j = this.y.getTransactionErrorByID(h_1);
                        if (j != null) {
                            this.cb.t(j);
                            a.en = h_1;
                            return false;
                        }
                        var k = this.y.isPendingTransaction(h_1);
                        if (k && this.g2) {
                            this.pj(h_1);
                        }
                    }
                    else {
                        this.pj(h_1);
                    }
                    this.gp = false;
                }
                else {
                    if (this.cb.l != -1) {
                        var l = this.y.getTransactionErrorByID(this.cb.l);
                        if (l != null) {
                            this.cb.t(l);
                            return false;
                        }
                    }
                }
            }
            return true;
        };
        Grid.prototype.lo = function (a, b) {
            if (b == null) {
                return null;
            }
            switch (a) {
                case 2: return igniteuiReactCore.Convert.toBoolean(b);
                case 10: return igniteuiReactCore.Convert.toByte1(b);
                case 8: return igniteuiReactCore.Convert.toDateTime(b);
                case 6: return igniteuiReactCore.Convert.toDecimal2(b);
                case 5: return igniteuiReactCore.Convert.toDouble3(b);
                case 1: return igniteuiReactCore.Convert.toInt321(b);
                case 3: return igniteuiReactCore.Convert.toInt64(b);
                case 11: return b;
                case 0: return b.toString();
            }
            return b;
        };
        Grid.prototype.rj = function (a, b) {
            if (this.columnWidthChanged != null) {
                var c = ((function () {
                    var $ret = new GridColumnWidthChangedEventArgs();
                    $ret.a = a;
                    $ret.b = b;
                    return $ret;
                })());
                this.columnWidthChanged(a.externalObject, c);
            }
        };
        Grid.prototype.qv = function (a, b, c) {
            if (this.cellEditStarted != null) {
                this.cellEditStarted(this, ((function () {
                    var $ret = new GridCellEditStartedEventArgs();
                    $ret.a = a;
                    $ret.b = b;
                    $ret.item = c;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.qu = function (a, b, c) {
            if (this.cellEditEnded != null) {
                this.cellEditEnded(this, ((function () {
                    var $ret = new GridCellEditEndedEventArgs();
                    $ret.a = a;
                    $ret.b = b;
                    $ret.item = c;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.r3 = function (a, b) {
            if (this.rowEditStarted != null) {
                this.rowEditStarted(this, ((function () {
                    var $ret = new GridRowEditStartedEventArgs();
                    $ret.a = a;
                    $ret.item = b;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.r2 = function (a, b) {
            if (this.rowEditEnded != null) {
                this.rowEditEnded(this, ((function () {
                    var $ret = new GridRowEditEndedEventArgs();
                    $ret.a = a;
                    $ret.item = b;
                    return $ret;
                })()));
            }
        };
        Grid.prototype.hr = function () {
            return this.y != null && !this.y.isReadOnly && this.cf != 0;
        };
        Object.defineProperty(Grid.prototype, "g9", {
            get: function () {
                if (this.y != null) {
                    return this.y.canUndo;
                }
                return false;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "g8", {
            get: function () {
                if (this.y != null) {
                    return this.y.canRedo;
                }
                return false;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Grid.prototype, "g5", {
            get: function () {
                if (this.y != null) {
                    return this.y.canCommit;
                }
                return false;
            },
            enumerable: true,
            configurable: true
        });
        Grid.prototype.px = function () {
            if (this.hr() && this.g5) {
                if (this.cb.j && this.cb.l != -1) {
                    this.ha(false);
                }
                var a = this.y.commitEdits(true);
                if (a != -1) {
                    var b = this.y.getAggregatedChanges(a);
                    if (this.dataCommitting != null) {
                        var c = new GridDataCommittingEventArgs(a, b);
                        this.dataCommitting(this, c);
                        if (this.y.isPendingCommit(a) && this.g2) {
                            this.pi(a);
                        }
                    }
                    else {
                        this.pi(a);
                    }
                }
            }
        };
        Grid.prototype.pp = function () {
            if (this.hr()) {
                this.y.cancelEdits();
            }
        };
        Grid.prototype.pi = function (a) {
            if (this.hr()) {
                this.y.acceptPendingCommit(a);
            }
        };
        Grid.prototype.sn = function (a) {
            if (this.hr()) {
                this.y.rejectPendingCommit(a);
            }
        };
        Grid.prototype.tf = function () {
            if (this.hr()) {
                this.y.undo();
            }
        };
        Grid.prototype.sj = function () {
            if (this.hr()) {
                this.y.redo();
            }
        };
        Grid.prototype.tk = function (a, b, c) {
            if (this.hr()) {
                this.y.updatePropertyAtKey(a, b, c, false);
                if (this.cf != 2) {
                    this.px();
                }
            }
        };
        Grid.prototype.ss = function (a) {
            if (this.hr()) {
                this.y.removeItemByKey(a);
                if (this.cf != 2) {
                    this.px();
                }
            }
        };
        Grid.prototype.sr = function (a) {
            if (this.hr()) {
                this.y.removeItem(a);
                if (this.cf != 2) {
                    this.px();
                }
            }
        };
        Grid.prototype.pj = function (a) {
            if (this.hr()) {
                this.y.acceptPendingTransaction(a);
                if (!this.y.isBatchingEnabled) {
                    this.px();
                }
            }
        };
        Grid.prototype.so = function (a) {
            if (this.hr()) {
                this.y.rejectPendingTransaction(a);
            }
        };
        Grid.prototype.s9 = function (a, b) {
            if (this.hr()) {
                this.y.setTransactionError(a, b);
            }
        };
        Grid.$t = igniteuiReactCore.markType(Grid, 'Grid', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return Grid;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridColumnsAutoGeneratedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnsAutoGeneratedEventArgs, _super);
        function GridColumnsAutoGeneratedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._columns = null;
            return _this;
        }
        Object.defineProperty(GridColumnsAutoGeneratedEventArgs.prototype, "columns", {
            get: function () {
                return this._columns;
            },
            set: function (a) {
                this._columns = a;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnsAutoGeneratedEventArgs.$t = igniteuiReactCore.markType(GridColumnsAutoGeneratedEventArgs, 'GridColumnsAutoGeneratedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridColumnsAutoGeneratedEventArgs;
    }(igniteuiReactCore.EventArgs));
    /**
     * @hidden
     */
    var GridColumnsChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnsChangedEventArgs, _super);
        function GridColumnsChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._columns = null;
            return _this;
        }
        Object.defineProperty(GridColumnsChangedEventArgs.prototype, "columns", {
            get: function () {
                return this._columns;
            },
            set: function (a) {
                this._columns = a;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnsChangedEventArgs.$t = igniteuiReactCore.markType(GridColumnsChangedEventArgs, 'GridColumnsChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridColumnsChangedEventArgs;
    }(igniteuiReactCore.EventArgs));
    /**
     * @hidden
     */
    var GridSelectedCellsChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedCellsChangedEventArgs, _super);
        function GridSelectedCellsChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._currentCells = null;
            _this._addedCells = null;
            _this._removedCells = null;
            return _this;
        }
        Object.defineProperty(GridSelectedCellsChangedEventArgs.prototype, "currentCells", {
            get: function () {
                return this._currentCells;
            },
            set: function (a) {
                this._currentCells = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedCellsChangedEventArgs.prototype, "addedCells", {
            get: function () {
                return this._addedCells;
            },
            set: function (a) {
                this._addedCells = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSelectedCellsChangedEventArgs.prototype, "removedCells", {
            get: function () {
                return this._removedCells;
            },
            set: function (a) {
                this._removedCells = a;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedCellsChangedEventArgs.$t = igniteuiReactCore.markType(GridSelectedCellsChangedEventArgs, 'GridSelectedCellsChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return GridSelectedCellsChangedEventArgs;
    }(igniteuiReactCore.EventArgs));
    /**
     * @hidden
     */
    var GridCellEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridCellEventArgs, _super);
        function GridCellEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._cellInfo = null;
            _this._grid = null;
            return _this;
        }
        Object.defineProperty(GridCellEventArgs.prototype, "cellInfo", {
            get: function () {
                return this._cellInfo;
            },
            set: function (a) {
                this._cellInfo = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellEventArgs.prototype, "grid", {
            get: function () {
                return this._grid;
            },
            set: function (a) {
                this._grid = a;
            },
            enumerable: true,
            configurable: true
        });
        GridCellEventArgs.$t = igniteuiReactCore.markType(GridCellEventArgs, 'GridCellEventArgs', igniteuiReactCore.EventArgs.$);
        return GridCellEventArgs;
    }(igniteuiReactCore.EventArgs));
    /**
     * @hidden
     */
    var ColumnHiddenChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnHiddenChangedEventArgs, _super);
        function ColumnHiddenChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = false;
            return _this;
        }
        ColumnHiddenChangedEventArgs.$t = igniteuiReactCore.markType(ColumnHiddenChangedEventArgs, 'ColumnHiddenChangedEventArgs');
        return ColumnHiddenChangedEventArgs;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnPinnedChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnPinnedChangedEventArgs, _super);
        function ColumnPinnedChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = 0;
            return _this;
        }
        ColumnPinnedChangedEventArgs.$t = igniteuiReactCore.markType(ColumnPinnedChangedEventArgs, 'ColumnPinnedChangedEventArgs');
        return ColumnPinnedChangedEventArgs;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridCellValueChangingEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridCellValueChangingEventArgs, _super);
        function GridCellValueChangingEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = 0;
            _this._cellInfo = null;
            _this.b = null;
            _this.e = null;
            _this.d = null;
            return _this;
        }
        Object.defineProperty(GridCellValueChangingEventArgs.prototype, "cellInfo", {
            get: function () {
                return this._cellInfo;
            },
            set: function (a) {
                this._cellInfo = a;
            },
            enumerable: true,
            configurable: true
        });
        GridCellValueChangingEventArgs.$t = igniteuiReactCore.markType(GridCellValueChangingEventArgs, 'GridCellValueChangingEventArgs');
        return GridCellValueChangingEventArgs;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridColumnWidthChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnWidthChangedEventArgs, _super);
        function GridColumnWidthChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = null;
            return _this;
        }
        GridColumnWidthChangedEventArgs.$t = igniteuiReactCore.markType(GridColumnWidthChangedEventArgs, 'GridColumnWidthChangedEventArgs');
        return GridColumnWidthChangedEventArgs;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridCellEditStartedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridCellEditStartedEventArgs, _super);
        function GridCellEditStartedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = 0;
            _this._item = null;
            return _this;
        }
        Object.defineProperty(GridCellEditStartedEventArgs.prototype, "item", {
            get: function () {
                return this._item;
            },
            set: function (a) {
                this._item = a;
            },
            enumerable: true,
            configurable: true
        });
        GridCellEditStartedEventArgs.$t = igniteuiReactCore.markType(GridCellEditStartedEventArgs, 'GridCellEditStartedEventArgs');
        return GridCellEditStartedEventArgs;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridCellEditEndedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridCellEditEndedEventArgs, _super);
        function GridCellEditEndedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = 0;
            _this._item = null;
            return _this;
        }
        Object.defineProperty(GridCellEditEndedEventArgs.prototype, "item", {
            get: function () {
                return this._item;
            },
            set: function (a) {
                this._item = a;
            },
            enumerable: true,
            configurable: true
        });
        GridCellEditEndedEventArgs.$t = igniteuiReactCore.markType(GridCellEditEndedEventArgs, 'GridCellEditEndedEventArgs');
        return GridCellEditEndedEventArgs;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridAnimationManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridAnimationManager, _super);
        function GridAnimationManager() {
            var _this = _super.call(this) || this;
            _this.l = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            _this.i = false;
            _this.animationCreated = null;
            _this.animationCompleted = null;
            _this.animationCanceled = null;
            _this.g = new GridColumnAnimationSettings();
            _this.f = new GridAnimationSettings();
            _this.k = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.List$1.$.specialize(igniteuiReactCore.Delegate_$type), 0);
            _this.e = null;
            _this.d = null;
            _this.e = new GridAnimationPhaseSettings();
            _this.e.l = 0;
            _this.e.e = true;
            _this.e.n = 0;
            _this.d = new GridAnimationPhaseSettings();
            _this.d.l = 0;
            _this.d.e = true;
            _this.d.n = 0;
            return _this;
        }
        Object.defineProperty(GridAnimationManager.prototype, "h", {
            get: function () {
                return this.g;
            },
            enumerable: true,
            configurable: true
        });
        GridAnimationManager.prototype.p = function () {
            var a = GridAnimationManager.o;
            GridAnimationManager.o++;
            return a;
        };
        GridAnimationManager.prototype.ar = function () {
            this.i = true;
            this.l = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
        };
        GridAnimationManager.prototype.m = function () {
            this.i = false;
            return this.l;
        };
        GridAnimationManager.prototype.w = function (a) {
            if (this.i) {
                this.l.add(a);
            }
            if (this.animationCreated != null) {
                this.animationCreated(this, ((function () {
                    var $ret = new GridAnimationManagerAnimationCreatedEventArgs();
                    $ret.a = a;
                    return $ret;
                })()));
            }
        };
        GridAnimationManager.prototype.u = function (a) {
            if (this.i) {
                this.l.remove(a);
            }
            if (this.animationCanceled != null) {
                this.animationCanceled(this, ((function () {
                    var $ret = new GridAnimationManagerAnimationCanceledEventArgs();
                    $ret.a = a;
                    return $ret;
                })()));
            }
        };
        GridAnimationManager.prototype.v = function (a) {
            if (this.i) {
                this.l.remove(a);
            }
            if (this.animationCompleted != null) {
                this.animationCompleted(this, ((function () {
                    var $ret = new GridAnimationManagerAnimationCompletedEventArgs();
                    $ret.a = a;
                    return $ret;
                })()));
            }
        };
        GridAnimationManager.prototype.aq = function (a, b, c, d, e) {
            var _this = this;
            if (c == null) {
                return;
            }
            var f = this.p();
            this.w(f);
            var g;
            var h;
            var i = a.a2.f(c.o);
            if (i == null) {
                return;
            }
            var j = new GridEffectGroup(1);
            j.effectsFinished = igniteuiReactCore.delegateCombine(j.effectsFinished, function (k, l) {
                i.e8 = 5;
                c.a = 5;
                a.model.bk = false;
                a.sl();
                a.rh(i);
                _this.v(f);
            });
            j.effectsCanceled = igniteuiReactCore.delegateCombine(j.effectsCanceled, function (k, l) {
                a.model.bk = false;
                a.rg(i);
                _this.u(f);
            });
            if (d) {
                if (i.fe != null && i.fe.n != null) {
                    g = i.fe.n;
                }
                else if (b != null && b.n != null) {
                    g = b.n;
                }
                else {
                    g = this.g.n;
                }
                if (i.fe != null && i.fe.m != null) {
                    h = i.fe.m;
                }
                else if (b != null && b.m != null) {
                    h = b.m;
                }
                else {
                    h = this.g.m;
                }
            }
            else {
                if (i.fe != null && i.fe.x != null) {
                    g = i.fe.x;
                }
                else if (b != null && b.x != null) {
                    g = b.x;
                }
                else {
                    g = this.g.x;
                }
                if (i.fe != null && i.fe.w != null) {
                    h = i.fe.w;
                }
                else if (b != null && b.w != null) {
                    h = b.w;
                }
                else {
                    h = this.g.w;
                }
            }
            var k = a.bz;
            if (!d) {
                k = a.b0;
            }
            if (k == 0) {
                k = i.e4();
            }
            if (e == 3 || e == 0) {
                switch (k) {
                    case 2:
                    case 4:
                    case 5:
                    case 7:
                    case 9:
                    case 10:
                    case 6:
                        c.h = -1;
                        break;
                    case 3:
                    case 8:
                        c.h = 1;
                        break;
                }
            }
            a.model.bk = true;
            var l = new ColumnEffect();
            l.bx(g);
            l.al = true;
            l.bq = 0;
            l.x = function (m, n, o, p, q) {
                var r = o;
                var s = n;
                var t = p;
                t.h = s + (r - s) * m;
            };
            l.o = function (m, n) { return c.h; };
            j.g(l);
            a.c9.u(c, l);
            var m = new ColumnCellsEffect();
            m.t = 1;
            m.bx(h);
            m.al = true;
            m.bq = 0;
            m.x = function (n, o, p, q, r) {
                var s = p;
                var t = o;
                var u = q;
                switch (k) {
                    case 6:
                    case 2:
                    case 3:
                    case 7:
                    case 8:
                        u.b5 = t + (s - t) * n;
                        break;
                    case 4:
                    case 5:
                    case 9:
                    case 10:
                        u.b9 = t + (s - t) * n;
                        break;
                }
            };
            m.o = function (n, o) {
                var p = n;
                var q = p.b5;
                if (k == 4 || k == 5 || k == 9 || k == 10) {
                    q = p.b9;
                }
                if (e == 0 || e == 3) {
                    switch (k) {
                        case 6:
                            q = 0;
                            p.b5 = q;
                            p.ca = q;
                            p.b4 = 0;
                            p.b9 = 0;
                            break;
                        case 2:
                        case 7:
                            q = -1;
                            p.b5 = q;
                            p.b4 = 0;
                            p.ca = 0;
                            p.b9 = 0;
                            break;
                        case 3:
                        case 8:
                            q = 1;
                            p.b5 = q;
                            p.b4 = 0;
                            p.ca = 0;
                            p.b9 = 0;
                            break;
                        case 4:
                        case 9:
                            q = (a.jl + a.model.ci) * -1;
                            p.b9 = q;
                            p.b4 = 0;
                            p.b5 = 0;
                            p.ca = 0;
                            break;
                        case 5:
                        case 10:
                            q = (a.jl + a.model.ci) * 1;
                            p.b9 = q;
                            p.b4 = 0;
                            p.b5 = 0;
                            p.ca = 0;
                            break;
                    }
                }
                return q;
            };
            if (a.model.bm()) {
                m.g = new CellPath(0, 0, c.m, a.model.bf.x, a.model.bf.w);
                m.e = new CellPath(0, 0, c.m, a.model.be.x, a.model.be.w);
            }
            j.g(m);
            if (k == 4 || k == 9) {
                m.ao = true;
            }
            a.c9.t(c, m);
            var n = new ColumnCellsEffect();
            n.t = 2;
            n.bx(h);
            n.al = true;
            n.bq = 1;
            n.x = function (o, p, q, r, s) {
                var t = q;
                var u = p;
                var v = r;
                var w = u + (t - u) * o;
                if (w < 0) {
                    w = 0;
                }
                v.b1 = w;
            };
            n.o = function (o, p) {
                var q = o;
                if (e == 0 || e == 3) {
                    switch (k) {
                        case 10:
                        case 7:
                        case 8:
                        case 9:
                            q.b1 = -1;
                            break;
                        case 6:
                            q.b1 = 0;
                            break;
                    }
                }
                return q.b1;
            };
            if (a.model.bm()) {
                n.g = new CellPath(0, 0, c.m, a.model.bf.x, a.model.bf.w);
                n.e = new CellPath(0, 0, c.m, a.model.be.x, a.model.be.w);
            }
            j.g(n);
            if (k == 4 || k == 9) {
                n.ao = true;
            }
            a.c9.t(c, n);
        };
        GridAnimationManager.prototype.ai = function (a, b, c, d, e) {
            var _this = this;
            if (c == null || d == null) {
                return;
            }
            var f = this.p();
            this.w(f);
            c.a = 2;
            d.a = 1;
            var g;
            var h;
            var i = a.a2.f(d.o);
            var j = a.a2.f(c.o);
            if (i == null || j == null) {
                return;
            }
            if (i.fe != null && i.fe.o != null) {
                g = i.fe.o;
            }
            else if (j.fe != null && j.fe.o != null) {
                g = j.fe.o;
            }
            else if (b != null && b.x != null) {
                g = b.o;
            }
            else {
                g = this.g.o;
            }
            if (i.fe != null && i.fe.p != null) {
                h = i.fe.p;
            }
            else if (j.fe != null && j.fe.p != null) {
                h = j.fe.p;
            }
            else if (b != null && b.p != null) {
                h = b.p;
            }
            else {
                h = this.g.p;
            }
            var k = a.a4;
            if (k == 0) {
                k = i.et();
            }
            var l = false;
            if (k == 2 || k == 7) {
                l = true;
            }
            if (l) {
                d.h = 1;
            }
            else {
                d.h = -1;
            }
            if (this.k.containsKey(c.o)) {
                this.k.addItem(d.o, new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0));
                this.k.item(c.o).add(function () {
                    c = a.model.g(c.o);
                    d = a.model.g(d.o);
                    if (c == null || d == null) {
                        return;
                    }
                    j.e8 = 2;
                    c.a = 2;
                    i.e8 = 1;
                    d.a = 1;
                    _this.x(a, c, d, g, h, i, j, k, l, f);
                });
            }
            else {
                this.k.addItem(d.o, new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0));
                this.x(a, c, d, g, h, i, j, k, l, f);
            }
        };
        GridAnimationManager.prototype.x = function (a, b, c, d, e, f, g, h, i, j) {
            var _this = this;
            if (b == null || c == null) {
                return;
            }
            var k = new GridEffectGroup(1);
            k.effectsFinished = igniteuiReactCore.delegateCombine(k.effectsFinished, function (l, m) {
                var n = a.model.g(b.o);
                var o = a.model.g(c.o);
                var p = new GridEffectGroup(1);
                p.effectsFinished = igniteuiReactCore.delegateCombine(p.effectsFinished, function (q, r) {
                    g.e8 = 3;
                    b.a = 3;
                    a.columns.remove(g);
                    f.e8 = 5;
                    c.a = 5;
                    a.model.bk = false;
                    a.sl();
                    if (_this.k.containsKey(c.o)) {
                        var s = _this.k.item(c.o);
                        if (s.count == 0) {
                            _this.k.removeItem(c.o);
                        }
                        else {
                            var t = s._inner[0];
                            s.removeAt(0);
                            t();
                        }
                    }
                    a.q8(f);
                    _this.v(j);
                });
                p.effectsCanceled = igniteuiReactCore.delegateCombine(p.effectsCanceled, function (q, r) {
                    a.model.bk = false;
                    a.q7(f);
                    _this.u(j);
                });
                _this.t(a, n, o, d, g, i, p);
                _this.s(a, n, o, d, f, g, i, p);
            });
            k.effectsCanceled = igniteuiReactCore.delegateCombine(k.effectsCanceled, function (l, m) {
                a.q7(f);
                var n = new GridEffectGroup(1);
                n.effectsFinished = igniteuiReactCore.delegateCombine(n.effectsFinished, function (o, p) {
                    g.e8 = 3;
                    b.a = 3;
                    a.columns.remove(g);
                    a.model.bk = false;
                    a.sl();
                });
                n.effectsCanceled = igniteuiReactCore.delegateCombine(n.effectsCanceled, function (o, p) { return a.model.bk = false; });
                var o = a.model.g(b.o);
                var p = a.model.g(c.o);
                _this.t(a, o, p, d, g, i, n);
            });
            var l = new ColumnCellsEffect();
            l.t = 1;
            l.bx(e);
            l.al = true;
            k.g(l);
            if (c.d != 0) {
                a.model.bk = true;
            }
            if (i) {
                l.bq = -1 - b.h;
            }
            else {
                l.bq = 1 + b.h;
            }
            var m = false;
            switch (h) {
                case 4:
                case 9:
                    l.bq = (a.jl + a.model.ci) * -1;
                    m = true;
                    break;
                case 5:
                case 10:
                    l.bq = (a.jl + a.model.ci) * 1;
                    m = true;
                    break;
            }
            if (m) {
                l.bi = 0;
            }
            l.x = function (n, o, p, q, r) {
                var s = p;
                var t = o;
                var u = q;
                switch (h) {
                    case 2:
                    case 3:
                    case 7:
                    case 8:
                        u.b5 = t + (s - t) * n;
                        break;
                    case 4:
                    case 5:
                    case 9:
                    case 10:
                        u.b9 = t + (s - t) * n;
                        break;
                }
            };
            l.o = function (n, o) {
                var p = n;
                var q = p.b5;
                if (h == 4 || h == 5 || h == 9 || h == 10) {
                    q = p.b9;
                }
                if (h == 6) {
                    q = 0;
                }
                switch (h) {
                    case 2:
                    case 7:
                    case 6:
                        p.b5 = q;
                        p.b4 = 0;
                        p.ca = 0;
                        p.b9 = 0;
                        break;
                    case 3:
                    case 8:
                        p.b5 = q;
                        p.b4 = 0;
                        p.ca = 0;
                        p.b9 = 0;
                        break;
                    case 4:
                    case 9:
                        q = p.b9;
                        p.b9 = q;
                        p.b4 = 0;
                        p.b5 = 0;
                        p.ca = 0;
                        break;
                    case 5:
                    case 10:
                        q = p.b9;
                        p.b9 = q;
                        p.b4 = 0;
                        p.b5 = 0;
                        p.ca = 0;
                        break;
                }
                return q;
            };
            if (a.model.bm()) {
                l.g = new CellPath(0, 0, b.m, a.model.bf.x, a.model.bf.w);
                l.e = new CellPath(0, 0, b.m, a.model.be.x, a.model.be.w);
            }
            l.onFinished = igniteuiReactCore.delegateCombine(l.onFinished, function (n) {
            });
            if (h == 4 || h == 9) {
                l.ao = true;
            }
            a.c9.t(b, l);
            var n = new ColumnCellsEffect();
            n.t = 1;
            n.bx(e);
            n.al = true;
            k.g(n);
            if (i) {
                n.bq = -1;
            }
            else {
                n.bq = 1;
            }
            if (m) {
                n.bq = 0;
            }
            if (m) {
                n.bi = 0;
            }
            n.x = function (o, p, q, r, s) {
                var t = q;
                var u = p;
                var v = r;
                switch (h) {
                    case 2:
                    case 3:
                    case 7:
                    case 8:
                        v.b5 = u + (t - u) * o;
                        break;
                    case 4:
                    case 5:
                    case 9:
                    case 10:
                        v.b9 = u + (t - u) * o;
                        break;
                }
            };
            n.o = function (o, p) {
                var q = o;
                var r = q.b5;
                if (h == 4 || h == 5 || h == 9 || h == 10) {
                    r = q.b9;
                }
                if (h == 6) {
                    r = n.bq;
                }
                else {
                    r = 0;
                }
                switch (h) {
                    case 2:
                    case 7:
                    case 6:
                        q.b5 = r;
                        q.b4 = 0;
                        q.ca = 0;
                        q.b9 = 0;
                        break;
                    case 3:
                    case 8:
                        q.b5 = r;
                        q.b4 = 0;
                        q.ca = 0;
                        q.b9 = 0;
                        break;
                    case 4:
                    case 9:
                        r = (a.jl + a.model.ci) * 1;
                        q.b9 = r;
                        q.b4 = 0;
                        q.b5 = 1;
                        q.ca = 0;
                        break;
                    case 5:
                    case 10:
                        r = (a.jl + a.model.ci) * -1;
                        q.b9 = r;
                        q.b4 = 0;
                        q.b5 = 1;
                        q.ca = 0;
                        break;
                }
                return r;
            };
            if (a.model.bm()) {
                n.g = new CellPath(0, 0, c.m, a.model.bf.x, a.model.bf.w);
                n.e = new CellPath(0, 0, c.m, a.model.be.x, a.model.be.w);
            }
            if (h == 5 || h == 10) {
                n.ao = true;
            }
            a.c9.t(c, n);
            var o = new ColumnCellsEffect();
            o.t = 2;
            o.bx(e);
            o.al = true;
            o.bq = 0;
            k.g(o);
            if (h != 6 && h != 10 && h != 7 && h != 9) {
                o.bq = 1;
            }
            o.x = function (p, q, r, s, t) {
                var u = r;
                var v = q;
                var w = s;
                w.b6 = v + (u - v) * p;
            };
            o.o = function (p, q) {
                var r = p;
                var s = r.b6;
                return s;
            };
            if (a.model.bm()) {
                o.g = new CellPath(0, 0, b.m, a.model.bf.x, a.model.bf.w);
                o.e = new CellPath(0, 0, b.m, a.model.be.x, a.model.be.w);
            }
            o.onFinished = igniteuiReactCore.delegateCombine(o.onFinished, function (p) {
            });
            if (h == 5 || h == 10) {
                o.ao = true;
            }
            a.c9.t(b, o);
            var p = new ColumnCellsEffect();
            p.t = 2;
            p.bx(e);
            p.al = true;
            p.bq = 1;
            k.g(p);
            p.x = function (q, r, s, t, u) {
                var v = s;
                var w = r;
                var x = t;
                x.b6 = w + (v - w) * q;
            };
            p.o = function (q, r) {
                var s = q;
                var t = s.b6;
                if (h == 6 || h == 10 || h == 8 || h == 7 || h == 9) {
                    t = 0;
                }
                s.b6 = t;
                return t;
            };
            if (a.model.bm()) {
                p.g = new CellPath(0, 0, c.m, a.model.bf.x, a.model.bf.w);
                p.e = new CellPath(0, 0, c.m, a.model.be.x, a.model.be.w);
            }
            if (h == 5 || h == 10) {
                p.ao = true;
            }
            a.c9.t(c, p);
        };
        GridAnimationManager.prototype.t = function (a, b, c, d, e, f, g) {
            var _this = this;
            if (b == null) {
                return;
            }
            var h = new ColumnEffect();
            h.bx(d);
            h.al = true;
            g.g(h);
            if (f) {
                h.bq = -1;
            }
            else {
                h.bq = 1;
            }
            h.x = function (i, j, k, l, m) {
                var n = k;
                var o = j;
                var p = l;
                p.h = o + (n - o) * i;
            };
            h.o = function (i, j) {
                if (_this.j(b, c)) {
                    b.h = h.bq;
                    return h.bq;
                }
                return b.h;
            };
            a.c9.u(b, h);
        };
        GridAnimationManager.prototype.s = function (a, b, c, d, e, f, g, h) {
            var _this = this;
            if (c == null) {
                return;
            }
            var i = new ColumnEffect();
            i.bx(d);
            i.al = true;
            i.bq = 0;
            h.g(i);
            i.x = function (j, k, l, m, n) {
                var o = l;
                var p = k;
                var q = m;
                q.h = p + (o - p) * j;
            };
            i.o = function (j, k) {
                if (_this.j(b, c)) {
                    c.h = i.bq;
                    return c.h;
                }
                return c.h;
            };
            a.c9.u(c, i);
            var j = new ColumnCellsEffect();
            j.bx(d);
            j.al = true;
            j.bq = 0;
            h.g(j);
            j.x = function (k, l, m, n, o) {
                var p = m;
                var q = l;
                var r = n;
                r.b5 = q + (p - q) * k;
            };
            j.o = function (k, l) {
                var m = k;
                if (_this.j(b, c)) {
                    m.b5 = j.bq;
                    return m.b5;
                }
                return m.b5;
            };
            a.c9.t(c, j);
        };
        GridAnimationManager.prototype.j = function (a, b) {
            if (a == null) {
                return true;
            }
            if (b == null) {
                return true;
            }
            if (a.b == null && b.b == null) {
                return true;
            }
            if (a.b == null && (b.b.c && b.b.f == 1)) {
                return true;
            }
            if ((a.b.c && a.b.f == 1) && b.b == null) {
                return true;
            }
            if (a.b.c && b.b.c && a.b.f == b.b.f) {
                return true;
            }
            if (!a.b.c && !b.b.c && a.b.f == b.b.f) {
                return true;
            }
            return false;
        };
        GridAnimationManager.prototype.ag = function (a, b, c, d) {
            var _this = this;
            if (c == null) {
                return;
            }
            var e = a.a2.f(c.o);
            if (e == null) {
                return;
            }
            var f = this.p();
            this.w(f);
            var g;
            if (e.fe != null && e.fe.v != null) {
                g = e.fe.v;
            }
            else if (b != null && b.v != null) {
                g = b.v;
            }
            else {
                g = this.g.v;
            }
            var h = new ColumnEffect();
            h.bx(g);
            h.al = true;
            h.bq = d;
            h.onFinished = igniteuiReactCore.delegateCombine(h.onFinished, function (i) { return _this.v(f); });
            h.onCanceled = igniteuiReactCore.delegateCombine(h.onCanceled, function (i, j) { return _this.u(f); });
            h.x = function (i, j, k, l, m) {
                var n = k;
                var o = j;
                var p = l;
                var q = o + (n - o) * i;
                var r = ((function () {
                    var $ret = new ColumnWidth();
                    $ret.f = q;
                    $ret.c = false;
                    return $ret;
                })());
                if (!igniteuiReactCore.isNaN_(e.gm)) {
                    r.e = e.gm;
                }
                e.width = r;
            };
            h.o = function (i, j) { return c.k; };
            if (!a.hp(e)) {
                h.ba = 0;
            }
            a.c9.u(c, h);
        };
        GridAnimationManager.prototype.ak = function (a, b, c, d) {
            var _this = this;
            if (c == null) {
                return;
            }
            var e = this.p();
            this.w(e);
            var f;
            var g;
            var h = a.a2.f(c.o);
            if (h == null) {
                return;
            }
            if (h.fe != null && h.fe.t != null) {
                f = h.fe.t;
            }
            else if (b != null && b.t != null) {
                f = b.t;
            }
            else {
                f = this.g.t;
            }
            if (h.fe != null && h.fe.s != null) {
                g = h.fe.s;
            }
            else if (b != null && b.w != null) {
                g = b.s;
            }
            else {
                g = this.g.s;
            }
            var i = a.bd;
            var j = new GridEffectGroup(1);
            j.effectsFinished = igniteuiReactCore.delegateCombine(j.effectsFinished, function (k, l) {
                var m = a.model.g(c.o);
                var n = a.model.bt(m);
                for (var o_1 = 0; o_1 < n.count; o_1++) {
                    a.model.cz(n._inner[o_1]);
                }
                h.e8 = 5;
                a.sl();
                a.re(h);
                _this.v(e);
            });
            j.effectsCanceled = igniteuiReactCore.delegateCombine(j.effectsCanceled, function (k, l) {
                a.rd(h);
                _this.u(e);
            });
            if (i == 0) {
                i = 2;
            }
            var k = 0;
            var l = c.h;
            c.h = 0;
            k = a.e6.k(c.m, a, a.model);
            c.h = l;
            var m = a.e6.j(h.gw, a.model);
            var n = m;
            var o = false;
            if (c.n < h.gw) {
                o = true;
            }
            var p = null;
            if (d != 6) {
                p = a.model.h(n, c, (c.k + a.model.cc) - c.f(a.model), c.b == null || c.b.c, o);
            }
            var q = a.model.bt(c);
            for (var r = 0; r < q.count; r++) {
                q._inner[r].e = true;
            }
            var s = c.m;
            var t = null;
            var u = a.model.bw;
            if (u._inner[s].count > 0) {
                for (var v = 0; v < u._inner[s].count; v++) {
                    if (u._inner[s]._inner[v].n == c.o) {
                        t = u._inner[s]._inner[v];
                        break;
                    }
                }
            }
            var w;
            if (t != null) {
                w = t;
                w.e = false;
            }
            else {
                w = a.model.h(s, c, 0, c.b == null || c.b.c, !o);
                w.e = false;
            }
            var x = h.gv;
            var y = GridAnimationManager.as(a.model, c, h, k, x);
            k = y.p3;
            x = y.p4;
            var z = k - x;
            var aa = -1 * z;
            c.h = aa / c.k;
            c.a = 6;
            var ab = new ColumnEffect();
            ab.bx(f);
            ab.al = true;
            ab.bq = 0;
            var ac = c.k;
            var ad = false;
            var ae = 0;
            var af = c.m;
            var ag = a.e6.k(c.m, a, a.model);
            var ah = this.n(a, c, c.m);
            ag = this.q(a, c, ag, a.model.bt(c), ah);
            j.g(ab);
            ab.x = function (ai, aj, ak, al, am) {
                var an = ak;
                var ao = aj;
                var ap = al;
                ap.h = ao + (an - ao) * ai;
                if (ap.k > 0) {
                    var aq = a.e6.l(ap.m, am, true);
                    x = h.gv;
                    var ar = GridAnimationManager.as(a.model, c, h, aq, x);
                    aq = ar.p3;
                    x = ar.p4;
                    if (aq - x != z) {
                        var as = aq - x;
                        var at = z - as;
                        var au = ae + (at / ap.k);
                        var av = au / (1 - ai);
                        ab.by(av, am, ap.o);
                        ap.h = au;
                        ae = au;
                        z = as;
                        ap.h = av + (an - av) * ai;
                    }
                    if (!ad) {
                        var aw = a.model.bs(ap);
                        for (var ax = 0; ax < aw.count; ax++) {
                            var ay = aw._inner[ax];
                            ay.b5 += (ae - ap.h);
                        }
                    }
                    ae = ap.h;
                    af = ap.m;
                    var az = a.model.bt(ap);
                    ah = _this.n(a, ap, ap.m);
                    ag = _this.q(a, ap, ag, az, ah);
                }
            };
            ab.o = function (ai, aj) {
                ae = c.h;
                return c.h;
            };
            a.c9.u(c, ab);
            var ai = new ColumnCellsEffect();
            ai.ar = true;
            ai.bx(g);
            ai.al = true;
            ai.bq = 0;
            j.g(ai);
            ai.x = function (aj, ak, al, am, an) {
                if (aj > 0) {
                    ad = true;
                }
                if (ad) {
                    var ao = al;
                    var ap = ak;
                    var aq = am;
                    var ar = ap + (ao - ap) * aj;
                    aq.b5 = ar;
                }
            };
            ai.o = function (aj, ak) {
                var al = aj;
                return al.b5;
            };
            if (a.model.bm()) {
                ai.g = new CellPath(0, 0, c.m, a.model.bf.x, a.model.bf.w);
                ai.e = new CellPath(0, 0, c.m, a.model.be.x, a.model.be.w);
            }
            a.c9.t(c, ai);
        };
        GridAnimationManager.as = function (a, b, c, d, e) {
            if (a.b3 > a.b0) {
                if (b.d == 1) {
                    e += igniteuiReactCore.truncate(a.b0);
                    d += igniteuiReactCore.truncate(a.b3);
                }
                else if (b.d == 0 && c.fj == 1) {
                    e += igniteuiReactCore.truncate(a.b3);
                    d += igniteuiReactCore.truncate(a.b0);
                }
            }
            if (a.b6 < a.absoluteWidth - a.b1) {
                var f = a.absoluteWidth - a.b1 - a.b6;
                if (b.d == 2) {
                    d -= igniteuiReactCore.truncate(f);
                }
                else if (b.d == 0 && c.fj == 2) {
                    e -= igniteuiReactCore.truncate(f);
                }
            }
            return {
                p3: d,
                p4: e
            };
        };
        GridAnimationManager.prototype.q = function (a, b, c, d, e) {
            if (e > 0) {
                var f = 0;
                for (var g = 0; g < d.count; g++) {
                    if (!d._inner[g].e) {
                        if (e > d._inner[g].i) {
                            f = Math.abs(d._inner[g].i - e);
                            d._inner[g].i = e;
                        }
                    }
                }
                var h = 0;
                for (var i = 0; i < d.count; i++) {
                    if (d._inner[i].e) {
                        h += d._inner[i].i;
                    }
                }
                var j = h - f;
                if (j < 0) {
                    j = 0;
                }
                var k = 1;
                if (h == 0) {
                    k = 0;
                }
                else {
                    k = j / h;
                }
                for (var l = 0; l < d.count; l++) {
                    if (d._inner[l].e) {
                        d._inner[l].i = d._inner[l].i * k;
                    }
                }
            }
            if (b.o == 0) {
                c = a.e6.k(b.m, a, a.model);
            }
            return c;
        };
        GridAnimationManager.prototype.n = function (a, b, c) {
            var d = a.e6.l(c, a.model, true);
            var e = d + b.k;
            var f = a.e6.l(b.m, a.model, false);
            if (d > f) {
                return Math.max(0, (f + b.k) - d);
            }
            else {
                return Math.max(0, (d + b.k) - f);
            }
        };
        GridAnimationManager.prototype.aj = function (a, b, c, d, e) {
            var _this = this;
            if (c == null) {
                return;
            }
            var f = this.p();
            this.w(f);
            var g;
            var h;
            var i = a.a2.f(c.o);
            if (i == null) {
                return;
            }
            if (i.fe != null && i.fe.q != null) {
                g = i.fe.q;
            }
            else if (b != null && b.q != null) {
                g = b.q;
            }
            else {
                g = this.g.q;
            }
            if (i.fe != null && i.fe.r != null) {
                h = i.fe.r;
            }
            else if (b != null && b.r != null) {
                h = b.r;
            }
            else {
                h = this.g.r;
            }
            var j = a.ba;
            var k = new GridEffectGroup(1);
            k.effectsFinished = igniteuiReactCore.delegateCombine(k.effectsFinished, function (l, m) {
                i.e8 = 3;
                c.a = 3;
                if (i.f4) {
                    a.externalGrid.ensureColumnsAreManual();
                    a.externalGrid.removeExternalColumn(i.externalObject);
                }
                a.model.bk = false;
                a.sl();
                a.ra(i);
                _this.v(f);
            });
            k.effectsCanceled = igniteuiReactCore.delegateCombine(k.effectsCanceled, function (l, m) {
                a.model.bk = false;
                a.q9(i);
                _this.u(f);
            });
            if (j == 0) {
                j = i.eu();
            }
            var l = 0;
            switch (j) {
                case 2:
                case 7:
                    l = -1;
                    break;
                case 3:
                case 8:
                    l = 1;
                    break;
                case 4:
                case 9:
                    l = (a.jl + a.model.ci) * -1;
                    break;
                case 5:
                case 10:
                    l = (a.jl + a.model.ci) * 1;
                    break;
            }
            a.model.bk = true;
            var m = new ColumnCellsEffect();
            m.bx(g);
            m.t = 1;
            m.al = true;
            m.bq = l;
            k.g(m);
            m.x = function (n, o, p, q, r) {
                var s = p;
                var t = o;
                var u = q;
                switch (j) {
                    case 2:
                    case 3:
                    case 7:
                    case 8:
                        u.b5 = t + (s - t) * n;
                        break;
                    case 4:
                    case 5:
                    case 9:
                    case 10:
                        u.b9 = t + (s - t) * n;
                        break;
                }
            };
            m.o = function (n, o) {
                var p = n;
                var q = p.b5;
                if (j == 4 || j == 5) {
                    q = p.b9;
                }
                return q;
            };
            if (a.model.bm()) {
                m.g = new CellPath(0, 0, c.m, a.model.bf.x, a.model.bf.w);
                m.e = new CellPath(0, 0, c.m, a.model.be.x, a.model.be.w);
            }
            if (j == 5 || j == 10) {
                m.ao = true;
            }
            a.c9.t(c, m);
            var n = 0;
            switch (j) {
                case 2:
                case 4:
                case 5:
                case 7:
                case 9:
                case 10:
                case 6:
                    n = -1;
                    break;
                case 3:
                case 8:
                    n = 1;
                    break;
            }
            var o = new ColumnEffect();
            o.bx(h);
            o.al = true;
            o.bq = n;
            k.g(o);
            o.x = function (p, q, r, s, t) {
                var u = r;
                var v = q;
                var w = s;
                w.h = v + (u - v) * p;
            };
            o.o = function (p, q) { return c.h; };
            a.c9.u(c, o);
            var p = new ColumnCellsEffect();
            p.t = 2;
            p.bx(g);
            p.al = true;
            if (j == 6 || j == 10 || j == 7 || j == 8 || j == 9) {
                p.bq = 0;
            }
            else {
                p.bq = 1;
            }
            p.x = function (q, r, s, t, u) {
                var v = s;
                var w = r;
                var x = t;
                var y = w + (v - w) * q;
                if (y < 0) {
                    y = 0;
                }
                x.b1 = y;
            };
            p.o = function (q, r) {
                var s = q;
                if (e == 0 || e == 3) {
                    switch (j) {
                        case 10:
                        case 7:
                        case 8:
                        case 9:
                            s.b1 = 1;
                            break;
                        case 6:
                            s.b1 = 1;
                            break;
                    }
                }
                return s.b1;
            };
            if (a.model.bm()) {
                p.g = new CellPath(0, 0, c.m, a.model.bf.x, a.model.bf.w);
                p.e = new CellPath(0, 0, c.m, a.model.be.x, a.model.be.w);
            }
            k.g(p);
            if (j == 5 || j == 10) {
                p.ao = true;
            }
            a.c9.t(c, p);
        };
        GridAnimationManager.prototype.r = function (a, b, c, d, e, f, g, h, i, j) {
            var _this = this;
            if (!a.model.bm()) {
                return;
            }
            var k = this.p();
            this.w(k);
            var l = this.g.u;
            if (a.cz != null && a.cz.u != null) {
                l = a.cz.u;
            }
            var m = a.columnPropertyUpdatingAnimationMode;
            var n = new ColumnCellsEffect();
            n.bx(l);
            n.t = 7;
            n.as = true;
            if (g) {
                n.v = 5;
            }
            if (j) {
                n.v = 6;
            }
            n.bs = c;
            n.al = true;
            n.bq = f;
            n.onFinished = igniteuiReactCore.delegateCombine(n.onFinished, function (o) { return _this.v(k); });
            n.onCanceled = igniteuiReactCore.delegateCombine(n.onCanceled, function (o, p) { return _this.u(k); });
            if (m == 0) {
                m = 2;
            }
            if (d == 11) {
                n.x = function (o, p, q, r, s) {
                    var t = r;
                    if (g != t.k.g) {
                        return;
                    }
                    if ((h && !t.k.as) || (!h && t.k.as)) {
                        return;
                    }
                    if ((j && !t.k.h) || (!j && t.k.h)) {
                        return;
                    }
                    t.ju(c, q);
                };
            }
            if (d == 5 || d == 4 || d == 9 || d == 8 || (m != 3 && (d == 7 || d == 1 || d == 3))) {
                n.x = function (o, p, q, r, s) {
                    var t = r;
                    if (g != t.k.g) {
                        return;
                    }
                    if ((h && !t.k.as) || (!h && t.k.as)) {
                        return;
                    }
                    if ((j && !t.k.h) || (!j && t.k.h)) {
                        return;
                    }
                    if (o > 0.5) {
                        t.ju(c, q);
                    }
                    else {
                        t.ju(c, p);
                    }
                };
            }
            if (m == 3 && d == 1) {
                n.x = function (o, p, q, r, s) {
                    var t = r;
                    if (g != t.k.g) {
                        return;
                    }
                    if ((h && !t.k.as) || (!h && t.k.as)) {
                        return;
                    }
                    if ((j && !t.k.h) || (!j && t.k.h)) {
                        return;
                    }
                    var u = p;
                    var v = q;
                    var w = u + (v - u) * o;
                    t.ju(c, w);
                };
            }
            if (d == 0) {
                n.x = function (o, p, q, r, s) {
                    var t = r;
                    if (g != t.k.g) {
                        return;
                    }
                    if ((h && !t.k.as) || (!h && t.k.as)) {
                        return;
                    }
                    if ((j && !t.k.h) || (!j && t.k.h)) {
                        return;
                    }
                    var u = p;
                    var v = q;
                    var w = u + (v - u) * o;
                    t.ju(c, w);
                };
            }
            if (d == 2) {
                n.x = function (o, p, q, r, s) {
                    var t = r;
                    if (g != t.k.g) {
                        return;
                    }
                    if ((h && !t.k.as) || (!h && t.k.as)) {
                        return;
                    }
                    if ((j && !t.k.h) || (!j && t.k.h)) {
                        return;
                    }
                    var u = p;
                    var v = q;
                    var w = igniteuiReactCore.BrushUtil.k(u, o, v, 0);
                    t.ju(c, w);
                };
            }
            if (d == 3) {
                n.x = function (o, p, q, r, s) {
                    var t = r;
                    if (g != t.k.g) {
                        return;
                    }
                    if ((h && !t.k.as) || (!h && t.k.as)) {
                        return;
                    }
                    if ((j && !t.k.h) || (!j && t.k.h)) {
                        return;
                    }
                    var u = p;
                    var v = q;
                    if (u != null) {
                        u.t(a.externalGrid.renderer);
                    }
                    if (v != null) {
                        v.t(a.externalGrid.renderer);
                    }
                    var w = new igniteuiReactCore.FontInfo();
                    igniteuiReactCore.FontUtil.interpolateFont(w, o, u, v);
                    t.ju(c, w);
                };
            }
            if (d == 6) {
                n.x = function (o, p, q, r, s) {
                    var t = r;
                    if (g != t.k.g) {
                        return;
                    }
                    if ((h && !t.k.as) || (!h && t.k.as)) {
                        return;
                    }
                    if ((j && !t.k.h) || (!j && t.k.h)) {
                        return;
                    }
                    var u = igniteuiReactCore.typeGetValue(p);
                    var v = igniteuiReactCore.typeGetValue(q);
                    var w = igniteuiReactCore.truncate((Math.round(u + (v - u) * o)));
                    t.ju(c, w);
                };
            }
            n.o = function (o, p) {
                var q = o;
                return q.gn(c);
            };
            if (a.model.bm()) {
                if (h) {
                    n.g = new CellPath(0, 0, -300, a.model.bf.x, a.model.bf.w);
                    n.e = new CellPath(0, 0, -300, a.model.be.x, a.model.be.w);
                }
                else if (i) {
                    n.g = new CellPath(0, 0, -400, a.model.bf.x, a.model.bf.w);
                    n.e = new CellPath(0, 0, -400, a.model.be.x, a.model.be.w);
                }
                else {
                    n.g = new CellPath(0, 0, b.m, a.model.bf.x, a.model.bf.w);
                    n.e = new CellPath(0, 0, b.m, a.model.be.x, a.model.be.w);
                }
            }
            if (!a.ho || d == 11) {
                n.ba = 0;
            }
            if (h) {
                a.c9.x(n);
            }
            else if (i) {
                a.c9.y(n);
            }
            else {
                a.c9.t(b, n);
            }
        };
        GridAnimationManager.prototype.al = function (a, b, c) {
            var _this = this;
            var d = this.p();
            this.w(d);
            var e = this.e;
            var f = a.model;
            var g = new GridEffectGroup(1);
            g.effectsCanceled = igniteuiReactCore.delegateCombine(g.effectsCanceled, function (h, i) { return _this.u(d); });
            g.effectsFinished = igniteuiReactCore.delegateCombine(g.effectsFinished, function (h, i) { return _this.v(d); });
            for (var h = b; h <= c; h++) {
                var i = new RowCellsEffect();
                g.g(i);
                i.t = 6;
                i.bx(e);
                i.al = true;
                i.bq = 1;
                i.x = function (j, k, l, m, n) {
                };
                i.o = function (j, k) {
                    var l = j;
                    if (l.k.ag) {
                        var m = a.d9.getDataRow(l.k);
                        l.ej = m;
                        if (m == -1) {
                            return l.ip;
                        }
                        var n = a.d9.getRowType(m);
                        if (l.a8(n)) {
                            var o = a.d9.resolveValueForPath(a, l.k);
                            var p = a.nc(l.k, a, o, m);
                            a.rw(l, o, a.d9.resolveRow(m), p);
                        }
                    }
                    return l.ip;
                };
                var j = a.eq(h);
                if (a.model.bm()) {
                    i.g = new CellPath(0, 0, a.model.cn, j.x, j.w);
                    i.e = new CellPath(0, 0, a.model.cq, j.x, j.w);
                }
                if (!a.h5) {
                    i.ba = 0;
                }
                a.c9.v(j, i);
            }
        };
        GridAnimationManager.prototype.ah = function (a, b) {
            var _this = this;
            if (b == null) {
                return;
            }
            var c = this.p();
            this.w(c);
            var d = this.d;
            var e = a.model;
            var f = new GridEffectGroup(1);
            f.effectsFinished = igniteuiReactCore.delegateCombine(f.effectsFinished, function (g, h) { return _this.v(c); });
            f.effectsCanceled = igniteuiReactCore.delegateCombine(f.effectsCanceled, function (g, h) { return _this.u(c); });
            var g = a.a2.f(b.o);
            if (g == null) {
                return;
            }
            var h = new ColumnEffect();
            f.g(h);
            h.bx(d);
            h.al = true;
            h.bq = 1;
            h.x = function (i, j, k, l, m) {
            };
            h.o = function (i, j) {
                var k = i;
                k.g = 0;
                k.h = 0;
                k.j = 0;
                a.sl();
                return k.g;
            };
            a.c9.u(b, h);
            var i = new ColumnCellsEffect();
            f.g(i);
            i.t = 1;
            i.bx(d);
            i.al = true;
            i.bq = 1;
            i.x = function (j, k, l, m, n) {
            };
            i.o = function (j, k) {
                var l = j;
                l.b4 = 0;
                l.b5 = 0;
                l.b9 = 0;
                l.ca = 0;
                l.b1 = 1;
                return l.b4;
            };
            a.c9.t(b, i);
        };
        GridAnimationManager.prototype.y = function (a, b, c, d) {
            var _this = this;
            var e = this.p();
            this.w(e);
            var f = this.f.f;
            if (a.cm != null && a.cm.f != null) {
                f = a.cm.f;
            }
            var g = a.al;
            var h = a.model;
            var i = new GridEffectGroup(1);
            i.effectsFinished = igniteuiReactCore.delegateCombine(i.effectsFinished, function (j, k) { return _this.v(e); });
            i.effectsCanceled = igniteuiReactCore.delegateCombine(i.effectsCanceled, function (j, k) { return _this.u(e); });
            for (var j = 0; j < h.br.count; j++) {
                var k = h.br._inner[j];
                var l = a.a2.f(k.o);
                if (l == null) {
                    continue;
                }
                var m = new ColumnCellsEffect();
                i.g(m);
                m.t = 3;
                m.bx(f);
                m.al = true;
                m.bq = 0;
                if (g == 0) {
                    g = 2;
                }
                m.x = function (n, o, p, q, r) {
                    var s = q;
                    var t = o;
                    var u = p;
                    if (s.k.ag) {
                        var v = a.a0(s.k);
                        if (a.d9.isPlaceholderValue(s.k)) {
                            n = 0;
                        }
                    }
                    s.cb = t + (u - t) * n;
                };
                m.o = function (n, o) {
                    var p = n;
                    if (p.k.ag) {
                        var q = a.d9.getDataRow(p.k);
                        p.ej = q;
                        if (q == -1) {
                            return p.cb;
                        }
                        var r = a.d9.resolveValueForPath(a, p.k);
                        var s = false;
                        if (r == null && a.d9.isPlaceholderValue(p.k)) {
                            s = true;
                        }
                        if (p.a8(a.d9.getRowType(p.k.w))) {
                            var t = a.nc(p.k, a, r, q);
                            a.rw(p, r, a.d9.resolveRow(q), t);
                        }
                        if (s) {
                            p.cb = 1;
                        }
                    }
                    return p.cb;
                };
                if (a.model.bm()) {
                    m.g = new CellPath(0, 0, k.m, a.model.bf.x, a.model.bf.w);
                    m.e = new CellPath(0, 0, k.m, a.model.be.x, a.model.be.w);
                }
                if (!a.hf || d) {
                    m.ba = 0;
                }
                a.c9.t(k, m);
            }
        };
        GridAnimationManager.prototype.af = function (a, b, c, d, e) {
            var _this = this;
            var f = this.p();
            this.w(f);
            var g = this.f.f;
            if (a.cm != null && a.cm.f != null) {
                g = a.cm.f;
            }
            var h = a.al;
            var i = a.model;
            if (d < 0 || d >= i.br.count) {
                return;
            }
            var j = i.br._inner[d];
            var k = a.a2.f(j.o);
            if (k == null) {
                return;
            }
            var l = new ColumnCellsEffect();
            l.onFinished = igniteuiReactCore.delegateCombine(l.onFinished, function (m) { return _this.v(f); });
            l.onCanceled = igniteuiReactCore.delegateCombine(l.onCanceled, function (m, n) { return _this.u(f); });
            l.t = 3;
            l.bx(g);
            l.al = true;
            l.bq = 0;
            if (h == 0) {
                h = 2;
            }
            l.x = function (m, n, o, p, q) {
                var r = p;
                var s = n;
                var t = o;
                if (r.k.ag) {
                    var u = a.a0(r.k);
                    if (a.d9.isPlaceholderValue(r.k)) {
                        m = 0;
                    }
                }
                r.cb = s + (t - s) * m;
            };
            l.o = function (m, n) {
                var o = m;
                if (o.k.ag) {
                    var p = a.d9.getDataRow(o.k);
                    o.ej = p;
                    if (p == -1) {
                        return o.cb;
                    }
                    var q = a.d9.resolveValueForPath(a, o.k);
                    var r = false;
                    if (q == null && a.d9.isPlaceholderValue(o.k)) {
                        r = true;
                    }
                    if (o.a8(a.d9.getRowType(o.k.w))) {
                        var s = a.nc(o.k, a, q, p);
                        a.rw(o, q, a.d9.resolveRow(p), s);
                    }
                    if (r) {
                        o.cb = 1;
                    }
                }
                return o.cb;
            };
            if (a.model.bm()) {
                l.g = new CellPath(0, 0, j.m, a.model.bf.x, a.model.bf.w);
                l.e = new CellPath(0, 0, j.m, a.model.be.x, a.model.be.w);
            }
            if (!a.hf || e) {
                l.ba = 0;
            }
            a.c9.t(j, l);
        };
        GridAnimationManager.prototype.an = function (a, b) {
            var _this = this;
            var c = this.p();
            this.w(c);
            var d = this.f.h;
            if (a.cz != null && a.cm.h != null) {
                d = a.cm.h;
            }
            var e = a.es;
            var f = a.model;
            var g = new RowCellsEffect();
            g.onFinished = igniteuiReactCore.delegateCombine(g.onFinished, function (h) { return _this.v(c); });
            g.onCanceled = igniteuiReactCore.delegateCombine(g.onCanceled, function (h, i) { return _this.u(c); });
            g.t = 5;
            g.bx(d);
            g.al = true;
            g.bq = 1;
            if (e == 0) {
                e = 2;
            }
            g.x = function (h, i, j, k, l) {
                var m = k;
                var n = i;
                var o = j;
                if (m.k.ag) {
                    m.b8 = n + (o - n) * h;
                }
                else {
                    m.b8 = 0;
                }
            };
            g.o = function (h, i) {
                var j = h;
                return j.b8;
            };
            var h = a.eq(b);
            if (a.model.bm()) {
                g.g = new CellPath(0, 0, a.model.cn, h.x, h.w);
                g.g.d = a.model.br._inner[a.model.cn].d;
                g.e = new CellPath(0, 0, a.model.cq, h.x, h.w);
                g.e.d = a.model.br._inner[a.model.cq].d;
            }
            if (!a.h5 || a.dragger.isDragActive) {
                g.ba = 0;
            }
            a.c9.v(h, g);
        };
        GridAnimationManager.prototype.ap = function (a, b) {
            var _this = this;
            var c = this.p();
            this.w(c);
            var d = this.f.h;
            if (a.cz != null && a.cm.h != null) {
                d = a.cm.h;
            }
            var e = a.es;
            var f = a.model;
            var g = new RowCellsEffect();
            g.onFinished = igniteuiReactCore.delegateCombine(g.onFinished, function (h) { return _this.v(c); });
            g.onCanceled = igniteuiReactCore.delegateCombine(g.onCanceled, function (h, i) { return _this.u(c); });
            g.t = 5;
            g.bx(d);
            g.al = true;
            g.bq = 0;
            if (e == 0) {
                e = 2;
            }
            g.x = function (h, i, j, k, l) {
                var m = k;
                var n = i;
                var o = j;
                if (m.k.ag) {
                    m.b8 = n + (o - n) * h;
                }
                else {
                    m.b8 = 0;
                }
            };
            g.o = function (h, i) {
                var j = h;
                return j.b8;
            };
            var h = a.eq(b);
            if (a.model.bm()) {
                g.g = new CellPath(0, 0, a.model.cn, h.x, h.w);
                g.g.d = a.model.br._inner[a.model.cn].d;
                g.e = new CellPath(0, 0, a.model.cq, h.x, h.w);
                g.e.d = a.model.br._inner[a.model.cq].d;
            }
            if (!a.h5 || a.dragger.isDragActive) {
                g.ba = 0;
            }
            a.c9.v(h, g);
        };
        GridAnimationManager.prototype.ad = function (a, b, c, d) {
            var _this = this;
            var e = this.p();
            this.w(e);
            var f = this.f.h;
            if (a.cm != null && a.cm.h != null) {
                f = a.cm.h;
            }
            var g = a.model;
            var h = new CellEffect();
            h.onFinished = igniteuiReactCore.delegateCombine(h.onFinished, function (i) { return _this.v(e); });
            h.onCanceled = igniteuiReactCore.delegateCombine(h.onCanceled, function (i, j) { return _this.u(e); });
            h.t = 5;
            h.bx(f);
            h.al = true;
            h.bq = 1;
            h.x = function (i, j, k, l, m) {
                var n = l;
                var o = j;
                var p = k;
                if (n.k.ag) {
                    n.b8 = o + (p - o) * i;
                }
                else {
                    n.b8 = 0;
                }
            };
            h.o = function (i, j) {
                var k = i;
                return k.b8;
            };
            var i = new CellPath(1, c, 0, b);
            if (a.model.bm()) {
                h.g = new CellPath(0, 0, a.model.cn, i.x, i.w);
                h.e = new CellPath(0, 0, a.model.cq, i.x, i.w);
            }
            if (!a.hg || a.dragger.isDragActive) {
                h.ba = 0;
            }
            a.c9.r(i, h, d);
        };
        GridAnimationManager.prototype.z = function (a, b, c, d) {
            var _this = this;
            var e = this.p();
            this.w(e);
            var f = this.f.e;
            if (a.cm != null && a.cm.e != null) {
                f = a.cm.e;
            }
            var g = a.model;
            var h = new CellEffect();
            h.onFinished = igniteuiReactCore.delegateCombine(h.onFinished, function (i) { return _this.v(e); });
            h.onCanceled = igniteuiReactCore.delegateCombine(h.onCanceled, function (i, j) { return _this.u(e); });
            h.t = 8;
            h.bx(f);
            h.al = true;
            h.bq = 1;
            h.x = function (i, j, k, l, m) {
                var n = l;
                var o = j;
                var p = k;
                if (n.k.ag) {
                    n.by = o + (p - o) * i;
                }
                else {
                    n.by = 0;
                }
            };
            h.o = function (i, j) {
                var k = i;
                return k.by;
            };
            var i = new CellPath(1, c, 0, b);
            if (a.model.bm()) {
                h.g = new CellPath(0, 0, c, i.x, i.w);
                h.e = new CellPath(0, 0, c, i.x, i.w);
            }
            a.c9.r(i, h, d);
        };
        GridAnimationManager.prototype.ae = function (a, b, c, d) {
            var _this = this;
            var e = this.p();
            this.w(e);
            var f = this.f.h;
            if (a.cm != null && a.cm.h != null) {
                f = a.cm.h;
            }
            var g = a.model;
            var h = new CellEffect();
            h.onFinished = igniteuiReactCore.delegateCombine(h.onFinished, function (i) { return _this.v(e); });
            h.onCanceled = igniteuiReactCore.delegateCombine(h.onCanceled, function (i, j) { return _this.u(e); });
            h.t = 5;
            h.bx(f);
            h.al = true;
            h.bq = 0;
            h.x = function (i, j, k, l, m) {
                var n = l;
                var o = j;
                var p = k;
                if (n.k.ag) {
                    n.b8 = o + (p - o) * i;
                }
                else {
                    n.b8 = 0;
                }
            };
            h.o = function (i, j) {
                var k = i;
                return k.b8;
            };
            var i = new CellPath(1, c, 0, b);
            if (a.model.bm()) {
                h.g = new CellPath(0, 0, a.model.cn, i.x, i.w);
                h.e = new CellPath(0, 0, a.model.cq, i.x, i.w);
            }
            if (!a.hg || a.dragger.isDragActive) {
                h.ba = 0;
            }
            a.c9.r(i, h, d);
        };
        GridAnimationManager.prototype.aa = function (a, b, c, d) {
            var _this = this;
            var e = this.p();
            this.w(e);
            var f = this.f.e;
            if (a.cm != null && a.cm.e != null) {
                f = a.cm.e;
            }
            var g = a.model;
            var h = new CellEffect();
            h.onFinished = igniteuiReactCore.delegateCombine(h.onFinished, function (i) { return _this.v(e); });
            h.onCanceled = igniteuiReactCore.delegateCombine(h.onCanceled, function (i, j) { return _this.u(e); });
            h.t = 8;
            h.bx(f);
            h.al = true;
            h.bq = 0;
            h.x = function (i, j, k, l, m) {
                var n = l;
                var o = j;
                var p = k;
                if (n.k.ag) {
                    n.by = o + (p - o) * i;
                }
                else {
                    n.by = 0;
                }
            };
            h.o = function (i, j) {
                var k = i;
                return k.by;
            };
            var i = new CellPath(1, c, 0, b);
            if (a.model.bm()) {
                h.g = new CellPath(0, 0, c, i.x, i.w);
                h.e = new CellPath(0, 0, c, i.x, i.w);
            }
            a.c9.r(i, h, d);
        };
        GridAnimationManager.prototype.ab = function (a, b, c) {
            var _this = this;
            var d = this.p();
            this.w(d);
            var e = this.f.h;
            if (a.cm != null && a.cm.h != null) {
                e = a.cm.h;
            }
            var f = a.model;
            var g = new CellPositionEffect();
            g.onFinished = igniteuiReactCore.delegateCombine(g.onFinished, function (h) { return _this.v(d); });
            g.onCanceled = igniteuiReactCore.delegateCombine(g.onCanceled, function (h, i) { return _this.u(d); });
            g.t = 5;
            g.bx(e);
            g.al = true;
            g.bq = 1;
            g.x = function (h, i, j, k, l) {
                var m = k;
                var n = i;
                var o = j;
                if (m.k.ag) {
                    m.b8 = n + (o - n) * h;
                }
                else {
                    m.b8 = 0;
                }
            };
            g.o = function (h, i) {
                var j = h;
                return j.b8;
            };
            var h = new CellPath(1, c, 0, b);
            if (a.model.bm()) {
                g.g = new CellPath(0, 0, a.model.cn, h.x, h.w);
                g.e = new CellPath(0, 0, a.model.cq, h.x, h.w);
            }
            if (!a.hg || a.dragger.isDragActive) {
                g.ba = 0;
            }
            a.c9.s(h, g);
        };
        GridAnimationManager.prototype.ac = function (a, b, c) {
            var _this = this;
            var d = this.p();
            this.w(d);
            var e = this.f.h;
            if (a.cm != null && a.cm.h != null) {
                e = a.cm.h;
            }
            var f = a.model;
            var g = new CellPositionEffect();
            g.onFinished = igniteuiReactCore.delegateCombine(g.onFinished, function (h) { return _this.v(d); });
            g.onCanceled = igniteuiReactCore.delegateCombine(g.onCanceled, function (h, i) { return _this.u(d); });
            g.t = 5;
            g.bx(e);
            g.al = true;
            g.bq = 0;
            g.x = function (h, i, j, k, l) {
                var m = k;
                var n = i;
                var o = j;
                if (m.k.ag) {
                    m.b8 = n + (o - n) * h;
                }
                else {
                    m.b8 = 0;
                }
            };
            g.o = function (h, i) {
                var j = h;
                return j.b8;
            };
            var h = new CellPath(1, c, 0, b);
            if (a.model.bm()) {
                g.g = new CellPath(0, 0, a.model.cn, h.x, h.w);
                g.e = new CellPath(0, 0, a.model.cq, h.x, h.w);
            }
            if (!a.hg || a.dragger.isDragActive) {
                g.ba = 0;
            }
            a.c9.s(h, g);
        };
        GridAnimationManager.prototype.am = function (a, b) {
            var _this = this;
            var c = this.p();
            this.w(c);
            var d = this.f.g;
            if (a.cz != null && a.cm.g != null) {
                d = a.cm.g;
            }
            var e = new RowCellsEffect();
            e.onFinished = igniteuiReactCore.delegateCombine(e.onFinished, function (f) { return _this.v(c); });
            e.onCanceled = igniteuiReactCore.delegateCombine(e.onCanceled, function (f, g) { return _this.u(c); });
            e.t = 5;
            e.bx(d);
            e.al = true;
            e.bq = 1;
            e.x = function (f, g, h, i, j) {
                var k = i;
                var l = g;
                var m = h;
                if (k.k.ag) {
                    k.b3 = l + (m - l) * f;
                }
                else {
                    k.b3 = 0;
                }
            };
            e.o = function (f, g) {
                var h = f;
                return h.b3;
            };
            var f = a.eq(b);
            if (a.model.bm()) {
                e.g = new CellPath(0, 0, a.model.cn, f.x, f.w);
                e.g.d = a.model.br._inner[a.model.cn].d;
                e.e = new CellPath(0, 0, a.model.cq, f.x, f.w);
                e.e.d = a.model.br._inner[a.model.cq].d;
            }
            if (!a.h3) {
                e.ba = 0;
            }
            a.c9.v(f, e);
        };
        GridAnimationManager.prototype.ao = function (a, b) {
            var _this = this;
            var c = this.p();
            this.w(c);
            var d = this.f.g;
            if (a.cz != null && a.cm.g != null) {
                d = a.cm.g;
            }
            var e = new RowCellsEffect();
            e.onFinished = igniteuiReactCore.delegateCombine(e.onFinished, function (f) { return _this.v(c); });
            e.onCanceled = igniteuiReactCore.delegateCombine(e.onCanceled, function (f, g) { return _this.u(c); });
            e.t = 5;
            e.bx(d);
            e.al = true;
            e.bq = 0;
            e.x = function (f, g, h, i, j) {
                var k = i;
                var l = g;
                var m = h;
                if (k.k.ag) {
                    k.b3 = l + (m - l) * f;
                }
                else {
                    k.b3 = 0;
                }
            };
            e.o = function (f, g) {
                var h = f;
                return h.b3;
            };
            var f = a.eq(b);
            if (a.model.bm()) {
                e.g = new CellPath(0, 0, a.model.cn, f.x, f.w);
                e.g.d = a.model.br._inner[a.model.cn].d;
                e.e = new CellPath(0, 0, a.model.cq, f.x, f.w);
                e.e.d = a.model.br._inner[a.model.cq].d;
            }
            if (!a.h3) {
                e.ba = 0;
            }
            a.c9.v(f, e);
        };
        GridAnimationManager.$t = igniteuiReactCore.markType(GridAnimationManager, 'GridAnimationManager');
        GridAnimationManager.o = 0;
        return GridAnimationManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var CellKey = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellKey, _super);
        function CellKey() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.e = null;
            _this.g = null;
            _this.i = null;
            _this.a = null;
            _this.c = null;
            return _this;
        }
        Object.defineProperty(CellKey.prototype, "primaryKey", {
            get: function () {
                if (this.e == null && this.g != null && this.d != null) {
                    this.e = this.d.d9.getItemKey(this.d.i(), this.g);
                }
                return this.e;
            },
            set: function (a) {
                this.e = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellKey.prototype, "h", {
            get: function () {
                if (this.g == null && this.e != null && this.d != null) {
                    this.g = this.d.d9.getItemForKey(this.primaryKey);
                }
                return this.g;
            },
            set: function (a) {
                this.g = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellKey.prototype, "j", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellKey.prototype, "b", {
            get: function () {
                if ((this.a == null || this.a.grid != this.d) && this.d != null) {
                    this.a = this.d.a2.g(this.j);
                }
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellKey.prototype, "d", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
            },
            enumerable: true,
            configurable: true
        });
        CellKey.$t = igniteuiReactCore.markType(CellKey, 'CellKey');
        return CellKey;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridSelectedCellsCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSelectedCellsCollection, _super);
        function GridSelectedCellsCollection() {
            return _super.call(this, CellKey.$, 0) || this;
        }
        GridSelectedCellsCollection.prototype.an = function (a) {
            this.collectionChanged = igniteuiReactCore.delegateCombine(this.collectionChanged, a);
        };
        GridSelectedCellsCollection.prototype.ao = function (a) {
            this.collectionChanged = igniteuiReactCore.delegateRemove(this.collectionChanged, a);
        };
        Object.defineProperty(GridSelectedCellsCollection.prototype, "am", {
            get: function () {
                return this;
            },
            enumerable: true,
            configurable: true
        });
        GridSelectedCellsCollection.prototype.ai = function (a, b) {
            for (var c = 0; c < this.count; c++) {
                if (this._inner[c].primaryKey != null && this._inner[c].primaryKey.equals(a) && this._inner[c].b != null && this._inner[c].b.g2 == b) {
                    return this._inner[c];
                }
            }
            return null;
        };
        GridSelectedCellsCollection.prototype.aj = function (a, b) {
            for (var c = 0; c < this.count; c++) {
                if (this._inner[c].primaryKey.equals(a) && this._inner[c].j == b) {
                    return this._inner[c];
                }
            }
            return null;
        };
        GridSelectedCellsCollection.prototype.ak = function (a, b) {
            for (var c = 0; c < this.count; c++) {
                if (this._inner[c].h == a && this._inner[c].j == b) {
                    return this._inner[c];
                }
            }
            return null;
        };
        GridSelectedCellsCollection.prototype.ae = function (a, b) {
            return this.af(a, b.h0());
        };
        GridSelectedCellsCollection.prototype.af = function (a, b) {
            if (this.aj(a, b) != null) {
                return null;
            }
            var c = new CellKey();
            c.primaryKey = a;
            c.j = b;
            this.add(c);
            return c;
        };
        GridSelectedCellsCollection.prototype.ag = function (a, b) {
            return this.ah(a, b.h0());
        };
        GridSelectedCellsCollection.prototype.ah = function (a, b) {
            if (this.ak(a, b) != null) {
                return null;
            }
            var c = new CellKey();
            c.h = a;
            c.j = b;
            this.add(c);
            return c;
        };
        GridSelectedCellsCollection.prototype.al = function (a, b) {
            var c = this.ai(a, b);
            if (c != null) {
                this.remove(c);
            }
            return c;
        };
        GridSelectedCellsCollection.$t = igniteuiReactCore.markType(GridSelectedCellsCollection, 'GridSelectedCellsCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(CellKey.$));
        return GridSelectedCellsCollection;
    }(igniteuiReactCore.ObservableCollection$1));
    /**
     * @hidden
     */
    var DefinitionBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DefinitionBase, _super);
        function DefinitionBase() {
            var _this = _super.call(this) || this;
            _this.bl = null;
            _this.t = null;
            _this.dr = null;
            _this.ds = null;
            _this.dh = null;
            _this.dt = null;
            _this.dk = null;
            _this.a2 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.a4 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.a3 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.a1 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.ay = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.a0 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.az = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.ax = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.a6 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(2));
            _this.a8 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(2));
            _this.a7 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(2));
            _this.a5 = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(2));
            _this.r = null;
            _this.dj = null;
            _this.di = null;
            _this.dl = null;
            _this.dw = null;
            _this.dp = null;
            _this.dv = null;
            _this.dn = null;
            _this.du = null;
            _this.dm = null;
            _this.ar = 1;
            _this.b = 4;
            _this.g = 4;
            _this.a = 0;
            _this.f = 1;
            _this.w = 0;
            _this.v = 0;
            _this.dx = null;
            _this.dq = null;
            _this.as = NaN;
            _this.aq = 0;
            _this.ac = null;
            _this.ab = null;
            _this.dataBinding = null;
            _this.dataBound = null;
            _this.propertyChanged = null;
            _this.ag = false;
            _this.am = new igniteuiReactCore.HashSet$1(igniteuiReactCore.String_$type, 0);
            _this.ao = new igniteuiReactCore.List$1(igniteuiReactCore.String_$type, 0);
            _this.al = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, CellPropertyAnimationType_$type, 0);
            _this.definitionPropertyUpdated = null;
            _this.z = null;
            _this.cellStyleKeyRequested = null;
            _this.d0 = _this.eb();
            _this.d5 = _this.ef();
            _this.d4 = _this.ed();
            _this.d3 = _this.ec();
            _this.at = _this.av();
            _this.d6 = _this.eg();
            _this.ad = _this.af();
            _this.d2 = GridStyleRepository.bg;
            return _this;
        }
        Object.defineProperty(DefinitionBase.prototype, "externalObject", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                this.t = igniteuiReactCore.typeCast(IExternalDefinitionBase_$type, this.bl);
                if (this.bl != b) {
                    this.c2("ExternalObject", 10, b, this.bl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d7", {
            get: function () {
                return this.dr;
            },
            set: function (a) {
                var b = this.dr;
                this.dr = a;
                if (this.dr != b) {
                    this.c2("Background", 10, b, this.dr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d8", {
            get: function () {
                return this.ds;
            },
            set: function (a) {
                var b = this.ds;
                this.ds = a;
                if (this.ds != b) {
                    this.c2("Border", 10, b, this.ds);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "dy", {
            get: function () {
                return this.dh;
            },
            set: function (a) {
                var b = this.dh;
                this.dh = a;
                if (this.dh != b) {
                    this.c2("ActivationBorder", 10, b, this.dh);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d9", {
            get: function () {
                return this.dt;
            },
            set: function (a) {
                var b = this.dt;
                this.dt = a;
                if (this.dt != b) {
                    this.c2("ErrorBorder", 10, b, this.dt);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d1", {
            get: function () {
                return this.dk;
            },
            set: function (a) {
                var b = this.dk;
                this.dk = a;
                if (this.dk != b) {
                    this.c2("ActualBorder", 2, b, this.dk);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "be", {
            get: function () {
                return this.a2;
            },
            set: function (a) {
                var b = this.a2;
                this.a2 = a;
                if (this.a2 != b) {
                    this.c2("BorderLeftWidth", 6, b, this.a2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bg", {
            get: function () {
                return this.a4;
            },
            set: function (a) {
                var b = this.a4;
                this.a4 = a;
                if (this.a4 != b) {
                    this.c2("BorderTopWidth", 6, b, this.a4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bf", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                var b = this.a3;
                this.a3 = a;
                if (this.a3 != b) {
                    this.c2("BorderRightWidth", 6, b, this.a3);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bd", {
            get: function () {
                return this.a1;
            },
            set: function (a) {
                var b = this.a1;
                this.a1 = a;
                if (this.a1 != b) {
                    this.c2("BorderBottomWidth", 6, b, this.a1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "ba", {
            get: function () {
                return this.ay;
            },
            set: function (a) {
                var b = this.ay;
                this.ay = a;
                if (this.ay != b) {
                    this.c2("ActivationBorderLeftWidth", 6, b, this.ay);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bc", {
            get: function () {
                return this.a0;
            },
            set: function (a) {
                var b = this.a0;
                this.a0 = a;
                if (this.a0 != b) {
                    this.c2("ActivationBorderTopWidth", 6, b, this.a0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bb", {
            get: function () {
                return this.az;
            },
            set: function (a) {
                var b = this.az;
                this.az = a;
                if (this.az != b) {
                    this.c2("ActivationBorderRightWidth", 6, b, this.az);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "a9", {
            get: function () {
                return this.ax;
            },
            set: function (a) {
                var b = this.ax;
                this.ax = a;
                if (this.ax != b) {
                    this.c2("ActivationBorderBottomWidth", 6, b, this.ax);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bi", {
            get: function () {
                return this.a6;
            },
            set: function (a) {
                var b = this.a6;
                this.a6 = a;
                if (this.a6 != b) {
                    this.c2("ErrorBorderLeftWidth", 6, b, this.a6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bk", {
            get: function () {
                return this.a8;
            },
            set: function (a) {
                var b = this.a8;
                this.a8 = a;
                if (this.a8 != b) {
                    this.c2("ErrorBorderTopWidth", 6, b, this.a8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bj", {
            get: function () {
                return this.a7;
            },
            set: function (a) {
                var b = this.a7;
                this.a7 = a;
                if (this.a7 != b) {
                    this.c2("ErrorBorderRightWidth", 6, b, this.a7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "bh", {
            get: function () {
                return this.a5;
            },
            set: function (a) {
                var b = this.a5;
                this.a5 = a;
                if (this.a5 != b) {
                    this.c2("ErrorBorderBottomWidth", 6, b, this.a5);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "grid", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                var b = this.r;
                this.r = a;
                this.c0(b, a);
            },
            enumerable: true,
            configurable: true
        });
        DefinitionBase.prototype.c0 = function (a, b) {
            if (a != null) {
                a.propertyChanged = igniteuiReactCore.delegateRemove(a.propertyChanged, igniteuiReactCore.runOn(this, this.c1));
            }
            if (b != null) {
                b.propertyChanged = igniteuiReactCore.delegateCombine(b.propertyChanged, igniteuiReactCore.runOn(this, this.c1));
            }
            this.c7();
            this.cz(a, b);
        };
        DefinitionBase.prototype.cz = function (a, b) {
        };
        DefinitionBase.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "IsActiveCellStyleEnabled":
                    this.c7();
                    break;
            }
        };
        Object.defineProperty(DefinitionBase.prototype, "d0", {
            get: function () {
                return this.dj;
            },
            set: function (a) {
                var b = this.dj;
                this.dj = a;
                if (this.dj != b) {
                    this.c2("ActualBackground", 2, b, this.dj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "dz", {
            get: function () {
                return this.di;
            },
            set: function (a) {
                var b = this.di;
                this.di = a;
                if (this.di != b) {
                    this.c2("ActualActivationBorder", 2, b, this.di);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d2", {
            get: function () {
                return this.dl;
            },
            set: function (a) {
                var b = this.dl;
                this.dl = a;
                if (this.dl != b) {
                    this.c2("ActualErrorBorder", 2, b, this.dl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "ej", {
            get: function () {
                return this.dw;
            },
            set: function (a) {
                var b = this.dw;
                this.dw = a;
                if (this.dw != b) {
                    this.c2("PinnedBackground", 10, b, this.dw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d5", {
            get: function () {
                return this.dp;
            },
            set: function (a) {
                var b = this.dp;
                this.dp = a;
                if (this.dp != b) {
                    this.c2("ActualStickyRowBackground", 2, b, this.dp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "ei", {
            get: function () {
                return this.dv;
            },
            set: function (a) {
                var b = this.dv;
                this.dv = a;
                if (this.dv != b) {
                    this.c2("PinnedRowBackground", 10, b, this.dv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d4", {
            get: function () {
                return this.dn;
            },
            set: function (a) {
                var b = this.dn;
                this.dn = a;
                if (this.dn != b) {
                    this.c2("ActualPinnedRowBackground", 2, b, this.dn);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "eh", {
            get: function () {
                return this.du;
            },
            set: function (a) {
                var b = this.du;
                this.du = a;
                if (this.du != b) {
                    this.c2("LastStickyRowBackground", 10, b, this.du);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d3", {
            get: function () {
                return this.dm;
            },
            set: function (a) {
                var b = this.dm;
                this.dm = a;
                if (this.dm != b) {
                    this.c2("ActualLastStickyRowBackground", 2, b, this.dm);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "au", {
            get: function () {
                return this.ar;
            },
            set: function (a) {
                var b = this.ar;
                this.ar = a;
                if (this.ar != b) {
                    this.c2("ContentOpacity", 0, b, this.ar);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "e", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (this.b != b) {
                    this.c2("HorizontalAlignment", 10, igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.b));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "j", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (this.g != b) {
                    this.c2("VerticalAlignment", 10, igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, this.g));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "c", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (this.a != b) {
                    this.c2("ActualHorizontalAlignment", 4, igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "h", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (this.f != b) {
                    this.c2("VerticalAlignment", 4, igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, this.f));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "y", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (this.w != b) {
                    this.c2("LineBreakMode", 10, igniteuiReactCore.enumGetBox(TextCellLineBreakMode_$type, b), igniteuiReactCore.enumGetBox(TextCellLineBreakMode_$type, this.w));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "x", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                var b = this.v;
                this.v = a;
                if (this.v != b) {
                    this.c2("ActualLineBreakMode", 4, igniteuiReactCore.enumGetBox(TextCellLineBreakMode_$type, b), igniteuiReactCore.enumGetBox(TextCellLineBreakMode_$type, this.v));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "ek", {
            get: function () {
                return this.dx;
            },
            set: function (a) {
                var b = this.dx;
                this.dx = a;
                if (this.dx != b) {
                    this.c2("TextColor", 10, b, this.dx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "d6", {
            get: function () {
                return this.dq;
            },
            set: function (a) {
                var b = this.dq;
                this.dq = a;
                if (this.dq != b) {
                    this.c2("ActualTextColor", 2, b, this.dq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "aw", {
            get: function () {
                return this.as;
            },
            set: function (a) {
                var b = this.as;
                this.as = a;
                if (this.as != b) {
                    this.c2("PinnedRowOpacity", 10, b, this.as);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "at", {
            get: function () {
                return this.aq;
            },
            set: function (a) {
                var b = this.aq;
                this.aq = a;
                if (this.aq != b) {
                    this.c2("ActualPinnedRowOpacity", 0, b, this.aq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "textStyle", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (this.ac != b) {
                    this.c2("FontInfo", 10, b, this.ac);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "ad", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                var b = this.ab;
                this.ab = a;
                if (this.ab != b) {
                    this.c2("ActualFontInfo", 3, b, this.ab);
                }
            },
            enumerable: true,
            configurable: true
        });
        DefinitionBase.prototype.k = function (a, b) {
            var c = this.l(a);
            c.i0 = b;
            return c;
        };
        DefinitionBase.prototype.cl = function (a, b, c, d) {
            var e = this.cm(a, b, c);
            if (this.cellStyleKeyRequested == null) {
                return e;
            }
            var f = new CellStyleRequestedEventArgs();
            f.resolvedValue = c;
            f.rowNumber = d;
            f.styleKey = e;
            this.cellStyleKeyRequested(this, f);
            return f.styleKey;
        };
        DefinitionBase.prototype.cw = function (a, b, c, d) {
            a.a4 = b.model.bl;
            a.f = this.c;
            a.h = this.h;
            a.b4 = 0;
            a.b9 = 0;
            a.b5 = 0;
            a.ca = 0;
            a.b1 = 1;
            a.cb = 0;
            a.b6 = 1;
            a.b1 = this.au;
            a.kp = this.d6;
            a.ke = this.d0;
            a.ka = this.dz;
            a.dd = this.ba;
            a.di = this.bc;
            a.dg = this.bb;
            a.db = this.a9;
            a.kh = this.d2;
            a.er = this.bi;
            a.ew = this.bk;
            a.eu = this.bj;
            a.ep = this.bh;
            if (this.ag) {
                a.kf = this.d1;
                a.eb = this.be;
                a.ee = this.bf;
                a.eg = this.bg;
                a.d9 = this.bd;
            }
            else {
                if (a.kf != null) {
                    a.kf = null;
                    a.eb = 0;
                    a.eg = 0;
                    a.ee = 0;
                    a.d9 = 0;
                }
            }
            if (this.grid != null) {
                if (this.ad != null) {
                    this.ad.t(this.grid.externalGrid.renderer);
                }
            }
            a.af = this.ad;
            a.z = this.x;
            a.ko = this.d5;
            a.kl = this.d4;
            a.kk = this.d3;
            a.b7 = this.at;
            if (a.c == null) {
                a.c = new DefaultCellActionManager(b, a);
            }
            if (a.d == null) {
                a.d = new DefaultGridInfoRequestor(b, a);
            }
        };
        DefinitionBase.prototype.cx = function (a, b, c, d) {
            if (this.dataBinding != null) {
                var e = this.n(a, b, c, d);
                this.dataBinding(this, e);
                c = e.resolvedValue;
                d = e.rowObject;
            }
            this.cy(a, b, c, d);
            if (this.dataBound != null) {
                this.dataBound(this, this.n(a, b, c, d));
            }
        };
        DefinitionBase.prototype.n = function (a, b, c, d) {
            var e = new DataBindingEventArgs();
            e.cellInfo = a;
            e.resolvedValue = c;
            e.rowObject = d;
            return e;
        };
        DefinitionBase.prototype.cy = function (a, b, c, d) {
            a.gp = d;
            if (!a.k.g && this.ai()) {
                var e = this.aa;
                var f = e.o;
                var g = f.count;
                var h = e.p;
                var i = e.q;
                for (var j = 0; j < g; j++) {
                    if (h._inner[j]) {
                        continue;
                    }
                    a.jt(f._inner[j], i._inner[j]);
                }
            }
        };
        DefinitionBase.prototype.c5 = function () {
            for (var a = 0; a < this.ao.count; a++) {
                if (!this.ak(this.ao._inner[a])) {
                    this.aj(this.ao._inner[a]);
                }
            }
        };
        DefinitionBase.prototype.aj = function (a) {
            if (this.ah(a)) {
                var b = 11;
                if (this.al.containsKey(a)) {
                    b = this.al.item(a);
                }
                this.c3(a, b, this.bn(a), this.bn(a));
                return true;
            }
            return false;
        };
        DefinitionBase.prototype.ak = function (a) {
            if (igniteuiReactCore.stringStartsWith(a, "Actual")) {
                return false;
            }
            switch (a) {
                case "Background":
                    this.c2("ActualBackground", 2, this.d0, this.d0);
                    return true;
                case "ContentOpacity":
                    this.c2("ContentOpacity", 0, this.au, this.au);
                    return true;
                case "FontInfo":
                    this.c2("ActualFontInfo", 3, this.ad, this.ad);
                    return true;
                case "HorizontalAlignment":
                    this.c2("ActualHorizontalAlignment", 4, igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.c), igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.c));
                    return true;
                case "TextColor":
                    this.c2("ActualTextColor", 2, this.d6, this.d6);
                    return true;
                case "VerticalAlignment":
                    this.c2("VerticalAlignment", 4, igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, this.h), igniteuiReactCore.enumGetBox(CellContentVerticalAlignment_$type, this.h));
                    return true;
                case "Border":
                    this.c2("ActualBorder", 2, this.d1, this.d1);
                    return true;
                case "ActivationBorder":
                    this.c2("ActualActivationBorder", 2, this.dz, this.dz);
                    return true;
                case "BorderLeftWidth":
                    this.c2("BorderLeftWidth", 0, this.be, this.be);
                    return true;
                case "BorderTopWidth":
                    this.c2("BorderTopWidth", 0, this.bg, this.bg);
                    return true;
                case "BorderRightWidth":
                    this.c2("BorderRightWidth", 0, this.bf, this.bf);
                    return true;
                case "BorderBottomWidth":
                    this.c2("BorderBottomWidth", 0, this.bd, this.bd);
                    return true;
                case "ActivationBorderLeftWidth":
                    this.c2("ActivationBorderLeftWidth", 0, this.ba, this.ba);
                    return true;
                case "ActivationBorderTopWidth":
                    this.c2("ActivationBorderTopWidth", 0, this.bc, this.bc);
                    return true;
                case "ActivationBorderRightWidth":
                    this.c2("ActivationBorderRightWidth", 0, this.bb, this.bb);
                    return true;
                case "ActivationBorderBottomWidth":
                    this.c2("ActivationBorderBottomWidth", 0, this.a9, this.a9);
                    return true;
            }
            return false;
        };
        DefinitionBase.prototype.c2 = function (a, b, c, d) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.c3(a, b, c, d);
            if (this.definitionPropertyUpdated != null) {
                this.definitionPropertyUpdated(this, ((function () {
                    var $ret = new DefinitionPropertyUpdatedEventArgs();
                    $ret.propertyName = a;
                    $ret.animationType = b;
                    $ret.newValue = d;
                    $ret.oldValue = c;
                    return $ret;
                })()));
            }
        };
        DefinitionBase.prototype.c8 = function () {
            if (this.d7 != null) {
                this.d0 = this.d7;
            }
            else {
                this.d0 = this.eb();
            }
        };
        DefinitionBase.prototype.df = function () {
            if (this.ek != null) {
                this.d6 = this.ek;
            }
            else {
                this.d6 = this.eg();
            }
        };
        DefinitionBase.prototype.dg = function () {
            this.ad = this.textStyle;
        };
        DefinitionBase.prototype.dd = function () {
            if (!igniteuiReactCore.isNaN_(this.aw)) {
                this.at = this.aw;
            }
            else {
                this.at = this.av();
            }
        };
        DefinitionBase.prototype.dc = function () {
            if (this.ei != null) {
                this.d4 = this.ei;
            }
            else {
                this.d4 = this.ed();
            }
        };
        DefinitionBase.prototype.de = function () {
            if (this.ej != null) {
                this.d5 = this.ej;
            }
            else {
                this.d5 = this.ef();
            }
        };
        DefinitionBase.prototype.db = function () {
            if (this.eh != null) {
                this.d3 = this.eh;
            }
            else {
                this.d3 = this.ec();
            }
        };
        DefinitionBase.prototype.c3 = function (a, b, c, d) {
            this.cv(a, b);
            switch (a) {
                case "TextColor":
                    this.df();
                    break;
                case "Background":
                    this.c8();
                    break;
                case "PinnedBackground":
                    this.de();
                    break;
                case "PinnedRowBackground":
                    this.dc();
                    break;
                case "LastStickyRowBackground":
                    this.db();
                    break;
                case "PinnedRowOpacity":
                    this.dd();
                    break;
                case "VerticalAlignment":
                    if (this.j == 4) {
                        this.h = this.i();
                    }
                    else {
                        this.h = this.j;
                    }
                    break;
                case "HorizontalAlignment":
                    if (this.e == 4) {
                        this.c = this.d();
                    }
                    else {
                        this.c = this.e;
                    }
                    break;
                case "LineBreakMode":
                    this.x = this.y;
                    break;
                case "FontInfo":
                    this.dg();
                    break;
                case "Border":
                case "BorderLeftWidth":
                case "BorderTopWidth":
                case "BorderRightWidth":
                case "BorderBottomWidth":
                    this.c9();
                    break;
                case "ActivationBorder":
                    this.c7();
                    break;
                case "ErrorBorder":
                    this.da();
                    break;
            }
        };
        DefinitionBase.prototype.c9 = function () {
            if (this.be != 0 || this.bg != 0 || this.bf != 0 || this.bd != 0) {
                if (this.d8 != null) {
                    this.ag = true;
                    this.d1 = this.d8;
                }
                else if (this.d1 != null) {
                    this.ag = true;
                }
            }
        };
        DefinitionBase.prototype.c7 = function () {
            if (this.grid != null && this.grid.he) {
                if (this.dy == null) {
                    this.dz = this.ea();
                }
                else {
                    this.dz = this.dy;
                }
            }
            else {
                this.dy = null;
            }
        };
        DefinitionBase.prototype.da = function () {
            if (this.d9 != null) {
                this.d2 = this.d9;
            }
            else {
                this.d2 = GridStyleRepository.bg;
            }
        };
        Object.defineProperty(DefinitionBase.prototype, "an", {
            get: function () {
                return this.am;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DefinitionBase.prototype, "ap", {
            get: function () {
                return this.ao;
            },
            enumerable: true,
            configurable: true
        });
        DefinitionBase.prototype.cv = function (a, b) {
            if (this.am.contains(a)) {
                return;
            }
            this.am.add_1(a);
            this.ao.add(a);
            this.al.addItem(a, b);
        };
        DefinitionBase.prototype.d = function () {
            if (this.e != 4) {
                return this.e;
            }
            return 0;
        };
        DefinitionBase.prototype.i = function () {
            if (this.j != 4) {
                return this.j;
            }
            return 1;
        };
        DefinitionBase.prototype.eg = function () {
            return GridStyleRepository.bn;
        };
        DefinitionBase.prototype.ea = function () {
            return GridStyleRepository.av;
        };
        DefinitionBase.prototype.af = function () {
            return GridStyleRepository.l;
        };
        DefinitionBase.prototype.eb = function () {
            return GridStyleRepository.aw;
        };
        DefinitionBase.prototype.ef = function () {
            return null;
        };
        DefinitionBase.prototype.ed = function () {
            return null;
        };
        DefinitionBase.prototype.ec = function () {
            return null;
        };
        DefinitionBase.prototype.ee = function () {
            return GridStyleRepository.ba;
        };
        DefinitionBase.prototype.av = function () {
            return 0.3;
        };
        DefinitionBase.prototype.c6 = function (a, b, c) {
            if (this.z == null) {
                this.z = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Base.$, 0);
            }
            var d = null;
            if (this.z.d(a)) {
                d = this.z.item(a);
            }
            this.z.item(a, c);
            var e = false;
            if (d == null && c != null) {
                e = true;
            }
            if (d != null) {
                if (!igniteuiReactCore.Base.equalsStatic(d, c)) {
                    e = true;
                }
            }
            if (e) {
                this.c2(a, b, d, c);
            }
        };
        DefinitionBase.prototype.ai = function () {
            if (this.z == null) {
                return false;
            }
            return this.z.r > 0;
        };
        Object.defineProperty(DefinitionBase.prototype, "aa", {
            get: function () {
                return this.z;
            },
            enumerable: true,
            configurable: true
        });
        DefinitionBase.prototype.ah = function (a) {
            if (this.z == null) {
                return false;
            }
            return this.z.d(a);
        };
        DefinitionBase.prototype.c4 = function (a) {
            if (this.z == null) {
                return;
            }
            if (this.z.d(a)) {
                this.z.f(a);
            }
        };
        DefinitionBase.prototype.bn = function (a) {
            if (this.z == null) {
                return null;
            }
            if (this.z.d(a)) {
                return this.z.item(a);
            }
            return null;
        };
        DefinitionBase.prototype.ck = function (a, b, c) {
            var d = igniteuiReactCore.stringEmpty();
            switch (b) {
                case 10:
                    if (c != null) {
                        var override_ = c;
                        var val_ = igniteuiReactCore.typeGetValue(a);
                        d = (override_.format(val_));
                    }
                    else {
                        d = (igniteuiReactCore.typeGetValue(a)).toString();
                    }
                    break;
                case 8:
                    if (c != null) {
                        var override_ = c;
                        var val_ = a;
                        d = (override_.format(val_));
                    }
                    else {
                        d = a.toString();
                    }
                    break;
                case 5:
                    if (c != null) {
                        var override_ = c;
                        var val_ = a;
                        d = (override_.format(val_));
                    }
                    else {
                        d = a.toString();
                    }
                    break;
                case 1:
                    if (c != null) {
                        var override_ = c;
                        var val_ = igniteuiReactCore.typeGetValue(a);
                        d = (override_.format(val_));
                    }
                    else {
                        d = (igniteuiReactCore.typeGetValue(a)).toString();
                    }
                    break;
                case 3:
                    if (c != null) {
                        var override_ = c;
                        var val_ = igniteuiReactCore.typeGetValue(a);
                        d = (override_.format(val_));
                    }
                    else {
                        d = igniteuiReactCore.typeGetValue(a).toString();
                    }
                    break;
                case 4:
                    if (c != null) {
                        var override_ = c;
                        var val_ = igniteuiReactCore.typeGetValue(a);
                        d = (override_.format(val_));
                    }
                    else {
                        d = igniteuiReactCore.typeGetValue(a).toString();
                    }
                    break;
                case 7:
                    if (c != null) {
                        var override_ = c;
                        var val_ = a;
                        d = (override_.format(val_));
                    }
                    else {
                        d = a.toString();
                    }
                    break;
                case 6:
                    if (c != null) {
                        var override_ = c;
                        var val_ = a;
                        d = (override_.format(val_));
                    }
                    else {
                        d = a.toString();
                    }
                    break;
                case 0:
                case 2:
                case 11:
                    d = a.toString();
                    break;
            }
            return d;
        };
        DefinitionBase.prototype.u = function (a, b) {
            var c = b != null ? b.value.toString() : igniteuiReactCore.stringEmpty();
            var d = a.g;
            if (a.n == 4) {
                d = 1;
            }
            var e = b.value;
            switch (d) {
                case 10:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = igniteuiReactCore.typeGetValue(e);
                        c = (override_.format(val_));
                    }
                    else {
                        c = (igniteuiReactCore.typeGetValue(e)).toString();
                    }
                    break;
                case 8:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = e;
                        c = (override_.format(val_));
                    }
                    else {
                        c = e.toString();
                    }
                    break;
                case 5:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = e;
                        c = (override_.format(val_));
                    }
                    else {
                        var summaryValue_ = e;
                        var maxFractionDigits_ = a.u;
                        c = (parseFloat(summaryValue_.toFixed(maxFractionDigits_)).toString());
                    }
                    break;
                case 1:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = igniteuiReactCore.typeGetValue(e);
                        c = (override_.format(val_));
                    }
                    else {
                        c = (igniteuiReactCore.typeGetValue(e)).toString();
                    }
                    break;
                case 3:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = igniteuiReactCore.typeGetValue(e);
                        c = (override_.format(val_));
                    }
                    else {
                        c = igniteuiReactCore.typeGetValue(e).toString();
                    }
                    break;
                case 4:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = igniteuiReactCore.typeGetValue(e);
                        c = (override_.format(val_));
                    }
                    else {
                        c = igniteuiReactCore.typeGetValue(e).toString();
                    }
                    break;
                case 7:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = e;
                        c = (override_.format(val_));
                    }
                    else {
                        var summaryValue_ = e;
                        var maxFractionDigits_ = a.u;
                        c = (parseFloat(summaryValue_.toFixed(maxFractionDigits_)).toString());
                    }
                    break;
                case 6:
                    if (a.w != null) {
                        var override_ = a.w;
                        var val_ = e;
                        c = (override_.format(val_));
                    }
                    else {
                        var summaryValue_ = e;
                        var maxFractionDigits_ = a.u;
                        c = (parseFloat(summaryValue_.toFixed(maxFractionDigits_)).toString());
                    }
                    break;
                case 0:
                case 2:
                case 11:
                    c = e.toString();
                    break;
            }
            var f = a.ac != null ? a.ac : a.j != null ? a.j.displayName : igniteuiReactCore.stringEmpty();
            if (a.f != null) {
                c = a.f.i(e);
            }
            var g = igniteuiReactCore.stringIsNullOrWhiteSpace(a.ae) ? a.af : a.ae;
            var h = g + " " + f + " = " + c;
            if (a.e != null) {
                h = a.e.i(e);
            }
            var i = a.o(b, c, h);
            h = i.e;
            c = i.d;
            return ((function () {
                var $ret = new SummaryData();
                $ret.e = g;
                $ret.b = e;
                $ret.a = a.n;
                $ret.c = i.e;
                $ret.d = i.d;
                return $ret;
            })());
        };
        DefinitionBase.$t = igniteuiReactCore.markType(DefinitionBase, 'DefinitionBase', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return DefinitionBase;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Column = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Column, _super);
        function Column() {
            var _this = _super.call(this) || this;
            _this.g2 = 0;
            _this.e7 = 0;
            _this.gr = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(12));
            _this.gt = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.gs = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(12));
            _this.gq = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.ha = igniteuiReactCore.stringEmpty();
            _this.go = 0;
            _this.gn = 0;
            _this.gp = 0;
            _this.fh = 0;
            _this.g8 = null;
            _this.g9 = null;
            _this.g6 = null;
            _this.jd = null;
            _this.i9 = null;
            _this.jc = null;
            _this.i8 = null;
            _this.fd = null;
            _this.e9 = null;
            _this.gj = NaN;
            _this.fy = false;
            _this.fu = false;
            _this.f1 = false;
            _this.en = null;
            _this.ff = null;
            _this.fx = true;
            _this.f0 = true;
            _this.fz = false;
            _this.f2 = false;
            _this.e5 = 0;
            _this.fi = 0;
            _this.ft = false;
            _this.ev = 0;
            _this.ew = 0;
            _this.i6 = null;
            _this.ja = null;
            _this.e0 = 0;
            _this.ez = 0;
            _this.fr = true;
            _this.fv = true;
            _this.fw = true;
            _this.jb = null;
            _this.i7 = null;
            _this.gi = NaN;
            _this.gh = 0;
            _this.fo = null;
            _this.fn = null;
            _this.fb = 0;
            _this.g3 = null;
            _this.g7 = null;
            _this.el = null;
            _this.columnCellsPropertyUpdating = null;
            _this.columnHeaderCellsPropertyUpdating = null;
            _this.fl = null;
            _this.fs = false;
            _this.fs = true;
            _this.header = new TextHeader();
            _this.fs = false;
            _this.c = _this.d();
            _this.h = _this.i();
            _this.jh = _this.jl();
            _this.jg = _this.jk();
            _this.g2 = Column.g1++;
            return _this;
        }
        Column.prototype.jl = function () {
            return GridStyleRepository.ba;
        };
        Column.prototype.jk = function () {
            return GridStyleRepository.a1;
        };
        Object.defineProperty(Column.prototype, "e8", {
            get: function () {
                return this.e7;
            },
            set: function (a) {
                var b = this.e7;
                this.e7 = a;
                if (this.e7 != b) {
                    this.c2("State", 10, igniteuiReactCore.enumGetBox(ColumnStates_$type, b), igniteuiReactCore.enumGetBox(ColumnStates_$type, this.e7));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gy", {
            get: function () {
                return this.gr;
            },
            set: function (a) {
                var b = this.gr;
                this.gr = a;
                if (this.gr != b) {
                    this.c2("PaddingLeft", 6, b, this.gr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "g0", {
            get: function () {
                return this.gt;
            },
            set: function (a) {
                var b = this.gt;
                this.gt = a;
                if (this.gt != b) {
                    this.c2("PaddingTop", 6, b, this.gt);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gz", {
            get: function () {
                return this.gs;
            },
            set: function (a) {
                var b = this.gs;
                this.gs = a;
                if (this.gs != b) {
                    this.c2("PaddingRight", 6, b, this.gs);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gx", {
            get: function () {
                return this.gq;
            },
            set: function (a) {
                var b = this.gq;
                this.gq = a;
                if (this.gq != b) {
                    this.c2("PaddingBottom", 6, b, this.gq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "id", {
            get: function () {
                return this.ha;
            },
            set: function (a) {
                var b = this.ha;
                this.ha = a;
                if (this.ha != b) {
                    this.c2("Name", 10, b, this.ha);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gv", {
            get: function () {
                return this.go;
            },
            set: function (a) {
                this.go = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gu", {
            get: function () {
                return this.gn;
            },
            set: function (a) {
                this.gn = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gw", {
            get: function () {
                return this.gp;
            },
            set: function (a) {
                this.gp = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "fj", {
            get: function () {
                return this.fh;
            },
            set: function (a) {
                this.fh = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "hy", {
            get: function () {
                return this.g8;
            },
            set: function (a) {
                this.g8 = a;
                if (this.h2 == null) {
                    this.hh = this.hy;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "h2", {
            get: function () {
                return this.g9;
            },
            set: function (a) {
                var b = this.g9;
                this.g9 = a;
                if (this.g9 != b) {
                    this.c2("HeaderText", 8, b, this.g9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "hh", {
            get: function () {
                return this.g6;
            },
            set: function (a) {
                var b = this.g6;
                this.g6 = a;
                if (this.g6 != b) {
                    this.c2("ActualHeaderText", 8, b, this.g6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "jn", {
            get: function () {
                return this.jd;
            },
            set: function (a) {
                var b = this.jd;
                this.jd = a;
                if (this.jd != b) {
                    this.c2("SelectedBackground", 10, b, this.jd);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "jh", {
            get: function () {
                return this.i9;
            },
            set: function (a) {
                var b = this.i9;
                this.i9 = a;
                if (this.i9 != b) {
                    this.c2("ActualSelectedBackground", 2, b, this.i9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "jm", {
            get: function () {
                return this.jc;
            },
            set: function (a) {
                var b = this.jc;
                this.jc = a;
                if (this.jc != b) {
                    this.c2("RowHoverBackground", 10, b, this.jc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "jg", {
            get: function () {
                return this.i8;
            },
            set: function (a) {
                var b = this.i8;
                this.i8 = a;
                if (this.i8 != b) {
                    this.c2("ActualHoverBackground", 2, b, this.i8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "fe", {
            get: function () {
                return this.fd;
            },
            set: function (a) {
                var b = this.fd;
                this.fd = a;
                if (this.fd != b) {
                    this.c2("AnimationSettings", 10, b, "AnimationSettings");
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "width", {
            get: function () {
                return this.e9;
            },
            set: function (a) {
                var b = this.e9;
                this.e9 = a;
                if (this.e9 != b) {
                    this.c2("Width", 10, b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gm", {
            get: function () {
                return this.gj;
            },
            set: function (a) {
                var b = this.gj;
                this.gj = a;
                if (this.gj != b) {
                    this.c2("MinWidth", 10, b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gc", {
            get: function () {
                return this.fy;
            },
            set: function (a) {
                var b = this.fy;
                this.fy = a;
                if (this.fy != b) {
                    this.c2("IsFromMarkup", 10, b, this.fy);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "f8", {
            get: function () {
                return this.fu;
            },
            set: function (a) {
                var b = this.fu;
                if (a) {
                    this.gf = true;
                }
                this.fu = a;
                if (this.fu != b) {
                    this.c2("IsAutoGenerated", 10, b, this.fu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gf", {
            get: function () {
                return this.f1;
            },
            set: function (a) {
                var self_ = this;
                var value_ = a;
                this.f1 = value_;
                self_.___mustPassByValue = true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "eo", {
            get: function () {
                return this.en;
            },
            set: function (a) {
                var b = this.en;
                this.en = a;
                if (this.en != b) {
                    this.c2("Filter", 10, b, this.en);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "header", {
            get: function () {
                return this.ff;
            },
            set: function (a) {
                var b = this.ff;
                this.ff = a;
                if (this.ff != b) {
                    this.c2("Header", 10, b, this.ff);
                }
                this.ff.grid = this.grid;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gb", {
            get: function () {
                return this.fx;
            },
            set: function (a) {
                var b = this.fx;
                this.fx = a;
                if (this.fx != b) {
                    this.c2("IsFilteringEnabled", 10, b, this.fx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "ge", {
            get: function () {
                return this.f0;
            },
            set: function (a) {
                var b = this.f0;
                this.f0 = a;
                if (this.f0 != b) {
                    this.c2("IsResizingEnabled", 10, b, this.f0);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gd", {
            get: function () {
                return this.fz;
            },
            set: function (a) {
                var b = this.fz;
                this.fz = a;
                if (this.fz != b) {
                    this.c2("IsHidden", 10, b, this.fz);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gg", {
            get: function () {
                return this.f2;
            },
            set: function (a) {
                var b = this.f2;
                this.f2 = a;
                if (this.f2 != b) {
                    this.c2("ShouldRemoveWhenHidden", 10, b, this.f2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "e6", {
            get: function () {
                return this.e5;
            },
            set: function (a) {
                var b = this.e5;
                this.e5 = a;
                if (this.e5 != b) {
                    this.c2("SortDirection", 11, igniteuiReactCore.enumGetBox(ColumnSortDirection_$type, b), igniteuiReactCore.enumGetBox(ColumnSortDirection_$type, this.e5));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "fk", {
            get: function () {
                return this.fi;
            },
            set: function (a) {
                var b = this.fi;
                this.fi = a;
                if (this.fi != b) {
                    this.c2("Pinned", 11, igniteuiReactCore.enumGetBox(PinnedPositions_$type, b), igniteuiReactCore.enumGetBox(PinnedPositions_$type, this.fi));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "f7", {
            get: function () {
                return this.ft;
            },
            set: function (a) {
                var b = this.ft;
                this.ft = a;
                if (this.ft != b) {
                    this.c2("InternalShouldRemoveWhenHidden", 10, b, this.ft);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "f4", {
            get: function () {
                if (this.ft) {
                    return true;
                }
                return this.f2;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "ex", {
            get: function () {
                return this.ev;
            },
            set: function (a) {
                var b = this.ev;
                this.ev = a;
                if (this.ev != b) {
                    this.c2("ActualColumnOptionsIconAlignment", 4, igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, this.ev));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "ey", {
            get: function () {
                return this.ew;
            },
            set: function (a) {
                var b = this.ew;
                this.ew = a;
                if (this.ew != b) {
                    this.c2("ColumnOptionsIconAlignment", 10, igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, this.ew));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "je", {
            get: function () {
                return this.i6;
            },
            set: function (a) {
                var b = this.i6;
                this.i6 = a;
                if (this.i6 != b) {
                    this.c2("ActualColumnOptionsIconColor", 2, b, this.i6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "ji", {
            get: function () {
                return this.ja;
            },
            set: function (a) {
                var b = this.ja;
                this.ja = a;
                if (this.ja != b) {
                    this.c2("ColumnOptionsIconColor", 10, b, this.ja);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "e2", {
            get: function () {
                return this.e0;
            },
            set: function (a) {
                var b = this.e0;
                this.e0 = a;
                if (this.e0 != b) {
                    this.c2("ColumnOptionsIconBehavior", 10, igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, this.e0));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "e1", {
            get: function () {
                return this.ez;
            },
            set: function (a) {
                var b = this.ez;
                this.ez = a;
                if (this.ez != b) {
                    this.c2("ActualColumnOptionsIconBehavior", 4, igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, this.ez));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "f3", {
            get: function () {
                return this.fr;
            },
            set: function (a) {
                var b = this.fr;
                this.fr = a;
                if (this.fr != b) {
                    this.c2("ActualIsColumnOptionsEnabled", 5, b, this.fr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "f9", {
            get: function () {
                return this.fv;
            },
            set: function (a) {
                var b = this.fv;
                this.fv = a;
                if (this.fv != b) {
                    this.c2("IsColumnOptionsEnabled", 10, b, this.fv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "ga", {
            get: function () {
                return this.fw;
            },
            set: function (a) {
                var b = this.fw;
                this.fw = a;
                if (this.fw != b) {
                    this.c2("IsEditable", 10, b, this.fw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "jj", {
            get: function () {
                return this.jb;
            },
            set: function (a) {
                var b = this.jb;
                this.jb = a;
                if (this.jb != b) {
                    this.c2("DeletedTextColor", 10, b, this.jb);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "jf", {
            get: function () {
                return this.i7;
            },
            set: function (a) {
                var b = this.i7;
                this.i7 = a;
                if (this.i7 != b) {
                    this.c2("ActualDeletedTextColor", 2, b, this.i7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gl", {
            get: function () {
                return this.gi;
            },
            set: function (a) {
                var b = this.gi;
                this.gi = a;
                if (this.gi != b) {
                    this.c2("EditOpacity", 10, b, this.gi);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "gk", {
            get: function () {
                return this.gh;
            },
            set: function (a) {
                var b = this.gh;
                this.gh = a;
                if (this.gh != b) {
                    this.c2("ActualEditOpacity", 0, b, this.gh);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "textEditStyle", {
            get: function () {
                return this.fo;
            },
            set: function (a) {
                var b = this.fo;
                this.fo = a;
                if (this.fo != b) {
                    this.c2("EditFontInfo", 10, b, this.fo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "fp", {
            get: function () {
                return this.fn;
            },
            set: function (a) {
                var b = this.fn;
                this.fn = a;
                if (this.fn != b) {
                    this.c2("ActualEditFontInfo", 3, b, this.fn);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "fc", {
            get: function () {
                return this.fb;
            },
            set: function (a) {
                var b = this.fb;
                this.fb = a;
                if (b != this.fb) {
                    this.c2("EditorTypeInternal", 4, igniteuiReactCore.enumGetBox(EditorType_$type, b), igniteuiReactCore.enumGetBox(EditorType_$type, this.fb));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "g4", {
            get: function () {
                return this.g3;
            },
            set: function (a) {
                var b = this.g3;
                this.g3 = a;
                if (b != this.g3) {
                    this.c2("EditorItemsSourceInternal", 9, b, this.g3);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "hu", {
            get: function () {
                return this.g7;
            },
            set: function (a) {
                var b = this.g7;
                this.g7 = a;
                if (b != this.g7) {
                    this.c2("EditorTextFieldInternal", 8, b, this.g7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Column.prototype, "em", {
            get: function () {
                return this.el;
            },
            set: function (a) {
                var b = this.el;
                this.el = a;
                if (b != this.el) {
                    this.c2("EditorValueFieldInternal", 8, b, this.el);
                }
            },
            enumerable: true,
            configurable: true
        });
        Column.prototype.ed = function () {
            return GridStyleRepository.a4;
        };
        Column.prototype.ef = function () {
            return GridStyleRepository.bb;
        };
        Column.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            a.go = c;
            a.ay = b.d9.isEditedValue(d, this.hy);
            a.av = b.d9.isDeletedRow(d);
            a.en = b.d9.getPendingEditID(d, this.hy);
            a.hl = b.d9.getError(a.en);
            if (b.e0.o(a)) {
                a.b8 = 1;
            }
            else {
                a.b8 = 0;
            }
            if (b.aj.m(a)) {
                a.by = 1;
            }
            else {
                a.by = 0;
            }
            if (b.d5.c(a.k.w)) {
                a.b3 = 1;
            }
            else {
                a.b3 = 0;
            }
        };
        Column.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            a.km = this.jh;
            a.kj = this.jg;
            a.fo = this.gy;
            a.fs = this.g0;
            a.fq = this.gz;
            a.fm = this.gx;
            if (this.grid != null) {
                if (this.fp != null) {
                    this.fp.t(this.grid.externalGrid.renderer);
                }
            }
            a.ae = this.fp;
            a.b2 = this.gk;
            a.kg = this.jf;
        };
        Column.prototype.c3 = function (a, b, c, d) {
            _super.prototype.c3.call(this, a, b, c, d);
            switch (a) {
                case "Header":
                    var e = c;
                    var f = d;
                    if (e != null) {
                        e.definitionPropertyUpdated = igniteuiReactCore.delegateRemove(e.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.is));
                    }
                    if (f != null) {
                        f.definitionPropertyUpdated = igniteuiReactCore.delegateCombine(f.definitionPropertyUpdated, igniteuiReactCore.runOn(this, this.is));
                        if (f.e == 4) {
                            f.c = this.ep();
                        }
                        if (f.j == 4) {
                            f.h = this.eq();
                        }
                        if (!this.fs) {
                            f.c5();
                        }
                    }
                    break;
                case "HeaderText":
                    this.hh = d;
                    break;
                case "SelectedBackground":
                    this.i5();
                    break;
                case "ActualHorizontalAlignment":
                    if (this.header != null) {
                        if (this.header.e == 4) {
                            this.header.c = this.ep();
                        }
                    }
                    break;
                case "VerticalAlignment":
                    if (this.header != null) {
                        if (this.header.j == 4) {
                            this.header.h = this.eq();
                        }
                    }
                    break;
                case "SortDirection":
                    this.i3(this, "SortDirection", 11, c, d);
                    break;
                case "ActualLastStickyRowBackground":
                    if (c != null && this.d3 == null) {
                        d = this.d5;
                    }
                    break;
                case "ColumnOptionsIconAlignment":
                    this.iw();
                    break;
                case "ColumnOptionsIconColor":
                    this.iz();
                    break;
                case "ColumnOptionsIconBehavior":
                    this.iy();
                    break;
                case "IsColumnOptionsEnabled":
                    this.ix();
                    break;
                case "DeletedTextColor":
                    this.i0();
                    break;
                case "EditOpacity":
                    this.i2();
                    break;
                case "EditFontInfo":
                    this.i1();
                    break;
                case "RowHoverBackground":
                    this.i4();
                    break;
            }
            this.iv(a, b, c, d);
        };
        Column.prototype.eq = function () {
            return this.h;
        };
        Column.prototype.ep = function () {
            return this.c;
        };
        Column.prototype.i3 = function (a, b, c, d, e) {
            if (this.columnHeaderCellsPropertyUpdating != null) {
                this.columnHeaderCellsPropertyUpdating(this, b, c, d, e);
            }
        };
        Column.prototype.is = function (a, b) {
            this.i3(this, b.propertyName, b.animationType, b.oldValue, b.newValue);
        };
        Column.prototype.cz = function (a, b) {
            if (this.header != null) {
                this.header.grid = b;
            }
            this.i5();
            this.i5();
            this.c8();
            this.df();
            this.dg();
            this.de();
            this.db();
            this.dc();
            this.dd();
            this.i2();
            this.i1();
            this.i0();
            this.iw();
            this.iz();
            this.iy();
            this.ix();
            this.i4();
        };
        Column.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "CellSelectedBackground":
                    this.i5();
                    break;
                case "CellBackground":
                    this.c8();
                    break;
                case "CellTextColor":
                    this.df();
                    break;
                case "CellTextStyle":
                    this.dg();
                    break;
                case "StickyRowBackground":
                    this.de();
                    break;
                case "LastStickyRowBackground":
                    this.db();
                    break;
                case "PinnedRowBackground":
                    this.dc();
                    break;
                case "PinnedRowOpacity":
                    this.dd();
                    break;
                case "ColumnOptionsIconAlignment":
                    this.iw();
                    break;
                case "ColumnOptionsIconColor":
                    this.iz();
                    break;
                case "ColumnOptionsIconBehavior":
                    this.iy();
                    break;
                case "IsColumnOptionsEnabled":
                    this.ix();
                    break;
                case "DeletedTextColor":
                    this.i0();
                    break;
                case "EditOpacity":
                    this.i2();
                    break;
                case "EditTextStyle":
                    this.i1();
                    break;
                case "RowHoverBackground":
                    this.i4();
                    break;
            }
        };
        Column.prototype.i4 = function () {
            if (this.jm == null) {
                if (this.grid != null && this.grid.u7 != null) {
                    this.jg = this.grid.u7;
                    return;
                }
                this.jg = this.jk();
            }
            else {
                this.jg = this.jm;
            }
        };
        Column.prototype.i5 = function () {
            if (this.jn == null) {
                if (this.grid != null && this.grid.ut != null) {
                    this.jh = this.grid.ut;
                    return;
                }
                this.jh = this.jl();
            }
            else {
                this.jh = this.jn;
            }
        };
        Column.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.us != null) {
                    this.d0 = this.grid.us;
                }
                else {
                    this.d0 = this.eb();
                }
            }
            else {
                this.d0 = this.d7;
            }
        };
        Column.prototype.df = function () {
            if (this.ek == null) {
                if (this.grid != null && this.grid.uu != null) {
                    this.d6 = this.grid.uu;
                    return;
                }
                this.d6 = this.eg();
            }
            else {
                this.d6 = this.ek;
            }
        };
        Column.prototype.dg = function () {
            if (this.textStyle == null) {
                if (this.grid != null && this.grid.fp != null) {
                    this.ad = this.grid.fp;
                    return;
                }
                this.ad = this.af();
            }
            else {
                this.ad = this.textStyle;
            }
        };
        Column.prototype.dd = function () {
            if (igniteuiReactCore.isNaN_(this.aw)) {
                if (this.grid != null && !igniteuiReactCore.isNaN_(this.grid.jp)) {
                    this.at = this.grid.jp;
                    return;
                }
                this.at = this.av();
            }
            else {
                this.at = this.aw;
            }
        };
        Column.prototype.i0 = function () {
            if (this.jj == null) {
                if (this.grid != null && this.grid.uy != null) {
                    this.jf = this.grid.uy;
                    return;
                }
                this.jf = GridStyleRepository.bm;
            }
            else {
                this.jf = this.jj;
            }
        };
        Column.prototype.i2 = function () {
            if (igniteuiReactCore.isNaN_(this.gl)) {
                if (this.grid != null && !igniteuiReactCore.isNaN_(this.grid.jo)) {
                    this.gk = this.grid.jo;
                    return;
                }
                this.gk = GridStyleRepository.m;
            }
            else {
                this.gk = this.gl;
            }
        };
        Column.prototype.i1 = function () {
            if (this.textEditStyle == null) {
                if (this.grid != null && this.grid.fq != null) {
                    this.fp = this.grid.fq;
                    return;
                }
                this.fp = GridStyleRepository.k;
            }
            else {
                this.fp = this.textEditStyle;
            }
        };
        Column.prototype.dc = function () {
            if (this.ei == null) {
                if (this.grid != null && this.grid.u6 != null) {
                    this.d4 = this.grid.u6;
                    return;
                }
                this.d4 = this.ed();
            }
            else {
                this.d4 = this.ei;
            }
        };
        Column.prototype.de = function () {
            if (this.ej == null) {
                if (this.grid != null && this.grid.vf != null) {
                    this.d5 = this.grid.vf;
                    return;
                }
                this.d5 = this.ef();
            }
            else {
                this.d5 = this.ej;
            }
        };
        Column.prototype.db = function () {
            if (this.eh == null) {
                if (this.grid != null && this.grid.u5 != null) {
                    this.d3 = this.grid.u5;
                    return;
                }
                this.d3 = this.ec();
            }
            else {
                this.d3 = this.eh;
            }
        };
        Column.prototype.iw = function () {
            if (this.ey == 0) {
                if (this.grid != null && this.grid.bk != 0) {
                    this.ex = this.grid.bk;
                    return;
                }
                this.ex = GridStyleRepository.a;
            }
            else {
                this.ex = this.ey;
            }
        };
        Column.prototype.iz = function () {
            if (this.ji == null) {
                if (this.grid != null && this.grid.uw != null) {
                    this.je = this.grid.uw;
                    return;
                }
                this.je = GridStyleRepository.az;
            }
            else {
                this.je = this.ji;
            }
        };
        Column.prototype.iy = function () {
            if (this.e2 == 0) {
                if (this.grid != null && this.grid.bm != 0) {
                    this.e1 = this.grid.bm;
                    return;
                }
                this.e1 = GridStyleRepository.b;
            }
            else {
                this.e1 = this.e2;
            }
        };
        Column.prototype.ix = function () {
            if (this.grid != null) {
                this.f3 = this.grid.hn && this.f9;
            }
            else {
                this.f3 = false;
            }
        };
        Column.prototype.iv = function (a, b, c, d) {
            if (this.columnCellsPropertyUpdating != null) {
                this.columnCellsPropertyUpdating(this, a, b, c, d);
            }
        };
        Column.prototype.eu = function () {
            if (this.c == 0) {
                return 3;
            }
            return 2;
        };
        Column.prototype.e4 = function () {
            if (this.c == 0) {
                return 3;
            }
            return 2;
        };
        Column.prototype.et = function () {
            return 2;
        };
        Column.prototype.e3 = function () {
            return 2;
        };
        Column.prototype.h0 = function () {
            return this.id != null && this.id != "" ? this.id : this.hy;
        };
        Column.prototype.iu = function (a, b, c) {
            if (this.fl == null) {
                this.fl = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Base.$, 0);
            }
            var d = null;
            if (this.fl.d(a)) {
                d = this.fl.item(a);
            }
            this.fl.item(a, c);
            var e = false;
            if (d == null && c != null) {
                e = true;
            }
            if (d != null) {
                if (!igniteuiReactCore.Base.equalsStatic(d, c)) {
                    e = true;
                }
            }
            if (e) {
                this.i3(this, a, b, d, c);
            }
        };
        Column.prototype.f6 = function () {
            if (this.fl == null) {
                return false;
            }
            return this.fl.r > 0;
        };
        Object.defineProperty(Column.prototype, "fm", {
            get: function () {
                return this.fl;
            },
            enumerable: true,
            configurable: true
        });
        Column.prototype.f5 = function (a) {
            if (this.fl == null) {
                return false;
            }
            return this.fl.d(a);
        };
        Column.prototype.it = function (a) {
            if (this.fl == null) {
                return;
            }
            if (this.fl.d(a)) {
                this.fl.f(a);
            }
        };
        Column.prototype.g5 = function (a) {
            if (this.fl == null) {
                return null;
            }
            if (this.fl.d(a)) {
                return this.fl.item(a);
            }
            return null;
        };
        Column.$t = igniteuiReactCore.markType(Column, 'Column', DefinitionBase.$);
        Column.g1 = 0;
        return Column;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var GridColumnCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnCollection, _super);
        function GridColumnCollection() {
            return _super.call(this, Column.$, 0) || this;
        }
        GridColumnCollection.$t = igniteuiReactCore.markType(GridColumnCollection, 'GridColumnCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(Column.$));
        return GridColumnCollection;
    }(igniteuiReactCore.ObservableCollection$1));
    /**
     * @hidden
     */
    var GridEffectGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridEffectGroup, _super);
        function GridEffectGroup(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.f = 0;
            _this.a = false;
            _this.b = false;
            _this.effectsFinished = null;
            _this.effectsCanceled = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0:
                    {
                        var c = _rest[0];
                        _this.a = c;
                        _this.c = new igniteuiReactCore.List$1(GridEffect.$, 0);
                        _this.b = false;
                    }
                    break;
                case 1:
                    {
                        var c = [true];
                        {
                            var e = c[0];
                            _this.a = e;
                            _this.c = new igniteuiReactCore.List$1(GridEffect.$, 0);
                            _this.b = false;
                        }
                    }
                    break;
            }
            return _this;
        }
        GridEffectGroup.prototype.k = function () {
            this.b = false;
            for (var a = 0; a < this.c.count; a++) {
                var b = this.c._inner[a];
                b.onFinished = igniteuiReactCore.delegateRemove(b.onFinished, igniteuiReactCore.runOn(this, this.i));
                var c = this.c._inner[a];
                c.onCanceled = igniteuiReactCore.delegateRemove(c.onCanceled, igniteuiReactCore.runOn(this, this.h));
            }
            this.f = 0;
            this.c.clear();
        };
        GridEffectGroup.prototype.g = function (a) {
            this.c.add(a);
            a.onFinished = igniteuiReactCore.delegateCombine(a.onFinished, igniteuiReactCore.runOn(this, this.i));
            a.onCanceled = igniteuiReactCore.delegateCombine(a.onCanceled, igniteuiReactCore.runOn(this, this.h));
        };
        GridEffectGroup.prototype.h = function (a, b) {
            this.b = true;
            this.f++;
            if (this.f == this.c.count) {
                this.j();
            }
        };
        GridEffectGroup.prototype.i = function (a) {
            this.f++;
            if (this.f == this.c.count) {
                this.j();
            }
        };
        GridEffectGroup.prototype.j = function () {
            if (this.b) {
                if (this.effectsCanceled != null) {
                    this.effectsCanceled(this, new igniteuiReactCore.EventArgs());
                }
            }
            else {
                if (this.effectsFinished != null) {
                    this.effectsFinished(this, new igniteuiReactCore.EventArgs());
                }
            }
            if (this.a) {
                this.k();
            }
        };
        GridEffectGroup.$t = igniteuiReactCore.markType(GridEffectGroup, 'GridEffectGroup');
        return GridEffectGroup;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var HoverManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(HoverManager, _super);
        function HoverManager(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.b = false;
            _this.d = -1;
            _this.e = -1;
            _this.a = a;
            return _this;
        }
        HoverManager.prototype.f = function (a) {
            var _this = this;
            this.d = a;
            if (!this.b) {
                this.a.delayedExecutionManager.executeIn(function () {
                    if (_this.d != _this.e) {
                        if (_this.e > -1) {
                            _this.a.ck.ao(_this.a, _this.e);
                        }
                        if (_this.d > -1) {
                            _this.a.ck.am(_this.a, _this.d);
                        }
                        _this.e = _this.d;
                    }
                    _this.b = false;
                }, 0);
                this.b = true;
            }
        };
        HoverManager.prototype.c = function (a) {
            return this.e == a;
        };
        HoverManager.$t = igniteuiReactCore.markType(HoverManager, 'HoverManager');
        return HoverManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var RecyclingManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RecyclingManager, _super);
        function RecyclingManager() {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.b = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Stack$1.$.specialize(CellModel.$), 0);
            return _this;
        }
        RecyclingManager.prototype.a = function (a) {
            if (!this.b.containsKey(a)) {
                this.b.addItem(a, new igniteuiReactCore.Stack$1(CellModel.$));
                return null;
            }
            var b = this.b.item(a);
            if (b.f > 0) {
                var c = b.e();
                if (c.t == 2) {
                    c.t = 1;
                }
                return c;
            }
            return null;
        };
        RecyclingManager.prototype.c = function (a) {
            a.t = 1;
            if (!this.b.containsKey(a.i0)) {
                this.b.addItem(a.i0, new igniteuiReactCore.Stack$1(CellModel.$));
            }
            this.b.item(a.i0).h(a);
        };
        RecyclingManager.$t = igniteuiReactCore.markType(RecyclingManager, 'RecyclingManager');
        return RecyclingManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ActivationManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ActivationManager, _super);
        function ActivationManager(a, b) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.b = null;
            _this.c = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type, 0);
            _this.e = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type, 0);
            _this.d = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.String_$type, 0);
            _this.f = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.String_$type, igniteuiReactCore.Number_$type, 0);
            _this.k = false;
            _this.l = false;
            _this.q = -1;
            _this.s = -1;
            _this.p = -1;
            _this.a = a;
            _this.b = b;
            return _this;
        }
        Object.defineProperty(ActivationManager.prototype, "g", {
            get: function () {
                if (this.k) {
                    this.z();
                    this.k = false;
                }
                return this.c;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ActivationManager.prototype, "i", {
            get: function () {
                if (this.k) {
                    this.z();
                    this.k = false;
                }
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ActivationManager.prototype, "h", {
            get: function () {
                if (this.k) {
                    this.z();
                    this.k = false;
                }
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ActivationManager.prototype, "j", {
            get: function () {
                if (this.k) {
                    this.z();
                    this.k = false;
                }
                return this.f;
            },
            enumerable: true,
            configurable: true
        });
        ActivationManager.prototype.ai = function (a) {
            if (!a.k.ag) {
                return;
            }
            if (this.m(a)) {
                this.ac(a);
            }
            else {
                this.x(a);
            }
        };
        ActivationManager.prototype.m = function (a) {
            var b = false;
            var c = this.a.d9.getDataRow(a.k);
            if (c == -1) {
                return false;
            }
            if (this.q < 0) {
                return false;
            }
            if (c != this.q) {
                return false;
            }
            if (igniteuiReactCore.typeCast(SectionHeaderCellModel.$, a) !== null) {
                return true;
            }
            if (this.i.d(a.k.az)) {
                var d = this.i.item(a.k.az);
                if (d >= 0) {
                    b = this.n(c, d);
                }
            }
            return b;
        };
        ActivationManager.prototype.n = function (a, b) {
            return this.q == a && b == this.s;
        };
        ActivationManager.prototype.o = function () {
            return this.a.ch == 1;
        };
        ActivationManager.prototype.aa = function () {
            if (this.q >= 0 && this.s >= 0) {
                this.ab(this.q, this.s, true);
            }
        };
        ActivationManager.prototype.ac = function (a) {
            var b = this.a.d9.getDataRow(a.k);
            if (b == -1) {
                return;
            }
            if (this.i.d(a.k.az)) {
                var c = this.i.item(a.k.az);
                if (this.n(b, c)) {
                    this.ab(b, c, true);
                }
            }
        };
        ActivationManager.prototype.x = function (a) {
            this.w(a.k);
        };
        ActivationManager.prototype.w = function (a) {
            if (!a.ag) {
                return;
            }
            if (!this.o()) {
                return;
            }
            if (this.q >= 0 && this.s != null) {
                this.ab(this.q, this.s, false);
            }
            var b = this.a.d9.getDataRow(a);
            if (b == -1) {
                return;
            }
            if (a.az == -400) {
                if (this.q != b) {
                    this.v(b, 0);
                }
            }
            if (this.i.d(a.az)) {
                var c = this.i.item(a.az);
                if (!this.n(b, c)) {
                    this.u(b, c);
                }
            }
        };
        ActivationManager.prototype.y = function (a, b) {
            var c = this.s;
            if (b == null) {
                if (this.a.dy != 1) {
                    var d = this.a.d9.getRowType(a);
                    if (this.a.d9.isRowSpanning(d) && this.s == -1) {
                        c = this.i.item(0);
                    }
                }
            }
            else if (this.j.d(b)) {
                c = this.j.item(b);
            }
            if (c != -1) {
                if (this.q >= 0 && this.s >= 0) {
                    if (a != this.q || c != this.s) {
                        this.ab(this.q, this.s, false);
                        this.u(a, c);
                    }
                }
                else if (this.q == -1 && this.s == -1) {
                    this.u(a, c);
                }
            }
        };
        ActivationManager.prototype.v = function (a, b) {
            if (!this.i.d(b)) {
                return;
            }
            var c = this.i.item(b);
            if (a != this.q || c != this.s) {
                this.q = a;
                this.s = c;
                this.p = b;
                if (a >= 0 && b >= 0) {
                    if (a >= 0 && a < this.a.d9.getRowCount()) {
                        if (this.a.dy != 1) {
                            var d = this.a.d9.getRowType(a);
                            if (this.a.d9.isRowSpanning(d)) {
                                b = -400;
                                c = -400;
                            }
                        }
                    }
                    this.b.z(this.a, a, b, c);
                }
                this.a.qq(a, this.t(c));
            }
        };
        ActivationManager.prototype.u = function (a, b) {
            if (!this.g.d(b)) {
                return;
            }
            var c = this.g.item(b);
            if (a != this.q || b != this.s) {
                this.q = a;
                this.s = b;
                this.p = c;
                if (a >= 0 && c >= 0) {
                    if (a >= 0 && a < this.a.d9.getRowCount()) {
                        if (this.a.dy != 1) {
                            var d = this.a.d9.getRowType(a);
                            if (this.a.d9.isRowSpanning(d)) {
                                c = -400;
                                b = -400;
                            }
                        }
                    }
                    this.b.z(this.a, a, c, b);
                }
                this.a.qq(a, this.t(b));
            }
        };
        ActivationManager.prototype.ab = function (a, b, c) {
            if (this.n(a, b)) {
                this.s = -1;
                this.q = -1;
                this.p = -1;
                if (a >= 0) {
                    if (this.g.d(b)) {
                        var d = this.g.item(b);
                        if (d >= 0) {
                            if (a >= 0 && a < this.a.d9.getRowCount()) {
                                if (this.a.dy != 1) {
                                    var e = this.a.d9.getRowType(a);
                                    if (this.a.d9.isRowSpanning(e)) {
                                        d = -400;
                                        b = -400;
                                    }
                                }
                            }
                            this.b.aa(this.a, a, d, b);
                        }
                    }
                }
                if (c) {
                    this.a.qs(a, this.t(b));
                }
            }
        };
        ActivationManager.prototype.ae = function () {
            this.q = -1;
            this.s = -1;
            this.p = -1;
        };
        ActivationManager.prototype.af = function (a) {
        };
        ActivationManager.prototype.ag = function (a) {
        };
        ActivationManager.prototype.t = function (a) {
            if (!this.h.d(a)) {
                return null;
            }
            return this.h.item(a);
        };
        ActivationManager.prototype.ah = function (a) {
        };
        ActivationManager.prototype.ad = function () {
            this.k = true;
        };
        ActivationManager.prototype.z = function () {
            this.c.u();
            this.e.u();
            this.d.u();
            this.f.u();
            for (var a = 0; a < this.a.actualColumns.count; a++) {
                this.c.s(this.a.actualColumns._inner[a].g2, a);
                this.e.s(a, this.a.actualColumns._inner[a].g2);
                this.d.s(this.a.actualColumns._inner[a].g2, this.a.actualColumns._inner[a].h0());
                this.f.s(this.a.actualColumns._inner[a].h0(), this.a.actualColumns._inner[a].g2);
            }
        };
        ActivationManager.prototype.r = function () {
            if (this.g.d(this.s)) {
                return this.g.item(this.s);
            }
            if (this.p != -1) {
                return this.p;
            }
            return 0;
        };
        ActivationManager.$t = igniteuiReactCore.markType(ActivationManager, 'ActivationManager');
        return ActivationManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var SelectionManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SelectionManager, _super);
        function SelectionManager(a, b) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.b = null;
            _this.f = new igniteuiReactCore.FastIterationDictionary$2(PrimaryKeyValue.$, igniteuiReactCore.Number_$type, 0);
            _this.e = new igniteuiReactCore.FastIterationDictionary$2(PrimaryKeyValue.$, igniteuiReactCore.FastIterationDictionary$2.$.specialize(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type), 0);
            _this.c = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type, 0);
            _this.d = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type, 0);
            _this.i = false;
            _this.r = new igniteuiReactCore.List$1(CellRange.$, 0);
            _this.q = new igniteuiReactCore.List$1(CellRange.$, 0);
            _this.j = false;
            _this.a = a;
            _this.b = b;
            return _this;
        }
        Object.defineProperty(SelectionManager.prototype, "g", {
            get: function () {
                if (this.i) {
                    this.v();
                    this.i = false;
                }
                return this.c;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SelectionManager.prototype, "h", {
            get: function () {
                if (this.i) {
                    this.v();
                    this.i = false;
                }
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        SelectionManager.prototype.an = function (a) {
            if (!a.k.ag) {
                return;
            }
            if (this.o(a)) {
                this.aq(a);
            }
            else {
                this.aj(a);
            }
        };
        SelectionManager.prototype.am = function (a) {
            if (!a.k.ag) {
                return;
            }
            this.j = true;
            this.aj(a);
            this.j = false;
        };
        SelectionManager.prototype.o = function (a) {
            var b = this.a.d9.getDataRow(a.k);
            if (b == -1) {
                return false;
            }
            if (this.a.d9.isPlaceholderItem(b)) {
                return false;
            }
            var c = this.a.d9.getRowKey(this.a.i(), b);
            if (c == null) {
                return false;
            }
            var d = this.f.d(c);
            if (d) {
                var e = this.f.item(c);
                if (e == -1) {
                    this.f.item(c, b);
                }
                var f = this.a.d9.resolveValueForRow(a.k);
                var g = this.a.ah.indexOf(c);
                if (g >= 0) {
                    if (this.a.ad.ae._inner[g] == null) {
                        this.a.r8(g, f, c);
                    }
                }
            }
            if (!d) {
                if (this.h.d(a.k.az)) {
                    var h = this.h.item(a.k.az);
                    if (h >= 0) {
                        d = this.k(c, h);
                        if (d && this.e.item(c).item(h) == -1) {
                            this.e.item(c).item(h, b);
                        }
                    }
                }
            }
            if (!d) {
                if (a.k.az >= 0) {
                    var i = this.a.model.br._inner[a.k.az];
                    for (var j = 0; j < this.q.count; j++) {
                        if (this.q._inner[j].b(a.k.w, i.n)) {
                            d = true;
                            break;
                        }
                    }
                }
            }
            if (!d) {
                if (this.a.d9.isRowPinned(b)) {
                    var k = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, c.value[0]);
                    if (k != null) {
                        var l = this.a.d9.getItemKey(this.a.i(), k.targetRow);
                        d = this.f.d(l);
                        if (!d) {
                            if (this.h.d(a.k.az)) {
                                var m = this.h.item(a.k.az);
                                if (m >= 0) {
                                    d = this.k(l, m);
                                }
                            }
                        }
                    }
                }
            }
            return d;
        };
        SelectionManager.prototype.m = function (a) {
            return this.f.d(a);
        };
        SelectionManager.prototype.k = function (a, b) {
            return this.e.d(a) && this.e.item(a).d(b);
        };
        SelectionManager.prototype.n = function () {
            return this.a.dt == 1 || this.a.dt == 2;
        };
        SelectionManager.prototype.l = function () {
            return this.a.dt == 3 || this.a.dt == 4;
        };
        SelectionManager.prototype.aq = function (a) {
            var b = this.a.d9.getDataRow(a.k);
            if (b == -1) {
                return;
            }
            if (this.a.d9.isPlaceholderItem(b)) {
                return;
            }
            var c = this.a.d9.getRowKey(this.a.i(), b);
            if (this.m(c)) {
                this.ar(c, b, false);
            }
            if (this.h.d(a.k.az)) {
                var d = this.h.item(a.k.az);
                if (this.k(c, d)) {
                    this.ao(c, b, d);
                }
            }
        };
        SelectionManager.prototype.aj = function (a) {
            if (this.a.dt == 0) {
                return;
            }
            if (this.a.dt == 1 || this.j) {
                var b = this.f.o;
                var c = this.f.p;
                var d = new igniteuiReactCore.List$1(PrimaryKeyValue.$, 0);
                var e = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
                for (var f = 0; f < b.count; f++) {
                    if (c._inner[f]) {
                        continue;
                    }
                    d.add(b._inner[f]);
                    e.add(this.f.q._inner[f]);
                }
                for (var g = 0; g < d.count; g++) {
                    this.ar(d._inner[g], e._inner[g], false);
                }
            }
            if (this.a.dt == 3 || this.j) {
                var h = this.e.o;
                var i = this.e.p;
                var j = new igniteuiReactCore.List$1(PrimaryKeyValue.$, 0);
                var k = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
                var l = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
                for (var m = 0; m < h.count; m++) {
                    if (i._inner[m]) {
                        continue;
                    }
                    var n = h._inner[m];
                    var o = this.e.item(n).o;
                    var p = this.e.item(n).q;
                    var q = this.e.item(n).p;
                    for (var r = 0; r < o.count; r++) {
                        if (q._inner[r]) {
                            continue;
                        }
                        var s = o._inner[r];
                        var t = p._inner[r];
                        if (this.h.d(a.k.az) && this.h.item(a.k.az) == s && a.k.w == t) {
                            continue;
                        }
                        j.add(n);
                        k.add(s);
                        l.add(t);
                    }
                }
                for (var u = 0; u < j.count; u++) {
                    this.ao(j._inner[u], l._inner[u], k._inner[u]);
                }
            }
            var v = this.a.d9.getDataRow(a.k);
            if (v == -1) {
                return;
            }
            if (this.a.d9.isPlaceholderItem(v)) {
                return;
            }
            var w = this.a.d9.getRowKey(this.a.i(), v);
            if (w == null) {
                return;
            }
            if (this.n()) {
                this.ak(w, v, false);
            }
            else if (this.l()) {
                this.ai(w, v, a.k.az);
            }
        };
        SelectionManager.prototype.ak = function (a, b, c) {
            var d = true;
            var e = false;
            if (!c) {
                if (this.a.d9.getRowType(b) == 3) {
                    var f = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, a.value[0]);
                    if (f.targetRow != null) {
                        var g = this.a.d9.getItemKey(this.a.i(), f.targetRow);
                        var h = this.a.d9.indexOfVisibleItemByKey(this.a.i(), g, this.a.ky(), this.a.k2());
                        this.al(g, h, f.targetRow, true);
                    }
                    e = true;
                    d = false;
                }
            }
            var i = null;
            if (!e) {
                i = this.a.d9.resolveValueForDataRow(b);
                if (this.a.ag.contains(a)) {
                    var j = this.s(a);
                    if (j >= 0) {
                        var k = this.a.d9.getRowKey(this.a.i(), j);
                        if (!this.m(k)) {
                            this.al(k, j, null, false);
                        }
                    }
                }
            }
            this.al(a, b, i, d);
        };
        SelectionManager.prototype.al = function (a, b, c, d) {
            if (!this.f.d(a)) {
                this.f.s(a, b);
                if (b >= 0 && this.a.model.br.count > 0) {
                    this.b.an(this.a, b);
                }
            }
            if (d && c != null) {
                this.a.r5(c, a);
            }
        };
        SelectionManager.prototype.as = function (a, b, c, d) {
            if (this.f.d(a)) {
                this.f.f(a);
                if (b >= 0) {
                    var e = this.a.d9.getRowKey(this.a.i(), b);
                    if (e != null && e.equals(a) && b >= 0) {
                        this.b.ap(this.a, b);
                    }
                }
            }
            if (d && c != null) {
                this.a.r6(c, a);
            }
        };
        SelectionManager.prototype.ar = function (a, b, c) {
            var d = true;
            var e = false;
            if (!c) {
                if (this.a.d9.getRowType(b) == 3) {
                    var f = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, a.value[0]);
                    if (f.targetRow != null) {
                        var g = this.a.d9.getItemKey(this.a.i(), f.targetRow);
                        var h = this.a.d9.indexOfVisibleItemByKey(this.a.i(), g, this.a.ky(), this.a.k2());
                        this.as(g, h, f.targetRow, true);
                    }
                    e = true;
                    d = false;
                }
            }
            var i = null;
            if (!e) {
                i = this.a.d9.resolveValueForDataRow(b);
                if (this.a.ag.contains(a)) {
                    var j = this.s(a);
                    if (j >= 0) {
                        var k = this.a.d9.getRowKey(this.a.i(), j);
                        if (this.m(k)) {
                            this.as(k, j, null, false);
                        }
                    }
                }
            }
            this.as(a, b, i, d);
        };
        SelectionManager.prototype.ai = function (a, b, c) {
            if (!this.h.d(c)) {
                return;
            }
            var d = this.h.item(c);
            var e = true;
            if (this.a.d9.getRowType(b) == 3) {
                var f = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, a.value[0]);
                if (f.targetRow != null) {
                    var g = this.a.d9.getItemKey(this.a.i(), f.targetRow);
                    var h = this.a.d9.indexOfVisibleItemByKey(this.a.i(), g, this.a.ky(), this.a.k2());
                    this.ag(g, d, c, h, true);
                }
                e = false;
            }
            else {
                if (this.a.ag.contains(a)) {
                    var i = this.s(a);
                    if (i >= 0) {
                        var j = this.a.d9.getRowKey(this.a.i(), i);
                        if (!this.k(j, d)) {
                            this.ag(j, d, c, i, false);
                        }
                    }
                }
            }
            this.ag(a, d, c, b, e);
        };
        SelectionManager.prototype.ah = function (a, b, c) {
            if (!this.g.d(c)) {
                return;
            }
            var d = this.g.item(c);
            if (!this.e.d(a)) {
                var e = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type, 0);
                e.s(c, b);
                this.e.s(a, e);
                if (b >= 0 && d >= 0) {
                    this.b.ad(this.a, b, d, c);
                }
                this.a.q4(a, c);
            }
            else {
                if (!this.e.item(a).d(c)) {
                    this.e.item(a).s(c, b);
                    if (b >= 0) {
                        this.b.ad(this.a, b, d, c);
                    }
                    this.a.q4(a, c);
                }
            }
        };
        SelectionManager.prototype.ag = function (a, b, c, d, e) {
            if (!this.e.d(a)) {
                if (b >= 0) {
                    var f = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type, 0);
                    f.s(b, d);
                    this.e.s(a, f);
                    if (d >= 0) {
                        this.b.ad(this.a, d, c, b);
                    }
                    if (e) {
                        this.a.q4(a, b);
                    }
                }
            }
            else {
                if (!this.e.item(a).d(b)) {
                    this.e.item(a).s(b, d);
                    if (d >= 0) {
                        this.b.ad(this.a, d, c, b);
                    }
                    if (e) {
                        this.a.q4(a, b);
                    }
                }
            }
        };
        SelectionManager.prototype.ap = function (a, b, c, d) {
            if (this.k(a, c)) {
                this.e.item(a).f(c);
                if (this.e.item(a).r == 0) {
                    this.e.f(a);
                }
                if (b >= 0) {
                    var e = this.a.d9.getRowKey(this.a.i(), b);
                    if (e != null && e.equals(a) && b >= 0) {
                        if (this.g.d(c)) {
                            var f = this.g.item(c);
                            if (f >= 0) {
                                this.b.ae(this.a, b, f, c);
                            }
                        }
                    }
                }
                if (d) {
                    this.a.q5(a, c);
                }
            }
        };
        SelectionManager.prototype.ao = function (a, b, c) {
            var d = true;
            if (this.a.d9.getRowType(b) == 3) {
                var e = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, a.value[0]);
                if (e.targetRow != null) {
                    var f = this.a.d9.getItemKey(this.a.i(), e.targetRow);
                    var g = this.a.d9.indexOfVisibleItemByKey(this.a.i(), f, this.a.ky(), this.a.k2());
                    this.ap(f, g, c, true);
                }
                d = false;
            }
            else {
                if (this.a.ag.contains(a)) {
                    var h = this.s(a);
                    if (h >= 0) {
                        var i = this.a.d9.getRowKey(this.a.i(), h);
                        if (this.k(i, c)) {
                            this.ap(i, h, c, false);
                        }
                    }
                }
            }
            this.ap(a, b, c, d);
        };
        SelectionManager.prototype.s = function (a) {
            var b = -1;
            var c = this.a.d9.getStickyRows();
            if (c != null) {
                for (var d = 0; d < c.length; d++) {
                    var e = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, this.a.actualDataSource.getItemAtIndex(c[d]));
                    if (e != null && e.rowType == 3) {
                        var f = this.a.d9.getItemKey(this.a.i(), e.targetRow);
                        if (f != null && f.equals(a)) {
                            b = c[d];
                            break;
                        }
                    }
                }
            }
            return b;
        };
        SelectionManager.prototype.av = function () {
            var a = this.p();
            var b = new igniteuiReactCore.Dictionary$2(PrimaryKeyValue.$, igniteuiReactCore.Number_$type, 0);
            for (var c = 0; c < a.count; c++) {
                var d = a.item(c);
                var e = -1;
                if (this.f.d(d)) {
                    e = this.f.item(d);
                }
                if (e == -1) {
                    e = this.a.d9.indexOfVisibleItemByKey(this.a.i(), d, this.a.ky(), this.a.k2());
                }
                if (this.a.ag.contains(d)) {
                    var f = this.s(d);
                    if (f >= 0) {
                        var g = this.a.d9.getRowKey(this.a.i(), f);
                        if (!b.containsKey(g)) {
                            b.addItem(g, f);
                        }
                        if (!this.m(g)) {
                            this.ak(g, f, true);
                        }
                    }
                }
                if (!b.containsKey(d)) {
                    b.addItem(d, e);
                }
                if (!this.m(d)) {
                    this.ak(d, e, true);
                }
            }
            var h = this.f.o;
            var i = this.f.p;
            var j = new igniteuiReactCore.List$1(PrimaryKeyValue.$, 0);
            var k = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var l = 0; l < h.count; l++) {
                if (i._inner[l]) {
                    continue;
                }
                var m = h._inner[l];
                if (!b.containsKey(m)) {
                    j.add(m);
                    k.add(this.f.q._inner[l]);
                }
            }
            for (var n = 0; n < k.count; n++) {
                this.ar(j._inner[n], k._inner[n], false);
            }
            for (var o = 0; o < this.a.ad.ae.count; o++) {
                var p = this.a.d9.getItemKey(this.a.i(), this.a.ad.ae._inner[o]);
                if (p != null && !b.containsKey(p)) {
                    var q = -1;
                    if (this.f.d(p)) {
                        q = this.f.item(p);
                    }
                    if (q == -1) {
                        q = this.a.d9.fastGetItemIndexForKey(this.a.i(), p, this.a.ky(), this.a.k2());
                    }
                    this.ar(p, q, false);
                }
            }
        };
        SelectionManager.prototype.au = function () {
            var a = this.a.dm.am;
            var b = new igniteuiReactCore.Dictionary$2(PrimaryKeyValue.$, igniteuiReactCore.IList$1_$type.specialize(igniteuiReactCore.Number_$type), 0);
            var _loop_1 = function (c) {
                var d = a.item(c).primaryKey;
                if (d == null) {
                    return "continue";
                }
                if (a.item(c).b == null) {
                    return "continue";
                }
                var e = a.item(c).b.g2;
                var f = -1;
                if (this_1.k(d, e)) {
                    f = this_1.e.item(d).item(e);
                }
                if (f == -1) {
                    var g = this_1.a.ky();
                    var h = this_1.a.k2();
                    if (g != -1 && h != -1) {
                        f = this_1.a.d9.indexOfVisibleItemByKey(this_1.a.i(), d, g, h);
                    }
                }
                if (this_1.a.ag.contains(d)) {
                    var i = this_1.s(d);
                    if (i >= 0) {
                        var j = this_1.a.d9.getRowKey(this_1.a.i(), i);
                        if (!b.containsKey(j)) {
                            b.addItem(j, ((function () {
                                var $ret = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
                                $ret.add(e);
                                return $ret;
                            })()));
                        }
                        else if (!b.item(j).contains(e)) {
                            b.item(j).add(e);
                        }
                        if (!this_1.k(j, e)) {
                            this_1.ah(j, i, e);
                        }
                    }
                }
                if (!b.containsKey(d)) {
                    b.addItem(d, ((function () {
                        var $ret = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
                        $ret.add(e);
                        return $ret;
                    })()));
                }
                else if (!b.item(d).contains(e)) {
                    b.item(d).add(e);
                }
                if (!this_1.k(d, e)) {
                    this_1.ah(d, f, e);
                }
            };
            var this_1 = this;
            for (var c = 0; c < a.count; c++) {
                _loop_1(c);
            }
            var k = this.e.o;
            var l = this.e.p;
            var m = new igniteuiReactCore.List$1(PrimaryKeyValue.$, 0);
            var n = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            var o = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var p = 0; p < k.count; p++) {
                if (l._inner[p]) {
                    continue;
                }
                var q = k._inner[p];
                for (var r = 0; r < this.e.item(q).o.count; r++) {
                    if (this.e.item(q).p._inner[r]) {
                        continue;
                    }
                    var s = this.e.item(q).o._inner[r];
                    var t = this.e.item(q).q._inner[r];
                    if (!b.containsKey(q) || !b.item(q).contains(s)) {
                        m.add(q);
                        n.add(s);
                        o.add(t);
                    }
                }
            }
            for (var u = 0; u < m.count; u++) {
                this.ao(m._inner[u], o._inner[u], n._inner[u]);
            }
        };
        SelectionManager.prototype.at = function () {
            var a = this.a.dj.ae;
            this.r.clear();
            this.r = this.q;
            this.q = new igniteuiReactCore.List$1(CellRange.$, 0);
            for (var b = 0; b < a.count; b++) {
                this.q.add(a.item(b).a());
            }
            var c = this.a.d9.getStickyRows();
            if (c != null) {
                for (var d = 0; d < c.length; d++) {
                    var e = this.a.d9.getRowType(c[d]);
                    if (e == 3) {
                        for (var f = 0; f < this.a.model.bx.count; f++) {
                            var g = this.a.model.bx._inner[f];
                            var h = this.a.model.br._inner[g].n;
                            this.u(c[d], h);
                        }
                    }
                }
            }
            var i = this.a.ky();
            var j = this.a.k2();
            for (var k = i; k <= j; k++) {
                for (var l = 0; l < this.a.model.bx.count; l++) {
                    var m = this.a.model.bx._inner[l];
                    var n = this.a.model.br._inner[m].n;
                    this.u(k, n);
                }
            }
        };
        SelectionManager.prototype.u = function (a, b) {
            var c = false;
            var d = false;
            for (var e = 0; e < this.r.count; e++) {
                var f = this.r._inner[e];
                if (f.b(a, b)) {
                    c = true;
                }
            }
            for (var g = 0; g < this.q.count; g++) {
                var h = this.q._inner[g];
                if (h.b(a, b)) {
                    d = true;
                }
            }
            if (c && !d) {
                var i = this.a.e6.j(b, this.a.model);
                this.a.ck.ac(this.a, a, i);
            }
            else if (!c && d) {
                var j = this.a.e6.j(b, this.a.model);
                this.a.ck.ab(this.a, a, j);
            }
        };
        SelectionManager.prototype.p = function () {
            return this.a.ah.ae;
        };
        SelectionManager.prototype.z = function () {
            this.y();
            this.x();
        };
        SelectionManager.prototype.ad = function (a) {
            for (var b = 0; b < this.f.o.count; b++) {
                if (this.f.p._inner[b]) {
                    continue;
                }
                var c = this.f.o._inner[b];
                var d = this.f.q._inner[b];
                if (d >= a) {
                    this.f.item(c, d + 1);
                }
            }
            for (var e = 0; e < this.e.o.count; e++) {
                if (this.e.p._inner[e]) {
                    continue;
                }
                var f = this.e.o._inner[e];
                var g = this.e.q._inner[e];
                for (var h = 0; h < g.o.count; h++) {
                    if (this.e.item(f).p._inner[h]) {
                        continue;
                    }
                    var i = g.o._inner[h];
                    var j = this.e.item(f).item(i);
                    if (j >= a) {
                        this.e.item(f).item(i, j + 1);
                    }
                }
            }
        };
        SelectionManager.prototype.ae = function (a) {
            var b = new igniteuiReactCore.List$1(PrimaryKeyValue.$, 0);
            var c = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var d = 0; d < this.f.o.count; d++) {
                if (this.f.p._inner[d]) {
                    continue;
                }
                var e = this.f.o._inner[d];
                var f = this.f.q._inner[d];
                if (f == a) {
                    b.add(e);
                    c.add(f);
                }
                if (f > a) {
                    this.f.item(e, f - 1);
                }
            }
            for (var g = 0; g < b.count; g++) {
                this.ar(b._inner[g], c._inner[g], true);
            }
            for (var h = 0; h < this.e.o.count; h++) {
                if (this.e.p._inner[h]) {
                    continue;
                }
                var i = this.e.o._inner[h];
                var j = this.e.q._inner[h];
                for (var k = 0; k < j.o.count; k++) {
                    if (this.e.item(i).p._inner[k]) {
                        continue;
                    }
                    var l = j.o._inner[k];
                    var m = this.e.item(i).item(l);
                    if (m == a) {
                        this.e.item(i).item(l, -1);
                    }
                    if (m > a) {
                        this.e.item(i).item(l, m - 1);
                    }
                }
            }
        };
        SelectionManager.prototype.ac = function (a, b) {
            var c = this.a.ky();
            var d = this.a.k2();
            var e = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var f = 0; f < this.q.count; f++) {
                var g = this.q._inner[f];
                if (g.l > d || g.j < c) {
                    continue;
                }
                if (a < g.k) {
                    this.t(e, g.k - 1);
                }
                if (a <= g.i) {
                    this.t(e, g.i);
                }
            }
            for (var h = 0; h < e.count; h++) {
                if (e._inner[h] >= 0 && e._inner[h] <= this.a.actualColumns.count) {
                    this.a.ck.af(this.a, c, d, e._inner[h], true);
                }
            }
        };
        SelectionManager.prototype.aa = function (a, b) {
            var c = this.a.ky();
            var d = this.a.k2();
            var e = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var f = 0; f < this.q.count; f++) {
                var g = this.q._inner[f];
                if (g.l > d || g.j < c) {
                    continue;
                }
                if (a < g.k) {
                    this.t(e, g.k);
                }
                if (a <= g.i) {
                    this.t(e, g.i + 1);
                }
            }
            for (var h = 0; h < e.count; h++) {
                if (e._inner[h] >= 0 && e._inner[h] <= this.a.actualColumns.count) {
                    this.a.ck.af(this.a, c, d, e._inner[h], true);
                }
            }
        };
        SelectionManager.prototype.ab = function (a, b, c) {
            var d = this.a.ky();
            var e = this.a.k2();
            var f = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var g = 0; g < this.q.count; g++) {
                var h = this.q._inner[g];
                if (h.l > e || h.j < d) {
                    continue;
                }
                if (h.c(a) && !h.c(b)) {
                    this.t(f, b);
                    if (b > h.i) {
                        this.t(f, h.i);
                    }
                    else if (b < h.k) {
                        this.t(f, h.k);
                    }
                }
                else if (!h.c(a) && h.c(b)) {
                    this.t(f, b);
                    if (a > h.i) {
                        this.t(f, h.i + 1);
                    }
                    else if (a < h.k) {
                        this.t(f, h.k - 1);
                    }
                }
                else if (!h.c(a) && !h.c(b)) {
                    if (a < h.k && b > h.i) {
                        this.t(f, h.k - 1);
                        this.t(f, h.i);
                    }
                    if (a > h.i && b < h.k) {
                        this.t(f, h.k);
                        this.t(f, h.i + 1);
                    }
                }
            }
            for (var i = 0; i < f.count; i++) {
                this.a.ck.af(this.a, d, e, f._inner[i], true);
            }
        };
        SelectionManager.prototype.t = function (a, b) {
            if (b < 0 || b >= this.a.actualColumns.count) {
                return;
            }
            if (!a.contains(b)) {
                a.add(b);
            }
        };
        SelectionManager.prototype.af = function (a) {
            var b = new igniteuiReactCore.List$1(PrimaryKeyValue.$, 0);
            var c = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var d = 0; d < this.f.o.count; d++) {
                if (this.f.p._inner[d]) {
                    continue;
                }
                var e = this.f.o._inner[d];
                var f = this.f.q._inner[d];
                if (f == a) {
                    b.add(e);
                    c.add(f);
                }
            }
            for (var g = 0; g < b.count; g++) {
                this.ar(b._inner[g], c._inner[g], true);
            }
        };
        SelectionManager.prototype.w = function () {
            this.i = true;
        };
        SelectionManager.prototype.v = function () {
            this.c.u();
            this.d.u();
            for (var a = 0; a < this.a.actualColumns.count; a++) {
                this.c.s(this.a.actualColumns._inner[a].g2, a);
                this.d.s(a, this.a.actualColumns._inner[a].g2);
            }
        };
        SelectionManager.prototype.y = function () {
            var a = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            var b = new igniteuiReactCore.HashSet$1(igniteuiReactCore.Number_$type, 0);
            for (var c = 0; c < this.f.o.count; c++) {
                if (this.f.p._inner[c]) {
                    continue;
                }
                var d = this.f.o._inner[c];
                a.add(this.f.item(d));
                var e = this.a.d9.indexOfVisibleItemByKey(this.a.i(), d, this.a.ky(), this.a.k2());
                b.add_1(e);
                this.f.item(d, -1);
            }
            for (var f = 0; f < a.count; f++) {
                if (!b.contains(a._inner[f])) {
                    this.a.ck.ap(this.a, a._inner[f]);
                }
            }
        };
        SelectionManager.prototype.x = function () {
            var a = new igniteuiReactCore.FastIterationDictionary$2(PrimaryKeyValue.$, igniteuiReactCore.Number_$type, 0);
            var b = new igniteuiReactCore.FastIterationDictionary$2(PrimaryKeyValue.$, igniteuiReactCore.Number_$type, 0);
            var c = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            for (var d = 0; d < this.e.q.count; d++) {
                var e = this.e.o._inner[d];
                var f = this.a.d9.indexOfVisibleItemByKey(this.a.i(), e, this.a.ky(), this.a.k2());
                var g = this.e.q._inner[d];
                for (var h = 0; h < g.q.count; h++) {
                    var i = g.o._inner[h];
                    if (!a.d(e)) {
                        a.s(e, this.e.item(e).item(i));
                        b.s(e, f);
                    }
                    c.add(i);
                    this.e.item(e).item(i, -1);
                }
            }
            for (var j = 0; j < a.q.count; j++) {
                var k = a.o._inner[j];
                var l = a.q._inner[j];
                var m = b.q._inner[j];
                if (l > -1 && l < this.a.d9.getRowCount()) {
                    var n = this.a.actualDataSource.getItemAtIndex(l);
                    var o = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, n);
                    if (o != null && o.rowType == 3) {
                        var p = this.a.d9.getItemKey(this.a.i(), o.targetRow);
                        if (p.equals(k)) {
                            continue;
                        }
                    }
                }
                if (!b.q.contains(l)) {
                    this.a.ck.ae(this.a, l, this.c.item(c._inner[j]), c._inner[j]);
                }
            }
        };
        SelectionManager.$t = igniteuiReactCore.markType(SelectionManager, 'SelectionManager');
        return SelectionManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var SortManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SortManager, _super);
        function SortManager(a) {
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.e = false;
            _this.c = a;
            return _this;
        }
        SortManager.prototype.d = function (a) {
            if (null == a) {
                return false;
            }
            var b = a.hy;
            var c = this.c.b4;
            var d = this.a(b, c);
            var e = null == d ? 0 : d.c == 0 ? 1 : 2;
            var f = (this.c.d0 == 3 || this.c.d0 == 2);
            var g = this.b(e, f);
            this.f(a, g);
            return true;
        };
        SortManager.prototype.f = function (a, b) {
            if (null == a) {
                return false;
            }
            var c = a.hy;
            var d = this.c.b4;
            var e = this.a(c, d);
            return this.g(c, b, e);
        };
        SortManager.prototype.g = function (a, b, c) {
            if (this.e) {
                return false;
            }
            this.e = true;
            try {
                var d = this.c.b4;
                var e = d.j(c);
                var f = (this.c.d0 == 1 || this.c.d0 == 3);
                if (null != c) {
                    d.h(c);
                }
                if (false == f) {
                    d.m();
                }
                switch (b) {
                    case 0: break;
                    case 2:
                    case 1:
                        {
                            var g = b == 1 ? 0 : 1;
                            var h = new ColumnSortDescription(2, a, g);
                            if (f && e >= 0) {
                                d.i.insert(e, h);
                            }
                            else {
                                d.g(h);
                            }
                        }
                        break;
                }
                return true;
            }
            finally {
                this.e = false;
            }
        };
        SortManager.prototype.h = function () {
            var a = this.c.b4;
            var b = a.i.count;
            if (b > 1) {
                for (var c = b - 1; c > 0; c--) {
                    a.i.removeAt(c);
                }
            }
        };
        SortManager.prototype.a = function (a, b) {
            if (null == b || b.i.count < 1) {
                return null;
            }
            for (var c = 0; c < b.i.count; c++) {
                var d = b.i.item(c);
                if (d.f == a) {
                    return d;
                }
            }
            return null;
        };
        SortManager.prototype.b = function (a, b) {
            if (b) {
                switch (a) {
                    case 0: return 1;
                    case 1: return 2;
                    case 2: return 0;
                }
            }
            else {
                switch (a) {
                    case 0:
                    case 2: return 1;
                    default: return 2;
                }
            }
            return 0;
        };
        SortManager.$t = igniteuiReactCore.markType(SortManager, 'SortManager');
        return SortManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var IDataAdapter_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IDataAdapter');
    /**
     * @hidden
     */
    var DataAdapter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataAdapter, _super);
        function DataAdapter(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.h = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Base.$, igniteuiReactCore.Number_$type, 0);
            _this.i = new igniteuiReactCore.List$1(PrimaryKeyValue.$, 0);
            _this.g = null;
            _this.b = null;
            _this.d = null;
            _this.propertyChanged = null;
            _this.j = 0;
            _this.k = 0;
            _this.g = a;
            return _this;
        }
        Object.defineProperty(DataAdapter.prototype, "c", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (this.b != b) {
                    this.n("DataSource", b, this.b);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAdapter.prototype, "e", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                if (this.d != b) {
                    this.n("EditableDataSource", b, this.d);
                }
            },
            enumerable: true,
            configurable: true
        });
        DataAdapter.prototype.setDataSource = function (a) {
            this.c = a;
            this.e = igniteuiReactCore.typeCast(igniteuiReactCore.IEditableDataSource_$type, this.c);
        };
        DataAdapter.prototype.getItemForKey = function (a) {
            var b = this.indexOfKey(a);
            if (b == -1) {
                if (a.value != null && a.value.length == 1) {
                    return a.value[0];
                }
                return null;
            }
            return this.c.getItemAtIndex(b);
        };
        DataAdapter.prototype.getItemKey = function (a, item_) {
            var b = (item_ != null && item_.$$isSpecialRow !== undefined);
            if (a == null) {
                if (item_ == null) {
                    return null;
                }
                return PrimaryKeyValue.createIdentityKey(item_);
            }
            if (b) {
                var c = item_;
                if (this.c.isSectionContentVisible || !this.c.isSectionHeaderNormalRow || c.rowType != 1) {
                    return PrimaryKeyValue.createIdentityKey(item_);
                }
                else if (c.rowType == 1) {
                    var d = c.getSectionKeys();
                    for (var e = 0; e < d.length; e++) {
                        for (var f = 0; f < a.length; f++) {
                            if (a[f] != d[e]) {
                                return PrimaryKeyValue.createIdentityKey(item_);
                            }
                        }
                    }
                }
            }
            var g = new Array(a.length);
            for (var h = 0; h < a.length; h++) {
                g[h] = this.c.getItemProperty(item_, a[h]);
            }
            return new PrimaryKeyValue(a, g);
        };
        DataAdapter.prototype.getRowKey = function (a, b) {
            if (this.c == null) {
                return null;
            }
            if (b < 0 || b > this.c.actualCount - 1) {
                return null;
            }
            var c = this.c.getItemAtIndex(b);
            if (c == null) {
                return null;
            }
            return this.getItemKey(a, c);
        };
        DataAdapter.prototype.n = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.o(a, b, c);
        };
        DataAdapter.prototype.o = function (a, b, c) {
            switch (a) {
                case "DataSource":
                    this.a = null;
                    this.h.clear();
                    if (this.c != null) {
                        if (this.a == null) {
                            this.a = new Array(1);
                            this.a[0] = new igniteuiReactCore.DefaultSectionInformation(0, this.b.actualCount, null, null, null);
                        }
                        for (var d = 0; d < this.a.length; d++) {
                            if (this.a[d].groupKeyValues != null) {
                                this.h.addItem(this.a[d].groupKeyValues, d);
                            }
                        }
                        for (var e = 0; e < this.i.count; e++) {
                            this.b.pinRow(this.i._inner[e].value);
                        }
                        this.i.clear();
                    }
                    break;
            }
        };
        DataAdapter.prototype.getRowCount = function () {
            return this.l(0);
        };
        DataAdapter.prototype.m = function (a, b) {
            if (this.b == null) {
                return -1;
            }
            if (this.b.actualPrimaryKey != null && this.b.isKeyIndexLookupSupported) {
                return this.indexOfKey(a);
            }
            if (this.b.isItemIndexLookupSupported) {
                return this.b.indexOfItem(b);
            }
            return -1;
        };
        DataAdapter.prototype.indexOfKey = function (a) {
            if (this.b == null) {
                return -1;
            }
            if (this.b.actualPrimaryKey != null && this.b.isKeyIndexLookupSupported) {
                return this.b.indexOfKey(a.value);
            }
            return -1;
        };
        DataAdapter.prototype.fastGetItemIndexForKey = function (a, b, c, d) {
            var e = this.indexOfVisibleItemByKey(a, b, c, d);
            if (e >= 0) {
                return e;
            }
            return this.indexOfKey(b);
        };
        DataAdapter.prototype.indexOfVisibleItemByKey = function (a, b, c, d) {
            if (this.b == null) {
                return -1;
            }
            for (var e = c; e <= d; e++) {
                if (e > this.b.actualCount - 1) {
                    break;
                }
                var f = this.b.getItemAtIndex(e);
                if (f == null) {
                    continue;
                }
                var g = this.getItemKey(a, f);
                if (g == null) {
                    continue;
                }
                if (g.value != null && g.value.length == 1 && g.value[0] != null && igniteuiReactCore.getInstanceType(g.value[0]) == igniteuiReactCore.DataSourceSpecialRow.$ && b.value != null && b.value.length == 1 && b.value[0] != null && igniteuiReactCore.getInstanceType(b.value[0]) == igniteuiReactCore.DataSourceSpecialRow.$) {
                    var h = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, g.value[0]);
                    var i = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, b.value[0]);
                    if (h.rowType == i.rowType && h.targetRow == i.targetRow) {
                        return e;
                    }
                }
                if (g.equals(b)) {
                    return e;
                }
            }
            return -1;
        };
        DataAdapter.prototype.l = function (a) {
            if (this.b == null) {
                return 0;
            }
            return this.b.actualCount;
        };
        DataAdapter.prototype.getSectionCount = function () {
            if (this.a == null) {
                return 0;
            }
            return this.a.length;
        };
        DataAdapter.prototype.f = function (a) {
            return a;
        };
        DataAdapter.prototype.getDataRow = function (a) {
            if (a == null) {
                return -1;
            }
            a = this.f(a);
            if (this.a == null || this.a.length < 1) {
                if (this.b.actualCount > a.w) {
                    return a.w;
                }
            }
            else {
                var b = this.a[a.x].startIndex;
                var c = b + a.w;
                if (c < 0 || c >= this.b.actualCount) {
                    return -1;
                }
                return c;
            }
            return -1;
        };
        DataAdapter.prototype.resolveValue = function (a, b) {
            if (a < 0 || a > this.b.actualCount - 1) {
                return null;
            }
            if (b != null && b.length == 1 && b.charAt(0) == '.') {
                return this.b.getItemAtIndex(a);
            }
            return this.b.getItemPropertyAtIndex(a, b);
        };
        DataAdapter.prototype.resolveValueForPath = function (a, b) {
            var c = null;
            if (b.az == -400) {
                var d = this.b.getRowType(b.w);
                var e = this.b.getMainValuePath(d);
                c = e;
            }
            else {
                var f = a.a0(b);
                c = f.hy;
            }
            return this.resolveValue(b.w, c);
        };
        DataAdapter.prototype.resolveRow = function (a) {
            if (a < 0 || a > this.b.actualCount - 1) {
                return null;
            }
            return this.b.getItemAtIndex(a);
        };
        DataAdapter.prototype.resolveValueForDataRow = function (a) {
            if (a < 0 || a > this.b.actualCount - 1) {
                return null;
            }
            return this.b.getItemAtIndex(a);
        };
        DataAdapter.prototype.resolveValueForRow = function (a) {
            a = this.f(a);
            if (a == null) {
                return null;
            }
            var b = this.getDataRow(a);
            if (b < 0 || b > this.b.actualCount - 1) {
                return null;
            }
            return this.b.getItemAtIndex(b);
        };
        DataAdapter.prototype.getSectionForRow = function (a) {
            if (this.a == null || this.a.length < 2) {
                return 0;
            }
            for (var b = 0; b < this.a.length; b++) {
                if (b < this.a.length - 1) {
                    if (a > this.a[b + 1].startIndex) {
                        continue;
                    }
                }
                return b;
            }
            return this.a.length - 1;
        };
        DataAdapter.prototype.getRowPathForRow = function (a) {
            var b = this.getSectionForRow(a);
            return new RowPath(b, a - this.a[b].startIndex);
        };
        Object.defineProperty(DataAdapter.prototype, "firstVisibleIndexRequested", {
            get: function () {
                return this.j = 0;
            },
            set: function (a) {
                this.j = a;
                if (this.b != null) {
                    this.b.firstVisibleIndexRequested = this.j;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataAdapter.prototype, "lastVisibleIndexRequested", {
            get: function () {
                return this.k = 0;
            },
            set: function (a) {
                this.k = a;
                if (this.b != null) {
                    this.b.lastVisibleIndexRequested = this.k;
                }
            },
            enumerable: true,
            configurable: true
        });
        DataAdapter.prototype.isPlaceholderValue = function (a) {
            if (this.b == null) {
                return false;
            }
            var b = this.getDataRow(a);
            if (b < 0 || b > this.b.actualCount - 1) {
                return false;
            }
            return this.b.isPlaceholderItem(b);
        };
        DataAdapter.prototype.isPlaceholderItem = function (a) {
            if (this.b == null) {
                return false;
            }
            return this.b.isPlaceholderItem(a);
        };
        DataAdapter.prototype.getRowType = function (a) {
            if (this.b == null) {
                return 0;
            }
            return this.b.getRowType(a);
        };
        DataAdapter.prototype.getStickyRows = function () {
            if (this.b == null) {
                return null;
            }
            return this.b.getStickyRows();
        };
        DataAdapter.prototype.getStickyRowsInRange = function (a, b) {
            if (this.b == null) {
                return null;
            }
            return this.b.getStickyRowsInRange(a, b);
        };
        DataAdapter.prototype.getStickRowPriority = function (a) {
            if (this.b == null) {
                return -1;
            }
            return this.b.getStickyRowPriority(a);
        };
        DataAdapter.prototype.isExclusivelySticky = function (a) {
            if (this.b == null) {
                return false;
            }
            return this.b.isExclusivelySticky(a);
        };
        DataAdapter.prototype.isRowSpanning = function (a) {
            if (this.b == null) {
                return false;
            }
            return this.b.isRowSpanning(a);
        };
        DataAdapter.prototype.pinRow = function (a) {
            if (this.b == null) {
                this.i.add(a);
                return;
            }
            this.b.pinRow(a.value);
        };
        DataAdapter.prototype.unpinRow = function (a) {
            if (this.b == null) {
                for (var b = 0; b < this.i.count; b++) {
                    if (this.i._inner[b].equals(a)) {
                        this.i.remove(this.i._inner[b]);
                        break;
                    }
                }
                return;
            }
            this.b.unpinRow(a.value);
        };
        DataAdapter.prototype.clearPinnedRows = function () {
            if (this.b == null) {
                return;
            }
            this.b.clearPinnedRows();
        };
        DataAdapter.prototype.isRowPinned = function (a) {
            if (this.b == null) {
                return false;
            }
            return this.b.isRowPinned(a);
        };
        DataAdapter.prototype.getRowIndent = function (a) {
            if (this.b == null) {
                return 0;
            }
            return this.b.getRowLevel(a);
        };
        DataAdapter.prototype.getRootSummaryRowCount = function () {
            if (this.b == null) {
                return 0;
            }
            return this.b.getRootSummaryRowCount();
        };
        DataAdapter.prototype.isEditedValue = function (a, b) {
            if (this.e == null || a == null) {
                return false;
            }
            var c = this.getItemKey(this.b.actualPrimaryKey, a);
            return this.e.hasEdit(c.value, b) || this.e.hasAdd(c.value);
        };
        DataAdapter.prototype.isDeletedRow = function (a) {
            if (this.e == null || a == null) {
                return false;
            }
            var b = this.getItemKey(this.b.actualPrimaryKey, a);
            return this.e.hasDelete(b.value);
        };
        DataAdapter.prototype.getPendingEditID = function (a, b) {
            if (this.e == null || a == null) {
                return -1;
            }
            var c = this.getItemKey(this.b.actualPrimaryKey, a);
            return this.e.getTransactionID(c.value, b);
        };
        DataAdapter.prototype.getError = function (a) {
            if (this.e == null || a == -1) {
                return null;
            }
            return this.e.getTransactionErrorByID(a);
        };
        DataAdapter.$t = igniteuiReactCore.markType(DataAdapter, 'DataAdapter', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type, IDataAdapter_$type]);
        return DataAdapter;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnMovingSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnMovingSeparator, _super);
        function ColumnMovingSeparator() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.el = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(2));
            return _this;
        }
        ColumnMovingSeparator.prototype.cm = function (a, b, c) {
            return "columnMovingSeparator";
        };
        ColumnMovingSeparator.prototype.l = function (a) {
            return new VerticalSeparatorCellModel();
        };
        ColumnMovingSeparator.prototype.eb = function () {
            return GridStyleRepository.ay;
        };
        Object.defineProperty(ColumnMovingSeparator.prototype, "em", {
            get: function () {
                return this.el;
            },
            set: function (a) {
                var b = this.el;
                this.el = a;
                if (this.el != b) {
                    this.c2("SeparatorWidth", 6, b, this.el);
                }
            },
            enumerable: true,
            configurable: true
        });
        ColumnMovingSeparator.prototype.cz = function (a, b) {
            this.c8();
        };
        ColumnMovingSeparator.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.uv != null) {
                    this.d0 = this.grid.uv;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        ColumnMovingSeparator.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "ColumnMovingSeparatorBackground":
                    this.c8();
                    break;
            }
        };
        ColumnMovingSeparator.$t = igniteuiReactCore.markType(ColumnMovingSeparator, 'ColumnMovingSeparator', DefinitionBase.$);
        return ColumnMovingSeparator;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var ComboBoxColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ComboBoxColumn, _super);
        function ComboBoxColumn() {
            var _this = _super.call(this) || this;
            _this.jp = null;
            _this.fc = 1;
            return _this;
        }
        Object.defineProperty(ComboBoxColumn.prototype, "jq", {
            get: function () {
                return this.jp;
            },
            set: function (a) {
                var b = this.jp;
                this.jp = a;
                if (this.jp != b) {
                    this.c2("ActualDataSource", 10, b, this.jp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBoxColumn.prototype, "jr", {
            get: function () {
                return this.g4;
            },
            set: function (a) {
                this.g4 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBoxColumn.prototype, "jv", {
            get: function () {
                return this.hu;
            },
            set: function (a) {
                this.hu = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ComboBoxColumn.prototype, "jo", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                this.em = a;
            },
            enumerable: true,
            configurable: true
        });
        ComboBoxColumn.prototype.l = function (a) {
            return new TextCellModel();
        };
        ComboBoxColumn.prototype.cm = function (a, b, c) {
            return "combobox";
        };
        ComboBoxColumn.prototype.cz = function (a, b) {
            _super.prototype.cz.call(this, a, b);
            if (this.jq == null && this.jr != null) {
                if (b != null) {
                    this.jq = b.externalGrid.createLocalDataSource(this.jr);
                }
            }
        };
        ComboBoxColumn.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            e.ks = this.ju(c);
        };
        ComboBoxColumn.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
        };
        ComboBoxColumn.prototype.c3 = function (a, b, c, d) {
            _super.prototype.c3.call(this, a, b, c, d);
            switch (a) {
                case "EditorItemsSourceInternal":
                    if (igniteuiReactCore.typeCast(igniteuiReactCore.IDataSource_$type, this.jr) !== null) {
                        this.jq = this.jr;
                    }
                    else if (this.grid != null) {
                        this.jq = this.grid.externalGrid.createLocalDataSource(this.jr);
                    }
                    break;
                case "ActualDataSource":
                    if (c != null) {
                        var e = c;
                        e.schemaChanged = igniteuiReactCore.delegateRemove(e.schemaChanged, igniteuiReactCore.runOn(this, this.jw));
                    }
                    if (this.jq != null) {
                        var f = this.jq;
                        f.schemaChanged = igniteuiReactCore.delegateCombine(f.schemaChanged, igniteuiReactCore.runOn(this, this.jw));
                    }
                    this.jx();
                    break;
                case "EditorTextFieldInternal":
                case "EditorValueFieldInternal":
                    this.jx();
                    break;
            }
        };
        ComboBoxColumn.prototype.jw = function (a, b) {
            this.jx();
        };
        ComboBoxColumn.prototype.jx = function () {
            if (this.jq != null) {
                if (this.jo != null) {
                    this.jq.primaryKey = this.jo;
                }
                else if (this.jv != null) {
                    this.jq.primaryKey = [this.jv];
                }
                else {
                    var a = this.jq.actualSchema;
                    if (a != null && a.propertyNames.length > 0) {
                        this.jq.primaryKey = [a.propertyNames[0]];
                    }
                }
            }
        };
        ComboBoxColumn.prototype.jt = function (a) {
            if (typeof a === 'string') {
                return a;
            }
            return null;
        };
        ComboBoxColumn.prototype.ju = function (a) {
            var b = null;
            if (this.jq != null && this.jv != null) {
                var c = this.jq.indexOfKey([a]);
                if (c > -1) {
                    var d = this.jq.getItemPropertyAtIndex(c, this.jv);
                    if (d != null) {
                        b = this.jt(d);
                    }
                }
            }
            if (b == null && a != null) {
                b = this.jt(a);
            }
            return b;
        };
        ComboBoxColumn.$t = igniteuiReactCore.markType(ComboBoxColumn, 'ComboBoxColumn', Column.$);
        return ComboBoxColumn;
    }(Column));
    /**
     * @hidden
     */
    var DateTimeColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DateTimeColumn, _super);
        function DateTimeColumn() {
            var _this = _super.call(this) || this;
            _this.jr = new DateTimeColumnValueFormatter();
            _this.js = 0;
            _this.jz = null;
            _this.jo = null;
            _this.jw = null;
            return _this;
        }
        Object.defineProperty(DateTimeColumn.prototype, "jt", {
            get: function () {
                return this.js;
            },
            set: function (a) {
                var b = this.js;
                this.js = a;
                if (this.js != b) {
                    this.c2("DateTimeFormat", 4, igniteuiReactCore.enumGetBox(DateTimeFormats_$type, b), igniteuiReactCore.enumGetBox(DateTimeFormats_$type, this.js));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeColumn.prototype, "j4", {
            get: function () {
                return this.jz;
            },
            set: function (a) {
                var b = this.jz;
                this.jz = a;
                if (this.jz != b) {
                    this.c2("FormatString", 8, b, this.jz);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeColumn.prototype, "jq", {
            get: function () {
                return this.jo;
            },
            set: function (a) {
                var b = this.jo;
                this.jo = a;
                if (this.jo != b) {
                    this.c2("FormatSpecifiers", 9, b, this.jo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeColumn.prototype, "jy", {
            get: function () {
                return this.jw;
            },
            set: function (a) {
                var b = this.jw;
                this.jw = a;
                if (this.jw != b) {
                    this.c2("FormatOverride", 9, b, this.jw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeColumn.prototype, "ju", {
            get: function () {
                return this.fc;
            },
            set: function (a) {
                this.fc = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeColumn.prototype, "jx", {
            get: function () {
                return this.g4;
            },
            set: function (a) {
                this.g4 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeColumn.prototype, "j1", {
            get: function () {
                return this.hu;
            },
            set: function (a) {
                this.hu = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DateTimeColumn.prototype, "jp", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                this.em = a;
            },
            enumerable: true,
            configurable: true
        });
        DateTimeColumn.prototype.c3 = function (a, b, c, d) {
            _super.prototype.c3.call(this, a, b, c, d);
            switch (a) {
                case "DateTimeFormat":
                    this.jr.k();
                    break;
            }
        };
        DateTimeColumn.prototype.l = function (a) {
            return new DateTimeCellModel();
        };
        DateTimeColumn.prototype.cm = function (a, b, c) {
            return "datetime";
        };
        DateTimeColumn.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            e.k0 = this.jv(c);
            e.ku = this.jr;
            this.jr.j(e);
        };
        DateTimeColumn.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            var e = a;
            e.kw = this.jt;
            e.lh = this.j4;
            e.kr = this.jq;
            e.la = this.jy;
        };
        DateTimeColumn.prototype.jv = function (a) {
            if (a == null) {
                return igniteuiReactCore.dateMinValue();
            }
            if (igniteuiReactCore.typeCast(igniteuiReactCore.Date_$type, a) !== null) {
                return a;
            }
            return igniteuiReactCore.dateMinValue();
        };
        DateTimeColumn.$t = igniteuiReactCore.markType(DateTimeColumn, 'DateTimeColumn', Column.$);
        return DateTimeColumn;
    }(Column));
    /**
     * @hidden
     */
    var IExternalDefinitionBase_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IExternalDefinitionBase');
    /**
     * @hidden
     */
    var DataBindingEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataBindingEventArgs, _super);
        function DataBindingEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._resolvedValue = null;
            _this._rowObject = null;
            _this._cellInfo = null;
            return _this;
        }
        Object.defineProperty(DataBindingEventArgs.prototype, "resolvedValue", {
            get: function () {
                return this._resolvedValue;
            },
            set: function (a) {
                this._resolvedValue = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataBindingEventArgs.prototype, "rowObject", {
            get: function () {
                return this._rowObject;
            },
            set: function (a) {
                this._rowObject = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataBindingEventArgs.prototype, "cellInfo", {
            get: function () {
                return this._cellInfo;
            },
            set: function (a) {
                this._cellInfo = a;
            },
            enumerable: true,
            configurable: true
        });
        DataBindingEventArgs.$t = igniteuiReactCore.markType(DataBindingEventArgs, 'DataBindingEventArgs', igniteuiReactCore.EventArgs.$);
        return DataBindingEventArgs;
    }(igniteuiReactCore.EventArgs));
    /**
     * @hidden
     */
    var Header = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Header, _super);
        function Header() {
            var _this = _super.call(this) || this;
            _this.e8 = null;
            _this.e7 = null;
            _this.em = 3;
            _this.el = 3;
            _this.eq = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(12));
            _this.es = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.er = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(12));
            _this.ep = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.e9 = _this.fa();
            return _this;
        }
        Header.prototype.eg = function () {
            return GridStyleRepository.bj;
        };
        Header.prototype.eb = function () {
            return GridStyleRepository.bh;
        };
        Header.prototype.fa = function () {
            return GridStyleRepository.bl;
        };
        Header.prototype.af = function () {
            return GridStyleRepository.h;
        };
        Header.prototype.cz = function (a, b) {
            this.c8();
            this.df();
            this.dg();
            this.e5();
            this.e6();
        };
        Header.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.u0 != null) {
                    this.d0 = this.grid.u0;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        Header.prototype.df = function () {
            if (this.ek == null) {
                if (this.grid != null && this.grid.u4 != null) {
                    this.d6 = this.grid.u4;
                    return;
                }
                this.d6 = this.eg();
            }
            else {
                this.d6 = this.ek;
            }
        };
        Header.prototype.dg = function () {
            if (this.textStyle == null) {
                if (this.grid != null && this.grid.fr != null) {
                    this.ad = this.grid.fr;
                    return;
                }
                this.ad = this.af();
            }
            else {
                this.ad = this.textStyle;
            }
        };
        Header.prototype.e5 = function () {
            if (this.fb == null) {
                if (this.grid != null && this.grid.u3 != null) {
                    this.e9 = this.grid.u3;
                    return;
                }
                this.e9 = this.fa();
            }
            else {
                this.e9 = this.fb;
            }
        };
        Header.prototype.e6 = function () {
            if (this.eo == 3) {
                if (this.grid != null) {
                    this.en = this.grid.e2;
                    return;
                }
                this.en = 0;
            }
            else {
                this.en = this.eo;
            }
        };
        Header.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "HeaderBackground":
                    this.c8();
                    break;
                case "HeaderTextColor":
                    this.df();
                    break;
                case "HeaderTextStyle":
                    this.dg();
                    break;
                case "HeaderSortIndicatorColor":
                    this.e5();
                    break;
                case "HeaderSortIndicatorStyle":
                    this.e6();
                    break;
            }
        };
        Object.defineProperty(Header.prototype, "fb", {
            get: function () {
                return this.e8;
            },
            set: function (a) {
                var b = this.e8;
                this.e8 = a;
                if (this.e8 != b) {
                    this.c2("SortIndicatorColor", 10, b, this.e8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Header.prototype, "e9", {
            get: function () {
                return this.e7;
            },
            set: function (a) {
                var b = this.e7;
                this.e7 = a;
                if (this.e7 != b) {
                    this.c2("ActualSortIndicatorColor", 2, b, this.e7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Header.prototype, "eo", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                var b = this.em;
                this.em = a;
                if (this.em != b) {
                    this.c2("SortIndicatorStyle", 11, igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, b), igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, this.em));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Header.prototype, "en", {
            get: function () {
                return this.el;
            },
            set: function (a) {
                var b = this.el;
                this.el = a;
                if (this.el != b) {
                    this.c2("ActualSortIndicatorStyle", 11, igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, b), igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, this.el));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Header.prototype, "eu", {
            get: function () {
                return this.eq;
            },
            set: function (a) {
                var b = this.eq;
                this.eq = a;
                if (this.eq != b) {
                    this.c2("PaddingLeft", 6, b, this.eq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Header.prototype, "ew", {
            get: function () {
                return this.es;
            },
            set: function (a) {
                var b = this.es;
                this.es = a;
                if (this.es != b) {
                    this.c2("PaddingTop", 6, b, this.es);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Header.prototype, "ev", {
            get: function () {
                return this.er;
            },
            set: function (a) {
                var b = this.er;
                this.er = a;
                if (this.er != b) {
                    this.c2("PaddingRight", 6, b, this.er);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Header.prototype, "et", {
            get: function () {
                return this.ep;
            },
            set: function (a) {
                var b = this.ep;
                this.ep = a;
                if (this.ep != b) {
                    this.c2("PaddingBottom", 6, b, this.ep);
                }
            },
            enumerable: true,
            configurable: true
        });
        Header.prototype.ak = function (a) {
            if (_super.prototype.ak.call(this, a)) {
                return true;
            }
            if (igniteuiReactCore.stringStartsWith(a, "Actual")) {
                return false;
            }
            switch (a) {
                case "PaddingBottom":
                    this.c2("PaddingBottom", 0, this.et, this.et);
                    return true;
                case "PaddingLeft":
                    this.c2("PaddingLeft", 0, this.eu, this.eu);
                    return true;
                case "PaddingRight":
                    this.c2("PaddingRight", 0, this.ev, this.ev);
                    return true;
                case "PaddingTop":
                    this.c2("PaddingTop", 0, this.ew, this.ew);
                    return true;
                case "SortIndicatorColor":
                    this.c2("ActualSortIndicatorColor", 2, this.e9, this.e9);
                    return true;
            }
            return false;
        };
        Header.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            a.fo = this.eu;
            a.fs = this.ew;
            a.fq = this.ev;
            a.fm = this.et;
            a.kn = this.e9;
        };
        Header.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = b.a0(a.k);
            if (e != null) {
                if (a.k.g && e.f6()) {
                    var f = e.fm;
                    var g = f.o;
                    var h = g.count;
                    var i = f.p;
                    var j = f.q;
                    for (var k = 0; k < h; k++) {
                        if (i._inner[k]) {
                            continue;
                        }
                        a.jt(g._inner[k], j._inner[k]);
                    }
                }
            }
        };
        Header.$t = igniteuiReactCore.markType(Header, 'Header', DefinitionBase.$);
        return Header;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var ColumnResizingSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnResizingSeparator, _super);
        function ColumnResizingSeparator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ColumnResizingSeparator.prototype.cm = function (a, b, c) {
            return "columnResizingSeparator";
        };
        ColumnResizingSeparator.prototype.l = function (a) {
            return new VerticalSeparatorCellModel();
        };
        ColumnResizingSeparator.prototype.eb = function () {
            return GridStyleRepository.a5;
        };
        ColumnResizingSeparator.prototype.cz = function (a, b) {
            this.c8();
        };
        ColumnResizingSeparator.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.ux != null) {
                    this.d0 = this.grid.ux;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        ColumnResizingSeparator.prototype.el = function (a, b) {
            switch (b.propertyName) {
                case "ColumnResizingSeparatorBackground":
                    this.c8();
                    break;
            }
        };
        ColumnResizingSeparator.$t = igniteuiReactCore.markType(ColumnResizingSeparator, 'ColumnResizingSeparator', DefinitionBase.$);
        return ColumnResizingSeparator;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var HeaderSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(HeaderSeparator, _super);
        function HeaderSeparator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        HeaderSeparator.prototype.cm = function (a, b, c) {
            return "headerSeparator";
        };
        HeaderSeparator.prototype.l = function (a) {
            return new VerticalSeparatorCellModel();
        };
        HeaderSeparator.prototype.eb = function () {
            return GridStyleRepository.bi;
        };
        HeaderSeparator.prototype.el = function () {
            return igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
        };
        HeaderSeparator.prototype.cz = function (a, b) {
            this.c8();
            this.em();
        };
        HeaderSeparator.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "HeaderSeparatorBackground":
                    this.c8();
                    break;
            }
        };
        HeaderSeparator.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.u2 != null) {
                    this.d0 = this.grid.u2;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        HeaderSeparator.prototype.em = function () {
            if (this.grid != null) {
                this.d1 = ((function () {
                    var $ret = new igniteuiReactCore.Brush();
                    $ret.color = igniteuiReactCore.Color.u(0, 0, 0, 0);
                    return $ret;
                })());
                var a = this.grid.km(this.grid.la);
                this.be = a;
                this.bf = a;
            }
        };
        HeaderSeparator.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
        };
        HeaderSeparator.$t = igniteuiReactCore.markType(HeaderSeparator, 'HeaderSeparator', DefinitionBase.$);
        return HeaderSeparator;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var ImageColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ImageColumn, _super);
        function ImageColumn() {
            var _this = _super.call(this) || this;
            _this.js = 0;
            _this.jq = 0;
            _this.jt = 0;
            _this.h = _this.i();
            _this.c = _this.d();
            return _this;
        }
        Object.defineProperty(ImageColumn.prototype, "jt", {
            get: function () {
                return this.js;
            },
            set: function (a) {
                var b = this.js;
                this.js = a;
                if (this.js != b) {
                    this.c2("ImageStretchOption", 4, igniteuiReactCore.enumGetBox(ImageStretchOptions_$type, b), igniteuiReactCore.enumGetBox(ImageStretchOptions_$type, this.js));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageColumn.prototype, "jr", {
            get: function () {
                return this.jq;
            },
            set: function (a) {
                var b = this.jq;
                this.jq = a;
                if (this.jq != b) {
                    this.c2("ImageResourceType", 11, igniteuiReactCore.enumGetBox(ImageResourceType_$type, b), igniteuiReactCore.enumGetBox(ImageResourceType_$type, this.jq));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageColumn.prototype, "jp", {
            get: function () {
                return this.fc;
            },
            set: function (a) {
                this.fc = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageColumn.prototype, "ju", {
            get: function () {
                return this.g4;
            },
            set: function (a) {
                this.g4 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageColumn.prototype, "jv", {
            get: function () {
                return this.hu;
            },
            set: function (a) {
                this.hu = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageColumn.prototype, "jo", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                this.em = a;
            },
            enumerable: true,
            configurable: true
        });
        ImageColumn.prototype.i = function () {
            if (this.j != 4) {
                return this.j;
            }
            return 3;
        };
        ImageColumn.prototype.ep = function () {
            if (this.c == 3) {
                return 1;
            }
            return _super.prototype.ep.call(this);
        };
        ImageColumn.prototype.eq = function () {
            if (this.h == 3) {
                return 1;
            }
            return _super.prototype.eq.call(this);
        };
        ImageColumn.prototype.d = function () {
            if (this.e != 4) {
                return this.e;
            }
            return 3;
        };
        ImageColumn.prototype.l = function (a) {
            return new ImageCellModel();
        };
        ImageColumn.prototype.cm = function (a, b, c) {
            return "image";
        };
        ImageColumn.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            if (c != null) {
                e.ip = c.toString();
                e.kt = this.jt;
                e.kr = this.jr;
                e.ky = this.jw(c);
            }
        };
        ImageColumn.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
        };
        ImageColumn.prototype.jw = function (a) {
            if (a == null) {
                return "";
            }
            if (typeof a === 'string') {
                return a;
            }
            return a.toString();
        };
        ImageColumn.$t = igniteuiReactCore.markType(ImageColumn, 'ImageColumn', Column.$);
        return ImageColumn;
    }(Column));
    /**
     * @hidden
     */
    var NumericColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(NumericColumn, _super);
        function NumericColumn() {
            var _this = _super.call(this) || this;
            _this.j5 = null;
            _this.j7 = null;
            _this.j6 = null;
            _this.j8 = "";
            _this.jv = 10;
            _this.jw = 0;
            _this.jx = -1;
            _this.js = false;
            _this.j4 = null;
            _this.jo = null;
            _this.j1 = null;
            _this.c = _this.d();
            return _this;
        }
        NumericColumn.prototype.d = function () {
            if (this.e != 4) {
                return this.e;
            }
            return 2;
        };
        Object.defineProperty(NumericColumn.prototype, "kh", {
            get: function () {
                return this.j5;
            },
            set: function (a) {
                var b = this.j5;
                this.j5 = a;
                if (this.j5 != b) {
                    this.c2("NegativePrefix", 8, b, this.j5);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "kl", {
            get: function () {
                return this.j7;
            },
            set: function (a) {
                var b = this.j7;
                this.j7 = a;
                if (this.j7 != b) {
                    this.c2("PositivePrefix", 8, b, this.j7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "kj", {
            get: function () {
                return this.j6;
            },
            set: function (a) {
                var b = this.j6;
                this.j6 = a;
                if (this.j6 != b) {
                    this.c2("NegativeSuffix", 8, b, this.j6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "kn", {
            get: function () {
                return this.j8;
            },
            set: function (a) {
                var b = this.j8;
                this.j8 = a;
                if (this.j8 != b) {
                    this.c2("PositiveSuffix", 8, b, this.j8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "jy", {
            get: function () {
                return this.jv;
            },
            set: function (a) {
                var b = this.jv;
                this.jv = a;
                if (this.jv != b) {
                    this.c2("MaxFractionDigits", 6, b, this.jv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "jz", {
            get: function () {
                return this.jw;
            },
            set: function (a) {
                var b = this.jw;
                this.jw = a;
                if (this.jw != b) {
                    this.c2("MinFractionDigits", 6, b, this.jw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "j0", {
            get: function () {
                return this.jx;
            },
            set: function (a) {
                var b = this.jx;
                this.jx = a;
                if (this.jx != b) {
                    this.c2("MinIntegerDigits", 6, b, this.jx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "jt", {
            get: function () {
                return this.js;
            },
            set: function (a) {
                var b = this.js;
                this.js = a;
                if (this.js != b) {
                    this.c2("ShowGroupingSeparator", 5, b, this.js);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "kc", {
            get: function () {
                return this.j4;
            },
            set: function (a) {
                var b = this.j4;
                this.j4 = a;
                if (this.j4 != b) {
                    this.c2("FormatString", 8, b, this.j4);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "jq", {
            get: function () {
                return this.jo;
            },
            set: function (a) {
                var b = this.jo;
                this.jo = a;
                if (this.jo != b) {
                    this.c2("FormatSpecifiers", 9, b, this.jo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "j3", {
            get: function () {
                return this.j1;
            },
            set: function (a) {
                var b = this.j1;
                this.j1 = a;
                if (this.j1 != b) {
                    this.c2("FormatOverride", 9, b, this.j1);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "jr", {
            get: function () {
                return this.fc;
            },
            set: function (a) {
                this.fc = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "j2", {
            get: function () {
                return this.g4;
            },
            set: function (a) {
                this.g4 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "j9", {
            get: function () {
                return this.hu;
            },
            set: function (a) {
                this.hu = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(NumericColumn.prototype, "jp", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                this.em = a;
            },
            enumerable: true,
            configurable: true
        });
        NumericColumn.prototype.l = function (a) {
            return new NumericCellModel();
        };
        NumericColumn.prototype.cm = function (a, b, c) {
            return "numeric";
        };
        NumericColumn.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            {
                e.kv = false;
                e.kz = this.ju(c);
            }
        };
        NumericColumn.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            var e = a;
            e.k9 = this.jz;
            e.k7 = this.jy;
            e.lb = this.j0;
            e.l4 = this.kl;
            e.lz = this.kh;
            e.l6 = this.kn;
            e.l1 = this.kj;
            e.lt = this.kc;
            e.kr = this.jq;
            e.ll = this.j3;
            e.kx = this.jt;
        };
        NumericColumn.prototype.ju = function (a) {
            if (a == null) {
                return NaN;
            }
            if (typeof a === 'number') {
                return igniteuiReactCore.typeGetValue(a);
            }
            if (typeof a === 'number') {
                return a;
            }
            if (typeof a === 'number') {
                return a;
            }
            if (typeof a === 'number') {
                return igniteuiReactCore.typeGetValue(a);
            }
            if (typeof a === 'string') {
                var b_1;
                if (((function () { var c = igniteuiReactCore.tryParseNumber(a, b_1); b_1 = c.p1; return c.ret; })())) {
                    return b_1;
                }
            }
            if (typeof a === 'number') {
                return igniteuiReactCore.typeGetValue(a);
            }
            if (typeof a === 'number') {
                return igniteuiReactCore.typeGetValue(a);
            }
            if (typeof a === 'number') {
                return igniteuiReactCore.typeGetValue(a);
            }
            if (typeof a === 'number') {
                return igniteuiReactCore.typeGetValue(a);
            }
            if (typeof a === 'number') {
                return igniteuiReactCore.typeGetValue(a);
            }
            return NaN;
        };
        NumericColumn.$t = igniteuiReactCore.markType(NumericColumn, 'NumericColumn', Column.$);
        return NumericColumn;
    }(Column));
    /**
     * @hidden
     */
    var PinnedAreaSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PinnedAreaSeparator, _super);
        function PinnedAreaSeparator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        PinnedAreaSeparator.prototype.cm = function (a, b, c) {
            return "pinnedAreaSeparator";
        };
        PinnedAreaSeparator.prototype.l = function (a) {
            return ((function () {
                var $ret = new VerticalSeparatorCellModel();
                $ret.kr = false;
                return $ret;
            })());
        };
        PinnedAreaSeparator.prototype.eb = function () {
            return GridStyleRepository.a3;
        };
        PinnedAreaSeparator.prototype.cz = function (a, b) {
            this.c8();
        };
        PinnedAreaSeparator.prototype.c8 = function () {
            if (this.d7 == null) {
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        PinnedAreaSeparator.prototype.c1 = function (a, b) {
        };
        PinnedAreaSeparator.$t = igniteuiReactCore.markType(PinnedAreaSeparator, 'PinnedAreaSeparator', DefinitionBase.$);
        return PinnedAreaSeparator;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var SectionFooter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SectionFooter, _super);
        function SectionFooter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SectionFooter.prototype.l = function (a) {
            return new TextCellModel();
        };
        SectionFooter.prototype.cm = function (a, b, c) {
            return "sectionFooter";
        };
        SectionFooter.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
        };
        SectionFooter.prototype.cw = function (a, b, c, d) {
            this.d0 = GridStyleRepository.a7;
            _super.prototype.cw.call(this, a, b, c, d);
        };
        SectionFooter.$t = igniteuiReactCore.markType(SectionFooter, 'SectionFooter', DefinitionBase.$);
        return SectionFooter;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var SectionHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SectionHeader, _super);
        function SectionHeader() {
            var _this = _super.call(this) || this;
            _this.fc = null;
            _this.fb = null;
            _this.et = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(12));
            _this.ev = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.eu = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.es = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(1));
            _this.ep = false;
            _this.em = 4;
            _this.sectionHeaderPropertyUpdating = null;
            _this.er = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.String_$type, ComboBoxColumn.$, 0);
            _this.fd = _this.ee();
            return _this;
        }
        Object.defineProperty(SectionHeader.prototype, "fe", {
            get: function () {
                return this.fc;
            },
            set: function (a) {
                var b = this.fc;
                this.fc = a;
                if (this.fc != b) {
                    this.c2("SelectedBackground", 10, b, this.fc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeader.prototype, "fd", {
            get: function () {
                return this.fb;
            },
            set: function (a) {
                var b = this.fb;
                this.fb = a;
                if (this.fb != b) {
                    this.c2("ActualSelectedBackground", 2, b, this.fb);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeader.prototype, "ex", {
            get: function () {
                return this.et;
            },
            set: function (a) {
                var b = this.et;
                this.et = a;
                if (this.et != b) {
                    this.c2("PaddingLeft", 6, b, this.et);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeader.prototype, "ez", {
            get: function () {
                return this.ev;
            },
            set: function (a) {
                var b = this.ev;
                this.ev = a;
                if (this.ev != b) {
                    this.c2("PaddingTop", 6, b, this.ev);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeader.prototype, "ey", {
            get: function () {
                return this.eu;
            },
            set: function (a) {
                var b = this.eu;
                this.eu = a;
                if (this.eu != b) {
                    this.c2("PaddingRight", 6, b, this.eu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeader.prototype, "ew", {
            get: function () {
                return this.es;
            },
            set: function (a) {
                var b = this.es;
                this.es = a;
                if (this.es != b) {
                    this.c2("PaddingBottom", 6, b, this.es);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeader.prototype, "eq", {
            get: function () {
                return this.ep;
            },
            set: function (a) {
                var b = this.ep;
                this.ep = a;
                if (this.ep != b) {
                    this.c2("IsCollapsable", 5, b, this.ep);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SectionHeader.prototype, "en", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                var b = this.em;
                this.em = a;
                if (this.em != b) {
                    this.c2("SummaryDisplayMode", 4, igniteuiReactCore.enumGetBox(GroupSummaryDisplayMode_$type, b), igniteuiReactCore.enumGetBox(GroupSummaryDisplayMode_$type, this.em));
                }
            },
            enumerable: true,
            configurable: true
        });
        SectionHeader.prototype.cm = function (a, b, c) {
            return "sectionHeader";
        };
        SectionHeader.prototype.l = function (a) {
            return new SectionHeaderCellModel();
        };
        SectionHeader.prototype.eb = function () {
            return GridStyleRepository.a8;
        };
        SectionHeader.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = new igniteuiReactCore.List$1(GroupData.$, 0);
            var f = new igniteuiReactCore.List$1(SummaryData.$, 0);
            var g = igniteuiReactCore.stringEmpty();
            var h = igniteuiReactCore.stringEmpty();
            var i = igniteuiReactCore.typeCast(igniteuiReactCore.FastIterationDictionary$2.$.specialize(igniteuiReactCore.String_$type, igniteuiReactCore.Base.$), c);
            if (i != null) {
                var j = b.actualDataSource.actualSchema;
                var k = 0;
                for (var l = 0; l < i.o.count; l++) {
                    var m = i.o._inner[l];
                    var n = i.q._inner[l];
                    var o = null;
                    for (var p = 0; p < b.a7.i.count; p++) {
                        if (b.a7.i.item(p).f == m) {
                            o = b.a7.i.item(p);
                            break;
                        }
                    }
                    if (!o.o) {
                        b.sv(o);
                    }
                    if (k > 0) {
                        g += ", ";
                    }
                    e.add(this.el(m, n, o, o.m));
                    g += e._inner[k].b;
                    k++;
                }
                if (this.en == 0 && b.b7.i.count > 0) {
                    var q = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, d);
                    if (q != null && q.summaryResults != null) {
                        for (var r = 0; r < q.summaryResults.length; r++) {
                            if (q.summaryResults[r] != null) {
                                var s = q.summaryResults[r].summaryIndex;
                                var t = b.b7.i.item(s);
                                if (r > 0) {
                                    h += ", ";
                                }
                                f.add(this.u(t, q.summaryResults[r]));
                                h += f._inner[r].c;
                            }
                        }
                    }
                }
            }
            var u = igniteuiReactCore.typeCast(SectionHeaderCellModel.$, a);
            if (u != null) {
                u.ks = e.toArray();
                u.kt = f.toArray();
                u.k6 = g;
                u.k4 = h;
                u.kv = this.en;
                if (b.e0.o(u)) {
                    u.b8 = 1;
                }
                else {
                    u.b8 = 0;
                }
                if (b.aj.m(u)) {
                    u.by = 1;
                }
                else {
                    u.by = 0;
                }
                u.ar = this.eq;
                u.az = b.actualDataSource.getIsRowExpandedAtIndex(a.k.w);
                u.e5 = b.d9.getRowIndent(a.k.w);
            }
        };
        SectionHeader.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            a.km = this.fd;
            a.fo = this.ex;
            a.fs = this.ez;
            a.fq = this.ey;
            a.fm = this.ew;
        };
        SectionHeader.prototype.cz = function (a, b) {
            this.fa();
            this.c8();
            this.df();
            this.dg();
            this.e9();
            if (a != null) {
                a.actualColumnsChanged = igniteuiReactCore.delegateRemove(a.actualColumnsChanged, igniteuiReactCore.runOn(this, this.e8));
            }
            if (b != null) {
                b.actualColumnsChanged = igniteuiReactCore.delegateCombine(b.actualColumnsChanged, igniteuiReactCore.runOn(this, this.e8));
            }
        };
        SectionHeader.prototype.e8 = function (a, b) {
            this.er.clear();
            for (var c = 0; c < b.columns.count; c++) {
                var d = igniteuiReactCore.typeCast(ComboBoxColumn.$, b.columns._inner[c]);
                if (d != null && !this.er.containsKey(d.hy)) {
                    this.er.addItem(d.hy, d);
                }
            }
        };
        SectionHeader.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "SectionHeaderSelectedBackground":
                    this.fa();
                    break;
                case "SectionHeaderBackground":
                    this.c8();
                    break;
                case "SectionHeaderTextColor":
                    this.df();
                    break;
                case "SectionHeaderTextStyle":
                    this.dg();
                    break;
                case "IsGroupCollapsable":
                    this.e9();
                    break;
            }
        };
        SectionHeader.prototype.fa = function () {
            if (this.fe == null) {
                if (this.grid != null && this.grid.vd != null) {
                    this.fd = this.grid.vd;
                }
                else {
                    this.fd = this.ee();
                }
            }
            else {
                this.fd = this.fe;
            }
        };
        SectionHeader.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.vc != null) {
                    this.d0 = this.grid.vc;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        SectionHeader.prototype.df = function () {
            if (this.ek == null) {
                if (this.grid != null && this.grid.ve != null) {
                    this.d6 = this.grid.ve;
                    return;
                }
                this.d6 = this.eg();
            }
            else {
                this.d6 = this.ek;
            }
        };
        SectionHeader.prototype.dg = function () {
            if (this.textStyle == null) {
                if (this.grid != null && this.grid.fs != null) {
                    this.ad = this.grid.fs;
                    return;
                }
                this.ad = this.af();
            }
            else {
                this.ad = this.textStyle;
            }
        };
        SectionHeader.prototype.e9 = function () {
            if (this.grid != null) {
                this.eq = this.grid.hs;
            }
        };
        SectionHeader.prototype.c3 = function (a, b, c, d) {
            _super.prototype.c3.call(this, a, b, c, d);
            switch (a) {
                case "SelectedBackground":
                    this.fa();
                    break;
            }
            if (this.sectionHeaderPropertyUpdating != null) {
                this.sectionHeaderPropertyUpdating(this, a, b, c, d);
            }
        };
        SectionHeader.prototype.el = function (a, b, c, d) {
            var e = b != null ? b.toString() : igniteuiReactCore.stringEmpty();
            var f = a + ": " + e;
            var g = igniteuiReactCore.stringEmpty();
            if (c != null) {
                if (c.v == null) {
                    g = a + ": ";
                }
                else if (c.v != igniteuiReactCore.stringEmpty()) {
                    g = c.v + ": ";
                }
                if (b != null) {
                    switch (d) {
                        case 10:
                            if (c.q != null) {
                                var override_ = c.q;
                                var val_ = igniteuiReactCore.typeGetValue(b);
                                e = (override_.format(val_));
                            }
                            else {
                                e = (igniteuiReactCore.typeGetValue(b)).toString();
                            }
                            break;
                        case 8:
                            if (c.q != null) {
                                var override_ = c.q;
                                var val_ = b;
                                e = (override_.format(val_));
                            }
                            else {
                                e = b.toString();
                            }
                            break;
                        case 5:
                            if (c.q != null) {
                                var override_ = c.q;
                                var val_ = b;
                                e = (override_.format(val_));
                            }
                            else {
                                e = b.toString();
                            }
                            break;
                        case 1:
                            if (c.q != null) {
                                var override_ = c.q;
                                var val_ = igniteuiReactCore.typeGetValue(b);
                                e = (override_.format(val_));
                            }
                            else {
                                e = (igniteuiReactCore.typeGetValue(b)).toString();
                            }
                            break;
                        case 3:
                            if (c.q != null) {
                                var override_ = c.q;
                                var val_ = igniteuiReactCore.typeGetValue(b);
                                e = (override_.format(val_));
                            }
                            else {
                                e = igniteuiReactCore.typeGetValue(b).toString();
                            }
                            break;
                        case 4:
                            if (c.q != null) {
                                var override_ = c.q;
                                var val_ = igniteuiReactCore.typeGetValue(b);
                                e = (override_.format(val_));
                            }
                            else {
                                e = igniteuiReactCore.typeGetValue(b).toString();
                            }
                            break;
                        case 7:
                            if (c.q != null) {
                                var override_ = c.q;
                                var val_ = b;
                                e = (override_.format(val_));
                            }
                            else {
                                e = b.toString();
                            }
                            break;
                        case 0:
                        case 6:
                        case 2:
                        case 11:
                            e = b.toString();
                            break;
                    }
                    if (this.er.containsKey(c.f)) {
                        var h = this.er.item(c.f);
                        var i = h.ju(b);
                        if (i != null) {
                            e = i;
                        }
                    }
                }
                if (c.l != null) {
                    e = c.l.i(b);
                }
                f = g + e;
                if (c.k != null) {
                    f = c.k.i(b);
                }
                f = c.w(b, e, f);
            }
            return ((function () {
                var $ret = new GroupData();
                $ret.c = a;
                $ret.a = b;
                $ret.b = f;
                return $ret;
            })());
        };
        SectionHeader.$t = igniteuiReactCore.markType(SectionHeader, 'SectionHeader', DefinitionBase.$);
        return SectionHeader;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var RowSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowSeparator, _super);
        function RowSeparator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        RowSeparator.prototype.cm = function (a, b, c) {
            return "rowSeparator";
        };
        RowSeparator.prototype.cz = function (a, b) {
            this.c8();
        };
        RowSeparator.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.u8 != null) {
                    this.d0 = this.grid.u8;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        RowSeparator.prototype.dc = function () {
            if (this.ei == null) {
                if (this.grid != null && this.grid.va != null) {
                    this.d4 = this.grid.va;
                    return;
                }
                this.d4 = this.ed();
            }
            else {
                this.d4 = this.ei;
            }
        };
        RowSeparator.prototype.de = function () {
            if (this.ej == null) {
                if (this.grid != null && this.grid.vb != null) {
                    this.d5 = this.grid.vb;
                    return;
                }
                this.d5 = this.ef();
            }
            else {
                this.d5 = this.ej;
            }
        };
        RowSeparator.prototype.db = function () {
            if (this.eh == null) {
                if (this.grid != null && this.grid.u9 != null) {
                    this.d3 = this.grid.u9;
                    return;
                }
                this.d3 = this.ec();
            }
            else {
                this.d3 = this.eh;
            }
        };
        RowSeparator.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "RowSeparatorBackground":
                    this.c8();
                    break;
                case "RowSeparatorLastStickyRowBackground":
                    this.db();
                    break;
                case "RowSeparatorPinnedRowBackground":
                    this.dc();
                    break;
                case "RowSeparatorStickyRowBackground":
                    this.de();
                    break;
            }
        };
        RowSeparator.prototype.l = function (a) {
            return new RowSeparatorModel();
        };
        RowSeparator.prototype.eb = function () {
            return GridStyleRepository.bk;
        };
        RowSeparator.prototype.ef = function () {
            return GridStyleRepository.bc;
        };
        RowSeparator.prototype.ec = function () {
            return GridStyleRepository.a2;
        };
        RowSeparator.prototype.ed = function () {
            return this.eb();
        };
        RowSeparator.prototype.av = function () {
            return 1;
        };
        RowSeparator.$t = igniteuiReactCore.markType(RowSeparator, 'RowSeparator', DefinitionBase.$);
        return RowSeparator;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var HeaderRowSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(HeaderRowSeparator, _super);
        function HeaderRowSeparator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        HeaderRowSeparator.prototype.cm = function (a, b, c) {
            return "headerRowSeparator";
        };
        HeaderRowSeparator.prototype.l = function (a) {
            return new RowSeparatorModel();
        };
        HeaderRowSeparator.prototype.eb = function () {
            return GridStyleRepository.a0;
        };
        HeaderRowSeparator.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.u1 != null) {
                    this.d0 = this.grid.u1;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        HeaderRowSeparator.prototype.cz = function (a, b) {
            this.c8();
        };
        HeaderRowSeparator.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "HeaderRowSeparatorBackground":
                    this.c8();
                    break;
            }
        };
        HeaderRowSeparator.$t = igniteuiReactCore.markType(HeaderRowSeparator, 'HeaderRowSeparator', DefinitionBase.$);
        return HeaderRowSeparator;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var SummaryRow = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryRow, _super);
        function SummaryRow() {
            var _this = _super.call(this) || this;
            _this.fd = null;
            _this.fb = null;
            _this.fe = null;
            _this.fc = null;
            _this.em = null;
            _this.el = null;
            _this.er = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(12));
            _this.et = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.es = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(12));
            _this.eq = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(0));
            _this.ff = _this.ee();
            _this.en = _this.eo();
            _this.fg = _this.fh();
            return _this;
        }
        Object.defineProperty(SummaryRow.prototype, "fi", {
            get: function () {
                return this.fd;
            },
            set: function (a) {
                var b = this.fd;
                this.fd = a;
                if (this.fd != b) {
                    this.c2("SelectedBackground", 10, b, this.fd);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "ff", {
            get: function () {
                return this.fb;
            },
            set: function (a) {
                var b = this.fb;
                this.fb = a;
                if (this.fb != b) {
                    this.c2("ActualSelectedBackground", 2, b, this.fb);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "fj", {
            get: function () {
                return this.fe;
            },
            set: function (a) {
                var b = this.fe;
                this.fe = a;
                if (this.fe != b) {
                    this.c2("SummaryLabelTextColor", 10, b, this.fe);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "fg", {
            get: function () {
                return this.fc;
            },
            set: function (a) {
                var b = this.fc;
                this.fc = a;
                if (this.fc != b) {
                    this.c2("ActualSummaryLabelTextColor", 2, b, this.fc);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "summaryNameTextStyle", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                var b = this.em;
                this.em = a;
                if (this.em != b) {
                    this.c2("SummaryNameFontInfo", 10, b, this.em);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "en", {
            get: function () {
                return this.el;
            },
            set: function (a) {
                var b = this.el;
                this.el = a;
                if (this.el != b) {
                    this.c2("ActualSummaryLabelFontInfo", 3, b, this.el);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "ev", {
            get: function () {
                return this.er;
            },
            set: function (a) {
                var b = this.er;
                this.er = a;
                if (this.er != b) {
                    this.c2("PaddingLeft", 6, b, this.er);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "ex", {
            get: function () {
                return this.et;
            },
            set: function (a) {
                var b = this.et;
                this.et = a;
                if (this.et != b) {
                    this.c2("PaddingTop", 6, b, this.et);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "ew", {
            get: function () {
                return this.es;
            },
            set: function (a) {
                var b = this.es;
                this.es = a;
                if (this.es != b) {
                    this.c2("PaddingRight", 6, b, this.es);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryRow.prototype, "eu", {
            get: function () {
                return this.eq;
            },
            set: function (a) {
                var b = this.eq;
                this.eq = a;
                if (this.eq != b) {
                    this.c2("PaddingBottom", 6, b, this.eq);
                }
            },
            enumerable: true,
            configurable: true
        });
        SummaryRow.prototype.cm = function (a, b, c) {
            return "summary";
        };
        SummaryRow.prototype.l = function (a) {
            return new SummaryCellModel();
        };
        SummaryRow.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = igniteuiReactCore.typeCast(igniteuiReactCore.DataSourceSpecialRow.$, d);
            var f = igniteuiReactCore.stringEmpty();
            var g = igniteuiReactCore.stringEmpty();
            var h = b.a0(a.k);
            if (h != null) {
                var i = e.getSummaryResults(h.hy);
                if (i.length > 0 && b.b7.i.count > 0) {
                    var j = b.b7.i.item(i[0].summaryIndex);
                    if (j.j != null) {
                        var k = this.u(j, i[0]);
                        f = j.ac != null ? j.ac : j.j.displayName;
                        g = k.d;
                    }
                }
            }
            var l = igniteuiReactCore.typeCast(SummaryCellModel.$, a);
            if (l != null) {
                l.ky = f;
                l.k0 = g;
                l.e5 = b.d9.getRowIndent(a.k.w);
                if (b.e0.o(l)) {
                    l.b8 = 1;
                }
                else {
                    l.b8 = 0;
                }
                if (b.aj.m(l)) {
                    l.by = 1;
                }
                else {
                    l.by = 0;
                }
            }
        };
        SummaryRow.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            var e = igniteuiReactCore.typeCast(SummaryCellModel.$, a);
            e.km = this.ff;
            e.ke = this.d0;
            e.k5 = this.fg;
            e.kr = this.en;
            e.fo = this.ev;
            e.fs = this.ex;
            e.fq = this.ew;
            e.fm = this.eu;
        };
        SummaryRow.prototype.cz = function (a, b) {
            this.e8();
            this.e9();
            this.c8();
            this.df();
            this.dg();
            this.fa();
        };
        SummaryRow.prototype.fh = function () {
            return GridStyleRepository.bd;
        };
        SummaryRow.prototype.eg = function () {
            return GridStyleRepository.be;
        };
        SummaryRow.prototype.c1 = function (a, b) {
            switch (b.propertyName) {
                case "SummaryRootSelectedBackground":
                case "SummarySectionSelectedBackground":
                    this.e8();
                    break;
                case "SummaryRootBackground":
                case "SummarySectionBackground":
                    this.c8();
                    break;
                case "SummaryRootValueTextColor":
                case "SummarySectionValueTextColor":
                    this.df();
                    break;
                case "SummaryRootLabelTextColor":
                case "SummarySectionLabelTextColor":
                    this.e9();
                    break;
                case "SummaryRootLabelTextStyle":
                case "SummarySectionLabelTextStyle":
                    this.fa();
                    break;
                case "SummaryRootValueTextStyle":
                case "SummarySectionValueTextStyle":
                    this.dg();
                    break;
            }
        };
        SummaryRow.prototype.e8 = function () {
            if (this.fi == null) {
                this.ff = this.ee();
            }
            else {
                this.ff = this.fi;
            }
        };
        SummaryRow.prototype.e9 = function () {
        };
        SummaryRow.prototype.dg = function () {
        };
        SummaryRow.prototype.fa = function () {
        };
        SummaryRow.prototype.c3 = function (a, b, c, d) {
            _super.prototype.c3.call(this, a, b, c, d);
            switch (a) {
                case "SelectedBackground":
                    this.e8();
                    break;
                case "SummaryLabelTextColor":
                    this.e9();
                    break;
                case "SummaryNameFontInfo":
                    this.fa();
                    break;
            }
        };
        SummaryRow.prototype.af = function () {
            return GridStyleRepository.j;
        };
        SummaryRow.prototype.eo = function () {
            return GridStyleRepository.i;
        };
        SummaryRow.$t = igniteuiReactCore.markType(SummaryRow, 'SummaryRow', DefinitionBase.$);
        return SummaryRow;
    }(DefinitionBase));
    /**
     * @hidden
     */
    var SummaryRowRoot = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryRowRoot, _super);
        function SummaryRowRoot() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SummaryRowRoot.prototype.cm = function (a, b, c) {
            return "summaryRowRoot";
        };
        SummaryRowRoot.prototype.eb = function () {
            return GridStyleRepository.a6;
        };
        SummaryRowRoot.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.vg != null) {
                    this.d0 = this.grid.vg;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        SummaryRowRoot.prototype.e8 = function () {
            if (this.fi == null) {
                if (this.grid != null && this.grid.vi != null) {
                    this.ff = this.grid.vi;
                }
                else {
                    this.ff = this.ee();
                }
            }
            else {
                this.ff = this.fi;
            }
        };
        SummaryRowRoot.prototype.e9 = function () {
            if (this.fj == null) {
                if (this.grid != null && this.grid.vh != null) {
                    this.fg = this.grid.vh;
                }
                else {
                    this.fg = this.fh();
                }
            }
            else {
                this.fg = this.fj;
            }
        };
        SummaryRowRoot.prototype.df = function () {
            if (this.ek == null) {
                if (this.grid != null && this.grid.vj != null) {
                    this.d6 = this.grid.vj;
                }
                else {
                    this.d6 = this.eg();
                }
            }
            else {
                this.d6 = this.ek;
            }
        };
        SummaryRowRoot.prototype.fa = function () {
            if (this.summaryNameTextStyle == null) {
                if (this.grid != null && this.grid.ft != null) {
                    this.en = this.grid.ft;
                }
                else {
                    this.en = this.eo();
                }
            }
            else {
                this.en = this.summaryNameTextStyle;
            }
        };
        SummaryRowRoot.$t = igniteuiReactCore.markType(SummaryRowRoot, 'SummaryRowRoot', SummaryRow.$);
        return SummaryRowRoot;
    }(SummaryRow));
    /**
     * @hidden
     */
    var SummaryRowSection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryRowSection, _super);
        function SummaryRowSection() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SummaryRowSection.prototype.cm = function (a, b, c) {
            return "summaryRowSection";
        };
        SummaryRowSection.prototype.eb = function () {
            return GridStyleRepository.a9;
        };
        SummaryRowSection.prototype.c8 = function () {
            if (this.d7 == null) {
                if (this.grid != null && this.grid.vk != null) {
                    this.d0 = this.grid.vk;
                    return;
                }
                this.d0 = this.eb();
            }
            else {
                this.d0 = this.d7;
            }
        };
        SummaryRowSection.prototype.e8 = function () {
            if (this.fi == null) {
                if (this.grid != null && this.grid.vm != null) {
                    this.ff = this.grid.vm;
                }
                else {
                    this.ff = this.ee();
                }
            }
            else {
                this.ff = this.fi;
            }
        };
        SummaryRowSection.prototype.e9 = function () {
            if (this.fj == null) {
                if (this.grid != null && this.grid.vl != null) {
                    this.fg = this.grid.vl;
                }
                else {
                    this.fg = this.fh();
                }
            }
            else {
                this.fg = this.fj;
            }
        };
        SummaryRowSection.prototype.df = function () {
            if (this.ek == null) {
                if (this.grid != null && this.grid.vn != null) {
                    this.d6 = this.grid.vn;
                }
                else {
                    this.d6 = this.eg();
                }
            }
            else {
                this.d6 = this.ek;
            }
        };
        SummaryRowSection.prototype.fa = function () {
            if (this.summaryNameTextStyle == null) {
                if (this.grid != null && this.grid.fv != null) {
                    this.en = this.grid.fv;
                }
                else {
                    this.en = this.eo();
                }
            }
            else {
                this.en = this.summaryNameTextStyle;
            }
        };
        SummaryRowSection.$t = igniteuiReactCore.markType(SummaryRowSection, 'SummaryRowSection', SummaryRow.$);
        return SummaryRowSection;
    }(SummaryRow));
    /**
     * @hidden
     */
    var TemplateColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateColumn, _super);
        function TemplateColumn() {
            var _this = _super.call(this) || this;
            _this.cellUpdating = null;
            _this.ga = false;
            return _this;
        }
        TemplateColumn.prototype.l = function (a) {
            return new TemplateCellModel();
        };
        TemplateColumn.prototype.cm = function (a, b, c) {
            var d = "template-" + this.g2;
            return d;
        };
        TemplateColumn.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            e.ks = c;
        };
        TemplateColumn.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
        };
        TemplateColumn.prototype.jp = function (a, b) {
            if (this.cellUpdating != null) {
                this.cellUpdating(this, ((function () {
                    var $ret = new TemplateCellUpdatingEventArgs();
                    $ret.cellInfo = a;
                    $ret.content = b;
                    return $ret;
                })()));
            }
        };
        TemplateColumn.prototype.c3 = function (a, b, c, d) {
            switch (a) {
                case "IsEditable":
                    this.ga = false;
                    break;
            }
            _super.prototype.c3.call(this, a, b, c, d);
        };
        TemplateColumn.$t = igniteuiReactCore.markType(TemplateColumn, 'TemplateColumn', Column.$);
        return TemplateColumn;
    }(Column));
    /**
     * @hidden
     */
    var TemplateCellUpdatingEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateCellUpdatingEventArgs, _super);
        function TemplateCellUpdatingEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._cellInfo = null;
            _this._content = null;
            return _this;
        }
        Object.defineProperty(TemplateCellUpdatingEventArgs.prototype, "cellInfo", {
            get: function () {
                return this._cellInfo;
            },
            set: function (a) {
                this._cellInfo = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TemplateCellUpdatingEventArgs.prototype, "content", {
            get: function () {
                return this._content;
            },
            set: function (a) {
                this._content = a;
            },
            enumerable: true,
            configurable: true
        });
        TemplateCellUpdatingEventArgs.$t = igniteuiReactCore.markType(TemplateCellUpdatingEventArgs, 'TemplateCellUpdatingEventArgs', igniteuiReactCore.EventArgs.$);
        return TemplateCellUpdatingEventArgs;
    }(igniteuiReactCore.EventArgs));
    /**
     * @hidden
     */
    var TextColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextColumn, _super);
        function TextColumn() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.jr = null;
            return _this;
        }
        Object.defineProperty(TextColumn.prototype, "ju", {
            get: function () {
                return this.jr;
            },
            set: function (a) {
                var b = this.jr;
                this.jr = a;
                if (this.jr != b) {
                    this.c2("FormatString", 8, b, this.jr);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextColumn.prototype, "jp", {
            get: function () {
                return this.fc;
            },
            set: function (a) {
                this.fc = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextColumn.prototype, "jq", {
            get: function () {
                return this.g4;
            },
            set: function (a) {
                this.g4 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextColumn.prototype, "js", {
            get: function () {
                return this.hu;
            },
            set: function (a) {
                this.hu = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextColumn.prototype, "jo", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                this.em = a;
            },
            enumerable: true,
            configurable: true
        });
        TextColumn.prototype.l = function (a) {
            return new TextCellModel();
        };
        TextColumn.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            if (c != null) {
                e.ks = this.jt(c);
            }
            else {
                e.ks = null;
            }
        };
        TextColumn.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            var e = a;
        };
        TextColumn.prototype.jt = function (a) {
            if (typeof a === 'string') {
                return a;
            }
            return null;
        };
        TextColumn.prototype.cm = function (a, b, c) {
            return "text";
        };
        TextColumn.$t = igniteuiReactCore.markType(TextColumn, 'TextColumn', Column.$);
        return TextColumn;
    }(Column));
    /**
     * @hidden
     */
    var TextHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextHeader, _super);
        function TextHeader() {
            var _this = _super.call(this) || this;
            _this.c = 0;
            _this.h = 1;
            return _this;
        }
        TextHeader.prototype.l = function (a) {
            var b = new TextHeaderCellModel();
            return b;
        };
        TextHeader.prototype.cm = function (a, b, c) {
            return "textHeader";
        };
        TextHeader.prototype.cw = function (a, b, c, d) {
            _super.prototype.cw.call(this, a, b, c, d);
            var e = a;
            var f = b.a0(a.k);
            e.kv = f.ex;
            e.ld = f.je;
            e.kx = f.e1;
        };
        TextHeader.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            var f = b.a0(a.k);
            e.ks = f.hh;
            e.ip = e.ks;
            e.m = f.e6;
            e.k1 = f.f3;
            e.kz = this.en;
        };
        TextHeader.$t = igniteuiReactCore.markType(TextHeader, 'TextHeader', Header.$);
        return TextHeader;
    }(Header));
    /**
     * @hidden
     */
    var GridEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridEffect, _super);
        function GridEffect() {
            var _this = _super.call(this) || this;
            _this.s = 0;
            _this.u = 0;
            _this.br = "";
            _this.af = false;
            _this.ac = false;
            _this.onFinished = null;
            _this.onCanceled = null;
            _this.a3 = 0;
            _this.a1 = 0;
            _this.h = null;
            _this.a7 = -1;
            _this.a8 = -1;
            _this.a2 = 300;
            _this.j = null;
            _this.a4 = 0;
            _this.c = null;
            _this.a = null;
            _this.a6 = -1;
            _this.ad = false;
            _this.ab = false;
            _this.bk = -1;
            _this.bm = null;
            _this.bn = null;
            _this.w = null;
            _this.p = null;
            _this.aa = false;
            _this.n = null;
            _this.ae = false;
            _this.ay = null;
            _this.az = 1;
            _this.a5 = -1;
            _this.b = null;
            _this.ax = new igniteuiReactCore.Dictionary$2(CellPath.$, igniteuiReactCore.Number_$type, 0);
            return _this;
        }
        GridEffect.prototype.bu = function () {
            if (this.onFinished != null) {
                this.onFinished(this);
            }
        };
        GridEffect.prototype.bt = function (a) {
            if (this.onCanceled != null) {
                this.onCanceled(this, a);
            }
        };
        Object.defineProperty(GridEffect.prototype, "t", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                this.s = a;
            },
            enumerable: true,
            configurable: true
        });
        GridEffect.prototype.am = function (a) {
            if (a == null) {
                return false;
            }
            if (a.s != this.s) {
                return false;
            }
            if (!this.af) {
                return true;
            }
            if (a.u != this.u) {
                return false;
            }
            if (a.br != this.br) {
                return false;
            }
            return true;
        };
        Object.defineProperty(GridEffect.prototype, "v", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                this.u = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bs", {
            get: function () {
                return this.br;
            },
            set: function (a) {
                this.br = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "as", {
            get: function () {
                return this.af;
            },
            set: function (a) {
                this.af = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "ap", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                this.ac = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "ba", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                this.a3 = a;
                this.a1 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "i", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bi", {
            get: function () {
                return this.a7;
            },
            set: function (a) {
                this.a7 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bj", {
            get: function () {
                return this.a8;
            },
            set: function (a) {
                this.a8 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "a9", {
            get: function () {
                return this.a2;
            },
            set: function (a) {
                this.a2 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "k", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                this.j = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bg", {
            get: function () {
                return this.a4;
            },
            set: function (a) {
                this.a4 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "g", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "e", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                this.a = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bh", {
            get: function () {
                return this.a6;
            },
            set: function (a) {
                this.a6 = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "aq", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                this.ad = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "ao", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                this.ab = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bl", {
            get: function () {
                return this.bk;
            },
            set: function (a) {
                this.bk = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bo", {
            get: function () {
                return this.bm;
            },
            set: function (a) {
                this.bm = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "bq", {
            get: function () {
                return this.bn;
            },
            set: function (a) {
                this.bn = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "x", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                this.w = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "q", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                this.p = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "al", {
            get: function () {
                return this.aa;
            },
            set: function (a) {
                this.aa = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "o", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                this.n = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridEffect.prototype, "ar", {
            get: function () {
                return this.ae;
            },
            set: function (a) {
                this.ae = a;
            },
            enumerable: true,
            configurable: true
        });
        GridEffect.prototype.bx = function (a) {
            this.ba = a.l;
            this.bg = a.m;
            this.bi = a.n;
            this.bj = a.o;
            this.aq = a.e;
            this.q = this.r(a.c);
        };
        GridEffect.prototype.r = function (a) {
            switch (a) {
                case 0: return null;
                case 1: return igniteuiReactCore.EasingFunctions.cubicEase;
                case 3: return igniteuiReactCore.EasingFunctions.circleEase;
                case 2: return igniteuiReactCore.EasingFunctions.exponentialEase;
            }
            return null;
        };
        GridEffect.prototype.au = function (a, b, c, d) {
            if (this.ar && this.an(d)) {
                return false;
            }
            var e = this.a0(d);
            var f = 1;
            if (this.a3 > 0) {
                f = e / this.a3;
            }
            var g = false;
            if (this.w == null) {
                return true;
            }
            if (f >= 1) {
                f = 1;
                g = true;
            }
            if (this.p != null) {
                f = this.p(f);
            }
            var h = this.bp(this.bm, b, a, a.o);
            this.w(f, h, this.bn, a, b);
            return g;
        };
        GridEffect.prototype.av = function (a, b, c, d) {
            if (this.ar && this.an(d)) {
                return false;
            }
            var e = this.a0(d);
            var f = 1;
            if (this.a3 > 0) {
                f = e / this.a3;
            }
            var g = false;
            if (this.w == null) {
                return true;
            }
            if (f >= 1) {
                f = 1;
                g = true;
            }
            if (this.p != null) {
                f = this.p(f);
            }
            var h = this.bp(this.bm, b, a, a);
            this.w(f, h, this.bn, a, b);
            return g;
        };
        GridEffect.prototype.a0 = function (a) {
            var b = (a - this.bk);
            if (this.a4 > 0) {
                if (b < this.a4) {
                    b = 0;
                }
                else {
                    b -= this.a4;
                }
            }
            return b;
        };
        GridEffect.prototype.an = function (a) {
            var b = (a - this.bk);
            if (this.a4 > 0) {
                if (b < this.a4) {
                    return true;
                }
            }
            return false;
        };
        GridEffect.prototype.bz = function (a, b, c, d) {
            var e = this.bb(b, a);
            if (this.f == null) {
                return;
            }
            var f = this.bb(b, this.f);
            var g = f / this.a6;
            if (g > 5) {
                g = 5;
            }
            if (g == this.az) {
                return;
            }
            var h = g / this.az;
            this.az = g;
            var i = igniteuiReactCore.truncate(Math.round(this.a1 * h));
            if (i <= 0) {
                var j = 0;
                j += 1;
            }
            {
                this.a1 = i;
            }
        };
        GridEffect.prototype.at = function (a, b, c, d) {
            var e = false;
            this.bz(a.k, b, c, d);
            if (this.ar && this.an(d)) {
                return false;
            }
            var f = this.a0(d);
            var g = this.bf(b, c, a.k, d);
            var h = this.bc(b, c, a.k, d);
            if (h < 300) {
                var i = 0;
                i += 1;
            }
            var j = f - g;
            if (j < 0) {
                j = 0;
            }
            var k = 1;
            if (h > 0) {
                k = j / h;
            }
            if (k >= 1) {
                k = 1;
                e = true;
            }
            if (this.p != null) {
                k = this.p(k);
            }
            var l = this.bp(this.bm, b, a, a.k);
            this.w(k, l, this.bn, a, b);
            return e;
        };
        GridEffect.prototype.by = function (a, b, c) {
            if (this.ay == null) {
                this.ay = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Base.$, igniteuiReactCore.Base.$, 0);
            }
            this.ay.item(c, a);
        };
        GridEffect.prototype.bp = function (a, b, c, d) {
            if (this.al) {
                if (this.ay == null) {
                    this.ay = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Base.$, igniteuiReactCore.Base.$, 0);
                }
                if (this.ay.containsKey(d)) {
                    return this.ay.item(d);
                }
                var e = this.o(c, b);
                this.ay.item(d, e);
                return e;
            }
            else {
                return this.bm;
            }
        };
        GridEffect.prototype.aw = function (a, b, c, d) {
            if (this.ar && this.an(d)) {
                return false;
            }
            var e = this.a0(d);
            var f = 1;
            if (this.a3 > 0) {
                f = e / this.a3;
            }
            var g = false;
            if (this.w == null) {
                return true;
            }
            if (f >= 1) {
                f = 1;
                g = true;
            }
            if (this.p != null) {
                f = this.p(f);
            }
            this.w(f, this.bm, this.bn, a, b);
            return g;
        };
        GridEffect.prototype.ag = function (a, b) {
            return false;
        };
        GridEffect.prototype.ah = function (a, b) {
            return false;
        };
        GridEffect.prototype.ai = function (a, b) {
            return false;
        };
        GridEffect.prototype.aj = function (a, b) {
            return false;
        };
        GridEffect.prototype.bv = function (a) {
        };
        GridEffect.prototype.bw = function (a) {
        };
        Object.defineProperty(GridEffect.prototype, "f", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridEffect.prototype.bf = function (a, b, c, d) {
            if (c == null) {
                return 0;
            }
            var e = this.bb(a, c);
            var f = this.bd(a, b, c, d);
            var g = this.a3;
            if (this.ad) {
                g = igniteuiReactCore.truncate(((f / this.a6) * g));
            }
            var h = this.a7;
            if (h == -1) {
                h = igniteuiReactCore.truncate((g / f));
                if ((g - igniteuiReactCore.truncate((f * h))) < this.a2) {
                    h = igniteuiReactCore.truncate(((g - this.a2) / f));
                }
                if (h < 0) {
                    h = 0;
                }
            }
            var i = h * e;
            if (this.h != null) {
                i = this.h(this.c, this.a6, c);
            }
            var j = this.a1;
            if (i < (j * -1)) {
                i = (j * -1);
            }
            if (i > (j)) {
                i = j - this.a2;
            }
            if (this.ad && this.a0(d) > i && c != null && !this.ax.containsKey(c)) {
                this.ax.addItem(c, f);
            }
            return i;
        };
        GridEffect.prototype.bd = function (a, b, c, d) {
            if (this.f == null || !this.ad) {
                return this.a6;
            }
            if (this.ax.containsKey(c)) {
                return this.ax.item(c);
            }
            var e = this.bb(a, this.f);
            return e;
        };
        GridEffect.prototype.bb = function (a, b) {
            if (b == null) {
                return 0;
            }
            var c = this.be(a, b);
            if (this.a6 == -1) {
                this.a6 = this.be(a, this.a) + 1;
            }
            if (this.ab) {
                c = ((this.a6 - 1) - c);
            }
            var d = c;
            if (d > this.a6 && d > this.a5) {
                this.a5 = d;
                this.b = b;
            }
            return d;
        };
        GridEffect.prototype.be = function (a, b) {
            return 0;
        };
        GridEffect.prototype.bc = function (a, b, c, d) {
            var e = this.a1;
            if (this.j != null) {
                if (this.a6 == -1) {
                    this.a6 = this.be(a, this.a) + 1;
                }
                e = this.j(this.c, this.a6, c);
            }
            else {
                if (this.a8 == -1) {
                    if (this.ad) {
                        var f = this.bd(a, b, c, d);
                        e = this.a3;
                        e = igniteuiReactCore.truncate(((f / this.a6) * e));
                        e = e - this.bf(a, b, c, d);
                    }
                    else {
                        if (this.ab) {
                            e = this.a3 - this.bf(a, b, this.d(a), d);
                        }
                        else {
                            e = this.a3 - this.bf(a, b, this.a, d);
                        }
                    }
                }
                else {
                    e = this.a8;
                }
            }
            return e;
        };
        GridEffect.prototype.d = function (a) {
            return this.c;
        };
        GridEffect.prototype.y = function (a, b) {
            if (b.x == a.x) {
                if (b.w <= a.w) {
                    a = a.aa();
                    a.w += 1;
                }
            }
            return a;
        };
        GridEffect.prototype.z = function (a, b) {
            if (b.x == a.x) {
                if (b.w < a.w) {
                    a = a.aa();
                    a.w -= 1;
                }
            }
            return a;
        };
        GridEffect.prototype.ak = function (a, b, c) {
            var d = this.a0(c);
            return d >= this.a1;
        };
        GridEffect.$t = igniteuiReactCore.markType(GridEffect, 'GridEffect');
        return GridEffect;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnEffect, _super);
        function ColumnEffect() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b0 = 0;
            return _this;
        }
        ColumnEffect.prototype.ah = function (a, b) {
            if (this.b0 == a.o) {
                return true;
            }
            return false;
        };
        ColumnEffect.$t = igniteuiReactCore.markType(ColumnEffect, 'ColumnEffect', GridEffect.$);
        return ColumnEffect;
    }(GridEffect));
    /**
     * @hidden
     */
    var SpacerEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SpacerEffect, _super);
        function SpacerEffect() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b0 = 0;
            return _this;
        }
        SpacerEffect.prototype.aj = function (a, b) {
            return a.o == this.b0;
        };
        SpacerEffect.$t = igniteuiReactCore.markType(SpacerEffect, 'SpacerEffect', GridEffect.$);
        return SpacerEffect;
    }(GridEffect));
    /**
     * @hidden
     */
    var ColumnCellsEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnCellsEffect, _super);
        function ColumnCellsEffect() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b2 = 0;
            _this.b1 = 0;
            _this.b0 = 0;
            return _this;
        }
        ColumnCellsEffect.prototype.ag = function (a, b) {
            if (this.b2 == -300) {
                if (a.as) {
                    return true;
                }
            }
            if (this.b2 == -400) {
                if (a.az == -400) {
                    return true;
                }
            }
            if (this.b1 >= 0) {
                if (this.b1 == a.az && this.b0 == a.b) {
                    return true;
                }
            }
            else {
                var c = b.g(this.b2);
                if (c == null) {
                    return false;
                }
                if (a.az == c.m && c.c == a.b) {
                    return true;
                }
            }
            return false;
        };
        ColumnCellsEffect.prototype.d = function (a) {
            if (a.ci > 0) {
                var b = this.g;
                var c = new CellPath(0, b.b, b.az, -100, -100);
                return c;
            }
            else {
                return this.g;
            }
        };
        ColumnCellsEffect.prototype.be = function (a, b) {
            var c = this.g;
            var d = this.e;
            var e = b;
            if (e == null) {
                return 0;
            }
            if (e.g) {
                return 0;
            }
            var f = 0;
            if (a.ci > 0) {
                f++;
            }
            if (c == null) {
                return 0;
            }
            if (e.av && e.i) {
                if (d == null) {
                    return 0;
                }
                return (d.w - c.w) + f - e.o;
            }
            if (e.x == c.x) {
                return (e.w - c.w) + f;
            }
            var g = f;
            var h = c.x;
            if (e.x > c.x) {
                while (h <= e.x) {
                    if (h == c.x) {
                        g += (a.bv._inner[h].m - 1) - c.w;
                        if (a.bv._inner[h].d > 0) {
                            g++;
                        }
                    }
                    else if (h == e.x) {
                        if (a.bv._inner[h].g > 0) {
                            g++;
                        }
                        g += (e.w + 1);
                    }
                    else {
                        if (a.bv._inner[h].g > 0) {
                            g++;
                        }
                        g += a.bv._inner[h].m;
                        if (a.bv._inner[h].d > 0) {
                            g++;
                        }
                    }
                    h++;
                }
            }
            else if (e.x < c.x) {
                while (h >= e.x) {
                    if (h == c.x) {
                        g -= c.w;
                        if (a.bv._inner[h].d > 0) {
                            g++;
                        }
                    }
                    else if (h == e.x) {
                        if (a.bv._inner[h].d > 0) {
                            g--;
                        }
                        g -= (a.bv._inner[h].m - e.w);
                    }
                    else {
                        if (a.bv._inner[h].g > 0) {
                            g--;
                        }
                        g -= a.bv._inner[h].m;
                        if (a.bv._inner[h].d > 0) {
                            g--;
                        }
                    }
                    h--;
                }
            }
            return g;
        };
        ColumnCellsEffect.$t = igniteuiReactCore.markType(ColumnCellsEffect, 'ColumnCellsEffect', GridEffect.$);
        return ColumnCellsEffect;
    }(GridEffect));
    /**
     * @hidden
     */
    var CellEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellEffect, _super);
        function CellEffect() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b4 = 0;
            _this.b3 = 0;
            _this.b1 = 0;
            _this.b0 = null;
            _this.b2 = false;
            return _this;
        }
        CellEffect.prototype.ag = function (a, b) {
            if (this.b0.w == a.w) {
                if (this.b4 == -400) {
                    if (a.az == -400) {
                        return true;
                    }
                }
                if (this.b3 >= 0) {
                    if (this.b3 == a.az && this.b1 == a.b) {
                        return true;
                    }
                }
                else {
                    var c = b.g(this.b4);
                    if (c == null) {
                        return false;
                    }
                    if (a.az == c.m && c.c == a.b) {
                        return true;
                    }
                }
            }
            return false;
        };
        CellEffect.prototype.bv = function (a) {
            this.b0 = this.y(this.b0, a);
        };
        CellEffect.prototype.bw = function (a) {
            this.b0 = this.z(this.b0, a);
        };
        CellEffect.$t = igniteuiReactCore.markType(CellEffect, 'CellEffect', GridEffect.$);
        return CellEffect;
    }(GridEffect));
    /**
     * @hidden
     */
    var CellPositionEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellPositionEffect, _super);
        function CellPositionEffect() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        CellPositionEffect.prototype.ag = function (a, b) {
            return this.b0.equals(a);
        };
        CellPositionEffect.prototype.bv = function (a) {
            this.b0 = this.y(this.b0, a);
        };
        CellPositionEffect.prototype.bw = function (a) {
            this.b0 = this.z(this.b0, a);
        };
        CellPositionEffect.$t = igniteuiReactCore.markType(CellPositionEffect, 'CellPositionEffect', CellEffect.$);
        return CellPositionEffect;
    }(CellEffect));
    /**
     * @hidden
     */
    var RowEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowEffect, _super);
        function RowEffect() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b0 = null;
            return _this;
        }
        RowEffect.prototype.ai = function (a, b) {
            if (this.b0.equals(a)) {
                return true;
            }
            return false;
        };
        RowEffect.prototype.bv = function (a) {
            this.b0 = this.y(this.b0, a);
        };
        RowEffect.prototype.bw = function (a) {
            this.b0 = this.z(this.b0, a);
        };
        RowEffect.$t = igniteuiReactCore.markType(RowEffect, 'RowEffect', GridEffect.$);
        return RowEffect;
    }(GridEffect));
    /**
     * @hidden
     */
    var RowCellsEffect = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowCellsEffect, _super);
        function RowCellsEffect() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b0 = null;
            return _this;
        }
        RowCellsEffect.prototype.ag = function (a, b) {
            if (this.b0.x == a.x && this.b0.w == a.w && this.b0.b == a.b) {
                return true;
            }
            return false;
        };
        RowCellsEffect.prototype.bv = function (a) {
            this.b0 = this.y(this.b0, a);
        };
        RowCellsEffect.prototype.bw = function (a) {
            this.b0 = this.z(this.b0, a);
        };
        RowCellsEffect.prototype.be = function (a, b) {
            if (this.g == null || b.au) {
                return 0;
            }
            if (b.as) {
                return this.be(a, this.e);
            }
            var c = a.br._inner[this.g.az].n;
            var d = a.br._inner[b.az].n;
            if (b.d == 0) {
                d = a.br._inner[b.az].n - a.co;
            }
            else if (b.d == 2) {
                d = a.br._inner[b.az].n - (a.co + a.cr);
            }
            return d - c;
        };
        RowCellsEffect.$t = igniteuiReactCore.markType(RowCellsEffect, 'RowCellsEffect', GridEffect.$);
        return RowCellsEffect;
    }(GridEffect));
    /**
     * @hidden
     */
    var GridEffectManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridEffectManager, _super);
        function GridEffectManager(a, b) {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.k = new igniteuiReactCore.List$1(ColumnEffect.$, 0);
            _this.j = new igniteuiReactCore.List$1(ColumnCellsEffect.$, 0);
            _this.m = new igniteuiReactCore.List$1(RowEffect.$, 0);
            _this.l = new igniteuiReactCore.List$1(RowCellsEffect.$, 0);
            _this.i = new igniteuiReactCore.List$1(CellEffect.$, 0);
            _this.n = new igniteuiReactCore.List$1(SpacerEffect.$, 0);
            _this.q = -30;
            _this.o = -1;
            _this.a = null;
            _this.b = a;
            _this.a = b;
            return _this;
        }
        Object.defineProperty(GridEffectManager.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridEffectManager.prototype.ae = function (a) {
            for (var b = 0; b < this.l.count; b++) {
                this.l._inner[b].bv(a);
            }
            for (var c = 0; c < this.m.count; c++) {
                this.m._inner[c].bv(a);
            }
            for (var d = 0; d < this.i.count; d++) {
                this.i._inner[d].bv(a);
            }
        };
        GridEffectManager.prototype.af = function (a) {
            for (var b = this.l.count - 1; b >= 0; b--) {
                if (a.equals(this.l._inner[b].b0)) {
                    this.aj(this.l._inner[b].b0, false, this.l._inner[b]);
                }
                else {
                    this.l._inner[b].bw(a);
                }
            }
            for (var c = this.m.count - 1; c >= 0; c--) {
                if (a.equals(this.m._inner[c].b0)) {
                    this.ak(this.m._inner[c].b0, false, this.m._inner[c]);
                }
                else {
                    this.m._inner[c].bw(a);
                }
            }
            for (var d = this.i.count - 1; d >= 0; d--) {
                if (a.equals(this.i._inner[d].b0)) {
                    this.ag(this.i._inner[d].b0, false, this.i._inner[d]);
                }
                else {
                    this.i._inner[d].bw(a);
                }
            }
        };
        GridEffectManager.prototype.ad = function () {
            var _this = this;
            var a = this.k.count > 0;
            this.a.ip = true;
            this.an(false);
            if (a) {
                var b = this.a.model.absoluteWidth;
                this.a.e6.q(this.a, this.a.model, igniteuiReactCore.truncate(this.a.jm));
                this.d();
                if (b != this.a.model.absoluteWidth) {
                    this.a.externalGrid.onContentSizeChanged();
                }
            }
            this.a.ip = false;
            this.a.renderingEngine.invalidateVisibility(function () { return _this.a.fc.l(_this.a); });
            this.a.renderingEngine.refresh(this.a.model, true);
        };
        GridEffectManager.prototype.d = function () {
            var a = this.k.count > 0;
            var b = this.p();
            var c = this.a.model;
            var d = this.a.de;
            this.f(b, c, d);
            return a;
        };
        GridEffectManager.prototype.ac = function () {
            var a = this.p();
            var b = this.a.model;
            var c = this.a.de;
            this.g(a, b, c);
        };
        GridEffectManager.prototype.ab = function () {
            var a = this.p();
            var b = this.a.model;
            var c = this.a.de;
            this.e(a, b, c);
        };
        GridEffectManager.prototype.an = function (a) {
            var b = this.p();
            if ((b - this.q < 15) && !a) {
                this.b.requestFrame(this.o);
                return;
            }
            var c = this.a.model;
            var d = this.a.de;
            var e = true;
            if (!this.f(b, c, d)) {
                e = false;
            }
            if (!this.h(b, c, d)) {
                e = false;
            }
            if (!this.g(b, c, d)) {
                e = false;
            }
            if (!this.e(b, c, d)) {
                e = false;
            }
            if (e && this.k.count == 0 && this.j.count == 0 && this.i.count == 0 && this.m.count == 0 && this.l.count == 0 && this.n.count == 0) {
                this.am();
            }
            else {
                this.b.requestFrame(this.o);
            }
        };
        GridEffectManager.prototype.p = function () {
            var a = igniteuiReactCore.dateNow();
            return a.getTime();
        };
        GridEffectManager.prototype.am = function () {
            this.b.teardownTicking(this.o);
            this.o = -1;
        };
        GridEffectManager.prototype.aa = function () {
            if (this.o == -1) {
                this.o = this.b.setupTicking(igniteuiReactCore.runOn(this, this.ad));
                this.b.requestFrame(this.o);
            }
        };
        GridEffectManager.prototype.u = function (a, b) {
            b.b0 = a.o;
            b.bl = this.p();
            this.ai(a.o, true, b);
            this.k.add(b);
            this.aa();
        };
        GridEffectManager.prototype.ai = function (a, b, c) {
            for (var d = this.k.count - 1; d >= 0; d--) {
                if (this.k._inner[d].b0 == a && this.k._inner[d].am(c)) {
                    if (b) {
                        this.k._inner[d].bt(c);
                    }
                    this.k.removeAt(d);
                }
            }
        };
        GridEffectManager.prototype.z = function (a, b) {
            b.b0 = a.o;
            b.bl = this.p();
            this.al(a, true, b);
            this.n.add(b);
            this.aa();
        };
        GridEffectManager.prototype.al = function (a, b, c) {
            for (var d = this.n.count - 1; d >= 0; d--) {
                if (this.n._inner[d].b0 == a.o && this.n._inner[d].am(c)) {
                    if (b) {
                        this.n._inner[d].bt(c);
                    }
                    this.n.removeAt(d);
                }
            }
        };
        GridEffectManager.prototype.t = function (a, b) {
            b.b2 = a.o;
            b.bl = this.p();
            this.ah(a.o, true, b);
            this.j.add(b);
            this.aa();
        };
        GridEffectManager.prototype.x = function (a) {
            a.b2 = -300;
            a.bl = this.p();
            this.ah(-300, true, a);
            this.j.add(a);
            this.aa();
        };
        GridEffectManager.prototype.y = function (a) {
            a.b2 = -400;
            a.bl = this.p();
            this.ah(-400, true, a);
            this.j.add(a);
            this.aa();
        };
        GridEffectManager.prototype.ah = function (a, b, c) {
            for (var d = this.j.count - 1; d >= 0; d--) {
                if (this.j._inner[d].b2 == a && this.j._inner[d].am(c)) {
                    if (b) {
                        this.j._inner[d].bt(c);
                    }
                    this.j.removeAt(d);
                }
            }
        };
        GridEffectManager.prototype.w = function (a, b) {
            b.b0 = a;
            b.bl = this.p();
            this.ak(a, true, b);
            this.m.add(b);
            this.aa();
        };
        GridEffectManager.prototype.ak = function (a, b, c) {
            for (var d = this.m.count - 1; d >= 0; d--) {
                if (this.m._inner[d].b0.equals(a) && this.m._inner[d].am(c)) {
                    if (b) {
                        this.m._inner[d].bt(c);
                    }
                    this.m.removeAt(d);
                }
            }
        };
        GridEffectManager.prototype.v = function (a, b) {
            b.b0 = a;
            b.bl = this.p();
            this.aj(a, true, b);
            this.l.add(b);
            this.aa();
        };
        GridEffectManager.prototype.aj = function (a, b, c) {
            for (var d = this.l.count - 1; d >= 0; d--) {
                if (this.l._inner[d].b0.equals(a) && this.l._inner[d].am(c)) {
                    if (b) {
                        this.l._inner[d].bt(c);
                    }
                    this.l.removeAt(d);
                }
            }
        };
        GridEffectManager.prototype.r = function (a, b, c) {
            b.b4 = c;
            b.b0 = a;
            b.bl = this.p();
            b.b2 = true;
            this.ag(a, true, b);
            this.i.add(b);
            this.aa();
        };
        GridEffectManager.prototype.s = function (a, b) {
            b.b0 = a;
            b.bl = this.p();
            b.b2 = false;
            this.ag(a, true, b);
            this.i.add(b);
            this.aa();
        };
        GridEffectManager.prototype.ag = function (a, b, c) {
            for (var d = this.i.count - 1; d >= 0; d--) {
                if (this.i._inner[d].b0.equals(a) && this.i._inner[d].am(c)) {
                    if (b) {
                        this.i._inner[d].bt(c);
                    }
                    this.i.removeAt(d);
                }
            }
        };
        GridEffectManager.prototype.f = function (a, b, c) {
            var d = true;
            var e;
            var f;
            var g = new igniteuiReactCore.List$1(ColumnEffect.$, 0);
            for (var h = 0; h < this.k.count; h++) {
                if (b.g(this.k._inner[h].b0) == null) {
                    this.ai(this.k._inner[h].b0, false, this.k._inner[h]);
                }
            }
            for (var i = 0; i < b.br.count; i++) {
                e = b.br._inner[i];
                for (var j = 0; j < this.k.count; j++) {
                    f = this.k._inner[j];
                    if (f.ah(e, b)) {
                        if (!f.au(e, b, c, a)) {
                            d = false;
                        }
                        else {
                            g.add(f);
                        }
                    }
                }
            }
            for (var k = 0; k < g.count; k++) {
                this.ai(g._inner[k].b0, false, g._inner[k]);
                g._inner[k].bu();
            }
            return d;
        };
        GridEffectManager.prototype.h = function (a, b, c) {
            var d = true;
            var e = b.bw;
            var f = new igniteuiReactCore.List$1(GridColumnSpacer.$, 0);
            var g = new igniteuiReactCore.List$1(SpacerEffect.$, 0);
            for (var h = 0; h < e.count; h++) {
                var i = e._inner[h];
                for (var j = 0; j < i.count; j++) {
                    var k = i._inner[j];
                    for (var l = 0; l < this.n.count; l++) {
                        if (this.n._inner[l].aj(k, b)) {
                            if (!this.n._inner[l].av(k, b, c, a)) {
                                d = false;
                            }
                            else {
                                f.add(k);
                                g.add(this.n._inner[l]);
                            }
                        }
                    }
                }
            }
            for (var m = 0; m < f.count; m++) {
                this.al(f._inner[m], false, g._inner[m]);
                g._inner[m].bu();
            }
            return d;
        };
        GridEffectManager.prototype.g = function (a, b, c) {
            var d = true;
            var e = new CellPath(1, 0, 0, 0);
            var f;
            for (var g = 0; g < this.m.count; g++) {
                f = this.m._inner[g];
                e.b = f.b0.b;
                e.w = f.b0.w;
                e.x = f.b0.x;
                if (!f.aw(b.bv._inner[e.x], b, c, a)) {
                    d = false;
                }
            }
            return d;
        };
        GridEffectManager.prototype.e = function (a, b, c) {
            var d = true;
            if (this.j.count == 0 && this.l.count == 0 && this.i.count == 0) {
                return true;
            }
            for (var e = 0; e < this.j.count; e++) {
                this.j._inner[e].b1 = -1;
                var f = b.g(this.j._inner[e].b2);
                if (f != null) {
                    this.j._inner[e].b1 = f.m;
                    this.j._inner[e].b0 = f.c;
                }
                this.j._inner[e].ap = true;
            }
            for (var g = 0; g < this.l.count; g++) {
                this.l._inner[g].ap = true;
            }
            for (var h = 0; h < this.i.count; h++) {
                this.i._inner[h].b3 = -1;
                if (this.i._inner[h].b2) {
                    var i = b.g(this.i._inner[h].b4);
                    if (i != null) {
                        this.i._inner[h].b3 = i.m;
                        this.i._inner[h].b1 = i.c;
                    }
                }
                this.i._inner[h].ap = true;
            }
            for (var j = 0; j < b.bu.count; j++) {
                var k = b.bu._inner[j];
                for (var l = 0; l < k.o.count; l++) {
                    if (k.p._inner[l]) {
                        continue;
                    }
                    var m = k.o._inner[l];
                    for (var n = 0; n < this.j.count; n++) {
                        var o = this.j._inner[n];
                        if (o.ag(m, b)) {
                            if (!o.at(k.q._inner[l], b, c, a)) {
                                o.ap = false;
                            }
                        }
                    }
                    for (var p = 0; p < this.l.count; p++) {
                        var q = this.l._inner[p];
                        if (q.ag(m, b)) {
                            if (!q.at(k.q._inner[l], b, c, a)) {
                                q.ap = false;
                            }
                        }
                    }
                    for (var r = 0; r < this.i.count; r++) {
                        var s = this.i._inner[r];
                        if (s.ag(m, b)) {
                            if (!s.at(k.q._inner[l], b, c, a)) {
                                s.ap = false;
                            }
                        }
                    }
                }
            }
            var t = new igniteuiReactCore.List$1(ColumnCellsEffect.$, 0);
            for (var u = 0; u < this.j.count; u++) {
                if (this.j._inner[u].ak(b, c, a) && this.j._inner[u].ap) {
                    t.add(this.j._inner[u]);
                }
                else {
                    d = false;
                }
            }
            var v = new igniteuiReactCore.List$1(RowCellsEffect.$, 0);
            for (var w = 0; w < this.l.count; w++) {
                if (this.l._inner[w].ak(b, c, a) && this.l._inner[w].ap) {
                    v.add(this.l._inner[w]);
                }
                else {
                    d = false;
                }
            }
            var x = new igniteuiReactCore.List$1(CellEffect.$, 0);
            for (var y = 0; y < this.i.count; y++) {
                if (this.i._inner[y].ak(b, c, a) && this.i._inner[y].ap) {
                    x.add(this.i._inner[y]);
                }
                else {
                    d = false;
                }
            }
            for (var z = 0; z < t.count; z++) {
                this.ah(t._inner[z].b2, false, t._inner[z]);
                t._inner[z].bu();
            }
            for (var aa = 0; aa < v.count; aa++) {
                this.aj(v._inner[aa].b0, false, v._inner[aa]);
                v._inner[aa].bu();
            }
            for (var ab = 0; ab < x.count; ab++) {
                this.ag(x._inner[ab].b0, false, x._inner[ab]);
                x._inner[ab].bu();
            }
            return d;
        };
        GridEffectManager.$t = igniteuiReactCore.markType(GridEffectManager, 'GridEffectManager');
        return GridEffectManager;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridLayerController = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridLayerController, _super);
        function GridLayerController() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.e = new RecyclingManager();
            return _this;
        }
        GridLayerController.prototype.a = function (a, b) {
            var c = b.bu;
            var d = c.count;
            for (var e = 0; e < d; e++) {
                var f = c._inner[e].b(a);
                if (f != undefined) {
                    return f;
                }
            }
            return null;
        };
        GridLayerController.prototype.b = function (a, b, c, d, e, f, g, h) {
            var i = this.a(a, c);
            if (i == null) {
                var j = null;
                var k = null;
                var l = false;
                var m = -1;
                if (a.ag) {
                    m = b.d9.getDataRow(a);
                    k = b.d9.resolveValueForPath(b, a);
                    if (k == null && b.d9.isPlaceholderValue(a)) {
                        l = true;
                    }
                }
                var n = b.nc(a, b, k, m);
                j = this.e.a(n);
                if (j == null) {
                    j = b.ao(a, n);
                }
                else {
                    j.jr();
                }
                var o = a;
                if (j.k != null) {
                    o = j.k;
                }
                if (c.bh.d(o)) {
                    c.bh.item(o).remove(j);
                    if (c.bh.item(o).count == 0) {
                        c.bh.f(o);
                    }
                }
                d.s(a, j);
                j.q = d;
                j.k = a;
                j.v = e;
                j.ej = m;
                j.a6 = f;
                j.a7 = g;
                j.a2 = h;
                j.x = a.d;
                var p = false;
                var q = false;
                var r = 0;
                var s = j.k.az;
                var t = (s >= 0 && c.br._inner[s].n == 0) || a.au;
                if (t) {
                    r = b.d9.getRowIndent(j.k.w);
                    var u = b.d9.getRowType(j.k.w);
                    if (u == 1 && b.hs) {
                        if (b.iv) {
                            if (a.az == -401 || (a.az == -400 && c.cf == 0)) {
                                p = b.hs;
                                q = b.actualDataSource.getIsRowExpandedAtIndex(j.k.w);
                            }
                        }
                        else {
                            p = b.hs;
                            q = b.actualDataSource.getIsRowExpandedAtIndex(j.k.w);
                        }
                    }
                }
                j.ar = p;
                j.az = q;
                j.e5 = r;
                b.rx(j, k, b.d9.resolveRow(m));
                if (l) {
                    j.cb = 1;
                }
                return j;
            }
            else {
                this.g(a, c, d);
                i.v = e;
                var v = i.k.a5;
                i.k = a;
                i.a6 = f;
                i.a7 = g;
                i.a2 = h;
                i.x = a.d;
                if (a.a5 != v && a.w >= 0 && a.az >= 0) {
                    i.a9 = b.e0.o(i);
                    i.b8 = i.a9 ? 1 : 0;
                    i.b3 = b.d5.c(a.w) ? 1 : 0;
                }
                var w = false;
                var x = false;
                var y = 0;
                var z = i.k.az;
                var aa = (z >= 0 && c.br._inner[z].n == 0) || a.au;
                if (aa) {
                    y = b.d9.getRowIndent(i.k.w);
                    var ab = b.d9.getRowType(i.k.w);
                    if (ab == 1 && b.hs) {
                        if (b.iv) {
                            if (a.az == -401 || (a.az == -400 && c.cf == 0)) {
                                w = b.hs;
                                x = b.actualDataSource.getIsRowExpandedAtIndex(i.k.w);
                            }
                        }
                        else {
                            w = b.hs;
                            x = b.actualDataSource.getIsRowExpandedAtIndex(i.k.w);
                        }
                    }
                }
                i.ar = w;
                i.az = x;
                i.e5 = y;
                return i;
            }
        };
        GridLayerController.prototype.d = function (a, b) {
            for (var c = 0; c < b.bu.count; c++) {
                if (b.bu._inner[c].d(a)) {
                    return b.bu._inner[c];
                }
            }
            return null;
        };
        GridLayerController.prototype.g = function (a, b, c) {
            var d = this.d(a, b);
            if (d == null || d == c) {
                return;
            }
            var e = d.item(a);
            d.f(a);
            c.s(a, e);
            e.q = c;
        };
        GridLayerController.prototype.f = function (a, b, c) {
            if (c == null) {
                c = this.d(a, b);
            }
            if (c == null) {
                return;
            }
            var d = c.item(a);
            c.f(a);
            var e = null;
            if (b.bh.d(a)) {
                e = b.bh.item(a);
                if (e.count == 1) {
                    var f = a.aa();
                    b.bh.f(a);
                    b.bh.s(f, e);
                }
            }
            else {
                e = new igniteuiReactCore.List$1(CellModel.$, 0);
                b.bh.s(a, e);
            }
            e.add(d);
        };
        GridLayerController.prototype.i = function (a, b) {
            var c = this.d(a, b);
            if (c == null) {
                return;
            }
            var d = this.c(a, b);
            this.f(a, b, c);
            this.e.c(d);
        };
        GridLayerController.prototype.j = function (a, b, c) {
            if (b == null) {
                return;
            }
            var d = b.item(a);
            this.f(a, c, b);
            this.e.c(d);
        };
        GridLayerController.prototype.c = function (a, b) {
            for (var c = 0; c < b.bu.count; c++) {
                if (b.bu._inner[c].d(a)) {
                    return b.bu._inner[c].item(a);
                }
            }
            return null;
        };
        GridLayerController.prototype.h = function (a, b, c, d, e, f) {
            if (a.k.h) {
                a.cc = c + a.b4 + (a.b5 * b.br._inner[a.k.az].k);
            }
            else {
                a.cc = c + a.b4 + (a.b5 * a.gf);
            }
            a.cd = d + a.b9 + (a.ca * a.e0);
            a.f2 = igniteuiReactCore.truncate(Math.round(a.cc));
            a.f4 = igniteuiReactCore.truncate(Math.round(a.cd));
            a.gf = igniteuiReactCore.truncate(e);
            a.e0 = igniteuiReactCore.truncate(f);
        };
        GridLayerController.$t = igniteuiReactCore.markType(GridLayerController, 'GridLayerController');
        return GridLayerController;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var VisibilityEngine = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(VisibilityEngine, _super);
        function VisibilityEngine() {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this.c = null;
            _this.f = false;
            _this.j = 0;
            _this.e = false;
            return _this;
        }
        Object.defineProperty(VisibilityEngine.prototype, "k", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                this.j = a;
            },
            enumerable: true,
            configurable: true
        });
        VisibilityEngine.prototype.v = function () {
            this.e = true;
        };
        VisibilityEngine.prototype.l = function (a) {
            var b = false;
            if (this.e) {
                this.e = false;
                b = true;
            }
            this.m(a, a.model, a.e6, b);
        };
        VisibilityEngine.prototype.m = function (a, b, c, d) {
            a.p5();
            var e = b.actualVisibleRegion;
            if (e.isEmpty) {
                return;
            }
            if (e.width == 0 || e.height == 0) {
                return;
            }
            if (b.br.count == 0) {
                return;
            }
            if (a.d9 == null) {
                return;
            }
            var f = this.a(a, b, c, e);
            for (var g = 0; g < b.bx.count; g++) {
                var h = b.bx._inner[g];
                var i = c.k(h, a, b);
                b.br._inner[h].l = i;
            }
            b.cp = 0;
            b.cv = 0;
            b.b7 = 0;
            b.bf = f.b;
            b.be = f.a;
            b.cn = f.k;
            b.cq = f.m;
            b.co = f.l;
            b.cr = f.n;
            a.sb();
            this.d = f.b;
            this.c = f.a;
            var j = a.de;
            a.ip = true;
            this.u(a, b, f, j);
            if (b.bx.count == 0) {
                return;
            }
            this.n(a, b, f, j);
            f.j += b.ch;
            if (this.c.w == -1) {
                return;
            }
            this.h(a, b, b.actualVisibleRegion, f, false);
            this.o(a, b, f, j);
            a.c9.ab();
            a.ip = false;
        };
        VisibilityEngine.prototype.a = function (a, b, c, d) {
            var e;
            e = new CalculationParameters();
            e.j = d.top;
            e.g = d.bottom;
            e.h = d.left;
            e.i = d.right;
            if (this.k > 0) {
                var f = this.k * a.kl;
                e.j = Math.max(e.j - f, 0);
                e.g = Math.min(e.g + f, b.absoluteHeight);
                e.h = Math.max(e.h - f, 0);
                e.i = Math.min(e.i + f, b.absoluteWidth);
            }
            e.o = a.inset;
            e.d = Math.max(e.h, a.inset.c);
            e.f = Math.min(e.i, b.absoluteWidth - a.inset.d);
            e.e = e.f - e.d;
            e.b = c.b(e.j + b.cl + b.cm, b);
            e.a = c.b(e.g, b);
            e.k = 0;
            e.m = 0;
            b.bx.clear();
            var g = b.cf + igniteuiReactCore.truncate(a.inset.c);
            var h = g;
            var i = 0;
            var j = 0;
            var k = b.cg;
            for (var l = 0; l < b.br.count; l++) {
                var m = b.br._inner[l];
                var n = b.bw._inner[l];
                var o = b.br._inner[l].d == 0;
                if (o) {
                    g += igniteuiReactCore.truncate(Math.round(n.ad(-1)));
                    if (m.a != 6) {
                        g += (m.k) + a.model.cc - igniteuiReactCore.truncate(Math.round(m.f(b)));
                    }
                }
                if (m.a == 3) {
                    continue;
                }
                if (b.br._inner[l].d == 1) {
                    b.bx.insert(i, l);
                    i++;
                }
                else if (b.br._inner[l].d == 2) {
                    b.bx.insert(b.bx.count, l);
                    j++;
                    if (m.a == 6) {
                        k -= m.k;
                    }
                }
                else {
                    if (g >= e.d + b.cf && h <= e.f - k) {
                        b.bx.insert(b.bx.count - j, l);
                    }
                    else if (b.br._inner[l].a == 2 || b.br._inner[l].a == 1 || b.br._inner[l].a == 6) {
                        b.bx.insert(b.bx.count - j, l);
                    }
                    else if (g < e.d + b.cf) {
                        e.l++;
                    }
                    else if (h > e.f - b.cg) {
                        e.n++;
                    }
                }
                if (o) {
                    h = g;
                    g += igniteuiReactCore.truncate(Math.round(n.af(-1)));
                }
            }
            if (b.bx.count > 0) {
                e.k = b.bx._inner[0];
                e.m = b.bx._inner[b.bx.count - 1];
            }
            return e;
        };
        VisibilityEngine.prototype.u = function (a, b, c, d) {
            var e = this.d.x;
            var f = this.c.x;
            var g = this.d.w;
            var h = this.c.w;
            var i = 0;
            var j = 0;
            var k = 0;
            var l = false;
            var m = false;
            var n = false;
            var o = false;
            var p = false;
            var q = false;
            var r = a.kk == 0;
            var s = a.lg == 0;
            var t = null;
            var u = a.d9.getStickyRows();
            if (u != null) {
                for (var v = 0; v < u.length; v++) {
                    if (t == null) {
                        t = new igniteuiReactCore.HashSet$1(igniteuiReactCore.Number_$type, 0);
                    }
                    t.add_1(u[v]);
                }
            }
            for (var w = 0; w < b.bu.count; w++) {
                var x = b.bu._inner[w];
                x.g = true;
                for (var y = 0; y < x.o.count; y++) {
                    if (x.p._inner[y]) {
                        continue;
                    }
                    var z = x.o._inner[y];
                    m = false;
                    l = false;
                    i = z.x;
                    j = z.w;
                    k = z.az;
                    m = z.as || z.j || z.au || z.al || z.an || z.ak || z.am;
                    p = z.ap || z.al || z.an;
                    o = z.g;
                    n = t != null && t.contains(j);
                    q = z.d != 0;
                    if ((j == -1000 && k == -1000) || (j == -1001 && k == -1001)) {
                        continue;
                    }
                    if (b.bx.count == 0) {
                        l = true;
                    }
                    if (z.as && s) {
                        l = true;
                    }
                    if (z.g && r) {
                        l = true;
                    }
                    if (z.ap && (a.dragger == null || !a.dragger.isDragActive)) {
                        l = true;
                    }
                    if ((z.al || z.ak) && b.cf == 0) {
                        l = true;
                    }
                    if ((z.an || z.am) && b.cg == 0) {
                        l = true;
                    }
                    if (!m && !b.bx.contains(k)) {
                        l = true;
                    }
                    else if (!o && (i < e || i > f)) {
                        l = true;
                    }
                    else {
                        if (!n && !p && !z.al && !z.an && !z.ak && !z.am) {
                            if (i == e && j < g) {
                                l = true;
                            }
                            if (i == f && j > h) {
                                l = true;
                            }
                        }
                    }
                    if (!a.iv && (z.az == -401 || z.az == -402)) {
                        l = true;
                    }
                    if (!l) {
                        var aa = a.d9.getRowType(j);
                        var ab = a.d9.isRowSpanning(aa) && a.dy != 1;
                        if (!z.as && !z.ap && !z.al && !z.an && !z.ak && !z.am) {
                            if (b.bn && (aa == 1 || aa == 2)) {
                                l = true;
                            }
                            else if ((ab && !m) || (m && !ab)) {
                                l = true;
                            }
                            else if ((z.at && aa != 5) || (z.aq && aa != 4) || (!z.at && aa == 5) || (!z.aq && aa == 4)) {
                                l = true;
                            }
                        }
                        else if ((aa == 4 && !z.ar) || (aa != 4 && z.ar)) {
                            l = true;
                        }
                    }
                    if (l) {
                        a.de.j(z, x, b);
                    }
                }
                x.g = false;
            }
            b.bn = false;
        };
        VisibilityEngine.prototype.t = function (a, b, c) {
            var d = c.b;
            var e = c.a;
            var f = e.x;
            var g = new CellPath(1, 0, 0, 0);
            for (var h = d.x; h <= f; h++) {
                this.q(h, a, b, c, g);
            }
        };
        VisibilityEngine.prototype.q = function (a, b, c, d, e) {
            var f = d.b;
            var g = d.a;
            var h = c.bv;
            var i = b.de;
            var j = g.x;
            var k = d.d;
            var l = d.f;
            var m = d.e;
            var n = h._inner[a];
            var o = a == j ? g.w : n.m - 1;
            if (o == -201) {
                o = n.m - 1;
            }
            var p = 0;
            if (f.x == a) {
                p = f.w == -200 ? 0 : f.w;
            }
            if (p == -201) {
                var q = new CellPath(1, 0, a, -200);
                this.ab(q, c, k, n.i + n.l() - n.d, m, a, false, b);
                e.x = a;
                e.w = -201;
                e.az = 0;
                return;
            }
            if (n.g > 0) {
                this.s(a, b, c, d, e, f, n, p);
            }
            if (n.d > 0) {
                this.r(a, b, c, d, e, i, j, n);
            }
            e.x = a;
        };
        VisibilityEngine.prototype.i = function (a, b, c) {
            var d = this.a(a, b, a.e6, c);
            return this.h(a, b, c, d, true);
        };
        VisibilityEngine.prototype.h = function (a, b, c, d, e) {
            var f = d.a;
            var g = d.b;
            var h = d.a.x;
            var i = d.b.x;
            var j = new CellPath(1, 0, 0, 0);
            var k = b.bv._inner[0];
            var l = a.d9.getStickyRowsInRange(g.w, f.w);
            var m = -1;
            var n = -1;
            var o = -1;
            var p = -1;
            var q = false;
            var r = a.lg;
            var s = a.dy == 3;
            var t = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Number_$type, PinnedRowInfo.$, 0);
            var u = new igniteuiReactCore.List$1(PinnedRowInfo.$, 0);
            b.cu = 0;
            if (l != null && ((a.a7.i.count > 0 && a.hu) || a.a7.i.count == 0)) {
                var v = c.top + b.ci;
                var w = c.bottom;
                var _loop_2 = function (x) {
                    var y = l[x];
                    var z = a.d9.getRowType(y);
                    var aa = y * k.k() + k.i;
                    var ab = new PinnedRowInfo();
                    ab.b = b;
                    ab.a = z;
                    ab.k = k.e(y);
                    ab.i = k.j(y);
                    ab.n = a.d9.getStickRowPriority(y);
                    ab.m = y;
                    ab.l = aa;
                    ab.e = (x == l.length - 1) || l[x + 1] != y + 1;
                    ab.f = z == 5 && (x == l.length - 1);
                    t.addItem(y, ab);
                    if (x == 0) {
                        if (ab.a != 4) {
                            if (ab.l <= v) {
                                ab.l += (v - ab.l);
                                p = x;
                            }
                            else if (ab.j > c.bottom) {
                                ab.l += (c.bottom - ab.j);
                                q = true;
                            }
                        }
                        else {
                            if (ab.j > c.bottom) {
                                ab.l += (c.bottom - ab.j);
                                ab.h = true;
                                q = true;
                            }
                        }
                        return "continue";
                    }
                    var ac = l[x - 1];
                    var ad = a.d9.getStickRowPriority(ac);
                    var ae = a.d9.getStickRowPriority(y);
                    var af = t.item(ac);
                    var ag = a.d9.isExclusivelySticky(y);
                    var ah = x - 1 == p;
                    af.f = (z != 5 && af.a == 5) || (z == 5 && x == l.length - 1);
                    var ai = ((function () {
                        var $ret = new PushRowSettings();
                        $ret.a = l;
                        $ret.d = t;
                        $ret.c = true;
                        $ret.b = ag;
                        return $ret;
                    })());
                    if (ab.a != 4) {
                        if (ab.l <= af.j && ah) {
                            p = x;
                            var aj = this_2.b(x - 1, x, x, ai);
                            if (!aj.b) {
                                ab.l = aj.a.j;
                            }
                        }
                        if (ab.a == 2) {
                            var ak = a.d9.getRootSummaryRowCount();
                            var al = c.bottom - ak * k.k();
                            if (ab.j > al) {
                                ab.l -= ab.j - al;
                                ab.h = true;
                                q = true;
                                ai.c = false;
                                var am = this_2.b(x - 1, x, x, ai);
                                if (!am.b) {
                                    ab.l = am.a.j;
                                }
                            }
                        }
                        else if (s && ab.a == 5) {
                            var an = a.d9.getRootSummaryRowCount();
                            var ao = c.bottom - an * k.k();
                            if (ab.j > ao) {
                                ab.l -= ab.j - ao;
                                ab.h = true;
                                q = true;
                                ai.c = false;
                                var ap = this_2.b(x - 1, x, x, ai);
                                if (!ap.b) {
                                    ab.l = ap.a.j;
                                }
                            }
                        }
                    }
                    if (z == 4) {
                        ab.l += (c.bottom - ab.j);
                        ab.h = true;
                        b.b7++;
                        q = true;
                        this_2.y(a, x - 1, x, 4, l, t);
                    }
                };
                var this_2 = this;
                for (var x = 0; x < l.length; x++) {
                    _loop_2(x);
                }
                for (var aq = 0; aq < l.length; aq++) {
                    for (var ar = aq + 1; ar < l.length; ar++) {
                        var as = t.item(l[aq]);
                        var at = t.item(l[ar]);
                        if (at.l < as.j) {
                            at.g = true;
                            at.d = Math.round(at.j) <= Math.round(as.j);
                        }
                        else {
                            break;
                        }
                    }
                }
                for (var au = 0; au <= p; au++) {
                    var av = l[au];
                    var aw = t.item(av).l;
                    var ax = t.item(av).j;
                    var ay = t.item(av).k;
                    var az = t.item(av).g;
                    var a0 = t.item(av).d;
                    m = av;
                    var a1 = false;
                    var a2 = false;
                    var a3 = false;
                    if (t.item(av).a == 3) {
                        a1 = true;
                        a2 = true;
                    }
                    if (t.item(av).a == 3 && t.item(av).e) {
                        a3 = true;
                    }
                    u.add(t.item(av));
                    if (!e) {
                        this.p(a, b, d, j, a.de, av, aw, ay, true, a1, a2, a3, az, a0);
                    }
                }
                if (q) {
                    var a4 = 0;
                    for (var a5 = 0; a5 < l.length; a5++) {
                        var a6 = l[a5];
                        if (!t.item(a6).h) {
                            continue;
                        }
                        if (o == -1) {
                            o = a6;
                        }
                        var a7 = t.item(a6).l;
                        var a8 = t.item(a6).j;
                        var a9 = t.item(a6).k;
                        var ba = t.item(a6).g;
                        var bb = t.item(a6).d;
                        n = a6;
                        var bc = t.item(a6).a == 3 && t.item(a6).e;
                        var bd = t.item(a6).a == 3;
                        if (!e) {
                            j.i = true;
                            j.o = (b.cp - 1) - a4;
                            this.p(a, b, d, j, a.de, a6, a7, a9, true, bd, bd, bc, ba, bb);
                            j.i = false;
                            j.o = -1;
                        }
                        a4++;
                    }
                }
            }
            for (var be = Math.max(m + 1, g.w); be <= f.w; be++) {
                if (o != -1 && n != -1) {
                    if (be >= o && be <= n) {
                        continue;
                    }
                }
                var bf = k.f(be);
                bf += k.i;
                var bg = k.e(be);
                var bh = false;
                var bi = false;
                var bj = false;
                var bk = a.d9.getRowType(be);
                if (bk == 3) {
                    bj = true;
                    bi = true;
                }
                if (bk == 0 && a.d9.isRowPinned(be)) {
                    bi = true;
                }
                if (bk == 3) {
                    if (t.containsKey(be) && t.item(be).e) {
                        bh = true;
                    }
                }
                if (!e) {
                    this.p(a, b, d, j, a.de, be, bf, bg, false, bi, bj, bh, false, false);
                }
            }
            return u;
        };
        VisibilityEngine.prototype.y = function (a, b, c, d, e, f) {
            if (b < 0) {
                return;
            }
            var g = e[b];
            var h = e[c];
            if (f.item(g).a == d) {
                if (f.item(g).j > f.item(h).l) {
                    f.item(g).l -= f.item(g).j - f.item(h).l;
                    f.item(g).h = true;
                    this.y(a, b - 1, b, d, e, f);
                }
            }
        };
        VisibilityEngine.prototype.b = function (a, b, c, d) {
            var _this = this;
            var e = d.a[a];
            var f = d.a[b];
            var g = d.a[c];
            var h = d.d;
            var i = h.item(e).n;
            var j = h.item(f).n;
            var k = h.item(g).n;
            var l = true;
            if (f == 12) {
                var m = 0;
            }
            d.e++;
            if (h.item(f).l < h.item(e).j) {
                if (j > i || (j == i && d.b)) {
                    var n = h.item(f).l - h.item(e).j;
                    var o_2 = this.g(n, a, c, d);
                    var p = null;
                    while (o_2 && a > 0) {
                        a = a - 1;
                        p = this.b(a, c, c, d);
                        o_2 = p.b;
                    }
                    if (p == null) {
                        p = ((function () {
                            var $ret = new PushRowResult();
                            $ret.b = o_2;
                            $ret.a = h.item(d.a[a]);
                            return $ret;
                        })());
                    }
                    return p;
                }
                else if (j == i && !d.b) {
                    return ((function () {
                        var $ret = new PushRowResult();
                        $ret.b = false;
                        $ret.a = h.item(e);
                        return $ret;
                    })());
                }
                else if (j < i) {
                    if (k >= i) {
                        if (!l) {
                            var q_1 = h.item(f).l - h.item(e).j;
                            return ((function () {
                                var $ret = new PushRowResult();
                                $ret.b = _this.g(q_1, a, c, d);
                                $ret.a = h.item(e);
                                return $ret;
                            })());
                        }
                        else {
                            if (h.item(g).l < h.item(e).j) {
                                var r_1 = h.item(g).l - h.item(e).j;
                                return ((function () {
                                    var $ret = new PushRowResult();
                                    $ret.b = _this.g(r_1, a, c, d);
                                    $ret.a = h.item(e);
                                    return $ret;
                                })());
                            }
                        }
                        return ((function () {
                            var $ret = new PushRowResult();
                            $ret.b = true;
                            $ret.a = h.item(e);
                            return $ret;
                        })());
                    }
                    return ((function () {
                        var $ret = new PushRowResult();
                        $ret.b = false;
                        $ret.a = h.item(e);
                        return $ret;
                    })());
                }
            }
            return ((function () {
                var $ret = new PushRowResult();
                $ret.b = true;
                $ret.a = h.item(e);
                return $ret;
            })());
        };
        VisibilityEngine.prototype.g = function (a, b, c, d) {
            var e = d.a[b];
            d.d.item(e).l += a;
            d.d.item(e).h = !d.c;
            if (b > 0) {
                var f = this.b(b - 1, b, c, d);
                if (!d.b || !d.c) {
                    if (!f.b) {
                        var g = d.a[b - 1];
                        d.d.item(e).l = d.d.item(g).j;
                        return false;
                    }
                }
            }
            return true;
        };
        VisibilityEngine.prototype.p = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
            d.w = f;
            d.d = 0;
            d.ao = m;
            d.af = n;
            var o = b.br;
            var p = c.d;
            var q = c.f;
            var r = c.e;
            var s = a.lg;
            var t = a.d9.getRowType(f);
            d.aq = t == 4;
            d.at = t == 5;
            var u = false;
            if (t != 0) {
                u = a.d9.isRowSpanning(t) && a.dy != 1;
            }
            if (u) {
                var v = a.iv ? b.cf : 0;
                var w = a.iv ? b.cg : 0;
                var x = p;
                var y = r;
                if (v > 0) {
                    d.az = -401;
                    y = b.cf;
                    this.z(x, y, g, h, d.aa(), b, p, q, a, i, j, k, l, t);
                }
                d.az = -400;
                x = p + v;
                y = r - v - w;
                this.z(x, y, g, h, d.aa(), b, p, q, a, i, j, k, l, t);
                if (w > 0) {
                    d.az = -402;
                    x = q - b.cg;
                    y = b.cg;
                    this.z(x, y, g, h, d.aa(), b, p, q, a, i, j, k, l, t);
                }
            }
            else {
                for (var z = 0; z < b.bx.count; z++) {
                    var aa = b.bx._inner[z];
                    var ab = o._inner[aa];
                    d.az = ab.m;
                    d.a5 = ab.n;
                    d.d = ab.d;
                    var ac = d.aa();
                    this.z(c.o.c + ab.l, ab.k, g, h, ac, b, p, q, a, i, j, k, l, t);
                }
            }
            var ad = t != 4 && t != 2 && (t != 5 || a.dy != 3);
            if (ad && i) {
                b.cv = igniteuiReactCore.truncate(Math.round((g + h + a.lh) - c.j));
            }
            var ae = t == 4 || (t == 5 && a.dy == 3);
            if (ae && i && g < c.g) {
                b.cu += igniteuiReactCore.truncate(h) + a.lh;
            }
            if (s > 0) {
                if (ad && i) {
                    b.cv = igniteuiReactCore.truncate(Math.round((g + h + a.lh + s) - c.j));
                }
                if (ae && i && g < c.g) {
                    b.cu += s;
                }
                d.d = 0;
                d.az = -300;
                d.ar = t == 4;
                this.ad(c, d.aa(), b, p, r, g + h + a.lh, s, a, i, j, k, l, t);
            }
        };
        VisibilityEngine.prototype.r = function (a, b, c, d, e, f, g, h) {
            var i = d.d;
            var j = d.f;
            var k = d.e;
            e.x = a;
            e.w = -201;
            e.az = 0;
            var l = new CellPath(1, e.az, e.x, e.w);
            var m = h.i + h.l() - h.d;
            var n = m;
            if (a == g) {
                n = d.g - h.d;
                if (n < (h.i + h.g)) {
                    n = (h.i + h.g);
                }
                this.ac(l, c, i, Math.min(m, n), k, a, false, true, b);
            }
            else {
                this.ab(l, c, i, Math.min(m, n), k, a, false, b);
            }
        };
        VisibilityEngine.prototype.s = function (a, b, c, d, e, f, g, h) {
            var i = d.d;
            var j = d.f;
            var k = d.e;
            e.x = a;
            e.w = -200;
            e.az = 0;
            var l = new CellPath(1, e.az, e.x, e.w);
            if (a == f.x) {
                if (h == g.m - 1) {
                    var m = g.j(h);
                    var n = g.f(h) + g.i;
                    var o = (n + m) - g.g;
                    this.ac(l, c, i, Math.min(o, d.j), k, a, true, true, b);
                }
                else {
                    this.ac(l, c, i, Math.max(g.i, d.j - b.inset.e), k, a, true, true, b);
                }
            }
            else {
                this.ab(l, c, i, g.i, k, a, true, b);
            }
        };
        VisibilityEngine.prototype.n = function (a, b, c, d) {
            var e = b.br;
            var f = a.inset;
            var g = f.e;
            if (b.ci > 0) {
                var h = Math.max(c.j, g);
                b.bj = this.f;
                if (this.f) {
                    h = g;
                }
                for (var i = 0; i < b.bx.count; i++) {
                    var j = b.bx._inner[i];
                    var k = e._inner[j];
                    var l = new CellPath(1, k.m, -100, -100);
                    l.d = k.d;
                    this.aa(l, b, h, c.d, c.f, a);
                    if (a.hv) {
                        var m = new CellPath(1, k.m, -100, -101);
                        m.d = k.d;
                        var n = a.km(a.la);
                        var o = a.la + n * 2;
                        var p = c.o.c + b.br._inner[l.az].l + b.br._inner[l.az].k - a.la - n;
                        this.ae(m, b, h, p, o, b.cl, c.d, c.f, a);
                    }
                }
                if (b.cm > 0) {
                    var q = new CellPath(1, -300, -100, -100);
                    this.ad(c, q, b, c.d, c.e, 0, b.cm, a, false, false, false, false, 0);
                }
            }
            if (a.bu == 0 && a.dragger != null && a.dragger.isDragActive && a.dragger.dragType == 1) {
                var r = new CellPath(1, -400, 0, -102);
                this.ae(r, b, Math.max(c.j, g), a.ld, a.kp, b.by, c.h, c.i, a);
            }
            if (a.bg != 1 && a.dragger != null && a.dragger.isDragActive && a.dragger.dragType == 2) {
                var s = new CellPath(1, -400, 0, -102);
                this.ae(s, b, c.j, a.ld, a.kn, b.by, c.h, c.i, a);
            }
        };
        VisibilityEngine.prototype.o = function (a, b, c, d) {
            if (b.cd > -1) {
                b.b4 = c.d + a.e6.k(b.cd, a, b) - a.lc;
            }
            else {
                b.b4 = b.cf;
            }
            if (b.ce > -1) {
                var e = b.br._inner[b.ce].l - a.lc;
                if (c.i >= b.absoluteWidth) {
                    b.b5 = e + a.inset.c;
                }
                else {
                    b.b5 = e - (b.absoluteWidth - c.i - a.inset.c - a.inset.d);
                }
            }
            var f = Math.max(c.j - b.ci, a.inset.e);
            var g = c.j;
            var h = b.b7 * (a.kl + a.lg + a.lh);
            var i = c.g - h;
            var j = Math.min(b.absoluteHeight - h, c.g - h);
            var k = Math.max(0, j - g);
            var l = new CellPath(1, 0, 0, 0);
            if (b.cf > 0) {
                l.az = -500;
                if (b.ci > 0) {
                    l.w = -100;
                    this.ae(l.aa(), b, f, b.b4, a.lc, b.ci, c.d, c.i, a);
                }
                l.w = -103;
                this.ae(l.aa(), b, g, b.b4, a.lc, k, c.d, c.i, a);
                if (b.b7 > 0) {
                    l.w = -104;
                    this.ae(l.aa(), b, i, b.b4, a.lc, h, c.d, c.i, a);
                }
            }
            if (b.cg > 0) {
                l.az = -501;
                if (b.ci > 0) {
                    l.w = -100;
                    this.ae(l.aa(), b, f, b.b5, a.lc, b.ci, c.d, c.i, a);
                }
                l.w = -103;
                this.ae(l.aa(), b, g, b.b5, a.lc, k, c.d, c.i, a);
                if (b.b7 > 0) {
                    l.w = -104;
                    this.ae(l.aa(), b, i, b.b5, a.lc, h, c.d, c.i, a);
                }
            }
        };
        VisibilityEngine.prototype.w = function (a, b, c, d, e, f, g, h, i) {
            this.x(a, b, c, d, e, f, g, h, i, false, false, false);
        };
        VisibilityEngine.prototype.x = function (a, b, c, d, e, f, g, h, i, j, k, l) {
            var m = a.de.b(c, a, b, d, e, j, k, l);
            a.de.h(m, b, f, g, h, i);
            if (a.cb.j) {
                if (a.cb.a == null && a.cb.n == m.k.w && a.cb.m == m.k.az) {
                    a.cb.u(m);
                }
            }
            else {
                if (a.ar != null && a.ar.az == m.k.az && a.ar.w == m.k.w) {
                    a.ix(m);
                }
            }
        };
        VisibilityEngine.prototype.z = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
            var o = f.al;
            var p = e.d;
            var q = e.d != 0;
            var r = i.e6;
            var s = 1;
            if (n == 1) {
                s = 2;
            }
            if (n == 2) {
                s = 3;
            }
            if (e.az == -400 || e.az == -401 || e.az == -402) {
                if (n == 1 || n == 2) {
                    if (!e.af) {
                        o = j && !e.ao ? f.a3 : f.a6;
                    }
                    else {
                        o = f.al;
                    }
                }
            }
            else {
                if (f.br._inner[e.az].a == 1 || f.br._inner[e.az].a == 2 || f.br._inner[e.az].a == 3) {
                    if (j) {
                        o = n != 4 ? f.a1 : f.a9;
                    }
                    else {
                        o = q ? f.as : f.a7;
                    }
                }
                else if (f.br._inner[e.az].a == 6) {
                    q = e.d != 0 || i.columns._inner[e.az].fj != 0;
                    if (j) {
                        o = n != 4 ? f.a2 : f.bc;
                    }
                    else {
                        o = q ? f.av : f.ba;
                    }
                }
                else {
                    if (j) {
                        o = n != 4 ? (q ? f.aq : f.a0) : (q ? f.ap : f.az);
                    }
                    else {
                        o = q ? f.an : f.al;
                    }
                }
            }
            if (p == 1) {
                var t = f.br._inner[e.az].l;
                a = g + t;
            }
            else if (p == 2) {
                var u = f.br._inner[e.az].l;
                if (h >= f.absoluteWidth) {
                    a = u + i.inset.c;
                }
                else {
                    a = u - (f.absoluteWidth - h - i.inset.c - i.inset.d);
                }
            }
            this.x(i, f, e, o, s, a, c, b, d, k, l, m);
        };
        VisibilityEngine.prototype.aa = function (a, b, c, d, e, f) {
            var g = a.d == 0 ? b.az : b.ap;
            if (b.br._inner[a.az].a == 1 || b.br._inner[a.az].a == 2 || b.br._inner[a.az].a == 3) {
                g = a.d == 0 ? b.a9 : b.au;
            }
            if (b.br._inner[a.az].a == 6) {
                g = a.d == 0 && f.columns._inner[a.az].fj == 0 ? b.bc : b.ax;
            }
            var h = b.br._inner[a.az].l + f.inset.c;
            var i = b.br._inner[a.az].k;
            if (a.d == 1) {
                h = d + b.br._inner[a.az].l;
            }
            else if (a.d == 2) {
                var j = b.br._inner[a.az].l;
                if (e >= b.absoluteWidth) {
                    h = j + f.inset.c;
                }
                else {
                    h = j - (b.absoluteWidth - e - f.inset.c - f.inset.d);
                }
            }
            this.w(f, b, a, g, 0, h, c, i, b.cl);
        };
        VisibilityEngine.prototype.ae = function (a, b, c, d, e, f, g, h, i) {
            var j = b.bd;
            if (a.h) {
                j = a.d == 0 ? b.ay : b.ao;
                if (b.br._inner[a.az].a == 1 || b.br._inner[a.az].a == 2 || b.br._inner[a.az].a == 3) {
                    j = a.d == 0 ? b.a8 : b.at;
                }
                if (b.br._inner[a.az].a == 6) {
                    j = a.d == 0 && i.columns._inner[a.az].fj == 0 ? b.bb : b.aw;
                }
                if (a.d == 1) {
                    d += g - i.inset.c;
                }
                else if (a.d == 2) {
                    if (h < b.absoluteWidth) {
                        d -= b.absoluteWidth - h - i.inset.d;
                    }
                }
            }
            if (!i.iv) {
                if ((a.al || a.an) && a.w != -104) {
                    j = b.ar;
                }
            }
            this.w(i, b, a, j, 5, d, c, e, f);
        };
        VisibilityEngine.prototype.ab = function (a, b, c, d, e, f, g, h) {
            this.ac(a, b, c, d, e, f, g, false, h);
        };
        VisibilityEngine.prototype.ac = function (a, b, c, d, e, f, g, h, i) {
            var j = g ? b.bv._inner[f].g : b.bv._inner[f].d;
            var k = 3;
            var l = b.a6;
            if (g) {
                k = 2;
            }
            if (h) {
                l = b.a6;
            }
            this.w(i, b, a, l, k, c, d, e, j);
        };
        VisibilityEngine.prototype.ad = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
            var n = 0;
            var o = c.al;
            if (i) {
                if (m == 1 || m == 2) {
                    o = !b.ao ? c.a3 : c.a6;
                }
                else if (m == 4) {
                    o = c.a5;
                }
                else {
                    o = c.aq;
                }
            }
            else {
                if (m == 1 || m == 2) {
                    o = c.a6;
                }
            }
            if (b.g) {
                var p = h.inset;
                var q = p.e;
                var r = Math.max(a.j, q);
                n = r + c.cl;
                if (this.f) {
                    n = a.o.e + c.cl;
                }
                o = c.ay;
            }
            else {
                var s = c.bv._inner[b.x];
                n = f;
            }
            this.x(h, c, b, o, 4, d, n, e, g, j, k, l);
        };
        VisibilityEngine.$t = igniteuiReactCore.markType(VisibilityEngine, 'VisibilityEngine');
        return VisibilityEngine;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var PinnedRowInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PinnedRowInfo, _super);
        function PinnedRowInfo() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.m = 0;
            _this.o = null;
            _this.l = 0;
            _this.k = 0;
            _this.i = 0;
            _this.e = false;
            _this.c = false;
            _this.a = 0;
            _this.f = false;
            _this.n = 0;
            _this.g = false;
            _this.d = false;
            _this.b = null;
            return _this;
        }
        Object.defineProperty(PinnedRowInfo.prototype, "j", {
            get: function () {
                return this.l + this.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PinnedRowInfo.prototype, "h", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (this.c != b) {
                    if (this.b != null) {
                        this.b.cp = Math.min(0, this.c ? this.b.cp + 1 : this.b.cp - 1);
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        PinnedRowInfo.prototype.toString = function () {
            return igniteuiReactCore.EnumUtil.getName(igniteuiReactCore.DataSourceRowType_$type, this.a) + "(" + this.n + ") " + this.j;
        };
        PinnedRowInfo.$t = igniteuiReactCore.markType(PinnedRowInfo, 'PinnedRowInfo');
        return PinnedRowInfo;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var PushRowSettings = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PushRowSettings, _super);
        function PushRowSettings() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.d = null;
            _this.b = false;
            _this.c = false;
            _this.e = 0;
            return _this;
        }
        PushRowSettings.$t = igniteuiReactCore.markType(PushRowSettings, 'PushRowSettings');
        return PushRowSettings;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var PushRowResult = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PushRowResult, _super);
        function PushRowResult() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = false;
            _this.a = null;
            return _this;
        }
        PushRowResult.$t = igniteuiReactCore.markType(PushRowResult, 'PushRowResult');
        return PushRowResult;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ICellRenderingEngine_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'ICellRenderingEngine');
    /**
     * @hidden
     */
    var SpatialEngine = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SpatialEngine, _super);
        function SpatialEngine() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.f = new igniteuiReactCore.List$1(ColumnInfo.$, 0);
            _this.c = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Number_$type, ColumnInfo.$, 0);
            _this.d = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            _this.e = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            _this.a = new GridColumnSpacerCollection();
            return _this;
        }
        SpatialEngine.prototype.r = function (a, b, c) {
            b.absoluteHeight = 0;
            b.absoluteWidth = 0;
            b.absoluteHeight = igniteuiReactCore.truncate(a.inset.e);
            b.ch = igniteuiReactCore.truncate(a.inset.e);
            b.bv.clear();
            this.c.clear();
            for (var d = 0; d < a.model.br.count; d++) {
                this.c.addItem(a.model.br._inner[d].o, a.model.br._inner[d]);
            }
            b.c1();
            b.cf = 0;
            b.cg = 0;
            b.cd = -1;
            b.ce = -1;
            a.model.cc = a.kq;
            if (a.d9 == null) {
                return;
            }
            var e = a.d9.getSectionCount();
            e = Math.max(1, e);
            a.model.cm = a.kk > 0 ? a.lg : 0;
            a.model.ci = a.kk + a.model.cm;
            a.model.cl = a.kk;
            a.model.absoluteHeight += a.model.ci;
            a.model.ch += a.model.ci;
            a.model.b0 = a.inset.c;
            a.model.b1 = a.inset.d;
            a.model.b2 = a.inset.e;
            a.model.bz = a.inset.b;
            for (var f = 0; f < e; f++) {
                var g = new SectionInfo();
                g.h = f;
                g.i = b.absoluteHeight;
                g.m = a.d9.getRowCount();
                g.g = a.lk;
                g.d = a.li;
                g.o = a.lg;
                g.p = a.lh;
                g.n = a.kl;
                g.q = g.m * g.n;
                a.model.absoluteHeight += g.l();
                a.model.bv.add(g);
            }
            var h = a.defaultColumnWidth;
            var i = 0;
            var j = a.defaultColumnWidth;
            var k = a.jn;
            this.f.clear();
            this.d.clear();
            this.e.clear();
            for (i = 0; i < a.actualColumns.count; i++) {
                var l = new ColumnInfo();
                if (this.c.containsKey(a.actualColumns._inner[i].g2)) {
                    l = this.c.item(a.actualColumns._inner[i].g2);
                }
                l.m = i;
                var m = a.actualColumns._inner[i];
                l.p = m.hy;
                l.o = m.g2;
                if (m.e8 == 3) {
                    l.h = -1;
                }
                if (m.e8 == 5) {
                    l.h = 0;
                }
                l.a = m.e8;
                var n = null;
                h = m.width;
                if (n == null) {
                    n = (h == null) ? j : h;
                }
                var o = 0;
                if (!igniteuiReactCore.isNaN_(k)) {
                    o = k;
                }
                if (!igniteuiReactCore.isNaN_(n.e) && n.e > 0) {
                    o = Math.max(o, n.e);
                }
                if (!igniteuiReactCore.isNaN_(m.gm)) {
                    o = m.gm;
                }
                l.b = n;
                l.i = o;
                l.d = m.fk;
                l.n = i;
                if (l.d == 1) {
                    this.d.add(i);
                }
                if (l.d == 2) {
                    this.e.add(i);
                }
                if (m.e8 != 2 && m.e8 != 3) {
                    if (m.fk == 0) {
                        if (b.cd == -1) {
                            b.cd = i;
                        }
                    }
                    if (b.ce == -1 && m.fk == 2) {
                        b.ce = i;
                    }
                }
                a.model.cy(l);
            }
            this.s(b);
            this.c.clear();
            a.model.cf = 0;
            a.model.cg = 0;
            this.q(a, b, c);
            a.c9.ac();
            a.model.absoluteHeight += igniteuiReactCore.truncate(a.inset.b);
        };
        SpatialEngine.prototype.s = function (a) {
            if (this.d.count > 0 || this.e.count > 0) {
                for (var b = 0; b < a.br.count; b++) {
                    a.br._inner[b].n = this.m(a.br._inner[b].d, b, a);
                }
            }
        };
        SpatialEngine.prototype.q = function (a, b, c) {
            var e_19, _a;
            b.absoluteWidth = 0;
            b.cj = 0;
            b.cf = 0;
            b.cg = 0;
            var d = a.model.cc;
            var e = a.model.cc;
            var f = 0;
            var g = new igniteuiReactCore.List$1(ColumnInfo.$, 0);
            var h = b.bw;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(b.br)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var i = _c.value;
                    if (i.b.c) {
                        f += i.b.f * this.g(i);
                        g.add(i);
                    }
                    else {
                        i.k = igniteuiReactCore.truncate((Math.max(igniteuiReactCore.DeviceUtils.g(i.b.f), i.i)));
                        if (i.a != 3) {
                            if (i.a == 6) {
                                e += i.k + a.model.cc;
                            }
                            else {
                                e += i.k + a.model.cc - igniteuiReactCore.truncate(Math.round(i.f(b)));
                            }
                            b.cj += i.k + a.model.cc;
                            if (i.d == 1) {
                                b.cf += i.k + b.cc - igniteuiReactCore.truncate(Math.round(i.f(b)));
                            }
                            if (i.d == 2) {
                                b.cg += i.k + b.cc - igniteuiReactCore.truncate(Math.round(i.f(b)));
                            }
                        }
                        if (i.a == 6) {
                            d += i.k + a.model.cc;
                        }
                        else {
                            d += i.k + a.model.cc - igniteuiReactCore.truncate(Math.round(i.f(b)));
                        }
                    }
                }
            }
            catch (e_19_1) {
                e_19 = { error: e_19_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_19)
                        throw e_19.error;
                }
            }
            b.cf = Math.max(0, b.cf - b.cc);
            if (f > 0) {
                var j = e;
                e = SpatialEngine.p(a, b, c, d, e, f, g);
            }
            a.model.absoluteWidth = e;
            a.model.absoluteWidth += igniteuiReactCore.truncate((a.inset.c + a.inset.d));
            a.model.cj += igniteuiReactCore.truncate((a.inset.c + a.inset.d));
        };
        SpatialEngine.prototype.g = function (a) {
            if (a.a == 6) {
                return 1;
            }
            if (a.a == 3) {
                return 0;
            }
            var b = 1 - Math.max(0, Math.min(1, Math.abs(a.h)));
            return b;
        };
        SpatialEngine.p = function (a, b, c, d, e, f, g) {
            var e_20, _a, e_21, _b;
            c -= d;
            c -= igniteuiReactCore.truncate((a.inset.c + a.inset.d));
            c -= (g.count * a.model.cc);
            c -= a.model.cs + a.model.ct;
            var h = 0;
            var i = (c) / f;
            if (i < 0) {
                i = 0;
            }
            if (c < 0) {
                c = 0;
            }
            var j = false;
            var k = new igniteuiReactCore.HashSet$1(ColumnInfo.$, 0);
            while (f > 0 && !j) {
                j = true;
                try {
                    for (var _c = (e_20 = void 0, tslib_1.__values(igniteuiReactCore.fromEnum(g))), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var l = _d.value;
                        if (k.contains(l)) {
                            continue;
                        }
                        if (l.i > i * l.b.f) {
                            j = false;
                            if (l.a != 3) {
                                f--;
                            }
                            k.add_1(l);
                            l.k = igniteuiReactCore.truncate(l.i);
                            if (l.a != 6) {
                                if (l.a != 3) {
                                    e += (l.k) + a.model.cc - igniteuiReactCore.truncate(Math.round(l.f(b)));
                                    b.cj += l.k + a.model.cc;
                                }
                                if (l.a == 6) {
                                    var m = (l.k) + a.model.cc;
                                    d += m;
                                    c -= m;
                                }
                                else {
                                    var n = (l.k) + a.model.cc - igniteuiReactCore.truncate(Math.round(l.f(b)));
                                    d += n;
                                    c -= n;
                                }
                            }
                            else {
                                e += l.k;
                                b.cj += l.k + a.model.cc;
                            }
                        }
                    }
                }
                catch (e_20_1) {
                    e_20 = { error: e_20_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_20)
                            throw e_20.error;
                    }
                }
                i = (c) / f;
            }
            if (c < 0) {
                c = 0;
            }
            var o = 0;
            try {
                for (var _e = tslib_1.__values(igniteuiReactCore.fromEnum(g)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var p = _f.value;
                    if (k.contains(p)) {
                        if (p.a != 3) {
                            if (p.d == 1) {
                                a.model.cf += p.k + a.model.cc;
                            }
                            if (p.d == 2) {
                                a.model.cg += p.k + a.model.cc;
                            }
                        }
                        continue;
                    }
                    var q = Math.max(p.i, i * p.b.f);
                    var r = o + q;
                    o += q;
                    if (Math.round(r) >= r) {
                        p.k = igniteuiReactCore.truncate(Math.ceil(q));
                    }
                    else {
                        p.k = igniteuiReactCore.truncate(Math.floor(q));
                    }
                    e += a.model.cc;
                    d += a.model.cc;
                    h += a.model.cc;
                    o += a.model.cc;
                    b.cj += a.model.cc;
                    if (p.a != 3) {
                        if (p.a == 6) {
                            e += p.k;
                        }
                        else {
                            e += p.k - igniteuiReactCore.truncate(Math.round(p.f(b)));
                        }
                        if (p.d == 1) {
                            a.model.cf += p.k + a.model.cc;
                        }
                        if (p.d == 2) {
                            a.model.cg += p.k + a.model.cc;
                        }
                        b.cj += p.k;
                    }
                    if (p.a == 6) {
                        d += p.k;
                        h += p.k;
                    }
                    else {
                        d += p.k - igniteuiReactCore.truncate(Math.round(p.f(b)));
                        h += p.k - igniteuiReactCore.truncate(Math.round(p.f(b)));
                    }
                }
            }
            catch (e_21_1) {
                e_21 = { error: e_21_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_21)
                        throw e_21.error;
                }
            }
            a.model.cf = Math.max(0, a.model.cf - a.model.cc);
            if (h < c) {
                var s = (c - h - a.model.cc);
                g._inner[g.count - 1].k += s;
                e += s;
                d += s;
                b.cj += s;
            }
            if (h > c) {
                var t = (c - h - a.model.cc);
                g._inner[g.count - 1].k += t;
                e += t;
                d += t;
                b.cj += t;
            }
            return e;
        };
        SpatialEngine.prototype.k = function (a, b, c) {
            return this.l(a, c, false);
        };
        SpatialEngine.prototype.l = function (a, b, c) {
            var d = 0;
            if (b.br._inner[a].d == 1) {
                d += this.h(a, b.br._inner[a].o, 1, b);
            }
            if (b.br._inner[a].d == 0) {
                d += this.h(b.br.count, b.br._inner[a].o, 1, b);
                d += this.h(a, b.br._inner[a].o, 0, b);
            }
            if (b.br._inner[a].d == 2) {
                d += this.h(b.br.count, b.br._inner[a].o, 1, b);
                d += this.h(b.br.count, b.br._inner[a].o, 0, b);
                d += this.h(a, b.br._inner[a].o, 2, b);
            }
            d += igniteuiReactCore.truncate(Math.round(b.bw._inner[a].ad(b.br._inner[a].o)));
            if (!c) {
                d = igniteuiReactCore.truncate((d + Math.round(b.br._inner[a].e(b))));
            }
            return d;
        };
        SpatialEngine.prototype.h = function (a, b, c, d) {
            var e = 0;
            for (var f = 0; f < a; f++) {
                if (d.br._inner[f].d == c) {
                    e += igniteuiReactCore.truncate(Math.round(d.bw._inner[f].ad(b)));
                    if (d.br._inner[f].a != 6) {
                        e += (d.br._inner[f].k) + d.cc - igniteuiReactCore.truncate(Math.round(d.br._inner[f].f(d)));
                    }
                    e += igniteuiReactCore.truncate(Math.round(d.bw._inner[f].af(b)));
                }
            }
            return e;
        };
        SpatialEngine.prototype.m = function (a, b, c) {
            var d = b;
            if (a == 0) {
                var e = 0;
                for (var f = 0; f < b; f++) {
                    if (c.br._inner[f].d == 0) {
                        e++;
                    }
                }
                d = this.d.count + e;
            }
            if (a == 1) {
                var g = 0;
                for (var h = 0; h < this.d.count; h++) {
                    if (this.d._inner[h] < b) {
                        g++;
                    }
                }
                d = g;
            }
            if (a == 2) {
                var i = 0;
                for (var j = 0; j < this.e.count; j++) {
                    if (this.e._inner[j] > b) {
                        i++;
                    }
                }
                d = c.br.count - 1 - i;
            }
            return d;
        };
        SpatialEngine.prototype.j = function (a, b) {
            for (var c = 0; c < b.br.count; c++) {
                if (b.br._inner[c].n == a) {
                    return c;
                }
            }
            return -1;
        };
        SpatialEngine.prototype.n = function (a, b, c) {
            var d = c.br._inner[a].o;
            var e = igniteuiReactCore.truncate(b.inset.c) + c.cf + c.cc;
            var f = c.bw;
            var g = c.br;
            for (var h = 0; h < a; h++) {
                if (g._inner[h].d != 0) {
                    continue;
                }
                e += igniteuiReactCore.truncate(Math.round(f._inner[h].ad(d)));
                if (g._inner[h].a != 6) {
                    e += (g._inner[h].k) + b.model.cc - igniteuiReactCore.truncate(Math.round(g._inner[h].f(c)));
                }
                e += igniteuiReactCore.truncate(Math.round(f._inner[h].af(d)));
            }
            e += igniteuiReactCore.truncate(Math.round(f._inner[a].ad(d)));
            return (e);
        };
        SpatialEngine.prototype.o = function (a, b, c) {
            var d = 0;
            var e = 0;
            var f = igniteuiReactCore.truncate(b.inset.c);
            e += f;
            var g = c.bw;
            var h = c.br;
            var i = h.count;
            for (var j = 0; j < i; j++) {
                var k = h._inner[j];
                e += igniteuiReactCore.truncate(Math.round(g._inner[d].ad(-1)));
                if (k.a != 6) {
                    e += (k.k) + b.model.cc - igniteuiReactCore.truncate(Math.round(k.f(c)));
                }
                if (a <= e) {
                    return d;
                }
                e += igniteuiReactCore.truncate(Math.round(g._inner[d].af(-1)));
                d++;
            }
            var l = c.br.count - 1;
            if (d > l) {
                d = l;
            }
            return d;
        };
        SpatialEngine.prototype.b = function (a, b) {
            var c = b.bv.count;
            for (var d = 0; d < c; d++) {
                var e = b.bv._inner[d];
                var f = e.i;
                var g = f + e.l();
                if (a <= g) {
                    if (a < f) {
                        a = f;
                    }
                    return e.a(a);
                }
            }
            return new RowPath(b.bv.count - 1, b.bv._inner[b.bv.count - 1].m - 1);
        };
        SpatialEngine.prototype.v = function (a, b, c, d) {
            this.ab(a, b, d, false);
            for (var e = b + 1; e < d.br.count; e++) {
                this.aa(e, d, false, b);
            }
        };
        SpatialEngine.prototype.t = function (a, b, c) {
            for (var d = c.br.count - 1; d >= a; d--) {
                this.aa(d, c, true, a);
            }
        };
        SpatialEngine.prototype.x = function (a, b) {
            for (var c = 0; c < b.bu.count; c++) {
                var d = new igniteuiReactCore.List$1(CellModel.$, 0);
                var e = b.bu._inner[c];
                for (var f = 0; f < e.o.count; f++) {
                    if (e.p._inner[f]) {
                        continue;
                    }
                    var g = e.o._inner[f];
                    if (g.x > a.x || (g.x == a.x && g.w >= a.w)) {
                        d.add(e.q._inner[f]);
                    }
                }
                e.g = true;
                for (var h = 0; h < d.count; h++) {
                    var i = d._inner[h];
                    e.f(i.k);
                    i.k.w = i.k.w + 1;
                }
                for (var j = 0; j < d.count; j++) {
                    var k = d._inner[j];
                    e.s(k.k, k);
                }
                e.g = false;
            }
        };
        SpatialEngine.prototype.y = function (a, b, c) {
            for (var d = 0; d < c.bu.count; d++) {
                var e = new igniteuiReactCore.List$1(CellModel.$, 0);
                var f = c.bu._inner[d];
                var g = new igniteuiReactCore.List$1(CellPath.$, 0);
                for (var h = 0; h < f.o.count; h++) {
                    if (f.p._inner[h]) {
                        continue;
                    }
                    var i = f.o._inner[h];
                    if (i.x > b.x || (i.x == b.x && i.w > b.w)) {
                        e.add(f.q._inner[h]);
                    }
                    if (i.x == b.x && i.w == b.w) {
                        g.add(i);
                    }
                }
                f.g = true;
                for (var j = 0; j < g.count; j++) {
                    var k = g._inner[j];
                    a.j(k, f, c);
                }
                for (var l = 0; l < e.count; l++) {
                    var m = e._inner[l];
                    f.f(m.k);
                    m.k.w = m.k.w - 1;
                }
                for (var n = 0; n < e.count; n++) {
                    var o = e._inner[n];
                    f.s(o.k, o);
                }
                f.g = false;
            }
        };
        SpatialEngine.prototype.aa = function (a, b, c, d) {
            for (var e = 0; e < b.bu.count; e++) {
                var f = new igniteuiReactCore.List$1(CellModel.$, 0);
                var g = b.bu._inner[e];
                for (var h = 0; h < g.o.count; h++) {
                    if (g.p._inner[h]) {
                        continue;
                    }
                    var i = g.o._inner[h];
                    if (i.az == a && (i.ag || i.aj)) {
                        f.add(g.q._inner[h]);
                    }
                }
                g.g = true;
                for (var j = 0; j < f.count; j++) {
                    var k = f._inner[j];
                    g.f(k.k);
                    if (c) {
                        k.k.az = k.k.az + 1;
                    }
                    else {
                        k.k.az = k.k.az - 1;
                    }
                    g.s(k.k, k);
                }
                g.g = false;
            }
            var l = b.bw;
            if (c) {
                if (a == l.count - 1) {
                    l.add(new GridColumnSpacerCollection());
                }
                for (var m = l._inner[a].count - 1; m >= 0; m--) {
                    if (a != d || l._inner[a]._inner[m].d) {
                        l._inner[a + 1].add(l._inner[a]._inner[m]);
                        l._inner[a].removeAt(m);
                    }
                }
            }
            else {
                for (var n = l._inner[a].count - 1; n >= 0; n--) {
                    l._inner[a - 1].add(l._inner[a]._inner[n]);
                    l._inner[a].removeAt(n);
                }
            }
        };
        SpatialEngine.prototype.ab = function (a, b, c, d) {
            for (var e = 0; e < c.bu.count; e++) {
                var f = new igniteuiReactCore.List$1(CellModel.$, 0);
                var g = c.bu._inner[e];
                for (var h = 0; h < g.o.count; h++) {
                    if (g.p._inner[h]) {
                        continue;
                    }
                    var i = g.o._inner[h];
                    if (i.az == b && (i.ag || i.aj)) {
                        f.add(g.q._inner[h]);
                    }
                }
                g.g = true;
                for (var j = 0; j < f.count; j++) {
                    var k = f._inner[j];
                    if (d) {
                        g.f(k.k);
                        k.k.az = -800;
                        g.s(k.k, k);
                    }
                    else {
                        a.j(k.k, g, c);
                    }
                }
                g.g = false;
            }
            var l = c.bw;
            if (b < l.count) {
                for (var m = l._inner[b].count - 1; m >= 0; m--) {
                    this.a.add(l._inner[b]._inner[m]);
                    l._inner[b].removeAt(m);
                }
            }
        };
        SpatialEngine.prototype.z = function (a, b) {
            for (var c = 0; c < b.bu.count; c++) {
                var d = new igniteuiReactCore.List$1(CellModel.$, 0);
                var e = b.bu._inner[c];
                for (var f = 0; f < e.o.count; f++) {
                    if (e.p._inner[f]) {
                        continue;
                    }
                    var g = e.o._inner[f];
                    if (g.az == -800 && (g.ag || g.aj)) {
                        d.add(e.q._inner[f]);
                    }
                }
                e.g = true;
                for (var h = 0; h < d.count; h++) {
                    var i = d._inner[h];
                    e.f(i.k);
                    i.k.az = a;
                    e.s(i.k, i);
                }
                e.g = false;
            }
        };
        SpatialEngine.prototype.w = function (a, b) {
            for (var c = 0; c < b.br.count; c++) {
                this.ab(a, c, b, false);
            }
        };
        SpatialEngine.prototype.u = function (a, b, c, d, e) {
            this.ab(a, c, b, true);
            for (var f = c + 1; f < b.br.count; f++) {
                this.aa(f, b, false, c);
            }
            for (var g = b.br.count - 1; g >= d; g--) {
                this.aa(g, b, true, d);
            }
            this.z(d, b);
            var h = b.bw;
            for (var i = this.a.count - 1; i >= 0; i--) {
                h._inner[c].add(this.a._inner[i]);
                this.a.removeAt(i);
            }
        };
        SpatialEngine.prototype.i = function (a, b) {
            if (b == null) {
                return 0;
            }
            var c = 0;
            for (var d = 0; d < b.x; d++) {
                c += a.bv._inner[d].m;
            }
            c += b.w;
            return c;
        };
        SpatialEngine.$t = igniteuiReactCore.markType(SpatialEngine, 'SpatialEngine');
        return SpatialEngine;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnExchanger = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnExchanger, _super);
        function ColumnExchanger(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.a = null;
            _this.b = 0;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        var c = _rest[0];
                        var d = _rest[1];
                        _this.a = c;
                        _this.b = d;
                    }
                    break;
            }
            return _this;
        }
        ColumnExchanger.$t = igniteuiReactCore.markType(ColumnExchanger, 'ColumnExchanger');
        return ColumnExchanger;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnExchangersCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnExchangersCollection, _super);
        function ColumnExchangersCollection() {
            return _super.call(this, ColumnExchanger.$, 0) || this;
        }
        ColumnExchangersCollection.$t = igniteuiReactCore.markType(ColumnExchangersCollection, 'ColumnExchangersCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(ColumnExchanger.$));
        return ColumnExchangersCollection;
    }(igniteuiReactCore.ObservableCollection$1));
    /**
     * @hidden
     */
    var ResponsiveEngine = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsiveEngine, _super);
        function ResponsiveEngine(a) {
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.l = 500;
            _this.m = 200;
            _this.k = igniteuiReactCore.dateMinValue();
            _this.h = false;
            _this.i = false;
            _this.j = null;
            _this.a = null;
            _this.f = null;
            _this.b = null;
            _this.d = null;
            _this.a = a;
            _this.g = new ResponsiveStatesCollection();
            _this.j = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            _this.h = true;
            _this.d = null;
            return _this;
        }
        Object.defineProperty(ResponsiveEngine.prototype, "g", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                this.f = a;
            },
            enumerable: true,
            configurable: true
        });
        ResponsiveEngine.prototype.x = function (a) {
            if (this.b == a) {
                return;
            }
            this.d = a;
            if (this.h) {
            }
            else {
                this.w();
            }
        };
        ResponsiveEngine.prototype.y = function (a, b) {
            this.k = igniteuiReactCore.dateNow();
            if (this.h) {
                this.q();
                this.h = false;
            }
            else {
                this.w();
            }
        };
        ResponsiveEngine.prototype.w = function () {
            var _this = this;
            if (this.i) {
                return;
            }
            var a = this.n();
            this.i = true;
            this.a.delayedExecutionManager.executeIn(function () {
                if (!_this.i) {
                    return;
                }
                _this.i = false;
                if (_this.n() < 1) {
                    _this.q();
                }
                else {
                    _this.w();
                }
            }, a);
        };
        ResponsiveEngine.prototype.q = function () {
            if (this.b != null) {
                return;
            }
            var a = null;
            if (this.g.count > 0) {
                a = this.e(this.a.jm);
            }
            if (a == this.c) {
                return;
            }
            if (this.c != null && a != null) {
                this.c.q();
                this.c = null;
            }
            if (a != null) {
                if (this.d != null) {
                    this.d = null;
                }
                this.b = a;
                this.c = a;
                this.c.l = 0;
                this.c.p();
                this.t(this.c);
                this.c.o();
            }
        };
        ResponsiveEngine.prototype.t = function (a) {
            var _this = this;
            if (a.c.count == a.l) {
                this.b = null;
                var b = this.e(this.a.jm);
                {
                    if (b != this.c) {
                        this.w();
                    }
                }
                return;
            }
            if (this.h) {
                this.u(a);
                this.c.l = this.c.l + 1;
                this.t(a);
            }
            else {
                this.a.delayedExecutionManager.executeIn(function () {
                    var c = _this.a.ck;
                    c.animationCompleted = igniteuiReactCore.delegateCombine(c.animationCompleted, igniteuiReactCore.runOn(_this, _this.p));
                    var d = _this.a.ck;
                    d.animationCanceled = igniteuiReactCore.delegateCombine(d.animationCanceled, igniteuiReactCore.runOn(_this, _this.o));
                    _this.a.ck.ar();
                    _this.u(a);
                    _this.j = _this.a.ck.m();
                    if (_this.j.count == 0) {
                        _this.r(-1);
                    }
                }, a.c._inner[0].i);
            }
        };
        ResponsiveEngine.prototype.u = function (a) {
            var b = a.c._inner[a.l];
            this.v(b.e);
            this.s(b.b);
        };
        ResponsiveEngine.prototype.o = function (a, b) {
            this.r(b.a);
        };
        ResponsiveEngine.prototype.p = function (a, b) {
            this.r(b.a);
        };
        ResponsiveEngine.prototype.r = function (a) {
            if (this.j.contains(a)) {
                this.j.remove(a);
            }
            if (this.j.count == 0) {
                var b = this.a.ck;
                b.animationCompleted = igniteuiReactCore.delegateRemove(b.animationCompleted, igniteuiReactCore.runOn(this, this.p));
                var c = this.a.ck;
                c.animationCanceled = igniteuiReactCore.delegateRemove(c.animationCanceled, igniteuiReactCore.runOn(this, this.o));
                this.c.l = this.c.l + 1;
                this.t(this.c);
            }
        };
        ResponsiveEngine.prototype.v = function (a) {
            for (var b = 0; b < a.count; b++) {
                var c = a._inner[b];
                var d = null;
                for (var e = 0; e < this.a.actualColumns.count; e++) {
                    if (this.a.actualColumns._inner[e].id == c.c) {
                        d = this.a.actualColumns._inner[e];
                        break;
                    }
                }
                if (d == null) {
                    for (var f = 0; f < this.a.actualColumns.count; f++) {
                        if (this.a.actualColumns._inner[f].hy == c.c) {
                            d = this.a.actualColumns._inner[f];
                            break;
                        }
                    }
                }
                if (d == null) {
                    continue;
                }
                var g = d.externalObject;
                this.a.propertySetter.setProperty(g, c.d, c.b);
            }
        };
        ResponsiveEngine.prototype.s = function (a) {
            for (var b = 0; b < a.count; b++) {
                var c = a._inner[b];
                if (c.a == null) {
                    continue;
                }
                if (c.b >= this.a.actualColumns.count) {
                    continue;
                }
                var d = this.a.actualColumns._inner[c.b];
                this.a.p2(c.a, d);
            }
        };
        ResponsiveEngine.prototype.e = function (a) {
            if (this.d != null) {
                return this.d;
            }
            for (var b = 0; b < this.g.count; b++) {
                var c = this.g._inner[b];
                if (a >= c.k && a <= c.j && !c.i) {
                    return c;
                }
            }
            return null;
        };
        ResponsiveEngine.prototype.n = function () {
            var a = igniteuiReactCore.timeSpanFromMilliseconds(this.m);
            var b = igniteuiReactCore.timeSpanFromMilliseconds(this.l);
            if (+(this.k) != +(igniteuiReactCore.dateMinValue())) {
                a = +(igniteuiReactCore.dateNow()) - +(this.k);
            }
            var c = igniteuiReactCore.truncate(igniteuiReactCore.timeSpanTotalMilliseconds(a));
            var d = (this.m - c);
            if (d < 1) {
                d = 0;
            }
            return d;
        };
        ResponsiveEngine.$t = igniteuiReactCore.markType(ResponsiveEngine, 'ResponsiveEngine');
        return ResponsiveEngine;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ResponsivePhase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsivePhase, _super);
        function ResponsivePhase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.j = null;
            _this.k = null;
            _this.i = 0;
            _this.d = new ColumnPropertySettersCollection();
            _this.a = new ColumnExchangersCollection();
            return _this;
        }
        Object.defineProperty(ResponsivePhase.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ResponsivePhase.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        ResponsivePhase.prototype.g = function (a) {
            this.e.add(a);
            return this;
        };
        ResponsivePhase.prototype.c = function () {
            var a = new ColumnPropertySetter(0);
            this.e.add(a);
            return a;
        };
        ResponsivePhase.prototype.f = function (a) {
            this.b.add(a);
            return this;
        };
        ResponsivePhase.prototype.h = function () {
            var a = new ColumnExchanger(0);
            this.b.add(a);
            return this;
        };
        ResponsivePhase.$t = igniteuiReactCore.markType(ResponsivePhase, 'ResponsivePhase');
        return ResponsivePhase;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ResponsivePhasesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsivePhasesCollection, _super);
        function ResponsivePhasesCollection() {
            return _super.call(this, ResponsivePhase.$, 0) || this;
        }
        ResponsivePhasesCollection.$t = igniteuiReactCore.markType(ResponsivePhasesCollection, 'ResponsivePhasesCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(ResponsivePhase.$));
        return ResponsivePhasesCollection;
    }(igniteuiReactCore.ObservableCollection$1));
    /**
     * @hidden
     */
    var ResponsiveState = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsiveState, _super);
        function ResponsiveState() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.m = null;
            _this.n = null;
            _this.k = 0;
            _this.j = 0;
            _this.stateEntering = null;
            _this.stateEntered = null;
            _this.stateExited = null;
            _this.h = false;
            _this.l = 0;
            _this.b = new ResponsivePhasesCollection();
            return _this;
        }
        Object.defineProperty(ResponsiveState.prototype, "i", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.h = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ResponsiveState.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        ResponsiveState.prototype.d = function (a) {
            this.c.add(a);
            return this;
        };
        ResponsiveState.prototype.a = function () {
            var a = new ResponsivePhase();
            this.c.add(a);
            return a;
        };
        ResponsiveState.prototype.p = function () {
            if (this.stateEntering != null) {
                this.stateEntering(this, new ResponsiveStateEnteringEventArgs());
            }
        };
        ResponsiveState.prototype.o = function () {
            if (this.stateEntered != null) {
                this.stateEntered(this, new ResponsiveStateEnteredEventArgs());
            }
        };
        ResponsiveState.prototype.q = function () {
            if (this.stateExited != null) {
                this.stateExited(this, new ResponsiveStateExitedEventArgs());
            }
        };
        ResponsiveState.$t = igniteuiReactCore.markType(ResponsiveState, 'ResponsiveState');
        return ResponsiveState;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ResponsiveStatesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ResponsiveStatesCollection, _super);
        function ResponsiveStatesCollection() {
            return _super.call(this, ResponsiveState.$, 0) || this;
        }
        ResponsiveStatesCollection.$t = igniteuiReactCore.markType(ResponsiveStatesCollection, 'ResponsiveStatesCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(ResponsiveState.$));
        return ResponsiveStatesCollection;
    }(igniteuiReactCore.ObservableCollection$1));
    /**
     * @hidden
     */
    var GridLayer = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridLayer, _super);
        function GridLayer(a) {
            var _this = _super.call(this, CellPath.$, CellModel.$, 0) || this;
            _this.v = null;
            _this.v = a;
            return _this;
        }
        GridLayer.$t = igniteuiReactCore.markType(GridLayer, 'GridLayer', igniteuiReactCore.FastIterationDictionary$2.$.specialize(CellPath.$, CellModel.$));
        return GridLayer;
    }(igniteuiReactCore.FastIterationDictionary$2));
    /**
     * @hidden
     */
    var ColumnInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnInfo, _super);
        function ColumnInfo() {
            var _this = _super.call(this) || this;
            _this.m = 0;
            _this.n = 0;
            _this.b = null;
            _this.i = 0;
            _this.k = 0;
            _this.l = 0;
            _this.p = null;
            _this.o = 0;
            _this.c = 0;
            _this.g = 0;
            _this.j = 0;
            _this.h = 0;
            _this.a = 0;
            _this.d = 0;
            _this.g = 0;
            _this.h = 0;
            _this.j = 0;
            _this.i = 0;
            return _this;
        }
        ColumnInfo.prototype.e = function (a) {
            var b = this.h;
            if (this.a != 6) {
                if (b > 0 && b < 1) {
                    b = 0;
                }
                if (b >= 1) {
                    b = b - 1;
                }
            }
            return this.g + b * (this.k + a.cc);
        };
        ColumnInfo.prototype.f = function (a) {
            var b = Math.abs(this.g + this.h * (this.k + a.cc));
            if (b < (-1 * (this.k + a.cc))) {
                b = (-1 * (this.k + a.cc));
            }
            if (b > (this.k + a.cc)) {
                b = (this.k + a.cc);
            }
            return b;
        };
        ColumnInfo.$t = igniteuiReactCore.markType(ColumnInfo, 'ColumnInfo');
        return ColumnInfo;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var SectionInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SectionInfo, _super);
        function SectionInfo() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.h = 0;
            _this.m = 0;
            _this.q = 0;
            _this.o = 0;
            _this.g = 0;
            _this.d = 0;
            _this.n = 0;
            _this.p = 0;
            _this.i = 0;
            _this.b = null;
            _this.c = null;
            return _this;
        }
        SectionInfo.prototype.l = function () {
            return this.q + this.g + this.d + ((this.o + this.p) * this.m);
        };
        SectionInfo.prototype.e = function (a) {
            if (a == -200) {
                return this.g;
            }
            if (a == -201) {
                return this.d;
            }
            if (this.b == null) {
                return this.n;
            }
            else {
                return this.b._inner[a];
            }
        };
        SectionInfo.prototype.f = function (a) {
            if (this.c == null) {
                if (a == -200) {
                    return 0;
                }
                else if (a == -201) {
                    return this.l() - this.g;
                }
                return (a * this.k()) + this.g;
            }
            else {
                if (a == -200) {
                    return 0;
                }
                else if (a == -201) {
                    return this.l() - this.d;
                }
                return this.c._inner[a];
            }
        };
        SectionInfo.prototype.k = function () {
            return this.n + this.p + this.o;
        };
        SectionInfo.prototype.j = function (a) {
            if (this.c == null) {
                return this.n + this.p + this.o;
            }
            else {
                return this.b._inner[a] + this.o + this.p;
            }
        };
        SectionInfo.prototype.a = function (a) {
            a -= this.i;
            if (a < this.g) {
                return new RowPath(this.h, -200);
            }
            else if (a > this.l() - this.d) {
                return new RowPath(this.h, -201);
            }
            a -= this.g;
            if (this.b == null) {
                var b = this.k();
                var c = igniteuiReactCore.truncate((a / b));
                if (c >= this.m) {
                    c = this.m - 1;
                }
                return new RowPath(this.h, c);
            }
            else {
                for (var d = 0; d < this.m; d++) {
                    var e = this.c._inner[d];
                    var f = this.j(d);
                    if (a >= e && a <= e + f) {
                        return new RowPath(this.h, d);
                    }
                }
            }
            return null;
        };
        SectionInfo.$t = igniteuiReactCore.markType(SectionInfo, 'SectionInfo');
        return SectionInfo;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var VisualModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(VisualModel, _super);
        function VisualModel() {
            var _this = _super.call(this) || this;
            _this._actualVisibleRegion = null;
            _this._absoluteWidth = 0;
            _this._absoluteHeight = 0;
            _this.ci = 0;
            _this.cl = 0;
            _this.cm = 0;
            _this.ch = 0;
            _this.cf = 0;
            _this.cg = 0;
            _this.cc = 0;
            _this.cs = 0;
            _this.ct = 0;
            _this.b4 = 0;
            _this.b5 = 0;
            _this.cd = 0;
            _this.ce = 0;
            _this.cj = 0;
            _this.cp = 0;
            _this.b7 = 0;
            _this.b0 = 0;
            _this.b1 = 0;
            _this.b2 = 0;
            _this.bz = 0;
            _this.ae = null;
            _this.p = null;
            _this.i = null;
            _this.k = null;
            _this.ah = null;
            _this.s = null;
            _this.o = null;
            _this.j = null;
            _this.ag = null;
            _this.r = null;
            _this.q = null;
            _this.af = null;
            _this.w = null;
            _this.v = null;
            _this.l = null;
            _this.aj = null;
            _this.u = null;
            _this.t = null;
            _this.ai = null;
            _this.m = null;
            _this.x = null;
            _this.n = null;
            _this.y = null;
            _this.z = null;
            _this.aa = null;
            _this.ab = null;
            _this.ac = null;
            _this.ad = null;
            _this.ak = null;
            _this.c = null;
            _this.bg = null;
            _this.bv = null;
            _this.br = null;
            _this.bl = false;
            _this.bn = false;
            _this.bk = false;
            _this.bq = new igniteuiReactCore.List$1(GridColumnSpacerCollection.$, 0);
            _this.bo = null;
            _this.bf = null;
            _this.be = null;
            _this.cx = -1;
            _this.f = null;
            _this.bp = null;
            _this.bx = null;
            _this.cn = 0;
            _this.cq = 0;
            _this.co = 0;
            _this.cr = 0;
            _this.bj = false;
            _this.cv = 0;
            _this.cw = 0;
            _this.cu = 0;
            _this.actualVisibleRegion = igniteuiReactCore.Rect.empty;
            _this.ae = new GridLayer("SubContentLayer");
            _this.i = new GridLayer("ContentLayer");
            _this.ah = new GridLayer("SuperContentLayer");
            _this.j = new GridLayer("DecoratorLayer");
            _this.x = new GridLayer("PinnedRowsLayer");
            _this.y = new GridLayer("PinnedRowsSubLayer");
            _this.z = new GridLayer("PinnedRowsSuperLayer");
            _this.aa = new GridLayer("PinnedSectionLayer");
            _this.ab = new GridLayer("PinnedSectionSubLayer");
            _this.ac = new GridLayer("PinnedSectionSuperLayer");
            _this.ad = new GridLayer("SectionLayer");
            _this.ag = new GridLayer("SubHeaderLayer");
            _this.w = new GridLayer("HeaderLayer");
            _this.v = new GridLayer("HeaderDecoratorLayer");
            _this.aj = new GridLayer("SuperHeaderLayer");
            _this.ak = new GridLayer("VerticalSeparatorLayer");
            _this.af = new GridLayer("SubHeaderDecoratorLayer");
            _this.ai = new GridLayer("SuperHeaderDecoratorLayer");
            _this.k = new GridLayer("FixedContentLayer");
            _this.m = new GridLayer("FixedHeaderLayer");
            _this.n = new GridLayer("FixedPinnedRowsLayer");
            _this.o = new GridLayer("FixedSeparatorLayer");
            _this.p = new GridLayer("FixedSubContentLayer");
            _this.r = new GridLayer("FixedSubHeaderLayer");
            _this.s = new GridLayer("FixedSuperContentLayer");
            _this.u = new GridLayer("FixedSuperHeaderLayer");
            _this.q = new GridLayer("FixedSubHeaderDecoratorLayer");
            _this.u = new GridLayer("FixedSuperHeaderLayer");
            _this.t = new GridLayer("FixedSuperHeaderDecoratorLayer");
            _this.l = new GridLayer("FixedHeaderDecoratorLayer");
            _this.bg = new igniteuiReactCore.FastIterationDictionary$2(CellPath.$, igniteuiReactCore.List$1.$.specialize(CellModel.$), 0);
            _this.c2();
            _this.bv = new igniteuiReactCore.List$1(SectionInfo.$, 0);
            _this.br = new igniteuiReactCore.List$1(ColumnInfo.$, 0);
            _this.bo = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Number_$type, 0);
            _this.bx = new igniteuiReactCore.List$1(igniteuiReactCore.Number_$type, 0);
            return _this;
        }
        Object.defineProperty(VisualModel.prototype, "actualVisibleRegion", {
            get: function () {
                return this._actualVisibleRegion;
            },
            set: function (a) {
                this._actualVisibleRegion = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "absoluteWidth", {
            get: function () {
                return this._absoluteWidth;
            },
            set: function (a) {
                this._absoluteWidth = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "absoluteHeight", {
            get: function () {
                return this._absoluteHeight;
            },
            set: function (a) {
                this._absoluteHeight = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "b8", {
            get: function () {
                return igniteuiReactCore.truncate(this.actualVisibleRegion.top);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "b3", {
            get: function () {
                return igniteuiReactCore.truncate(this.actualVisibleRegion.left);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "b6", {
            get: function () {
                return igniteuiReactCore.truncate(this.actualVisibleRegion.right);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "by", {
            get: function () {
                return igniteuiReactCore.truncate(this.actualVisibleRegion.height);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "b9", {
            get: function () {
                return igniteuiReactCore.truncate(this.actualVisibleRegion.width);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a7", {
            get: function () {
                return this.ae;
            },
            set: function (a) {
                this.ae = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "as", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                this.p = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "al", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "an", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                this.k = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "ba", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                this.ah = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "av", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                this.s = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "ar", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                this.o = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "am", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                this.j = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a9", {
            get: function () {
                return this.ag;
            },
            set: function (a) {
                this.ag = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "au", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                this.r = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "at", {
            get: function () {
                return this.q;
            },
            set: function (a) {
                this.q = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a8", {
            get: function () {
                return this.af;
            },
            set: function (a) {
                this.af = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "az", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                this.w = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "ay", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                this.v = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "ao", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                this.l = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "bc", {
            get: function () {
                return this.aj;
            },
            set: function (a) {
                this.aj = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "ax", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                this.u = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "aw", {
            get: function () {
                return this.t;
            },
            set: function (a) {
                this.t = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "bb", {
            get: function () {
                return this.ai;
            },
            set: function (a) {
                this.ai = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "ap", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                this.m = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a0", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                this.x = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "aq", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                this.n = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a1", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                this.y = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a2", {
            get: function () {
                return this.z;
            },
            set: function (a) {
                this.z = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a3", {
            get: function () {
                return this.aa;
            },
            set: function (a) {
                this.aa = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a4", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                this.ab = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a5", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                this.ac = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "a6", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                this.ad = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "bd", {
            get: function () {
                return this.ak;
            },
            set: function (a) {
                this.ak = a;
                this.c2();
            },
            enumerable: true,
            configurable: true
        });
        VisualModel.prototype.e = function (a, b) {
            a += this.actualVisibleRegion.left;
            b += this.actualVisibleRegion.top;
            var c = this.bu;
            var d = c.count;
            for (var e = d - 1; e >= 0; e--) {
                if (c._inner[e] == this.al) {
                    break;
                }
                var f = c._inner[e].q;
                var g = c._inner[e].q.count;
                var h = c._inner[e].p;
                for (var i = 0; i < g; i++) {
                    if (h._inner[i]) {
                        continue;
                    }
                    var j = f._inner[i];
                    if (a >= j.cc && a <= j.cc + j.gf && b >= j.cd && b <= j.cd + j.e0) {
                        this.c = j;
                        return j;
                    }
                }
            }
            if (this.c != null) {
                var k = this.c;
                if (a >= k.cc && a <= k.cc + k.gf && b >= k.cd && b <= k.cd + k.e0) {
                    this.c = k;
                    return k;
                }
            }
            c = this.bu;
            d = c.count;
            for (var l = d - 1; l >= 0; l--) {
                var m = c._inner[l].q;
                var n = c._inner[l].q.count;
                var o = c._inner[l].p;
                for (var p = 0; p < n; p++) {
                    if (o._inner[p]) {
                        continue;
                    }
                    var q = m._inner[p];
                    if (a >= q.cc && a <= q.cc + q.gf && b >= q.cd && b <= q.cd + q.e0) {
                        this.c = q;
                        return q;
                    }
                }
            }
            return null;
        };
        Object.defineProperty(VisualModel.prototype, "bh", {
            get: function () {
                return this.bg;
            },
            set: function (a) {
                this.bg = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(VisualModel.prototype, "bw", {
            get: function () {
                while (this.bq.count < this.br.count) {
                    this.bq.add(new GridColumnSpacerCollection());
                }
                return this.bq;
            },
            set: function (a) {
                this.bq = a;
            },
            enumerable: true,
            configurable: true
        });
        VisualModel.prototype.bm = function () {
            if (this.bf != null && this.be != null && this.bf.w >= 0 && this.be.w >= 0) {
                return true;
            }
            return false;
        };
        VisualModel.prototype.g = function (a) {
            if (a == this.cx) {
                return this.f;
            }
            var b = null;
            if (this.bo.containsKey(a)) {
                b = this.br._inner[this.bo.item(a)];
            }
            this.cx = a;
            this.f = b;
            return b;
        };
        VisualModel.prototype.cy = function (a) {
            this.br.add(a);
            this.bo.addItem(a.o, this.br.count - 1);
        };
        VisualModel.prototype.c2 = function () {
            this.bp = new igniteuiReactCore.List$1(GridLayer.$, 0);
            this.bp.add(this.a7);
            this.bp.add(this.al);
            this.bp.add(this.ba);
            this.bp.add(this.am);
            this.bp.add(this.a1);
            this.bp.add(this.a0);
            this.bp.add(this.a2);
            this.bp.add(this.as);
            this.bp.add(this.an);
            this.bp.add(this.av);
            this.bp.add(this.aq);
            this.bp.add(this.ar);
            this.bp.add(this.a6);
            this.bp.add(this.a4);
            this.bp.add(this.a3);
            this.bp.add(this.a5);
            this.bp.add(this.a9);
            this.bp.add(this.a8);
            this.bp.add(this.az);
            this.bp.add(this.ay);
            this.bp.add(this.bc);
            this.bp.add(this.bb);
            this.bp.add(this.au);
            this.bp.add(this.at);
            this.bp.add(this.ap);
            this.bp.add(this.ao);
            this.bp.add(this.ax);
            this.bp.add(this.aw);
            this.bp.add(this.bd);
        };
        Object.defineProperty(VisualModel.prototype, "bu", {
            get: function () {
                return this.bp;
            },
            enumerable: true,
            configurable: true
        });
        VisualModel.prototype.bi = function () {
            for (var a = 0; a < this.bp.count; a++) {
                for (var b = 0; b < this.bp._inner[a].o.count; b++) {
                    if (this.bp._inner[a].p._inner[b]) {
                        continue;
                    }
                    var c = this.bp._inner[a].o._inner[b];
                    var d = this.bp._inner[a].q._inner[b];
                    if (c != d.k) {
                        return false;
                    }
                }
            }
            return true;
        };
        VisualModel.prototype.c1 = function () {
            this.f = null;
            this.cx = -1;
            this.br.clear();
            this.bo.clear();
        };
        VisualModel.prototype.c0 = function () {
            this.c1();
            this.bv.clear();
            this.a7.u();
            this.al.u();
            this.ba.u();
            this.am.u();
            this.a1.u();
            this.a0.u();
            this.a2.u();
            this.as.u();
            this.an.u();
            this.av.u();
            this.aq.u();
            this.ar.u();
            this.a6.u();
            this.a4.u();
            this.a3.u();
            this.a5.u();
            this.a9.u();
            this.a8.u();
            this.az.u();
            this.ay.u();
            this.bc.u();
            this.bb.u();
            this.au.u();
            this.at.u();
            this.ap.u();
            this.ao.u();
            this.ax.u();
            this.aw.u();
            this.bd.u();
        };
        VisualModel.prototype.b = function () {
            var a = new VisualModelExport();
            a.ae = new igniteuiReactCore.RectData(this.actualVisibleRegion.x, this.actualVisibleRegion.y, this.actualVisibleRegion.width, this.actualVisibleRegion.height);
            a.ah = this.absoluteWidth;
            a.ag = this.absoluteHeight;
            a.au = this.cl;
            a.an = this.ci;
            a.am = this.ch;
            a.ak = this.cf;
            a.al = this.cg;
            a.ai = this.cc;
            a.aq = this.cs;
            a.ar = this.ct;
            a.as = this.b8;
            a.ap = this.b3;
            a.ao = this.by;
            a.at = this.b9;
            a.x = this.a(this.a7);
            a.a = this.a(this.al);
            a.aa = this.a(this.ba);
            a.b = this.a(this.am);
            a.r = this.a(this.a1);
            a.q = this.a(this.a0);
            a.s = this.a(this.a2);
            a.h = this.a(this.as);
            a.c = this.a(this.an);
            a.k = this.a(this.av);
            a.f = this.a(this.aq);
            a.g = this.a(this.ar);
            a.w = this.a(this.a6);
            a.u = this.a(this.a4);
            a.t = this.a(this.a3);
            a.v = this.a(this.a5);
            a.z = this.a(this.a9);
            a.y = this.a(this.a8);
            a.o = this.a(this.az);
            a.n = this.a(this.ay);
            a.ac = this.a(this.bc);
            a.ab = this.a(this.bb);
            a.j = this.a(this.au);
            a.i = this.a(this.at);
            a.e = this.a(this.ap);
            a.d = this.a(this.ao);
            a.m = this.a(this.ax);
            a.l = this.a(this.aw);
            a.ad = this.a(this.bd);
            a.ax();
            return a;
        };
        VisualModel.prototype.a = function (a) {
            var e_22, _a;
            var b = new GridLayerExport(a.v);
            var c = a == this.az;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(a.n)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var d = _c.value;
                    var e = d.b(null);
                    if (this.bj && c) {
                        e.s += this.b8;
                    }
                    b.e(e);
                }
            }
            catch (e_22_1) {
                e_22 = { error: e_22_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_22)
                        throw e_22.error;
                }
            }
            return b;
        };
        VisualModel.prototype.h = function (a, b, c, d, e) {
            var f = new GridColumnSpacer();
            f.i = c;
            f.j = c;
            f.f = d;
            f.n = b.o;
            f.d = e;
            this.bw._inner[a].add(f);
            return f;
        };
        VisualModel.prototype.cz = function (a) {
            var b = this.bw;
            for (var c = 0; c < b.count; c++) {
                var d = b._inner[c];
                for (var e = d.count - 1; e >= 0; e--) {
                    if (d._inner[e].o == a.o) {
                        d.removeAt(e);
                    }
                }
            }
        };
        VisualModel.prototype.bt = function (a) {
            var b = new igniteuiReactCore.List$1(GridColumnSpacer.$, 0);
            var c = this.bw;
            for (var d = 0; d < c.count; d++) {
                var e = c._inner[d];
                for (var f = e.count - 1; f >= 0; f--) {
                    if (e._inner[f].n == a.o) {
                        b.add(e._inner[f]);
                    }
                }
            }
            return b;
        };
        VisualModel.prototype.bs = function (a) {
            var b = new igniteuiReactCore.List$1(CellModel.$, 0);
            for (var c = 0; c < this.bu.count; c++) {
                var d = new igniteuiReactCore.List$1(CellModel.$, 0);
                var e = this.bu._inner[c];
                for (var f = 0; f < e.o.count; f++) {
                    if (e.p._inner[f]) {
                        continue;
                    }
                    var g = e.q._inner[f];
                    if (g.k.az == a.m && g.k.b == a.c) {
                        b.add(g);
                    }
                }
            }
            return b;
        };
        VisualModel.prototype.d = function (a, b) {
            for (var c = 0; c < this.bu.count; c++) {
                var d = this.bu._inner[c];
                for (var e = 0; e < d.o.count; e++) {
                    if (d.p._inner[e]) {
                        continue;
                    }
                    var f = d.q._inner[e];
                    if (f.k.az == a && f.k.w == b) {
                        return f;
                    }
                }
            }
            return null;
        };
        VisualModel.prototype.ck = function () {
            var a = 0;
            for (var b = 0; b < this.bv.count; b++) {
                a += this.bv._inner[b].m;
            }
            return a;
        };
        VisualModel.$t = igniteuiReactCore.markType(VisualModel, 'VisualModel');
        return VisualModel;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SelectAllCheckboxChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SelectAllCheckboxChangedEventArgs, _super);
        function SelectAllCheckboxChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = false;
            return _this;
        }
        SelectAllCheckboxChangedEventArgs.$t = igniteuiReactCore.markType(SelectAllCheckboxChangedEventArgs, 'SelectAllCheckboxChangedEventArgs');
        return SelectAllCheckboxChangedEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxListView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CheckboxListView, _super);
        function CheckboxListView() {
            var _this = _super.call(this) || this;
            _this.d = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.DomWrapper_$type, igniteuiReactInputs.Checkbox.$, 0);
            _this.h = null;
            _this.a = null;
            _this.g = null;
            _this.b = null;
            _this.e = null;
            _this.c = false;
            _this.f = null;
            return _this;
        }
        CheckboxListView.prototype.l = function () {
        };
        CheckboxListView.prototype.k = function (a) {
            if (a == null) {
                this.e = null;
                this.d.clear();
                return;
            }
            this.e = a;
            this.t();
            this.aa();
            this.q();
            var b = Math.round(a.rootWrapper.width());
            var c = Math.round(a.rootWrapper.height());
            this.e.rootWrapper.setStyleProperty("position", "relative");
        };
        CheckboxListView.prototype.t = function () {
            if (this.e != null) {
                this.b.b9(this.e);
            }
        };
        CheckboxListView.prototype.q = function () {
            if (this.e != null) {
                var a = this.e.rootWrapper.getChildAt(3);
                a.setStyleProperty("width", "100%");
                a.setStyleProperty("margin", "4px 0px 4px 0px");
                if (this.b.ag == false) {
                    a.setStyleProperty("height", "calc(100% - 50px");
                }
                else {
                    a.setStyleProperty("height", "calc(100% - 75px");
                }
            }
        };
        CheckboxListView.prototype.m = function (a, b, c) {
            var d = null;
            if (a.getChildCount() == 0) {
                d = new igniteuiReactInputs.Checkbox();
                var e = this.e.getSubRenderer(a);
                d.provideContainer(e);
                this.d.addItem(a, d);
                d.d = this.b.l;
                d.t = true;
                d.change = igniteuiReactCore.delegateCombine(d.change, igniteuiReactCore.runOn(this, this.i));
                var f = this.e.createElement("div");
                a.setStyleProperty("display", "flex");
                a.setStyleProperty("height", "100%");
                a.setStyleProperty("align-items", "center");
                switch (this.b.n) {
                    case 1:
                        a.setStyleProperty("margin-top", "-4px");
                        break;
                    case 2:
                        a.setStyleProperty("margin-top", "-1px");
                        break;
                    case 3:
                        a.setStyleProperty("margin-top", "1px");
                        break;
                }
                a.append(f);
            }
            else {
                d = this.d.item(a);
            }
            if (d != null) {
                var g = d.u;
                try {
                    d.u = true;
                    d.a5 = b;
                    if (c) {
                        if (this.b.p == 0) {
                            d.checked = false;
                        }
                        else {
                            d.checked = true;
                        }
                    }
                    else {
                        if (this.b.p == 0) {
                            d.checked = true;
                        }
                        else {
                            d.checked = false;
                        }
                    }
                }
                finally {
                    d.u = g;
                }
            }
        };
        CheckboxListView.prototype.v = function () {
            var e_1, _a;
            if (this.d != null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.d)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var a = _c.value;
                        var b = a.value;
                        b.d = this.b.l;
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
            }
            if (this.a != null) {
                this.a.d = this.b.l;
            }
        };
        CheckboxListView.prototype.u = function () {
        };
        CheckboxListView.prototype.i = function (a, b) {
            var c = a;
            var d = parseInt(c.a5.toString());
            var e = c.checked;
            if (e == true) {
                if (this.b.p == 0) {
                    this.b.b3(d);
                }
                else {
                    this.b.bd(d);
                }
            }
            else {
                if (this.b.p == 0) {
                    this.b.bd(d);
                }
                else {
                    this.b.b3(d);
                }
            }
            this.b.bq(d, e);
            this.z(false);
        };
        CheckboxListView.prototype.j = function () {
        };
        CheckboxListView.prototype.r = function (a, b) {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.d)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    var d = c.value;
                    var e = parseInt(d.a5.toString());
                    if (e == a) {
                        d.checked = b;
                        this.b.bq(e, b);
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            this.z();
        };
        CheckboxListView.prototype.s = function (a) {
            var e_3, _a;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.d)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    var c = b.value;
                    c.checked = a;
                }
            }
            catch (e_3_1) {
                e_3 = { error: e_3_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_3)
                        throw e_3.error;
                }
            }
        };
        CheckboxListView.prototype.o = function (a) {
            this.h = a;
            if (null != this.h) {
                this.h.setStyleProperty("margin", "5px 0px 4px 0px");
            }
        };
        CheckboxListView.prototype.aa = function () {
            var a = this.e;
            if (null == a || null == this.h) {
                return;
            }
            var b = a.createElement("div");
            var c = a.getSubRenderer(b);
            this.a = new igniteuiReactInputs.Checkbox();
            this.a.provideContainer(c);
            this.a.d = this.b.l;
            this.g = a.createElement("label");
            this.g.setRawText(this.b.a6);
            this.g.setStyleProperty("font-size", "13px");
            this.h.setStyleProperty("display", "flex");
            this.h.setStyleProperty("flex-direction", "row");
            this.h.setStyleProperty("font-family", "'Segoe UI', Verdana");
            this.h.setStyleProperty("align-items", "center");
            this.h.append(b);
            this.h.append(this.g);
            this.ab();
            this.y();
            var d = this.a;
            d.change = igniteuiReactCore.delegateCombine(d.change, igniteuiReactCore.runOn(this, this.p));
            this.a.t = true;
        };
        CheckboxListView.prototype.y = function () {
            if (null != this.g) {
                this.g.setRawText(this.b.a6);
                igniteuiReactCore.NativeUI.n(this.g, this.b.cf);
            }
        };
        CheckboxListView.prototype.ab = function () {
            if (null != this.g) {
                var a = this.b.ag ? "flex" : "none";
                this.h.setStyleProperty("display", a);
            }
        };
        CheckboxListView.prototype.z = function (a) {
            if (a === void 0) {
                a = true;
            }
            var b = this.c;
            this.c = true;
            var c = this.a.u;
            this.a.u = a;
            try {
                if (this.b.ae) {
                    this.a.indeterminate = true;
                    return;
                }
                this.a.indeterminate = false;
                if (this.b.p == 0) {
                    this.a.checked = this.b.g.count == 0;
                }
                else {
                    this.a.checked = this.b.g.count != 0;
                }
            }
            finally {
                this.a.u = c;
                this.c = b;
            }
        };
        CheckboxListView.prototype.p = function (a, b) {
            if (this.c || b.isIndeterminate) {
                return;
            }
            if (b.isChecked) {
                this.b.b5();
                this.b.bw(b.isChecked);
            }
            else {
                this.b.bh();
                this.b.bw(b.isChecked);
            }
        };
        CheckboxListView.prototype.x = function () {
            var a = this.e;
            if (null == a) {
                return;
            }
            var b = a.rootWrapper;
            if (null != b) {
                igniteuiReactCore.NativeUI.n(b, this.b.cl);
                igniteuiReactCore.NativeUI.j(b, this.b.cg);
            }
        };
        CheckboxListView.prototype.w = function (a) {
            if (this.f != null) {
                igniteuiReactCore.NativeUI.s(this.f, a);
            }
        };
        CheckboxListView.prototype.n = function (a) {
            this.f = a;
        };
        CheckboxListView.$t = igniteuiReactCore.markType(CheckboxListView, 'CheckboxListView');
        return CheckboxListView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var CheckboxList = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CheckboxList, _super);
        function CheckboxList() {
            var _this = _super.call(this) || this;
            _this.q = null;
            _this.h = null;
            _this.i = null;
            _this.x = null;
            _this.d = null;
            _this.aa = false;
            _this.c = null;
            _this.s = null;
            _this.t = null;
            _this.ab = false;
            _this.f = new GridSelectedKeysCollection();
            _this.a = null;
            _this.propertyChanged = null;
            _this.checkedChanged = null;
            _this.ak = null;
            _this.am = null;
            _this.ao = null;
            _this.an = null;
            _this.u = 3;
            _this.ah = -1;
            _this.y = null;
            _this.o = 1;
            _this.k = 1;
            _this.m = 2;
            _this.a5 = "(Select All)";
            _this.cd = null;
            _this.cb = CheckboxList.ci;
            _this.af = true;
            _this.cc = CheckboxList.ch;
            _this.ce = CheckboxList.ci;
            _this.selectAllCheckboxChanged = null;
            _this.ai = -1;
            var a = _this.f;
            a.collectionChanged = igniteuiReactCore.delegateCombine(a.collectionChanged, igniteuiReactCore.runOn(_this, _this.by));
            _this.d = new igniteuiReactCore.FilterFactory();
            var b = new CheckboxListView();
            b.b = _this;
            _this.q = b;
            _this.q.l();
            return _this;
        }
        Object.defineProperty(CheckboxList.prototype, "e", {
            get: function () {
                if (this.h == null) {
                    return null;
                }
                return this.h.actualDataSource;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "g", {
            get: function () {
                return this.f;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.bu("PrimaryKey", b, this.a);
                }
            },
            enumerable: true,
            configurable: true
        });
        CheckboxList.prototype.by = function (a, b) {
            if (this.e == null || this.e.actualSchema == null || this.aa) {
                return;
            }
            switch (b.action) {
                case 0:
                    for (var c = 0; c < b.newItems.count; c++) {
                        this.bs(b.newItems.item(c));
                    }
                    break;
                case 1:
                    for (var d = 0; d < b.oldItems.count; d++) {
                        this.bt(b.oldItems.item(d));
                    }
                    break;
                case 2:
                    for (var e = 0; e < b.oldItems.count; e++) {
                        this.bt(b.oldItems.item(e));
                    }
                    for (var f = 0; f < b.newItems.count; f++) {
                        this.bs(b.newItems.item(f));
                    }
                    break;
                case 4:
                    this.q.s(this.p == 0);
                    for (var g = 0; g < this.g.ae.count; g++) {
                        this.bs(this.g.ae._inner[g]);
                    }
                    break;
            }
        };
        CheckboxList.prototype.bs = function (a) {
            var b = this.e.indexOfKey(a.value);
            if (b >= 0) {
                this.q.r(b, this.p == 1);
            }
        };
        CheckboxList.prototype.bt = function (a) {
            var b = this.e.indexOfKey(a.value);
            if (b >= 0) {
                this.q.r(b, this.p == 0);
            }
        };
        CheckboxList.prototype.bq = function (a, b) {
            if (this.checkedChanged != null && this.ab == false) {
                this.checkedChanged(this, ((function () {
                    var $ret = new CheckedChangedEventArgs();
                    $ret.b = a;
                    $ret.a = b;
                    return $ret;
                })()));
            }
        };
        CheckboxList.prototype.notifySizeChanged = function () {
            this.q.j();
        };
        CheckboxList.prototype.destroy = function () {
            if (this.h != null) {
                var a = this.h;
                a.cellClicked = igniteuiReactCore.delegateRemove(a.cellClicked, igniteuiReactCore.runOn(this, this.bj));
            }
            if (this.s != null) {
                var b = this.s;
                b.change = igniteuiReactCore.delegateRemove(b.change, igniteuiReactCore.runOn(this, this.bk));
            }
            this.provideContainer(null, null, null);
            if (this.i != null) {
                var c = this.i;
                c.cellUpdating = igniteuiReactCore.delegateRemove(c.cellUpdating, igniteuiReactCore.runOn(this, this.bg));
            }
        };
        CheckboxList.prototype.provideContainer = function (a, b, c) {
            this.h = b;
            if (null != this.h) {
                this.h.k6 = 0;
                this.h.lg = 0;
                this.h.g3 = false;
                this.h.ch = 0;
                this.h.cf = 0;
                var d = this.h;
                d.cellClicked = igniteuiReactCore.delegateCombine(d.cellClicked, igniteuiReactCore.runOn(this, this.bj));
                if (this.ak != null) {
                    this.h.itemsSource = this.ak;
                    this.bf();
                    this.bx();
                }
                if (this.am != null) {
                    this.bx();
                    this.b8();
                }
            }
            this.q.o(c);
            this.q.k(a);
        };
        CheckboxList.prototype.provideSelectAllSection = function (a) {
            this.q.o(a);
        };
        CheckboxList.prototype.bj = function (a, b) {
            if (b.cellInfo.k.az == 0) {
                return;
            }
            var c = b.cellInfo.k.w;
            if (-1 == c) {
                return;
            }
            var d = this.j(b.cellInfo.gp);
            if (this.g.contains(d)) {
                this.g.remove(d);
            }
            else {
                this.g.add(d);
            }
        };
        CheckboxList.prototype.bg = function (a, b) {
            var c = b.cellInfo.k.w;
            if (-1 == c) {
                return;
            }
            var d = false;
            if (b.cellInfo.gp != null) {
                var e = this.j(b.cellInfo.gp);
                if (this.g.contains(e)) {
                    d = true;
                }
            }
            this.q.m(b.content.element, c, d);
        };
        CheckboxList.prototype.br = function (a) {
            if (this.am != null) {
                var b = this.d.property(this.am).cast(igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, 0)).toLower();
                var c = b.contains(a);
                if (!this.h.v.j.contains(this.c)) {
                    this.c = c;
                    this.h.v.add(this.c);
                }
                else {
                    var d = this.h.v.j.indexOf(this.c);
                    this.h.v.j.item(d, this.c = c);
                }
            }
        };
        Object.defineProperty(CheckboxList.prototype, "itemsSource", {
            get: function () {
                return this.ak;
            },
            set: function (a) {
                var b = this.ak;
                this.ak = a;
                if (b != this.ak) {
                    this.bu("ItemsSource", b, this.ak);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "at", {
            get: function () {
                return this.am;
            },
            set: function (a) {
                var b = this.am;
                this.am = a;
                if (b != this.am) {
                    this.bu("DataMemberPath", b, this.am);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "a9", {
            get: function () {
                return this.ao;
            },
            set: function (a) {
                var b = this.ao;
                this.ao = a;
                if (b != this.ao) {
                    this.bu("SelectedMemberPath", b, this.ao);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "ax", {
            get: function () {
                return this.an;
            },
            set: function (a) {
                var b = this.an;
                this.an = a;
                if (b != this.an) {
                    this.bu("FilterPlaceholderText", b, this.an);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "v", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (b != this.u) {
                    this.bu("SearchInputType", igniteuiReactCore.enumGetBox(igniteuiReactInputs.InputGroupDisplayType_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactInputs.InputGroupDisplayType_$type, this.u));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "aj", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (b != this.ah) {
                    this.bu("RowHeight", b, this.ah);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "z", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                var b = this.y;
                this.y = a;
                if (b != this.y) {
                    this.bu("CellTextStyle", b, this.y);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "p", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                var b = this.o;
                this.o = a;
                if (b != this.o) {
                    this.bu("IndexType", igniteuiReactCore.enumGetBox(CheckboxListIndexType_$type, b), igniteuiReactCore.enumGetBox(CheckboxListIndexType_$type, this.o));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "l", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                this.k = a;
                if (b != this.k) {
                    this.bu("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, this.k));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "n", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.bu("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.m));
                }
            },
            enumerable: true,
            configurable: true
        });
        CheckboxList.prototype.bu = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.bz(a, b, c);
        };
        CheckboxList.prototype.bz = function (a, b, c) {
            switch (a) {
                case "ItemsSource":
                    if (this.h != null) {
                        this.p = 1;
                        if (c != null) {
                            this.h.a7.m();
                            this.h.b4.m();
                            this.h.v.clear();
                            this.h.b7.m();
                        }
                        if (this.h.actualDataSource != null) {
                            var d = this.h.actualDataSource;
                            d.schemaChanged = igniteuiReactCore.delegateRemove(d.schemaChanged, igniteuiReactCore.runOn(this, this.bv));
                        }
                        this.h.itemsSource = this.ak;
                        this.bf();
                        if (this.h.actualDataSource != null) {
                            var e = this.h.actualDataSource;
                            e.schemaChanged = igniteuiReactCore.delegateCombine(e.schemaChanged, igniteuiReactCore.runOn(this, this.bv));
                        }
                        this.ab = true;
                        this.bx();
                        this.ab = false;
                        this.q.z();
                    }
                    break;
                case "DataMemberPath":
                case "SelectedMemberPath":
                    if (this.h != null) {
                        if (this.am != null) {
                            this.bx();
                            this.b8();
                        }
                    }
                    break;
                case "PrimaryKey":
                    if (this.h != null) {
                        this.h.l = this.b;
                    }
                    break;
                case "SelectAllCaptionTextColor":
                    this.cf = null != this.cj ? this.cj : CheckboxList.ci;
                    break;
                case "SelectAllCaption":
                case "ActualSelectAllCaptionTextColor":
                    this.q.y();
                    break;
                case "showSelectAll":
                    this.q.ab();
                    this.q.q();
                    break;
                case "FilterPlaceholderText":
                    if (this.s != null) {
                        this.s.b7 = this.ax;
                    }
                    break;
                case "SearchInputType":
                    if (this.t != null) {
                        this.t.k = this.v;
                    }
                    break;
                case "RowHeight":
                    if (this.h != null) {
                        this.h.le = this.aj;
                    }
                    break;
                case "CellTextStyle":
                    if (this.h != null) {
                        this.h.fp = this.z;
                    }
                    break;
                case "BackgroundColor":
                case "TextColor":
                    var f = this.h;
                    if (null != f) {
                        f.uu = this.cl;
                        f.us = this.cg;
                    }
                    this.q.x();
                    break;
                case "BaseTheme":
                    this.b7();
                    break;
                case "Density":
                    this.b6();
                    break;
            }
        };
        CheckboxList.prototype.b6 = function () {
            if (this.h != null) {
                this.h.fg = this.n;
            }
            if (this.t != null) {
                this.t.h = this.n;
            }
            this.q.u();
        };
        CheckboxList.prototype.b7 = function () {
            if (this.t != null) {
                this.t.d = this.l;
            }
            this.q.v();
        };
        CheckboxList.prototype.bv = function (a, b) {
            this.ab = true;
            this.bf();
            if (b.schema != null) {
                this.bx();
                for (var c = 0; c < this.g.count; c++) {
                    this.bs(this.g._inner[c]);
                }
                this.q.z();
            }
            this.ab = false;
        };
        CheckboxList.prototype.bx = function () {
            if (this.x == null && this.ao != null && this.ao != "") {
                this.x = new igniteuiReactCore.FastReflectionHelper(false, this.ao);
            }
            if (this.ak != null && this.x != null && this.h.actualDataSource.actualSchema != null) {
                this.x.propertyName = this.ao;
                var a = this.h.actualDataSource.actualCount;
                for (var b = 0; b < a; b++) {
                    var c = this.h.actualDataSource.getItemAtIndex(b);
                    var d = this.x.getPropertyValue(c);
                    if (d == true) {
                        var e = this.j(c);
                        if (!this.g.contains(e)) {
                            this.g.add(e);
                        }
                    }
                }
            }
        };
        CheckboxList.prototype.b8 = function () {
            this.h.actualColumns.clear();
            this.h.l = this.b;
            this.h.hu = false;
            this.h.le = this.aj;
            this.h.us = this.cg;
            this.h.ut = this.cg;
            this.h.fg = this.n;
            this.h.vx = new igniteuiReactCore.Thickness(0, 0);
            if (this.z != null) {
                this.h.fp = this.z;
            }
            var a = new TemplateColumn();
            if (this.ao == null) {
                this.ao = "";
            }
            a.hy = this.ao;
            a.id = "CheckboxColumn";
            var b = new ColumnWidth();
            b.f = 28;
            a.width = b;
            a.gy = 0;
            a.gz = 0;
            a.cellUpdating = igniteuiReactCore.delegateCombine(a.cellUpdating, igniteuiReactCore.runOn(this, this.bg));
            this.h.columns.add(a);
            this.i = a;
            var c = this.h.actualDataSource.resolveSchemaPropertyType(this.am);
            var d;
            switch (c) {
                case 8:
                case 9:
                    d = new DateTimeColumn();
                    break;
                case 1:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 10:
                    d = new NumericColumn();
                    break;
                case 2:
                case 11:
                case 0:
                default:
                    d = new TextColumn();
                    break;
            }
            d.hy = this.am;
            d.id = "DataColumn";
            d.gy = 0;
            d.e = 0;
            this.h.columns.add(d);
        };
        CheckboxList.prototype.updateHrMargin = function (a) {
            this.q.w(a);
        };
        CheckboxList.prototype.provideHrElement = function (a) {
            this.q.n(a);
        };
        CheckboxList.prototype.b9 = function (a) {
            var b = a.rootWrapper.getChildAt(0);
            b.setStyleProperty("display", "flex");
            this.t = new igniteuiReactInputs.InputGroup();
            var c = a.getSubRenderer(b);
            this.t.provideContainer(c);
            this.t.k = this.v;
            this.t.d = this.l;
            this.t.h = this.n;
            var d = a.createElement("div");
            var e = a.getSubRenderer(d);
            var f = new igniteuiReactInputs.Prefix();
            f.provideContainer(e);
            var g = a.createElement("div");
            var h = a.getSubRenderer(g);
            var i = new igniteuiReactInputs.Icon();
            i.provideContainer(h);
            i.fill = CheckboxList.ck;
            i.svgPath = CheckboxList.a4;
            f.appendContentChild(g);
            this.t.appendContentChild(d);
            this.t.inputs.add(f);
            var j = a.createElement("div");
            var k = a.getSubRenderer(j);
            this.s = new igniteuiReactInputs.Input();
            this.s.provideContainer(k);
            this.s.b0 = "text";
            if (this.ax != null) {
                this.s.b7 = this.ax;
            }
            var l = this.s;
            l.changing = igniteuiReactCore.delegateCombine(l.changing, igniteuiReactCore.runOn(this, this.bk));
            this.t.appendContentChild(j);
            this.t.inputs.add(this.s);
        };
        CheckboxList.prototype.bk = function (a, b) {
            var c = b.value.toLowerCase();
            this.br(c);
        };
        CheckboxList.prototype.j = function (a) {
            if (this.b == null) {
                return PrimaryKeyValue.createIdentityKey(a);
            }
            var b = new Array(this.b.length);
            var c = new Array(this.b.length);
            for (var d = 0; d < b.length; d++) {
                b[d] = this.b[d];
                c[d] = this.e.getItemProperty(a, b[d]);
            }
            return new PrimaryKeyValue(b, c);
        };
        CheckboxList.prototype.b3 = function (a) {
            this.aa = true;
            var b = this.e.getItemAtIndex(a);
            var c = this.j(b);
            this.g.remove(c);
            this.aa = false;
        };
        CheckboxList.prototype.bd = function (a) {
            this.aa = true;
            var b = this.e.getItemAtIndex(a);
            var c = this.j(b);
            this.g.add(c);
            this.aa = false;
        };
        CheckboxList.prototype.b5 = function () {
            this.p = 0;
            this.g.clear();
            this.bl();
            this.q.z();
        };
        CheckboxList.prototype.bh = function () {
            this.p = 1;
            this.g.clear();
            this.bl();
            this.q.z();
        };
        CheckboxList.prototype.bo = function (a, b, c) {
            if (this.h != null) {
                this.h.qp(a, b, c);
            }
        };
        CheckboxList.prototype.bl = function () {
            if (this.h != null) {
                this.h.qj();
            }
        };
        CheckboxList.prototype.bm = function (a, b) {
            if (this.h != null) {
                this.h.ql(a, b);
            }
            ;
        };
        CheckboxList.prototype.bn = function (a, b) {
            if (this.h != null) {
                this.h.qm(a, b);
            }
            ;
        };
        CheckboxList.prototype.be = function (a) {
            var b = null;
            if (this.b == null || this.b.length == 0) {
                b = new PrimaryKeyValue(null, a);
            }
            else if (this.b.length == a.length) {
                b = new PrimaryKeyValue(this.b, a);
            }
            else {
                throw new igniteuiReactCore.ArgumentException(1, "value length must match PrimaryKey length");
            }
            if (b != null) {
                this.g.add(b);
            }
        };
        CheckboxList.prototype.b4 = function (a) {
            var b = null;
            if (this.b == null || this.b.length == 0) {
                b = new PrimaryKeyValue(null, a);
            }
            else if (this.b.length == a.length) {
                b = new PrimaryKeyValue(this.b, a);
            }
            else {
                throw new igniteuiReactCore.ArgumentException(1, "value length must match PrimaryKey length");
            }
            if (this.g.contains(b)) {
                this.g.remove(b);
            }
        };
        Object.defineProperty(CheckboxList.prototype, "a6", {
            get: function () {
                return this.a5;
            },
            set: function (a) {
                if (a == this.a5) {
                    return;
                }
                var b = this.a5;
                this.a5 = a;
                this.bu("SelectAllCaption", b, this.a5);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "cj", {
            get: function () {
                return this.cd;
            },
            set: function (a) {
                var b = this.cd;
                this.cd = a;
                if (b != this.cd) {
                    this.bu("SelectAllCaptionTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "cf", {
            get: function () {
                return this.cb;
            },
            set: function (a) {
                var b = this.cb;
                this.cb = a;
                if (b != this.cb) {
                    this.bu("ActualSelectAllCaptionTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "ae", {
            get: function () {
                if (-1 == this.ai) {
                    return false;
                }
                var a = this.g.count;
                if (0 == a) {
                    return false;
                }
                if (a == this.ai) {
                    return false;
                }
                return true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "ag", {
            get: function () {
                return this.af;
            },
            set: function (a) {
                if (a == this.af) {
                    return;
                }
                var b = this.af;
                this.af = a;
                this.bu("showSelectAll", b, this.af);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "cg", {
            get: function () {
                return this.cc;
            },
            set: function (a) {
                var b = this.cc;
                this.cc = a;
                if (b != this.cc) {
                    this.bu("BackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxList.prototype, "cl", {
            get: function () {
                return this.ce;
            },
            set: function (a) {
                var b = this.ce;
                this.ce = a;
                if (b != this.ce) {
                    this.bu("TextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        CheckboxList.prototype.bw = function (a) {
            if (this.selectAllCheckboxChanged != null) {
                this.selectAllCheckboxChanged(this, ((function () {
                    var $ret = new SelectAllCheckboxChangedEventArgs();
                    $ret.a = a;
                    return $ret;
                })()));
            }
        };
        CheckboxList.prototype.ad = function () {
            if (-1 == this.ai) {
                return true;
            }
            var a = this.g.count;
            switch (this.p) {
                case 0: return this.ai == a;
                case 1: return 0 == a;
                default: return false;
            }
        };
        CheckboxList.prototype.ac = function () {
            if (-1 == this.ai) {
                return false;
            }
            var a = this.g.count;
            switch (this.p) {
                case 0: return 0 == a;
                case 1: return this.ai == a;
                default: return false;
            }
        };
        CheckboxList.prototype.bf = function () {
            var a = this.h.actualDataSource;
            if (null != a) {
                if (null == a.actualSchema) {
                    this.ai = -1;
                    return;
                }
                var b = a.actualCount;
                this.ai = b;
            }
            else {
                this.ai = -1;
            }
        };
        CheckboxList.$t = igniteuiReactCore.markType(CheckboxList, 'CheckboxList', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        CheckboxList.ck = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
        CheckboxList.a4 = "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z";
        CheckboxList.ch = igniteuiReactCore.BrushUtil.g(255, 248, 248, 248);
        CheckboxList.ci = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
        return CheckboxList;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Represents info about the current cell.
    */
    var IgrCellInfo = /** @class */ /*@__PURE__*/ (function () {
        function IgrCellInfo() {
            this._onChanged = [];
            this._changed = false;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrCellInfo.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrCellInfo.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrCellInfo.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        IgrCellInfo.prototype.onImplementationCreated = function () {
        };
        IgrCellInfo.prototype.addOnChangedListener = function (listener) {
            if (this._onChanged.length == 0) {
                this.i.propertyChanged = igniteuiReactCore.delegateCombine(this.i.propertyChanged, igniteuiReactCore.runOn(this, this._implementation_propertyChanged));
                this.i.cellReconciling = igniteuiReactCore.delegateCombine(this.i.cellReconciling, igniteuiReactCore.runOn(this, this._implementation_cellReconciling));
            }
            this._onChanged.push(listener);
        };
        IgrCellInfo.prototype.removeOnChangedListener = function (listener) {
            var ind = this._onChanged.indexOf(listener);
            if (ind < 0) {
                return;
            }
            this._onChanged.splice(ind, 1);
            if (this._onChanged.length == 0) {
                this.i.propertyChanged = igniteuiReactCore.delegateRemove(this.i.propertyChanged, igniteuiReactCore.runOn(this, this._implementation_propertyChanged));
                this.i.cellReconciling = igniteuiReactCore.delegateRemove(this.i.cellReconciling, igniteuiReactCore.runOn(this, this._implementation_cellReconciling));
            }
        };
        IgrCellInfo.prototype._implementation_propertyChanged = function (sender, args) {
            this._changed = true;
        };
        IgrCellInfo.prototype._implementation_cellReconciling = function (model) {
            if (this._changed && this._onChanged !== null && this._onChanged.length > 0) {
                this._changed = false;
                for (var i = 0; i < this._onChanged.length; i++) {
                    this._onChanged[i]();
                }
            }
            this._changed = false;
        };
        Object.defineProperty(IgrCellInfo.prototype, "resolvedTextAlign", {
            get: function () {
                switch (this.horizontalAlignment) {
                    case CellContentHorizontalAlignment.Center:
                        return "center";
                    case CellContentHorizontalAlignment.Left:
                        return "left";
                    case CellContentHorizontalAlignment.Right:
                        return "right";
                    case CellContentHorizontalAlignment.Stretch:
                        return "center";
                }
                return "left";
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "resolvedContentOpacity", {
            get: function () {
                var virtualPercent = Math.min(1.0, Math.max(0.0, this.virtualizationPercentage));
                var opacity = this.contentOpacity * (1.0 - virtualPercent);
                return opacity;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "styleKey", {
            /**
         * Gets the style key of the current cell, used for recycling.
        */
            get: function () {
                return this.i.i0;
            },
            set: function (v) {
                this.i.i0 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "dataRow", {
            /**
             * Gets the absolute data row for the current cell.
            */
            get: function () {
                return this.i.ej;
            },
            set: function (v) {
                this.i.ej = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isPositionDirty", {
            /**
             * Gets if the position of the cell is dirty.
            */
            get: function () {
                return this.i.a5;
            },
            set: function (v) {
                this.i.a5 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isSizeDirty", {
            /**
             * Gets if the size of the cell is dirty.
            */
            get: function () {
                return this.i.ba;
            },
            set: function (v) {
                this.i.ba = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isContentDirty", {
            /**
             * Gets if the content of the cell is dirty.
            */
            get: function () {
                return this.i.as;
            },
            set: function (v) {
                this.i.as = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isBorderDirty", {
            /**
             * Gets if the content of the cell is dirty.
            */
            get: function () {
                return this.i.aq;
            },
            set: function (v) {
                this.i.aq = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isLayerDirty", {
            /**
             * Gets if the layer of the cell is dirty.
            */
            get: function () {
                return this.i.a3;
            },
            set: function (v) {
                this.i.a3 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isStateDirty", {
            /**
             * Gets if the layer of the cell is dirty.
            */
            get: function () {
                return this.i.bb;
            },
            set: function (v) {
                this.i.bb = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isDataDirty", {
            /**
             * Gets if the data of the cell is dirty.
            */
            get: function () {
                return this.i.au;
            },
            set: function (v) {
                this.i.au = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isPlaceholdContentNeeded", {
            /**
             * Gets if placeholder content is needed when virtualized.
            */
            get: function () {
                return this.i.a4;
            },
            set: function (v) {
                this.i.a4 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actionManager", {
            /**
             * Gets the action manager to propagate actions back to the grid.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isRowPinned", {
            /**
             * Gets if this cell belongs to a row that has been marked as pinned.
            */
            get: function () {
                return this.i.a6;
            },
            set: function (v) {
                this.i.a6 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isRowSticky", {
            /**
             * Gets if this cell belongs to a row that will stick to the top of the grid.
            */
            get: function () {
                return this.i.a7;
            },
            set: function (v) {
                this.i.a7 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isLastStickyRow", {
            /**
             * Gets if this cell is the last row that can stick to the top of the grid.
            */
            get: function () {
                return this.i.a2;
            },
            set: function (v) {
                this.i.a2 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "indent", {
            /**
             * Gets the indent level of the cell.
            */
            get: function () {
                return this.i.e5;
            },
            set: function (v) {
                this.i.e5 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "rowItem", {
            get: function () {
                return this.i.gp;
            },
            set: function (v) {
                this.i.gp = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "x", {
            /**
             * Gets the X position of the cell within the content.
            */
            get: function () {
                return this.i.cc;
            },
            set: function (v) {
                this.i.cc = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "y", {
            /**
             * Gets the Y position of the cell within the content.
            */
            get: function () {
                return this.i.cd;
            },
            set: function (v) {
                this.i.cd = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "snappedX", {
            /**
             * Gets the pixel snapped X position of the cell within the content.
            */
            get: function () {
                return this.i.f2;
            },
            set: function (v) {
                this.i.f2 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "snappedY", {
            /**
             * Gets the snapped Y position of the cell within the content.
            */
            get: function () {
                return this.i.f4;
            },
            set: function (v) {
                this.i.f4 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "editOpacity", {
            /**
             * Gets or sets the opacity for cells that have unsaved edits.
            */
            get: function () {
                return this.i.b2;
            },
            set: function (v) {
                this.i.b2 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "contentOpacity", {
            /**
             * Gets or sets the opacity of the content of the cell.
            */
            get: function () {
                return this.i.b1;
            },
            set: function (v) {
                this.i.b1 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualContentOpacity", {
            /**
             * Gets the actual content opacity of the cell.
            */
            get: function () {
                return this.i.bz;
            },
            set: function (v) {
                this.i.bz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "opacity", {
            /**
             * Gets or sets the opacity of the cell.
            */
            get: function () {
                return this.i.b6;
            },
            set: function (v) {
                this.i.b6 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualOpacity", {
            /**
             * Gets the actual opacity of the cell.
            */
            get: function () {
                return this.i.b0;
            },
            set: function (v) {
                this.i.b0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "height", {
            /**
             * Gets the height of the cell.
            */
            get: function () {
                return this.i.e0;
            },
            set: function (v) {
                this.i.e0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "width", {
            /**
             * Gets the width of the cell.
            */
            get: function () {
                return this.i.gf;
            },
            set: function (v) {
                this.i.gf = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isSelected", {
            /**
             * Gets if the cell is selected.
            */
            get: function () {
                return this.i.a9;
            },
            set: function (v) {
                this.i.a9 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "selectedStatus", {
            /**
             * Gets the amount that the cell is selected. This is a value between 0 and 1.
            */
            get: function () {
                return this.i.b8;
            },
            set: function (v) {
                this.i.b8 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "activationStatus", {
            /**
             * Gets the amount that the cell is activated. This is a value between 0 and 1.
            */
            get: function () {
                return this.i.by;
            },
            set: function (v) {
                this.i.by = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "hoverStatus", {
            /**
             * Gets the amount that the cell is hovered. This is a value between 0 and 1.
            */
            get: function () {
                return this.i.b3;
            },
            set: function (v) {
                this.i.b3 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "horizontalAlignment", {
            /**
             * Gets or sets the horiztonal alignment of the cell content.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(CellContentHorizontalAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "verticalAlignment", {
            /**
             * Gets or sets the vertical alignment of the cell content.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureEnum(CellContentVerticalAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "background", {
            /**
             * Gets or sets the background color of the cell.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ke);
            },
            set: function (v) {
                this.i.ke = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "border", {
            /**
             * Gets or sets the border color of the cell.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kf);
            },
            set: function (v) {
                this.i.kf = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualBackground", {
            /**
             * Gets the actual background color of the cell
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kb);
            },
            set: function (v) {
                this.i.kb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualBorder", {
            /**
             * Gets the actual background color of the cell
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kc);
            },
            set: function (v) {
                this.i.kc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "activationBorder", {
            /**
             * Gets the actual background color of the cell
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ka);
            },
            set: function (v) {
                this.i.ka = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "errorBorder", {
            /**
             * Gets or sets the error border color of the cell.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kh);
            },
            set: function (v) {
                this.i.kh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "selectedBackground", {
            /**
             * Gets or sets the selected background color of the cell.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.km);
            },
            set: function (v) {
                this.i.km = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "hoverBackground", {
            /**
             * Gets or sets the hover background color of the cell.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kj);
            },
            set: function (v) {
                this.i.kj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "sortIndicatorColor", {
            /**
             * Gets or sets the color for the sort indicator icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kn);
            },
            set: function (v) {
                this.i.kn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "stickyRowBackground", {
            /**
             * Gets or sets the background color for the cell when it is stuck to the top of the grid as a pinned row.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ko);
            },
            set: function (v) {
                this.i.ko = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "pinnedRowBackground", {
            /**
             * Gets or sets the background color for the cell that has been marked as pinned.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kl);
            },
            set: function (v) {
                this.i.kl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "lastStickyRowBackground", {
            /**
             * Gets or sets the color for the last row in the sticky row area.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kk);
            },
            set: function (v) {
                this.i.kk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "pinnedRowOpacity", {
            /**
             * Gets or sets the color to use for displaying text.
            */
            get: function () {
                return this.i.b7;
            },
            set: function (v) {
                this.i.b7 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "originalValue", {
            /**
             * Gets or sets the original value for the cell, before processing.
            */
            get: function () {
                return this.i.go;
            },
            set: function (v) {
                this.i.go = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "renderValue", {
            /**
             * Gets or sets the text value, if any, which was rendered by a text cell.
            */
            get: function () {
                return this.i.ip;
            },
            set: function (v) {
                this.i.ip = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "textColor", {
            /**
             * Gets or sets the color of the text for the cell, if any.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kp);
            },
            set: function (v) {
                this.i.kp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualTextColor", {
            /**
             * Gets the actual color of the text for the cell, if any.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kd);
            },
            set: function (v) {
                this.i.kd = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "deletedTextColor", {
            /**
             * Gets or sets the text color for cells in deleted rows.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.kg);
            },
            set: function (v) {
                this.i.kg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "font", {
            get: function () {
                if (this.i.af == null) {
                    return null;
                }
                return this.i.af.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.af = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualFont", {
            get: function () {
                if (this.i.ad == null) {
                    return null;
                }
                return this.i.ad.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.ad = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "lineBreakMode", {
            /**
             * Gets or sets the line break mode to use if text is present in the cell.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureEnum(TextCellLineBreakMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "virtualizationPercentage", {
            /**
             * Gets or sets the virtualization percentage value. This is between 0 an 1, and indicates how virtual the content is at present.
            */
            get: function () {
                return this.i.cb;
            },
            set: function (v) {
                this.i.cb = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "paddingLeft", {
            /**
             * Gets or sets the left padding to use for the content.
            */
            get: function () {
                return this.i.fo;
            },
            set: function (v) {
                this.i.fo = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "paddingTop", {
            /**
             * Gets or sets the top padding to use for the content.
            */
            get: function () {
                return this.i.fs;
            },
            set: function (v) {
                this.i.fs = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "paddingRight", {
            /**
             * Gets or sets the right padding to use for the content.
            */
            get: function () {
                return this.i.fq;
            },
            set: function (v) {
                this.i.fq = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "paddingBottom", {
            /**
             * Gets or sets the bottom padding to use for the content.
            */
            get: function () {
                return this.i.fm;
            },
            set: function (v) {
                this.i.fm = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualPaddingLeft", {
            /**
             * Gets or sets the left padding to use for the content.
            */
            get: function () {
                return this.i.d1;
            },
            set: function (v) {
                this.i.d1 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualPaddingTop", {
            /**
             * Gets or sets the top padding to use for the content.
            */
            get: function () {
                return this.i.d5;
            },
            set: function (v) {
                this.i.d5 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualPaddingRight", {
            /**
             * Gets or sets the right padding to use for the content.
            */
            get: function () {
                return this.i.d3;
            },
            set: function (v) {
                this.i.d3 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualPaddingBottom", {
            /**
             * Gets or sets the bottom padding to use for the content.
            */
            get: function () {
                return this.i.dz;
            },
            set: function (v) {
                this.i.dz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "borderLeftWidth", {
            /**
             * Gets or sets the left border to use for the content.
            */
            get: function () {
                return this.i.eb;
            },
            set: function (v) {
                this.i.eb = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "borderTopWidth", {
            /**
             * Gets or sets the top border to use for the content.
            */
            get: function () {
                return this.i.eg;
            },
            set: function (v) {
                this.i.eg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "borderRightWidth", {
            /**
             * Gets or sets the right border to use for the content.
            */
            get: function () {
                return this.i.ee;
            },
            set: function (v) {
                this.i.ee = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "borderBottomWidth", {
            /**
             * Gets or sets the bottom border to use for the content.
            */
            get: function () {
                return this.i.d9;
            },
            set: function (v) {
                this.i.d9 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "activationBorderLeftWidth", {
            /**
             * Gets or sets the left activation border to use for the content.
            */
            get: function () {
                return this.i.dd;
            },
            set: function (v) {
                this.i.dd = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "activationBorderTopWidth", {
            /**
             * Gets or sets the top activation border to use for the content.
            */
            get: function () {
                return this.i.di;
            },
            set: function (v) {
                this.i.di = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "activationBorderRightWidth", {
            /**
             * Gets or sets the right activation border to use for the content.
            */
            get: function () {
                return this.i.dg;
            },
            set: function (v) {
                this.i.dg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "activationBorderBottomWidth", {
            /**
             * Gets or sets the bottom activation border to use for the content.
            */
            get: function () {
                return this.i.db;
            },
            set: function (v) {
                this.i.db = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "errorBorderLeftWidth", {
            /**
             * Gets or sets the left error border to use for the content.
            */
            get: function () {
                return this.i.er;
            },
            set: function (v) {
                this.i.er = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "errorBorderTopWidth", {
            /**
             * Gets or sets the top error border to use for the content.
            */
            get: function () {
                return this.i.ew;
            },
            set: function (v) {
                this.i.ew = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "errorBorderRightWidth", {
            /**
             * Gets or sets the right error border to use for the content.
            */
            get: function () {
                return this.i.eu;
            },
            set: function (v) {
                this.i.eu = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "errorBorderBottomWidth", {
            /**
             * Gets or sets the bottom error border to use for the content.
            */
            get: function () {
                return this.i.ep;
            },
            set: function (v) {
                this.i.ep = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualBorderLeftWidth", {
            /**
             * Gets or sets the actual left border to use for the content.
            */
            get: function () {
                return this.i.dp;
            },
            set: function (v) {
                this.i.dp = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualBorderTopWidth", {
            /**
             * Gets or sets the actual top border to use for the content.
            */
            get: function () {
                return this.i.du;
            },
            set: function (v) {
                this.i.du = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualBorderRightWidth", {
            /**
             * Gets or sets the actual right border to use for the content.
            */
            get: function () {
                return this.i.ds;
            },
            set: function (v) {
                this.i.ds = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "actualBorderBottomWidth", {
            /**
             * Gets or sets the actual bottom border to use for the content.
            */
            get: function () {
                return this.i.dm;
            },
            set: function (v) {
                this.i.dm = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "sortDirection", {
            /**
             * Gets the current sort direction for the column containing the cell.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = igniteuiReactCore.ensureEnum(ColumnSortDirection_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isExpanded", {
            /**
             * Gets the expansion state of the cell.
            */
            get: function () {
                return this.i.az;
            },
            set: function (v) {
                this.i.az = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isCollapsable", {
            /**
             * Gets if the cell needs to display an expansion indicator.
            */
            get: function () {
                return this.i.ar;
            },
            set: function (v) {
                this.i.ar = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "pinned", {
            /**
             * Gets the fixed column position of this cell.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = igniteuiReactCore.ensureEnum(PinnedPositions_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "editFont", {
            get: function () {
                if (this.i.ae == null) {
                    return null;
                }
                return this.i.ae.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.ae = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isEdited", {
            /**
             * Gets whether the cell has been edited.
            */
            get: function () {
                return this.i.ay;
            },
            set: function (v) {
                this.i.ay = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isDeleted", {
            /**
             * Gets whether the cell is part of a deleted row.
            */
            get: function () {
                return this.i.av;
            },
            set: function (v) {
                this.i.av = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "editError", {
            /**
             * Gets or sets the error message for the cell.
            */
            get: function () {
                return this.i.hl;
            },
            set: function (v) {
                this.i.hl = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "isInEditMode", {
            /**
             * Gets whether the cell is in edit mode.
            */
            get: function () {
                return this.i.a1;
            },
            set: function (v) {
                this.i.a1 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellInfo.prototype, "editID", {
            get: function () {
                return this.i.en;
            },
            set: function (v) {
                this.i.en = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrCellInfo.prototype.findByName = function (name) {
            return null;
        };
        IgrCellInfo.prototype.isCustomFieldDirty = function (propertyName) {
            var iv = this.i.at(propertyName);
            return (iv);
        };
        /**
         * Gets if a named property is dirty.
        
        * @param propertyId  * The property id to check.
        */
        IgrCellInfo.prototype.isDirtyById = function (propertyId_) {
            var iv = this.i.ax(propertyId_);
            return (iv);
        };
        /**
         * Gets if a named property is dirty.
        
        * @param propertyName  * The property name to check.
        */
        IgrCellInfo.prototype.isDirty = function (propertyName) {
            var iv = this.i.aw(propertyName);
            return (iv);
        };
        IgrCellInfo.prototype.setNamedValue = function (valueName, value) {
            this.i.jt(valueName, value);
        };
        /**
         * Returns if there is a named value stored for the cell.
        
        * @param valueName  * The name of the value to check.
        */
        IgrCellInfo.prototype.hasNamedValue = function (valueName) {
            var iv = this.i.ap(valueName);
            return (iv);
        };
        /**
         * Removes a named value from the cell.
        
        * @param valueName  * The name of the value to remove.
        */
        IgrCellInfo.prototype.removeNamedValue = function (valueName) {
            this.i.jq(valueName);
        };
        /**
         * Gets a named value from the cell.
        
        * @param valueName  * The name of the value to get.
        */
        IgrCellInfo.prototype.getNamedValue = function (valueName) {
            var iv = this.i.gm(valueName);
            return (iv);
        };
        return IgrCellInfo;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Backing information about a date time cell for the grid.
    */
    var IgrDateTimeCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDateTimeCellInfo, _super);
        function IgrDateTimeCellInfo() {
            return _super.call(this) || this;
        }
        IgrDateTimeCellInfo.prototype.createImplementation = function () {
            return new DateTimeCellModel();
        };
        Object.defineProperty(IgrDateTimeCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeCellInfo.prototype, "dateTimeValue", {
            /**
             * Sets or gets the DateTime value for the cell.
            */
            get: function () {
                return this.i.k0;
            },
            set: function (v) {
                this.i.k0 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeCellInfo.prototype, "formatStringOverride", {
            /**
             * The format string to apply to the value
            */
            get: function () {
                return this.i.lh;
            },
            set: function (v) {
                this.i.lh = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeCellInfo.prototype, "formatSpecifiers", {
            get: function () {
                return this.i.kr;
            },
            set: function (v) {
                this.i.kr = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeCellInfo.prototype, "formatOverride", {
            /**
             * The format options to apply to the value
            */
            get: function () {
                return this.i.la;
            },
            set: function (v) {
                this.i.la = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeCellInfo.prototype, "dateTimeFormat", {
            /**
             * Sets or gets the simple DateTimeFormat to use for the cell.
            */
            get: function () {
                return this.i.kw;
            },
            set: function (v) {
                this.i.kw = igniteuiReactCore.ensureEnum(DateTimeFormats_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeCellInfo.prototype, "isOffsetValue", {
            /**
             * Sets or gets whether the value to use is a DateTimeOffset value.
            */
            get: function () {
                return this.i.ky;
            },
            set: function (v) {
                this.i.ky = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrDateTimeCellInfo.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.formatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name);
            }
            return null;
        };
        return IgrDateTimeCellInfo;
    }(IgrCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Backing information for an image cell in the grid.
    */
    var IgrImageCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrImageCellInfo, _super);
        function IgrImageCellInfo() {
            return _super.call(this) || this;
        }
        IgrImageCellInfo.prototype.createImplementation = function () {
            return new ImageCellModel();
        };
        Object.defineProperty(IgrImageCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageCellInfo.prototype, "imagePath", {
            /**
             * Sets or gets the resource path to use to get the image for the cell.
            */
            get: function () {
                return this.i.ky;
            },
            set: function (v) {
                this.i.ky = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageCellInfo.prototype, "imageStretchOption", {
            /**
             * Sets or gets the image stretching behavior for the image.
            */
            get: function () {
                return this.i.kt;
            },
            set: function (v) {
                this.i.kt = igniteuiReactCore.ensureEnum(ImageStretchOptions_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageCellInfo.prototype, "imageResourceType", {
            /**
             * Sets or gets the image resource type. Indicates which type of resource should be fetched and how ImagePath should be interpreted.
            */
            get: function () {
                return this.i.kr;
            },
            set: function (v) {
                this.i.kr = igniteuiReactCore.ensureEnum(ImageResourceType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrImageCellInfo;
    }(IgrCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Backing information for a numeric cell in the grid.
    */
    var IgrNumericCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrNumericCellInfo, _super);
        function IgrNumericCellInfo() {
            return _super.call(this) || this;
        }
        IgrNumericCellInfo.prototype.createImplementation = function () {
            return new NumericCellModel();
        };
        Object.defineProperty(IgrNumericCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "numericValue", {
            /**
             * Sets or gets the numeric value to use for the cell.
            */
            get: function () {
                return this.i.kz;
            },
            set: function (v) {
                this.i.kz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "hasDecimalValue", {
            /**
             * Sets or gets whether there is a decimal numeric value to use for the cell.
            */
            get: function () {
                return this.i.kv;
            },
            set: function (v) {
                this.i.kv = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "formatStringOverride", {
            /**
             * The format string to apply to the value
            */
            get: function () {
                return this.i.lt;
            },
            set: function (v) {
                this.i.lt = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "formatSpecifiers", {
            get: function () {
                return this.i.kr;
            },
            set: function (v) {
                this.i.kr = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "formatOverride", {
            /**
             * The format options to apply to the value
            */
            get: function () {
                return this.i.ll;
            },
            set: function (v) {
                this.i.ll = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "negativePrefix", {
            /**
             * Sets or gets the text prepended to a negative numeric value
            */
            get: function () {
                return this.i.lz;
            },
            set: function (v) {
                this.i.lz = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "positivePrefix", {
            /**
             * Sets or gets the text prepended to a positive numeric value
            */
            get: function () {
                return this.i.l4;
            },
            set: function (v) {
                this.i.l4 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "negativeSuffix", {
            /**
             * Sets or gets the text appended to a negative numeric value
            */
            get: function () {
                return this.i.l1;
            },
            set: function (v) {
                this.i.l1 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "positiveSuffix", {
            /**
             * Sets or gets the text appended to a positive numeric value
            */
            get: function () {
                return this.i.l6;
            },
            set: function (v) {
                this.i.l6 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "maxFractionDigits", {
            /**
             * The maximum number of decimal places to display when formatting
            */
            get: function () {
                return this.i.k7;
            },
            set: function (v) {
                this.i.k7 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "minFractionDigits", {
            /**
             * The minimum number of decimal places to display when formatting
            */
            get: function () {
                return this.i.k9;
            },
            set: function (v) {
                this.i.k9 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "minIntegerDigits", {
            /**
             * The minimum number of integer digits to display when formatting
            */
            get: function () {
                return this.i.lb;
            },
            set: function (v) {
                this.i.lb = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericCellInfo.prototype, "showGroupingSeparator", {
            /**
             * Sets or gets if the grouping separator is shown
            */
            get: function () {
                return this.i.kx;
            },
            set: function (v) {
                this.i.kx = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrNumericCellInfo.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.formatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name);
            }
            return null;
        };
        return IgrNumericCellInfo;
    }(IgrCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Represents backing information for the row separators.
    */
    var IgrRowSeparatorInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrRowSeparatorInfo, _super);
        function IgrRowSeparatorInfo() {
            return _super.call(this) || this;
        }
        IgrRowSeparatorInfo.prototype.createImplementation = function () {
            return new RowSeparatorModel();
        };
        Object.defineProperty(IgrRowSeparatorInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrRowSeparatorInfo;
    }(IgrCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Backing information for a section header cell in the grid.
    */
    var IgrSectionHeaderCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSectionHeaderCellInfo, _super);
        function IgrSectionHeaderCellInfo() {
            return _super.call(this) || this;
        }
        IgrSectionHeaderCellInfo.prototype.createImplementation = function () {
            return new SectionHeaderCellModel();
        };
        Object.defineProperty(IgrSectionHeaderCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeaderCellInfo.prototype, "resolvedText", {
            /**
             * Sets or gets the resolved text for the section header cell.
            */
            get: function () {
                return this.i.k6;
            },
            set: function (v) {
                this.i.k6 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeaderCellInfo.prototype, "resolvedSummaryText", {
            /**
             * Sets or gets the resolved summary text for the section header cell.
            */
            get: function () {
                return this.i.k4;
            },
            set: function (v) {
                this.i.k4 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeaderCellInfo.prototype, "summaryDisplayMode", {
            /**
             * Sets or gets how summaries are displayed in the section header cell.
            */
            get: function () {
                return this.i.kv;
            },
            set: function (v) {
                this.i.kv = igniteuiReactCore.ensureEnum(GroupSummaryDisplayMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrSectionHeaderCellInfo;
    }(IgrCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Represents backing information for a template cell.
    */
    var IgrTemplateCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTemplateCellInfo, _super);
        function IgrTemplateCellInfo() {
            return _super.call(this) || this;
        }
        IgrTemplateCellInfo.prototype.createImplementation = function () {
            return new TemplateCellModel();
        };
        Object.defineProperty(IgrTemplateCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateCellInfo.prototype, "value", {
            /**
             * Sets or gets the value to provide to the template.
            */
            get: function () {
                return this.i.ks;
            },
            set: function (v) {
                this.i.ks = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateCellInfo;
    }(IgrCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateHeaderCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateHeaderCellModelExport, _super);
        function TemplateHeaderCellModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ae = null;
            return _this;
        }
        TemplateHeaderCellModelExport.prototype.get_ac = function () {
            return "TemplateHeaderCell";
        };
        TemplateHeaderCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
        };
        TemplateHeaderCellModelExport.$t = igniteuiReactCore.markType(TemplateHeaderCellModelExport, 'TemplateHeaderCellModelExport', CellModelExport.$);
        return TemplateHeaderCellModelExport;
    }(CellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateHeaderCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateHeaderCellModel, _super);
        function TemplateHeaderCellModel() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ku = false;
            return _this;
        }
        Object.defineProperty(TemplateHeaderCellModel.prototype, "kv", {
            get: function () {
                return this.ku;
            },
            set: function (a) {
                var b = this.ku;
                this.ku = a;
                if (this.ku != b) {
                    this.jm("IsFilterUIVisible", TemplateHeaderCellModel.kw, b, this.ku);
                }
            },
            enumerable: true,
            configurable: true
        });
        TemplateHeaderCellModel.prototype.ju = function (a, b) {
            _super.prototype.ju.call(this, a, b);
            if (a == "IsFilterUIVisible") {
                this.kv = b;
            }
        };
        TemplateHeaderCellModel.prototype.gn = function (a) {
            if (a == "IsFilterUIVisible") {
                return this.kv;
            }
            return _super.prototype.gn.call(this, a);
        };
        TemplateHeaderCellModel.prototype.b = function (a) {
            if (a == null) {
                a = new TemplateHeaderCellModelExport();
            }
            a = _super.prototype.b.call(this, a);
            var b = a;
            b.ae = this.ks;
            return b;
        };
        TemplateHeaderCellModel.$t = igniteuiReactCore.markType(TemplateHeaderCellModel, 'TemplateHeaderCellModel', TemplateCellModel.$);
        TemplateHeaderCellModel.kw = CellModel.ez("IsFilterUIVisible");
        return TemplateHeaderCellModel;
    }(TemplateCellModel));

    /**
     * Backing information for the template header cells.
    */
    var IgrTemplateHeaderCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTemplateHeaderCellInfo, _super);
        function IgrTemplateHeaderCellInfo() {
            return _super.call(this) || this;
        }
        IgrTemplateHeaderCellInfo.prototype.createImplementation = function () {
            return new TemplateHeaderCellModel();
        };
        Object.defineProperty(IgrTemplateHeaderCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateHeaderCellInfo.prototype, "isFilterUIVisible", {
            /**
             * Sets or gets whether the filter UI should be visible in the header.
            */
            get: function () {
                return this.i.kv;
            },
            set: function (v) {
                this.i.kv = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateHeaderCellInfo;
    }(IgrTemplateCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateSectionHeaderCellModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateSectionHeaderCellModel, _super);
        function TemplateSectionHeaderCellModel() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TemplateSectionHeaderCellModel.$t = igniteuiReactCore.markType(TemplateSectionHeaderCellModel, 'TemplateSectionHeaderCellModel', SectionHeaderCellModel.$);
        return TemplateSectionHeaderCellModel;
    }(SectionHeaderCellModel));

    /**
     * Backing information for a template section header cell in the grid.
    */
    var IgrTemplateSectionHeaderCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTemplateSectionHeaderCellInfo, _super);
        function IgrTemplateSectionHeaderCellInfo() {
            return _super.call(this) || this;
        }
        IgrTemplateSectionHeaderCellInfo.prototype.createImplementation = function () {
            return new TemplateSectionHeaderCellModel();
        };
        Object.defineProperty(IgrTemplateSectionHeaderCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateSectionHeaderCellInfo;
    }(IgrSectionHeaderCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Backing information for a text cell in the grid.
    */
    var IgrTextCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTextCellInfo, _super);
        function IgrTextCellInfo() {
            return _super.call(this) || this;
        }
        IgrTextCellInfo.prototype.createImplementation = function () {
            return new TextCellModel();
        };
        Object.defineProperty(IgrTextCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextCellInfo.prototype, "textValue", {
            /**
             * Sets or gets the text value for the cell.
            */
            get: function () {
                return this.i.ks;
            },
            set: function (v) {
                this.i.ks = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTextCellInfo;
    }(IgrCellInfo));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Backing information for a text header cell.
    */
    var IgrTextHeaderCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTextHeaderCellInfo, _super);
        function IgrTextHeaderCellInfo() {
            return _super.call(this) || this;
        }
        IgrTextHeaderCellInfo.prototype.createImplementation = function () {
            return new TextHeaderCellModel();
        };
        Object.defineProperty(IgrTextHeaderCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextHeaderCellInfo.prototype, "isColumnOptionsEnabled", {
            /**
             * Sets or gets whether the filter UI should be visible in the header.
            */
            get: function () {
                return this.i.k1;
            },
            set: function (v) {
                this.i.k1 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextHeaderCellInfo.prototype, "sortIndicatorStyle", {
            get: function () {
                return this.i.kz;
            },
            set: function (v) {
                this.i.kz = igniteuiReactCore.ensureEnum(SortIndicatorStyle_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextHeaderCellInfo.prototype, "columnOptionsIconAlignment", {
            /**
             * Gets or sets the alignment of the column options icon within the header cell.
            */
            get: function () {
                return this.i.kv;
            },
            set: function (v) {
                this.i.kv = igniteuiReactCore.ensureEnum(ColumnOptionsIconAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextHeaderCellInfo.prototype, "columnOptionsIconColor", {
            /**
             * Gets or sets the color for the column options icon in the header.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ld);
            },
            set: function (v) {
                this.i.ld = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextHeaderCellInfo.prototype, "columnOptionsIconBehavior", {
            /**
             * Gets or sets how the column option icon will behave in the header.
            */
            get: function () {
                return this.i.kx;
            },
            set: function (v) {
                this.i.kx = igniteuiReactCore.ensureEnum(ColumnOptionsIconBehavior_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrTextHeaderCellInfo;
    }(IgrTextCellInfo));

    /**
     * Information about the data binding taking place.
    */
    var IgrDataBindingEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrDataBindingEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrDataBindingEventArgs.prototype.createImplementation = function () {
            return new DataBindingEventArgs();
        };
        Object.defineProperty(IgrDataBindingEventArgs.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataBindingEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrDataBindingEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrDataBindingEventArgs.prototype, "cellInfo", {
            /**
             * The backing information for the current cell.
            */
            get: function () {
                if (this.i.cellInfo == null) {
                    return null;
                }
                if (!this.i.cellInfo.externalObject) {
                    var ext = null;
                    switch (this.i.cellInfo.$type.name) {
                        case "DateTimeCellModel":
                            ext = new IgrDateTimeCellInfo();
                            break;
                        case "ImageCellModel":
                            ext = new IgrImageCellInfo();
                            break;
                        case "NumericCellModel":
                            ext = new IgrNumericCellInfo();
                            break;
                        case "RowSeparatorModel":
                            ext = new IgrRowSeparatorInfo();
                            break;
                        case "SectionHeaderCellModel":
                            ext = new IgrSectionHeaderCellInfo();
                            break;
                        case "TemplateCellModel":
                            ext = new IgrTemplateCellInfo();
                            break;
                        case "TemplateHeaderCellModel":
                            ext = new IgrTemplateHeaderCellInfo();
                            break;
                        case "TemplateSectionHeaderCellModel":
                            ext = new IgrTemplateSectionHeaderCellInfo();
                            break;
                        case "TextCellModel":
                            ext = new IgrTextCellInfo();
                            break;
                        case "TextHeaderCellModel":
                            ext = new IgrTextHeaderCellInfo();
                            break;
                    }
                    ext._implementation = this.i.cellInfo;
                    this.i.cellInfo.externalObject = ext;
                }
                return this.i.cellInfo.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataBindingEventArgs.prototype, "resolvedValue", {
            /**
         * The resolved value for the cell.
        */
            get: function () {
                return this.i.resolvedValue;
            },
            set: function (v) {
                this.i.resolvedValue = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataBindingEventArgs.prototype, "rowObject", {
            /**
             * The data for the row in which the cell is contained.
            */
            get: function () {
                return this.i.rowObject;
            },
            set: function (v) {
                this.i.rowObject = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrDataBindingEventArgs;
    }());

    /**
     * Information about the style request for a cell.
    */
    var IgrCellStyleRequestedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrCellStyleRequestedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrCellStyleRequestedEventArgs.prototype.createImplementation = function () {
            return new CellStyleRequestedEventArgs();
        };
        Object.defineProperty(IgrCellStyleRequestedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrCellStyleRequestedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrCellStyleRequestedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrCellStyleRequestedEventArgs.prototype, "styleKey", {
            /**
             * The proposed style key for the cell. Used for recycling the cell.
            */
            get: function () {
                return this.i.styleKey;
            },
            set: function (v) {
                this.i.styleKey = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellStyleRequestedEventArgs.prototype, "resolvedValue", {
            /**
             * The resolved value for the cell.
            */
            get: function () {
                return this.i.resolvedValue;
            },
            set: function (v) {
                this.i.resolvedValue = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellStyleRequestedEventArgs.prototype, "rowNumber", {
            /**
             * The row number for the cell.
            */
            get: function () {
                return this.i.rowNumber;
            },
            set: function (v) {
                this.i.rowNumber = +v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrCellStyleRequestedEventArgs;
    }());

    /**
     * Base class for various definition types for the grid.
    */
    var IgrDefinitionBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDefinitionBase, _super);
        function IgrDefinitionBase(props) {
            var _this = _super.call(this, props) || this;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._renderer = null;
            _this._dataBinding = null;
            _this._dataBinding_wrapped = null;
            _this._dataBound = null;
            _this._dataBound_wrapped = null;
            _this._cellStyleKeyRequested = null;
            _this._cellStyleKeyRequested_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            return _this;
        }
        IgrDefinitionBase.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrDefinitionBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: true,
            configurable: true
        });
        IgrDefinitionBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDefinitionBase.prototype.componentDidMount = function () {
            var e_1, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDefinitionBase.prototype.onImplementationCreated = function () {
        };
        Object.defineProperty(IgrDefinitionBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrDefinitionBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDefinitionBase.prototype._styling = function (container, component, parent) {
            this._stylingContainer = container;
            this._stylingParent = component;
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            var grid = component._grid;
            var prev;
            if (grid) {
                prev = grid.columnPropertyUpdatingAnimationMode;
                grid.columnPropertyUpdatingAnimationMode = ColumnPropertyUpdatingAnimationMode.None;
            }
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            var lowerTypeName = typeName.toLowerCase();
            if (lowerTypeName.indexOf("column") >= 0) {
                genericPrefix = "column";
            }
            else if (lowerTypeName.indexOf("sectionheader") >= 0) {
                genericPrefix = "section-header";
            }
            else if (lowerTypeName.indexOf("sectionfooter") >= 0) {
                genericPrefix = "section-footer";
            }
            else if (lowerTypeName.indexOf("rowseparator") >= 0) {
                genericPrefix = "row-separator";
            }
            else if (lowerTypeName.indexOf("summaryrowroot") >= 0) {
                genericPrefix = "summary-row-root";
            }
            else if (lowerTypeName.indexOf("summaryrowsection") >= 0) {
                genericPrefix = "summary-row-section";
            }
            else if (lowerTypeName.indexOf("headerseparator") >= 0) {
                genericPrefix = "header-separator";
            }
            else {
                genericPrefix = "header";
            }
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName == "Grid") {
                    parentTypeName = "DataGrid";
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (grid) {
                grid.columnPropertyUpdatingAnimationMode = prev;
            }
            this._inStyling = false;
        };
        IgrDefinitionBase.prototype._provideRenderer = function (renderer) {
            this._renderer = renderer;
        };
        IgrDefinitionBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDefinitionBase.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrDefinitionBase.prototype, "background", {
            /**
         * Gets or sets the background color to use.
        */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d7);
            },
            set: function (v) {
                this.i.d7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "border", {
            /**
             * Gets or sets the background color to use.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d8);
            },
            set: function (v) {
                this.i.d8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "activationBorder", {
            /**
             * Gets or sets the background color to use.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.dy);
            },
            set: function (v) {
                this.i.dy = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "errorBorder", {
            /**
             * Gets or sets the error border color to use.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d9);
            },
            set: function (v) {
                this.i.d9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualBorder", {
            /**
             * Gets the actual border color that will be used.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d1);
            },
            set: function (v) {
                this.i.d1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "borderLeftWidth", {
            /**
             * Gets or sets the amount of left border to use for the cell content for this column.
            */
            get: function () {
                return this.i.be;
            },
            set: function (v) {
                this.i.be = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "borderTopWidth", {
            /**
             * Gets or sets the amount of top border to use for the cell content for this column.
            */
            get: function () {
                return this.i.bg;
            },
            set: function (v) {
                this.i.bg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "borderRightWidth", {
            /**
             * Gets or sets the amount of right border to use for the cell content of this column.
            */
            get: function () {
                return this.i.bf;
            },
            set: function (v) {
                this.i.bf = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "borderBottomWidth", {
            /**
             * Gets or sets the amount of bottom border to use for the cell content of this column.
            */
            get: function () {
                return this.i.bd;
            },
            set: function (v) {
                this.i.bd = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "activationBorderLeftWidth", {
            /**
             * Gets or sets the amount of left activation border to use for the cell content for this column.
            */
            get: function () {
                return this.i.ba;
            },
            set: function (v) {
                this.i.ba = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "activationBorderTopWidth", {
            /**
             * Gets or sets the amount of top activation border to use for the cell content for this column.
            */
            get: function () {
                return this.i.bc;
            },
            set: function (v) {
                this.i.bc = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "activationBorderRightWidth", {
            /**
             * Gets or sets the amount of right activation border to use for the cell content of this column.
            */
            get: function () {
                return this.i.bb;
            },
            set: function (v) {
                this.i.bb = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "activationBorderBottomWidth", {
            /**
             * Gets or sets the amount of bottom activation border to use for the cell content of this column.
            */
            get: function () {
                return this.i.a9;
            },
            set: function (v) {
                this.i.a9 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "errorBorderLeftWidth", {
            get: function () {
                return this.i.bi;
            },
            set: function (v) {
                this.i.bi = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "errorBorderTopWidth", {
            get: function () {
                return this.i.bk;
            },
            set: function (v) {
                this.i.bk = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "errorBorderRightWidth", {
            get: function () {
                return this.i.bj;
            },
            set: function (v) {
                this.i.bj = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "errorBorderBottomWidth", {
            get: function () {
                return this.i.bh;
            },
            set: function (v) {
                this.i.bh = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualBackground", {
            /**
             * Gets the actual background color that will be used.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d0);
            },
            set: function (v) {
                this.i.d0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualActivationBorder", {
            /**
             * Gets the actual background color that will be used.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.dz);
            },
            set: function (v) {
                this.i.dz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualErrorBorder", {
            /**
             * Gets the actual error border color that will be used.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d2);
            },
            set: function (v) {
                this.i.d2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "stickyRowBackground", {
            /**
             * Gets or sets the background color for content that sticks to the top of the grid.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ej);
            },
            set: function (v) {
                this.i.ej = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualStickyRowBackground", {
            /**
             * Gets the actual background color for content that sticks to the top of the grid.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d5);
            },
            set: function (v) {
                this.i.d5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "pinnedRowBackground", {
            /**
             * Gets or sets the background color for cells belonging to rows marked as pinned.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ei);
            },
            set: function (v) {
                this.i.ei = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualPinnedRowBackground", {
            /**
             * Gets the actual background color for cells belonging to rows marked as pinned.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d4);
            },
            set: function (v) {
                this.i.d4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "lastStickyRowBackground", {
            /**
             * Gets or sets the color for the last row in the sticky row area.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.eh);
            },
            set: function (v) {
                this.i.eh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualLastStickyRowBackground", {
            /**
             * Gets the actual color for the last row in the sticky row area.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d3);
            },
            set: function (v) {
                this.i.d3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "contentOpacity", {
            /**
             * Gets or sets the opacity of the content.
            */
            get: function () {
                return this.i.au;
            },
            set: function (v) {
                this.i.au = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "horizontalAlignment", {
            /**
             * Gets or sets the horizontal alignment to use for the cell content.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(CellContentHorizontalAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "verticalAlignment", {
            /**
             * Gets or sets the vertical alignment to use for the cell content.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureEnum(CellContentVerticalAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "lineBreakMode", {
            /**
             * Gets or sets the line breaking mode to use if text is present in the cell.
            */
            get: function () {
                return this.i.y;
            },
            set: function (v) {
                this.i.y = igniteuiReactCore.ensureEnum(TextCellLineBreakMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualLineBreakMode", {
            /**
             * Gets the actual line break mode which will be used if text is present in the cell.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = igniteuiReactCore.ensureEnum(TextCellLineBreakMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "textColor", {
            /**
             * Gets or sets the color to use for displaying text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ek);
            },
            set: function (v) {
                this.i.ek = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualTextColor", {
            /**
             * Gets the actual color used for displaying text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.d6);
            },
            set: function (v) {
                this.i.d6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "pinnedRowOpacity", {
            /**
             * Gets or sets the color to use for displaying text.
            */
            get: function () {
                return this.i.aw;
            },
            set: function (v) {
                this.i.aw = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "actualPinnedRowOpacity", {
            /**
             * Gets or sets the color to use for displaying text.
            */
            get: function () {
                return this.i.at;
            },
            set: function (v) {
                this.i.at = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "textStyle", {
            get: function () {
                if (this.i.textStyle == null) {
                    return null;
                }
                return this.i.textStyle.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.textStyle = fi;
            },
            enumerable: true,
            configurable: true
        });
        IgrDefinitionBase.prototype.findByName = function (name) {
            return null;
        };
        IgrDefinitionBase.prototype.setNamedValue = function (valueName, animationType, value) {
            this.i.c6(valueName, (animationType == null ? null : animationType), value);
        };
        /**
         * Returns if this definition has named value.
        
        */
        IgrDefinitionBase.prototype.hasNamedValues = function () {
            var iv = this.i.ai();
            return (iv);
        };
        /**
         * Returns if this definition has a named value with a given name.
        
        * @param valueName  * The named value name to check for.
        */
        IgrDefinitionBase.prototype.hasNamedValue = function (valueName) {
            var iv = this.i.ah(valueName);
            return (iv);
        };
        /**
         * Removes the named value from this definition by name.
        
        * @param valueName  * The named value name to remove.
        */
        IgrDefinitionBase.prototype.removeNamedValue = function (valueName) {
            this.i.c4(valueName);
        };
        /**
         * Gets the value for a named value from this definition.
        
        * @param valueName  * The named value name to check for.
        */
        IgrDefinitionBase.prototype.getNamedValue = function (valueName) {
            var iv = this.i.bn(valueName);
            return (iv);
        };
        Object.defineProperty(IgrDefinitionBase.prototype, "dataBinding", {
            /**
             * Called when a cell is data binding.
            */
            get: function () {
                return this._dataBinding;
            },
            set: function (ev) {
                var _this = this;
                if (this._dataBinding_wrapped !== null) {
                    this.i.dataBinding = igniteuiReactCore.delegateRemove(this.i.dataBinding, this._dataBinding_wrapped);
                    this._dataBinding_wrapped = null;
                    this._dataBinding = null;
                }
                this._dataBinding = ev;
                this._dataBinding_wrapped = function (o, e) {
                    var outerArgs = new IgrDataBindingEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeDataBinding) {
                        _this.beforeDataBinding(_this, outerArgs);
                    }
                    if (_this._dataBinding) {
                        _this._dataBinding(_this, outerArgs);
                    }
                };
                this.i.dataBinding = igniteuiReactCore.delegateCombine(this.i.dataBinding, this._dataBinding_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "dataBound", {
            /**
             * Called when a cell has been data bound.
            */
            get: function () {
                return this._dataBound;
            },
            set: function (ev) {
                var _this = this;
                if (this._dataBound_wrapped !== null) {
                    this.i.dataBound = igniteuiReactCore.delegateRemove(this.i.dataBound, this._dataBound_wrapped);
                    this._dataBound_wrapped = null;
                    this._dataBound = null;
                }
                this._dataBound = ev;
                this._dataBound_wrapped = function (o, e) {
                    var outerArgs = new IgrDataBindingEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeDataBound) {
                        _this.beforeDataBound(_this, outerArgs);
                    }
                    if (_this._dataBound) {
                        _this._dataBound(_this, outerArgs);
                    }
                };
                this.i.dataBound = igniteuiReactCore.delegateCombine(this.i.dataBound, this._dataBound_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDefinitionBase.prototype, "cellStyleKeyRequested", {
            /**
             * Called when the style key for a cell is needed. Used for recycling the cell.
            */
            get: function () {
                return this._cellStyleKeyRequested;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellStyleKeyRequested_wrapped !== null) {
                    this.i.cellStyleKeyRequested = igniteuiReactCore.delegateRemove(this.i.cellStyleKeyRequested, this._cellStyleKeyRequested_wrapped);
                    this._cellStyleKeyRequested_wrapped = null;
                    this._cellStyleKeyRequested = null;
                }
                this._cellStyleKeyRequested = ev;
                this._cellStyleKeyRequested_wrapped = function (o, e) {
                    var outerArgs = new IgrCellStyleRequestedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellStyleKeyRequested) {
                        _this.beforeCellStyleKeyRequested(_this, outerArgs);
                    }
                    if (_this._cellStyleKeyRequested) {
                        _this._cellStyleKeyRequested(_this, outerArgs);
                    }
                };
                this.i.cellStyleKeyRequested = igniteuiReactCore.delegateCombine(this.i.cellStyleKeyRequested, this._cellStyleKeyRequested_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrDefinitionBase;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Used to configure the appearance of the section header cells.
    */
    var IgrSectionHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSectionHeader, _super);
        function IgrSectionHeader(props) {
            return _super.call(this, props) || this;
        }
        IgrSectionHeader.prototype.createImplementation = function () {
            return new SectionHeader();
        };
        Object.defineProperty(IgrSectionHeader.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "selectedBackground", {
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fe);
            },
            set: function (v) {
                this.i.fe = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "actualSelectedBackground", {
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fd);
            },
            set: function (v) {
                this.i.fd = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "paddingLeft", {
            /**
             * Gets or sets the amount of left padding to use for the cell content for this column.
            */
            get: function () {
                return this.i.ex;
            },
            set: function (v) {
                this.i.ex = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "paddingTop", {
            /**
             * Gets or sets the amount of top padding to use for the cell content for this column.
            */
            get: function () {
                return this.i.ez;
            },
            set: function (v) {
                this.i.ez = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "paddingRight", {
            /**
             * Gets or sets the amount of right padding to use for the cell content of this column.
            */
            get: function () {
                return this.i.ey;
            },
            set: function (v) {
                this.i.ey = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "paddingBottom", {
            /**
             * Gets or sets the amount of bottom padding to use for the cell content of this column.
            */
            get: function () {
                return this.i.ew;
            },
            set: function (v) {
                this.i.ew = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "isCollapsable", {
            get: function () {
                return this.i.eq;
            },
            set: function (v) {
                this.i.eq = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSectionHeader.prototype, "summaryDisplayMode", {
            get: function () {
                return this.i.en;
            },
            set: function (v) {
                this.i.en = igniteuiReactCore.ensureEnum(GroupSummaryDisplayMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrSectionHeader;
    }(IgrDefinitionBase));

    var IgrSummaryRow = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSummaryRow, _super);
        function IgrSummaryRow(props) {
            return _super.call(this, props) || this;
        }
        Object.defineProperty(IgrSummaryRow.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "selectedBackground", {
            /**
             * Gets or sets the background color for summary cells when selected.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fi);
            },
            set: function (v) {
                this.i.fi = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "actualSelectedBackground", {
            /**
             * Gets the actual background color for summary cells when selected.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ff);
            },
            set: function (v) {
                this.i.ff = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "summaryLabelTextColor", {
            /**
             * Gets or sets the text color for the summary labels.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fj);
            },
            set: function (v) {
                this.i.fj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "actualSummaryLabelTextColor", {
            /**
             * Gets the actual text color for the summary labels.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fg);
            },
            set: function (v) {
                this.i.fg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "summaryNameTextStyle", {
            /**
             * Gets or sets the text style for the summary labels.
            */
            get: function () {
                if (this.i.summaryNameTextStyle == null) {
                    return null;
                }
                return this.i.summaryNameTextStyle.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.summaryNameTextStyle = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "paddingLeft", {
            /**
             * Gets or sets the amount of left padding to use for the cell content for this column.
            */
            get: function () {
                return this.i.ev;
            },
            set: function (v) {
                this.i.ev = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "paddingTop", {
            /**
             * Gets or sets the amount of top padding to use for the cell content for this column.
            */
            get: function () {
                return this.i.ex;
            },
            set: function (v) {
                this.i.ex = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "paddingRight", {
            /**
             * Gets or sets the amount of right padding to use for the cell content of this column.
            */
            get: function () {
                return this.i.ew;
            },
            set: function (v) {
                this.i.ew = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryRow.prototype, "paddingBottom", {
            /**
             * Gets or sets the amount of bottom padding to use for the cell content of this column.
            */
            get: function () {
                return this.i.eu;
            },
            set: function (v) {
                this.i.eu = +v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrSummaryRow;
    }(IgrDefinitionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrSummaryRowRoot = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSummaryRowRoot, _super);
        function IgrSummaryRowRoot(props) {
            return _super.call(this, props) || this;
        }
        IgrSummaryRowRoot.prototype.createImplementation = function () {
            return new SummaryRowRoot();
        };
        Object.defineProperty(IgrSummaryRowRoot.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrSummaryRowRoot;
    }(IgrSummaryRow));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrSummaryRowSection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSummaryRowSection, _super);
        function IgrSummaryRowSection(props) {
            return _super.call(this, props) || this;
        }
        IgrSummaryRowSection.prototype.createImplementation = function () {
            return new SummaryRowSection();
        };
        Object.defineProperty(IgrSummaryRowSection.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrSummaryRowSection;
    }(IgrSummaryRow));

    /**
     * Represents a width of a column.
    */
    var IgrColumnWidth = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnWidth() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnWidth.prototype.createImplementation = function () {
            return new ColumnWidth();
        };
        Object.defineProperty(IgrColumnWidth.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnWidth.prototype.onImplementationCreated = function () {
        };
        IgrColumnWidth.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrColumnWidth.prototype, "isStarSized", {
            /**
             * Gets or sets whether to use star sizing for the column's width
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnWidth.prototype, "value", {
            /**
             * Gets or sets the fixed width or the proportional width of the column, depending on whether this width is a star width.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnWidth.prototype, "minimumWidth", {
            /**
             * Gets or sets a minimum width to use when star sizing.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnWidth.prototype.findByName = function (name) {
            return null;
        };
        return IgrColumnWidth;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Information about the cell in context.
    */
    var IgrGridCellEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridCellEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridCellEventArgs.prototype.createImplementation = function () {
            return new GridCellEventArgs();
        };
        Object.defineProperty(IgrGridCellEventArgs.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridCellEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridCellEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridCellEventArgs.prototype, "cellInfo", {
            /**
             * The backing information for the current cell.
            */
            get: function () {
                if (this.i.cellInfo == null) {
                    return null;
                }
                if (!this.i.cellInfo.externalObject) {
                    var ext = null;
                    switch (this.i.cellInfo.$type.name) {
                        case "DateTimeCellModel":
                            ext = new IgrDateTimeCellInfo();
                            break;
                        case "ImageCellModel":
                            ext = new IgrImageCellInfo();
                            break;
                        case "NumericCellModel":
                            ext = new IgrNumericCellInfo();
                            break;
                        case "RowSeparatorModel":
                            ext = new IgrRowSeparatorInfo();
                            break;
                        case "SectionHeaderCellModel":
                            ext = new IgrSectionHeaderCellInfo();
                            break;
                        case "TemplateCellModel":
                            ext = new IgrTemplateCellInfo();
                            break;
                        case "TemplateHeaderCellModel":
                            ext = new IgrTemplateHeaderCellInfo();
                            break;
                        case "TemplateSectionHeaderCellModel":
                            ext = new IgrTemplateSectionHeaderCellInfo();
                            break;
                        case "TextCellModel":
                            ext = new IgrTextCellInfo();
                            break;
                        case "TextHeaderCellModel":
                            ext = new IgrTextHeaderCellInfo();
                            break;
                    }
                    ext._implementation = this.i.cellInfo;
                    this.i.cellInfo.externalObject = ext;
                }
                return this.i.cellInfo.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellEventArgs.prototype, "grid", {
            /**
         * Gets the grid owning the cell.
        */
            get: function () {
                if (this.i.grid == null) {
                    return null;
                }
                return this.i.grid.externalObject;
            },
            set: function (v) {
                v == null ? this.i.grid = null : this.i.grid = v.i;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridCellEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Column animation settings for the grid.
    */
    var IgrGridColumnAnimationSettings = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnAnimationSettings() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridColumnAnimationSettings.prototype.createImplementation = function () {
            return new GridColumnAnimationSettings();
        };
        Object.defineProperty(IgrGridColumnAnimationSettings.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridColumnAnimationSettings.prototype.onImplementationCreated = function () {
        };
        IgrGridColumnAnimationSettings.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        IgrGridColumnAnimationSettings.prototype.findByName = function (name) {
            return null;
        };
        return IgrGridColumnAnimationSettings;
    }());

    /**
     * Represents a base class used to configure the appearance of the column header cells.
    */
    var IgrHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrHeader, _super);
        function IgrHeader(props) {
            return _super.call(this, props) || this;
        }
        Object.defineProperty(IgrHeader.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "sortIndicatorColor", {
            /**
             * Gets or sets the color to use for the sort indicator icon
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fb);
            },
            set: function (v) {
                this.i.fb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "actualSortIndicatorColor", {
            /**
             * Gets the actual background color that is used for the cells when they are selected
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e9);
            },
            set: function (v) {
                this.i.e9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "sortIndicatorStyle", {
            get: function () {
                return this.i.eo;
            },
            set: function (v) {
                this.i.eo = igniteuiReactCore.ensureEnum(SortIndicatorStyle_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "actualSortIndicatorStyle", {
            get: function () {
                return this.i.en;
            },
            set: function (v) {
                this.i.en = igniteuiReactCore.ensureEnum(SortIndicatorStyle_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "paddingLeft", {
            /**
             * Gets or sets the amount of left padding to use for the cell content.
            */
            get: function () {
                return this.i.eu;
            },
            set: function (v) {
                this.i.eu = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "paddingTop", {
            /**
             * Gets or sets the amount of top padding to use for the cell content.
            */
            get: function () {
                return this.i.ew;
            },
            set: function (v) {
                this.i.ew = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "paddingRight", {
            /**
             * Gets or sets the amount of right padding to use for the cell content.
            */
            get: function () {
                return this.i.ev;
            },
            set: function (v) {
                this.i.ev = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrHeader.prototype, "paddingBottom", {
            /**
             * Gets or sets the amount of bottom padding to use for the cell content.
            */
            get: function () {
                return this.i.et;
            },
            set: function (v) {
                this.i.et = +v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrHeader;
    }(IgrDefinitionBase));

    /**
     * A column in the data grid.
    */
    var IgrColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumn, _super);
        function IgrColumn(props) {
            var _this = _super.call(this, props) || this;
            _this._actualHeaderTextChange = null;
            _this._actualHeaderTextChange_wrapped = null;
            return _this;
        }
        Object.defineProperty(IgrColumn.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "paddingLeft", {
            /**
             * Gets or sets the amount of left padding to use for the cell content for this column.
            */
            get: function () {
                return this.i.gy;
            },
            set: function (v) {
                this.i.gy = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "paddingTop", {
            /**
             * Gets or sets the amount of top padding to use for the cell content for this column.
            */
            get: function () {
                return this.i.g0;
            },
            set: function (v) {
                this.i.g0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "paddingRight", {
            /**
             * Gets or sets the amount of right padding to use for the cell content of this column.
            */
            get: function () {
                return this.i.gz;
            },
            set: function (v) {
                this.i.gz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "paddingBottom", {
            /**
             * Gets or sets the amount of bottom padding to use for the cell content of this column.
            */
            get: function () {
                return this.i.gx;
            },
            set: function (v) {
                this.i.gx = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "name", {
            /**
             * Gets or sets an unique name of the Column
            */
            get: function () {
                return this.i.id;
            },
            set: function (v) {
                this.i.id = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "field", {
            /**
             * Gets or sets the key used for the column binding
            */
            get: function () {
                return this.i.hy;
            },
            set: function (v) {
                this.i.hy = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "headerText", {
            /**
             * Gets or sets the text displayed in the header of the column
            */
            get: function () {
                return this.i.h2;
            },
            set: function (v) {
                this.i.h2 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualHeaderText", {
            /**
             * Gets the actual text displayed in the header of the column
            */
            get: function () {
                return this.i.hh;
            },
            set: function (v) {
                this.i.hh = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "selectedBackground", {
            /**
             * Gets or sets the background color to use for the cells when they are selected
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.jn);
            },
            set: function (v) {
                this.i.jn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualSelectedBackground", {
            /**
             * Gets the actual background color that is used for the cells when they are selected
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.jh);
            },
            set: function (v) {
                this.i.jh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "rowHoverBackground", {
            /**
             * Gets or sets the background color to use for the cells when the row is hovered.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.jm);
            },
            set: function (v) {
                this.i.jm = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualHoverBackground", {
            /**
             * Gets the actual background color that is used for the cells when they are hovered.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.jg);
            },
            set: function (v) {
                this.i.jg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "animationSettings", {
            /**
             * Gets or sets the animation settings to use for this column.
            */
            get: function () {
                if (this.i.fe == null) {
                    return null;
                }
                if (!this.i.fe.externalObject) {
                    var e = new IgrGridColumnAnimationSettings();
                    e._implementation = this.i.fe;
                    this.i.fe.externalObject = e;
                }
                return this.i.fe.externalObject;
            },
            set: function (v) {
                v == null ? this.i.fe = null : this.i.fe = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "width", {
            /**
             * Gets or sets the width to use for this column.
            */
            get: function () {
                if (this.i.width == null) {
                    return null;
                }
                if (!this.i.width.externalObject) {
                    var e = new IgrColumnWidth();
                    e._implementation = this.i.width;
                    this.i.width.externalObject = e;
                }
                return this.i.width.externalObject;
            },
            set: function (v) {
                if (typeof v == "string") {
                    var int = ColumnWidth.parse(v);
                    var ext = new IgrColumnWidth();
                    ext._implementation = int;
                    v = ext;
                }
                v == null ? this.i.width = null : this.i.width = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "minWidth", {
            /**
             * Gets or sets the minimum width to use for this column. Overrides the DefaultColumnMinWidth from the grid, if set.
            */
            get: function () {
                return this.i.gm;
            },
            set: function (v) {
                this.i.gm = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "isFromMarkup", {
            /**
             * Gets whether this column was projected from markup/templates and is constrained.
            */
            get: function () {
                return this.i.gc;
            },
            set: function (v) {
                this.i.gc = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "isAutoGenerated", {
            /**
             * Gets whether this column was auto generated.
            */
            get: function () {
                return this.i.f8;
            },
            set: function (v) {
                this.i.f8 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "filter", {
            /**
             * Gets or sets a filter to apply on the values of this column
            */
            get: function () {
                return this.i.eo;
            },
            set: function (v) {
                this.i.eo = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "header", {
            /**
             * Gets or sets the header definition for this column.
            */
            get: function () {
                if (this.i.header == null) {
                    return null;
                }
                if (!this.i.header.externalObject) {
                    var e = IgrHeader._createFromInternal(this.i.header);
                    if (e) {
                        e._implementation = this.i.header;
                    }
                    this.i.header.externalObject = e;
                }
                return this.i.header.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.header = null : this.i.header = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "isFilteringEnabled", {
            /**
             * Gets or sets whether filtering is enabled for this column.
            */
            get: function () {
                return this.i.gb;
            },
            set: function (v) {
                this.i.gb = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "isResizingEnabled", {
            /**
             * Gets or sets whether resizing is enabled for this column.
            */
            get: function () {
                return this.i.ge;
            },
            set: function (v) {
                this.i.ge = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "isHidden", {
            /**
             * Gets or sets whether or not a column is hidden from the grid
            */
            get: function () {
                return this.i.gd;
            },
            set: function (v) {
                this.i.gd = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "shouldRemoveWhenHidden", {
            /**
             * Gets or sets if a column should be removed from the grid when it is fully hidden
            */
            get: function () {
                return this.i.gg;
            },
            set: function (v) {
                this.i.gg = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "sortDirection", {
            /**
             * Gets the current sort direction (None, Ascending, Descending) for this column.
            */
            get: function () {
                return this.i.e6;
            },
            set: function (v) {
                this.i.e6 = igniteuiReactCore.ensureEnum(ColumnSortDirection_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "pinned", {
            /**
             * Gets or sets the current fixed position for this column.
            */
            get: function () {
                return this.i.fk;
            },
            set: function (v) {
                this.i.fk = igniteuiReactCore.ensureEnum(PinnedPositions_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualColumnOptionsIconAlignment", {
            /**
             * Gets the actual column options icon alignment for this column.
            */
            get: function () {
                return this.i.ex;
            },
            set: function (v) {
                this.i.ex = igniteuiReactCore.ensureEnum(ColumnOptionsIconAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "columnOptionsIconAlignment", {
            /**
             * Gets or sets whether the column options icon is aligned opposite the header text or not.
            */
            get: function () {
                return this.i.ey;
            },
            set: function (v) {
                this.i.ey = igniteuiReactCore.ensureEnum(ColumnOptionsIconAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualColumnOptionsIconColor", {
            /**
             * Gets the actual column options icon color for this column.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.je);
            },
            set: function (v) {
                this.i.je = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "columnOptionsIconColor", {
            /**
             * Gets or sets the column options icon color for this column.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ji);
            },
            set: function (v) {
                this.i.ji = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "columnOptionsIconBehavior", {
            /**
             * Gets or sets how the column option icon will behave in the column header.
            */
            get: function () {
                return this.i.e2;
            },
            set: function (v) {
                this.i.e2 = igniteuiReactCore.ensureEnum(ColumnOptionsIconBehavior_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualColumnOptionsIconBehavior", {
            /**
             * Gets or sets how the column option icon will behave in the column header.
            */
            get: function () {
                return this.i.e1;
            },
            set: function (v) {
                this.i.e1 = igniteuiReactCore.ensureEnum(ColumnOptionsIconBehavior_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualIsColumnOptionsEnabled", {
            /**
             * Gets the actual state of the column options for this column.
            */
            get: function () {
                return this.i.f3;
            },
            set: function (v) {
                this.i.f3 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "isColumnOptionsEnabled", {
            /**
             * Gets or sets the preferred state of the column options for this column. If the feature is disabled at the grid level
             * then it will be disabled for the column regardless of what this is set to.
            */
            get: function () {
                return this.i.f9;
            },
            set: function (v) {
                this.i.f9 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "isEditable", {
            /**
             * Gets or sets if the column is editable.
            */
            get: function () {
                return this.i.ga;
            },
            set: function (v) {
                this.i.ga = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "deletedTextColor", {
            /**
             * Gets or sets the text color used for deleted rows.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.jj);
            },
            set: function (v) {
                this.i.jj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualDeletedTextColor", {
            /**
             * Gets the actual text color used for deleted rows.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.jf);
            },
            set: function (v) {
                this.i.jf = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "editOpacity", {
            /**
             * Gets or sets the opacity to use for unsaved edited cell values.
            */
            get: function () {
                return this.i.gl;
            },
            set: function (v) {
                this.i.gl = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualEditOpacity", {
            /**
             * Gets the actual opacity for unsaved edited cell values.
            */
            get: function () {
                return this.i.gk;
            },
            set: function (v) {
                this.i.gk = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "textEditStyle", {
            /**
             * Gets or sets the font style to use for unsaved cell edits.
            */
            get: function () {
                if (this.i.textEditStyle == null) {
                    return null;
                }
                return this.i.textEditStyle.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.textEditStyle = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumn.prototype, "actualEditFontInfo", {
            /**
             * Gets the actual font style used for unsaved cell edits.
            */
            get: function () {
                if (this.i.fp == null) {
                    return null;
                }
                return this.i.fp.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fp = fi;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumn.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.animationSettings && this.animationSettings.name && this.animationSettings.name == name) {
                return this.animationSettings;
            }
            if (this.width && this.width.name && this.width.name == name) {
                return this.width;
            }
            if (this.header && this.header.name && this.header.name == name) {
                return this.header;
            }
            return null;
        };
        IgrColumn.prototype._styling = function (container, component, parent) {
            _super.prototype._styling.call(this, container, component, parent);
            this._inStyling = true;
            if (this.header && this.header._styling) {
                this.header._styling(container, component, this);
            }
            this._inStyling = false;
        };
        /**
         * Get the unique key used to identify this column.
        
        */
        IgrColumn.prototype.getUniqueKey = function () {
            var iv = this.i.h0();
            return (iv);
        };
        IgrColumn.prototype.setNamedHeaderValue = function (valueName, animationType, value) {
            this.i.iu(valueName, (animationType == null ? null : animationType), value);
        };
        /**
         * Returns if the column has named header values.
        
        */
        IgrColumn.prototype.hasNamedHeaderValues = function () {
            var iv = this.i.f6();
            return (iv);
        };
        /**
         * Returns if there is a named header value with a given name.
        
        * @param valueName  * The named value to check for.
        */
        IgrColumn.prototype.hasNamedHeaderValue = function (valueName) {
            var iv = this.i.f5(valueName);
            return (iv);
        };
        /**
         * Removes a named header value with the given name from the named header values for this column.
        
        * @param valueName  * The named header value to remove.
        */
        IgrColumn.prototype.removeNamedHeaderValue = function (valueName) {
            this.i.it(valueName);
        };
        /**
         * Gets the value of a named header value for this column by name.
        
        * @param valueName  * Name of the named header value to retrieve.
        */
        IgrColumn.prototype.getNamedHeaderValue = function (valueName) {
            var iv = this.i.g5(valueName);
            return (iv);
        };
        Object.defineProperty(IgrColumn.prototype, "actualHeaderTextChange", {
            get: function () {
                return this._actualHeaderTextChange;
            },
            set: function (ev) {
                var _this = this;
                if (this._actualHeaderTextChange_wrapped !== null) {
                    this.i.propertyChanged = igniteuiReactCore.delegateRemove(this.i.propertyChanged, this._actualHeaderTextChange_wrapped);
                    this._actualHeaderTextChange_wrapped = null;
                    this._actualHeaderTextChange = null;
                }
                this._actualHeaderTextChange = ev;
                this._actualHeaderTextChange_wrapped = function (o, e) {
                    var ext = _this.actualHeaderText;
                    if (_this.beforeActualHeaderTextChange) {
                        _this.beforeActualHeaderTextChange(_this, ext);
                    }
                    if (_this._actualHeaderTextChange) {
                        _this._actualHeaderTextChange(_this, ext);
                    }
                };
                this.i.propertyChanged = igniteuiReactCore.delegateCombine(this.i.propertyChanged, this._actualHeaderTextChange_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrColumn;
    }(IgrDefinitionBase));

    var IgrGridColumnCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnCollection, _super);
        function IgrGridColumnCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrColumn.$type) {
                IgrColumn.$type = igniteuiReactCore.markType(IgrColumn, "IgrColumn");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridColumnCollection.prototype._createInnerColl = function () {
            if (!IgrColumn.$type) {
                IgrColumn.$type = igniteuiReactCore.markType(IgrColumn, "IgrColumn");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrColumn.$type, Column.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrColumn._createFromInternal(int);
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrGridColumnCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Information about the generated columns.
    */
    var IgrGridColumnsAutoGeneratedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnsAutoGeneratedEventArgs() {
            this._columns = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridColumnsAutoGeneratedEventArgs.prototype.createImplementation = function () {
            return new GridColumnsAutoGeneratedEventArgs();
        };
        Object.defineProperty(IgrGridColumnsAutoGeneratedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridColumnsAutoGeneratedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridColumnsAutoGeneratedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridColumnsAutoGeneratedEventArgs.prototype, "columns", {
            get: function () {
                if (this._columns === null) {
                    var coll = new IgrGridColumnCollection();
                    var innerColl = this.i.columns;
                    if (!innerColl) {
                        innerColl = new GridColumnCollection();
                    }
                    this._columns = coll._fromInner(innerColl);
                    this.i.columns = innerColl;
                }
                return this._columns;
            },
            set: function (v) {
                if (this._columns !== null) {
                    this._columns._setSyncTarget(null);
                    this._columns = null;
                }
                var coll = new IgrGridColumnCollection();
                this._columns = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(Column.$type);
                var innerColl = this.i.columns;
                if (!innerColl) {
                    innerColl = new GridColumnCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._columns._setSyncTarget(syncColl);
                this.i.columns = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnsAutoGeneratedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Information about the generated columns.
    */
    var IgrGridColumnsChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnsChangedEventArgs() {
            this._columns = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridColumnsChangedEventArgs.prototype.createImplementation = function () {
            return new GridColumnsChangedEventArgs();
        };
        Object.defineProperty(IgrGridColumnsChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridColumnsChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridColumnsChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridColumnsChangedEventArgs.prototype, "columns", {
            get: function () {
                if (this._columns === null) {
                    var coll = new IgrGridColumnCollection();
                    var innerColl = this.i.columns;
                    if (!innerColl) {
                        innerColl = new GridColumnCollection();
                    }
                    this._columns = coll._fromInner(innerColl);
                    this.i.columns = innerColl;
                }
                return this._columns;
            },
            set: function (v) {
                if (this._columns !== null) {
                    this._columns._setSyncTarget(null);
                    this._columns = null;
                }
                var coll = new IgrGridColumnCollection();
                this._columns = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(Column.$type);
                var innerColl = this.i.columns;
                if (!innerColl) {
                    innerColl = new GridColumnCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._columns._setSyncTarget(syncColl);
                this.i.columns = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnsChangedEventArgs;
    }());

    var IgrGridSelectedItemsCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridSelectedItemsCollection, _super);
        function IgrGridSelectedItemsCollection(list) {
            var _this = _super.call(this) || this;
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridSelectedItemsCollection.prototype._createInnerColl = function () {
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(igniteuiReactCore.Base.$type, igniteuiReactCore.Base.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext;
            };
            coll.createFrom = function (int) {
                return int;
            };
            return coll;
        };
        return IgrGridSelectedItemsCollection;
    }(igniteuiReactCore.IgCollection));

    /**
     * Information about the changing selected items in the grid.
    */
    var IgrGridSelectedItemsChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridSelectedItemsChangedEventArgs() {
            this._currentItems = null;
            this._addedItems = null;
            this._removedItems = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridSelectedItemsChangedEventArgs.prototype.createImplementation = function () {
            return new GridSelectedItemsChangedEventArgs();
        };
        Object.defineProperty(IgrGridSelectedItemsChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridSelectedItemsChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridSelectedItemsChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridSelectedItemsChangedEventArgs.prototype, "currentItems", {
            /**
             * The items added to the selection.
            */
            get: function () {
                if (this._currentItems === null) {
                    var coll = new IgrGridSelectedItemsCollection();
                    var innerColl = this.i.currentItems;
                    if (!innerColl) {
                        innerColl = new GridSelectedItemsCollection();
                    }
                    this._currentItems = coll._fromInner(innerColl);
                    this.i.currentItems = innerColl;
                }
                return this._currentItems;
            },
            set: function (v) {
                if (this._currentItems !== null) {
                    this._currentItems._setSyncTarget(null);
                    this._currentItems = null;
                }
                var coll = new IgrGridSelectedItemsCollection();
                this._currentItems = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(igniteuiReactCore.Base.$type);
                var innerColl = this.i.currentItems;
                if (!innerColl) {
                    innerColl = new GridSelectedItemsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._currentItems._setSyncTarget(syncColl);
                this.i.currentItems = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedItemsChangedEventArgs.prototype, "addedItems", {
            /**
             * The items added to the selection.
            */
            get: function () {
                if (this._addedItems === null) {
                    var coll = new IgrGridSelectedItemsCollection();
                    var innerColl = this.i.addedItems;
                    if (!innerColl) {
                        innerColl = new GridSelectedItemsCollection();
                    }
                    this._addedItems = coll._fromInner(innerColl);
                    this.i.addedItems = innerColl;
                }
                return this._addedItems;
            },
            set: function (v) {
                if (this._addedItems !== null) {
                    this._addedItems._setSyncTarget(null);
                    this._addedItems = null;
                }
                var coll = new IgrGridSelectedItemsCollection();
                this._addedItems = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(igniteuiReactCore.Base.$type);
                var innerColl = this.i.addedItems;
                if (!innerColl) {
                    innerColl = new GridSelectedItemsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._addedItems._setSyncTarget(syncColl);
                this.i.addedItems = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedItemsChangedEventArgs.prototype, "removedItems", {
            /**
             * The items removed from the selection.
            */
            get: function () {
                if (this._removedItems === null) {
                    var coll = new IgrGridSelectedItemsCollection();
                    var innerColl = this.i.removedItems;
                    if (!innerColl) {
                        innerColl = new GridSelectedItemsCollection();
                    }
                    this._removedItems = coll._fromInner(innerColl);
                    this.i.removedItems = innerColl;
                }
                return this._removedItems;
            },
            set: function (v) {
                if (this._removedItems !== null) {
                    this._removedItems._setSyncTarget(null);
                    this._removedItems = null;
                }
                var coll = new IgrGridSelectedItemsCollection();
                this._removedItems = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(igniteuiReactCore.Base.$type);
                var innerColl = this.i.removedItems;
                if (!innerColl) {
                    innerColl = new GridSelectedItemsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._removedItems._setSyncTarget(syncColl);
                this.i.removedItems = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridSelectedItemsChangedEventArgs;
    }());

    /**
     * A primary key value.
    */
    var IgrPrimaryKeyValue = /** @class */ /*@__PURE__*/ (function () {
        function IgrPrimaryKeyValue(primaryKey, primaryKeyValue) {
            if (primaryKey === void 0) {
                primaryKey = null;
            }
            if (primaryKeyValue === void 0) {
                primaryKeyValue = null;
            }
            this._implementation = new PrimaryKeyValue(primaryKey, primaryKeyValue);
            this._implementation.externalObject = this;
        }
        Object.defineProperty(IgrPrimaryKeyValue.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrPrimaryKeyValue.prototype.onImplementationCreated = function () {
        };
        IgrPrimaryKeyValue.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        IgrPrimaryKeyValue.createIdentityKey = function (item) {
            var int = PrimaryKeyValue.createIdentityKey(item);
            var ext = new IgrPrimaryKeyValue(null, null);
            ext._provideImplementation(int);
            return ext;
        };
        Object.defineProperty(IgrPrimaryKeyValue.prototype, "key", {
            /**
         * The primary key associated with this value.
        */
            get: function () {
                return this.i.key;
            },
            set: function (v) {
                this.i.key = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrPrimaryKeyValue.prototype, "value", {
            /**
             * The value of the keys for this primary key value.
            */
            get: function () {
                return this.i.value;
            },
            set: function (v) {
                this.i.value = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrPrimaryKeyValue.prototype.findByName = function (name) {
            return null;
        };
        /**
     * Determines if two primary key values are equal.

    * @param other  * The other key value to check against.
    */
        IgrPrimaryKeyValue.prototype.equals = function (other) {
            var iv = this.i.equals(other);
            return (iv);
        };
        return IgrPrimaryKeyValue;
    }());

    var IgrGridSelectedKeysCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridSelectedKeysCollection, _super);
        function IgrGridSelectedKeysCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrPrimaryKeyValue.$type) {
                IgrPrimaryKeyValue.$type = igniteuiReactCore.markType(IgrPrimaryKeyValue, "IgrPrimaryKeyValue");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridSelectedKeysCollection.prototype._createInnerColl = function () {
            if (!IgrPrimaryKeyValue.$type) {
                IgrPrimaryKeyValue.$type = igniteuiReactCore.markType(IgrPrimaryKeyValue, "IgrPrimaryKeyValue");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrPrimaryKeyValue.$type, PrimaryKeyValue.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrPrimaryKeyValue();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrGridSelectedKeysCollection;
    }(igniteuiReactCore.IgCollection));

    /**
     * Information about the change to the selected keys in the grid.
    */
    var IgrGridSelectedKeysChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridSelectedKeysChangedEventArgs() {
            this._currentKeys = null;
            this._addedKeys = null;
            this._removedKeys = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridSelectedKeysChangedEventArgs.prototype.createImplementation = function () {
            return new GridSelectedKeysChangedEventArgs();
        };
        Object.defineProperty(IgrGridSelectedKeysChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridSelectedKeysChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridSelectedKeysChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridSelectedKeysChangedEventArgs.prototype, "currentKeys", {
            /**
             * All keys in the selection.
            */
            get: function () {
                if (this._currentKeys === null) {
                    var coll = new IgrGridSelectedKeysCollection();
                    var innerColl = this.i.currentKeys;
                    if (!innerColl) {
                        innerColl = new GridSelectedKeysCollection();
                    }
                    this._currentKeys = coll._fromInner(innerColl);
                    this.i.currentKeys = innerColl;
                }
                return this._currentKeys;
            },
            set: function (v) {
                if (this._currentKeys !== null) {
                    this._currentKeys._setSyncTarget(null);
                    this._currentKeys = null;
                }
                var coll = new IgrGridSelectedKeysCollection();
                this._currentKeys = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(PrimaryKeyValue.$type);
                var innerColl = this.i.currentKeys;
                if (!innerColl) {
                    innerColl = new GridSelectedKeysCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._currentKeys._setSyncTarget(syncColl);
                this.i.currentKeys = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedKeysChangedEventArgs.prototype, "addedKeys", {
            /**
             * The keys added to the selection.
            */
            get: function () {
                if (this._addedKeys === null) {
                    var coll = new IgrGridSelectedKeysCollection();
                    var innerColl = this.i.addedKeys;
                    if (!innerColl) {
                        innerColl = new GridSelectedKeysCollection();
                    }
                    this._addedKeys = coll._fromInner(innerColl);
                    this.i.addedKeys = innerColl;
                }
                return this._addedKeys;
            },
            set: function (v) {
                if (this._addedKeys !== null) {
                    this._addedKeys._setSyncTarget(null);
                    this._addedKeys = null;
                }
                var coll = new IgrGridSelectedKeysCollection();
                this._addedKeys = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(PrimaryKeyValue.$type);
                var innerColl = this.i.addedKeys;
                if (!innerColl) {
                    innerColl = new GridSelectedKeysCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._addedKeys._setSyncTarget(syncColl);
                this.i.addedKeys = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedKeysChangedEventArgs.prototype, "removedKeys", {
            /**
             * The keys removed from the selection.
            */
            get: function () {
                if (this._removedKeys === null) {
                    var coll = new IgrGridSelectedKeysCollection();
                    var innerColl = this.i.removedKeys;
                    if (!innerColl) {
                        innerColl = new GridSelectedKeysCollection();
                    }
                    this._removedKeys = coll._fromInner(innerColl);
                    this.i.removedKeys = innerColl;
                }
                return this._removedKeys;
            },
            set: function (v) {
                if (this._removedKeys !== null) {
                    this._removedKeys._setSyncTarget(null);
                    this._removedKeys = null;
                }
                var coll = new IgrGridSelectedKeysCollection();
                this._removedKeys = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(PrimaryKeyValue.$type);
                var innerColl = this.i.removedKeys;
                if (!innerColl) {
                    innerColl = new GridSelectedKeysCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._removedKeys._setSyncTarget(syncColl);
                this.i.removedKeys = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridSelectedKeysChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * An indentifier for a specific cell in the grid.
    */
    var IgrCellKey = /** @class */ /*@__PURE__*/ (function () {
        function IgrCellKey() {
            this._implementation = new CellKey();
            this._implementation.externalObject = this;
        }
        Object.defineProperty(IgrCellKey.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrCellKey.prototype.onImplementationCreated = function () {
        };
        IgrCellKey.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrCellKey.prototype, "primaryKey", {
            /**
             * Gets or sets the primary key of the row associated with the cell.
            */
            get: function () {
                if (this.i.primaryKey == null) {
                    return null;
                }
                if (!this._primaryKey) {
                    this._primaryKey = new IgrPrimaryKeyValue(this.i.primaryKey.key, this.i.primaryKey.value);
                }
                return this._primaryKey;
            },
            set: function (v) {
                this.i.primaryKey = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellKey.prototype, "rowItem", {
            /**
         * Gets or sets the row data object associated with the cell.
        */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellKey.prototype, "columnUniqueKey", {
            /**
             * Gets or sets the column name associated with the cell.
             * All columns in the grid must have a unique name. That unique name is what is used for this property.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellKey.prototype, "resolvedColumn", {
            /**
             * Gets or sets the resolved column object associated with this cell.
            */
            get: function () {
                if (this.i.b == null) {
                    return null;
                }
                if (!this.i.b.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.b);
                    if (e) {
                        e._implementation = this.i.b;
                    }
                    this.i.b.externalObject = e;
                }
                return this.i.b.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        IgrCellKey.prototype.findByName = function (name) {
            if (this.primaryKey && this.primaryKey.name && this.primaryKey.name == name) {
                return this.primaryKey;
            }
            return null;
        };
        return IgrCellKey;
    }());

    var IgrGridSelectedCellsCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridSelectedCellsCollection, _super);
        function IgrGridSelectedCellsCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrCellKey.$type) {
                IgrCellKey.$type = igniteuiReactCore.markType(IgrCellKey, "IgrCellKey");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridSelectedCellsCollection.prototype._createInnerColl = function () {
            if (!IgrCellKey.$type) {
                IgrCellKey.$type = igniteuiReactCore.markType(IgrCellKey, "IgrCellKey");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrCellKey.$type, CellKey.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrCellKey();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrGridSelectedCellsCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Information about the change to the selected cells in the grid.
    */
    var IgrGridSelectedCellsChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridSelectedCellsChangedEventArgs() {
            this._currentCells = null;
            this._addedCells = null;
            this._removedCells = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridSelectedCellsChangedEventArgs.prototype.createImplementation = function () {
            return new GridSelectedCellsChangedEventArgs();
        };
        Object.defineProperty(IgrGridSelectedCellsChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridSelectedCellsChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridSelectedCellsChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridSelectedCellsChangedEventArgs.prototype, "currentCells", {
            /**
             * The current cells in the selection.
            */
            get: function () {
                if (this._currentCells === null) {
                    var coll = new IgrGridSelectedCellsCollection();
                    var innerColl = this.i.currentCells;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellsCollection();
                    }
                    this._currentCells = coll._fromInner(innerColl);
                    this.i.currentCells = innerColl;
                }
                return this._currentCells;
            },
            set: function (v) {
                if (this._currentCells !== null) {
                    this._currentCells._setSyncTarget(null);
                    this._currentCells = null;
                }
                var coll = new IgrGridSelectedCellsCollection();
                this._currentCells = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellKey.$type);
                var innerColl = this.i.currentCells;
                if (!innerColl) {
                    innerColl = new GridSelectedCellsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._currentCells._setSyncTarget(syncColl);
                this.i.currentCells = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedCellsChangedEventArgs.prototype, "addedCells", {
            /**
             * The cells added to the selection.
            */
            get: function () {
                if (this._addedCells === null) {
                    var coll = new IgrGridSelectedCellsCollection();
                    var innerColl = this.i.addedCells;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellsCollection();
                    }
                    this._addedCells = coll._fromInner(innerColl);
                    this.i.addedCells = innerColl;
                }
                return this._addedCells;
            },
            set: function (v) {
                if (this._addedCells !== null) {
                    this._addedCells._setSyncTarget(null);
                    this._addedCells = null;
                }
                var coll = new IgrGridSelectedCellsCollection();
                this._addedCells = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellKey.$type);
                var innerColl = this.i.addedCells;
                if (!innerColl) {
                    innerColl = new GridSelectedCellsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._addedCells._setSyncTarget(syncColl);
                this.i.addedCells = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedCellsChangedEventArgs.prototype, "removedCells", {
            /**
             * The cells removed from the selection.
            */
            get: function () {
                if (this._removedCells === null) {
                    var coll = new IgrGridSelectedCellsCollection();
                    var innerColl = this.i.removedCells;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellsCollection();
                    }
                    this._removedCells = coll._fromInner(innerColl);
                    this.i.removedCells = innerColl;
                }
                return this._removedCells;
            },
            set: function (v) {
                if (this._removedCells !== null) {
                    this._removedCells._setSyncTarget(null);
                    this._removedCells = null;
                }
                var coll = new IgrGridSelectedCellsCollection();
                this._removedCells = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellKey.$type);
                var innerColl = this.i.removedCells;
                if (!innerColl) {
                    innerColl = new GridSelectedCellsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._removedCells._setSyncTarget(syncColl);
                this.i.removedCells = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridSelectedCellsChangedEventArgs;
    }());

    /**
     * An indentifier for a specific cell in the grid.
    */
    var IgrCellRange = /** @class */ /*@__PURE__*/ (function () {
        function IgrCellRange() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrCellRange.prototype.createImplementation = function () {
            return new CellRange();
        };
        Object.defineProperty(IgrCellRange.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrCellRange.prototype.onImplementationCreated = function () {
        };
        IgrCellRange.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrCellRange.prototype, "startColumn", {
            /**
             * Gets or sets the start column of the range.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellRange.prototype, "endColumn", {
            /**
             * Gets or sets the end column of the range.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellRange.prototype, "startRow", {
            /**
             * Gets or sets the start row of the range.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCellRange.prototype, "endRow", {
            /**
             * Gets or sets the end row of the range.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrCellRange.prototype.findByName = function (name) {
            return null;
        };
        return IgrCellRange;
    }());

    var IgrGridSelectedCellRangesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridSelectedCellRangesCollection, _super);
        function IgrGridSelectedCellRangesCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrCellRange.$type) {
                IgrCellRange.$type = igniteuiReactCore.markType(IgrCellRange, "IgrCellRange");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridSelectedCellRangesCollection.prototype._createInnerColl = function () {
            if (!IgrCellRange.$type) {
                IgrCellRange.$type = igniteuiReactCore.markType(IgrCellRange, "IgrCellRange");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrCellRange.$type, CellRange.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrCellRange();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrGridSelectedCellRangesCollection;
    }(igniteuiReactCore.IgCollection));

    /**
     * Information about the change to the selected cell ranges in the grid.
    */
    var IgrGridSelectedCellRangesChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridSelectedCellRangesChangedEventArgs() {
            this._currentRanges = null;
            this._addedRanges = null;
            this._removedRanges = null;
            this._updatedRanges = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridSelectedCellRangesChangedEventArgs.prototype.createImplementation = function () {
            return new GridSelectedCellRangesChangedEventArgs();
        };
        Object.defineProperty(IgrGridSelectedCellRangesChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridSelectedCellRangesChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridSelectedCellRangesChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridSelectedCellRangesChangedEventArgs.prototype, "currentRanges", {
            /**
             * The cell ranges currently in the selection.
            */
            get: function () {
                if (this._currentRanges === null) {
                    var coll = new IgrGridSelectedCellRangesCollection();
                    var innerColl = this.i.currentRanges;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellRangesCollection();
                    }
                    this._currentRanges = coll._fromInner(innerColl);
                    this.i.currentRanges = innerColl;
                }
                return this._currentRanges;
            },
            set: function (v) {
                if (this._currentRanges !== null) {
                    this._currentRanges._setSyncTarget(null);
                    this._currentRanges = null;
                }
                var coll = new IgrGridSelectedCellRangesCollection();
                this._currentRanges = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellRange.$type);
                var innerColl = this.i.currentRanges;
                if (!innerColl) {
                    innerColl = new GridSelectedCellRangesCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._currentRanges._setSyncTarget(syncColl);
                this.i.currentRanges = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedCellRangesChangedEventArgs.prototype, "addedRanges", {
            /**
             * The cell ranges added to the selection.
            */
            get: function () {
                if (this._addedRanges === null) {
                    var coll = new IgrGridSelectedCellRangesCollection();
                    var innerColl = this.i.addedRanges;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellRangesCollection();
                    }
                    this._addedRanges = coll._fromInner(innerColl);
                    this.i.addedRanges = innerColl;
                }
                return this._addedRanges;
            },
            set: function (v) {
                if (this._addedRanges !== null) {
                    this._addedRanges._setSyncTarget(null);
                    this._addedRanges = null;
                }
                var coll = new IgrGridSelectedCellRangesCollection();
                this._addedRanges = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellRange.$type);
                var innerColl = this.i.addedRanges;
                if (!innerColl) {
                    innerColl = new GridSelectedCellRangesCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._addedRanges._setSyncTarget(syncColl);
                this.i.addedRanges = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedCellRangesChangedEventArgs.prototype, "removedRanges", {
            /**
             * The cell ranges removed from the selection.
            */
            get: function () {
                if (this._removedRanges === null) {
                    var coll = new IgrGridSelectedCellRangesCollection();
                    var innerColl = this.i.removedRanges;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellRangesCollection();
                    }
                    this._removedRanges = coll._fromInner(innerColl);
                    this.i.removedRanges = innerColl;
                }
                return this._removedRanges;
            },
            set: function (v) {
                if (this._removedRanges !== null) {
                    this._removedRanges._setSyncTarget(null);
                    this._removedRanges = null;
                }
                var coll = new IgrGridSelectedCellRangesCollection();
                this._removedRanges = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellRange.$type);
                var innerColl = this.i.removedRanges;
                if (!innerColl) {
                    innerColl = new GridSelectedCellRangesCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._removedRanges._setSyncTarget(syncColl);
                this.i.removedRanges = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSelectedCellRangesChangedEventArgs.prototype, "updatedRanges", {
            /**
             * The cell ranges that have been updated by the grid.
            */
            get: function () {
                if (this._updatedRanges === null) {
                    var coll = new IgrGridSelectedCellRangesCollection();
                    var innerColl = this.i.updatedRanges;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellRangesCollection();
                    }
                    this._updatedRanges = coll._fromInner(innerColl);
                    this.i.updatedRanges = innerColl;
                }
                return this._updatedRanges;
            },
            set: function (v) {
                if (this._updatedRanges !== null) {
                    this._updatedRanges._setSyncTarget(null);
                    this._updatedRanges = null;
                }
                var coll = new IgrGridSelectedCellRangesCollection();
                this._updatedRanges = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellRange.$type);
                var innerColl = this.i.updatedRanges;
                if (!innerColl) {
                    innerColl = new GridSelectedCellRangesCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._updatedRanges._setSyncTarget(syncColl);
                this.i.updatedRanges = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridSelectedCellRangesChangedEventArgs;
    }());

    /**
     * Represents an element in the current sort applied to a data source or provider. Changes to this object are not observed or expected after it is initially assigned to a collection.
    */
    var IgrColumnSortDescription = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnSortDescription() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnSortDescription.prototype.createImplementation = function () {
            return new ColumnSortDescription(0);
        };
        Object.defineProperty(IgrColumnSortDescription.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSortDescription.prototype.onImplementationCreated = function () {
        };
        IgrColumnSortDescription.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrColumnSortDescription.prototype, "field", {
            /**
             * Gets or sets the property being sorted.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSortDescription.prototype, "sortDirection", {
            /**
             * Gets or sets the direction to sort based on the property.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(igniteuiReactCore.ListSortDirection_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSortDescription.prototype.findByName = function (name) {
            return null;
        };
        /**
         * Returns if the SortDescription is equal to another.
        
        * @param other  * The SortDescription to compare to.
        */
        IgrColumnSortDescription.prototype.equals = function (other) {
            var iv = this.i.equals(other);
            return (iv);
        };
        return IgrColumnSortDescription;
    }());

    /**
     * Represents a collection of sort elements that are applied to a data source or provider.
    */
    var IgrColumnSortDescriptionCollection = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnSortDescriptionCollection() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnSortDescriptionCollection.prototype.createImplementation = function () {
            return new ColumnSortDescriptionCollection();
        };
        Object.defineProperty(IgrColumnSortDescriptionCollection.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSortDescriptionCollection.prototype.onImplementationCreated = function () {
        };
        IgrColumnSortDescriptionCollection.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        IgrColumnSortDescriptionCollection.prototype.item = function (index, value) {
            var int = null;
            if (value !== undefined) {
                int = this.i.set(index, value == null ? null : value.i);
            }
            else {
                int = this.i.get(index);
            }
            var ext = null;
            if (int != null) {
                ext = int.externalObject;
                if (!ext) {
                    ext = new IgrColumnSortDescription();
                    ext._implementation = int;
                    int.externalObject = ext;
                }
            }
            return ext;
        };
        Object.defineProperty(IgrColumnSortDescriptionCollection.prototype, "count", {
            get: function () {
                return this.i.size();
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSortDescriptionCollection.prototype.toArray = function () {
            var arr = [];
            for (var i = 0; i < this.count; i++) {
                arr[i] = this.item(i);
            }
            return arr;
        };
        IgrColumnSortDescriptionCollection.prototype[Symbol.iterator] = function () {
            var i, item;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < this.count))
                            return [3 /*break*/, 4];
                        item = this.item(i);
                        if (item.externalObject) {
                            item = item.externalObject;
                        }
                        return [4 /*yield*/, item];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        };
        IgrColumnSortDescriptionCollection.prototype.findByName = function (name) {
            return null;
        };
        IgrColumnSortDescriptionCollection.prototype.add = function (item) {
            var iv = this.i.g((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnSortDescriptionCollection.prototype.insert = function (index, item) {
            this.i.n(index, (item == null ? null : item.i));
        };
        IgrColumnSortDescriptionCollection.prototype.clear = function () {
            this.i.m();
        };
        IgrColumnSortDescriptionCollection.prototype.indexOf = function (item) {
            var iv = this.i.j((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnSortDescriptionCollection.prototype.remove = function (item) {
            var iv = this.i.h((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnSortDescriptionCollection.prototype.removeAt = function (index) {
            var iv = this.i.d(index);
            return (iv == null ? null : iv.externalObject);
        };
        return IgrColumnSortDescriptionCollection;
    }());

    /**
     * Information about the current sorting applied to the grid.
    */
    var IgrGridSortDescriptionsChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridSortDescriptionsChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridSortDescriptionsChangedEventArgs.prototype.createImplementation = function () {
            return new GridSortDescriptionsChangedEventArgs();
        };
        Object.defineProperty(IgrGridSortDescriptionsChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridSortDescriptionsChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridSortDescriptionsChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridSortDescriptionsChangedEventArgs.prototype, "sortDescriptions", {
            get: function () {
                if (this.i.sortDescriptions == null) {
                    return null;
                }
                if (!this.i.sortDescriptions.externalObject) {
                    var e = new IgrColumnSortDescriptionCollection();
                    e._implementation = this.i.sortDescriptions;
                    this.i.sortDescriptions.externalObject = e;
                }
                return this.i.sortDescriptions.externalObject;
            },
            set: function (v) {
                v == null ? this.i.sortDescriptions = null : this.i.sortDescriptions = v.i;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridSortDescriptionsChangedEventArgs;
    }());

    var IgrFormatGroupTextEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrFormatGroupTextEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrFormatGroupTextEventArgs.prototype.createImplementation = function () {
            return new FormatGroupTextEventArgs();
        };
        Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrFormatGroupTextEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrFormatGroupTextEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "groupName", {
            /**
             * Gets the group name.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "groupValue", {
            /**
             * Gets the original value before formatting.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "formattedValue", {
            /**
             * Gets the group value as text, formatted based on the GroupDescription's ValueFormat.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrFormatGroupTextEventArgs.prototype, "formattedText", {
            /**
             * Gets or sets the final text that will be displayed in the group header.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrFormatGroupTextEventArgs;
    }());

    /**
     * Represents an element in the current grouping applied to a data source or provider. Changes to this object are not observed or expected after it is initially assigned to a collection.
    */
    var IgrColumnGroupDescription = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumnGroupDescription, _super);
        function IgrColumnGroupDescription() {
            var _this = _super.call(this) || this;
            _this._formatText = null;
            _this._formatText_wrapped = null;
            return _this;
        }
        IgrColumnGroupDescription.prototype.createImplementation = function () {
            return new ColumnGroupDescription(0);
        };
        Object.defineProperty(IgrColumnGroupDescription.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnGroupDescription.prototype, "valueFormat", {
            /**
             * Gets or sets the format string for the group value.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnGroupDescription.prototype, "valueFormatSpecifiers", {
            /**
             * Gets or sets the format specifiers to use with the ValueFormat string.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnGroupDescription.prototype, "displayFormat", {
            /**
             * Gets or sets the display format for the group text in the group header.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnGroupDescription.prototype, "displayFormatSpecifiers", {
            /**
             * Gets or sets the format specifiers to use with the DisplayFormat string.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnGroupDescription.prototype, "formatOverride", {
            /**
             * Gets or sets an INTL.DateTimeFormat or INTL.NumericFormat to use to format the value.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnGroupDescription.prototype, "displayName", {
            /**
             * Gets or sets the display text for the group name.
            */
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnGroupDescription.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.valueFormatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.valueFormatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.valueFormatSpecifiers, name);
            }
            if (this.displayFormatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.displayFormatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.displayFormatSpecifiers, name);
            }
            return null;
        };
        Object.defineProperty(IgrColumnGroupDescription.prototype, "formatText", {
            /**
             * Called when the value is being formatted.
            */
            get: function () {
                return this._formatText;
            },
            set: function (ev) {
                var _this = this;
                if (this._formatText_wrapped !== null) {
                    this.i.formatText = igniteuiReactCore.delegateRemove(this.i.formatText, this._formatText_wrapped);
                    this._formatText_wrapped = null;
                    this._formatText = null;
                }
                this._formatText = ev;
                this._formatText_wrapped = function (o, e) {
                    var outerArgs = new IgrFormatGroupTextEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFormatText) {
                        _this.beforeFormatText(_this, outerArgs);
                    }
                    if (_this._formatText) {
                        _this._formatText(_this, outerArgs);
                    }
                };
                this.i.formatText = igniteuiReactCore.delegateCombine(this.i.formatText, this._formatText_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrColumnGroupDescription;
    }(IgrColumnSortDescription));

    /**
     * Represents a collection of grouping elements that are applied to a data source or provider.
    */
    var IgrColumnGroupDescriptionCollection = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnGroupDescriptionCollection() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnGroupDescriptionCollection.prototype.createImplementation = function () {
            return new ColumnGroupDescriptionCollection();
        };
        Object.defineProperty(IgrColumnGroupDescriptionCollection.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnGroupDescriptionCollection.prototype.onImplementationCreated = function () {
        };
        IgrColumnGroupDescriptionCollection.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        IgrColumnGroupDescriptionCollection.prototype.item = function (index, value) {
            var int = null;
            if (value !== undefined) {
                int = this.i.set(index, value == null ? null : value.i);
            }
            else {
                int = this.i.get(index);
            }
            var ext = null;
            if (int != null) {
                ext = int.externalObject;
                if (!ext) {
                    ext = new IgrColumnGroupDescription();
                    ext._implementation = int;
                    int.externalObject = ext;
                }
            }
            return ext;
        };
        Object.defineProperty(IgrColumnGroupDescriptionCollection.prototype, "count", {
            get: function () {
                return this.i.size();
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnGroupDescriptionCollection.prototype.toArray = function () {
            var arr = [];
            for (var i = 0; i < this.count; i++) {
                arr[i] = this.item(i);
            }
            return arr;
        };
        IgrColumnGroupDescriptionCollection.prototype[Symbol.iterator] = function () {
            var i, item;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < this.count))
                            return [3 /*break*/, 4];
                        item = this.item(i);
                        if (item.externalObject) {
                            item = item.externalObject;
                        }
                        return [4 /*yield*/, item];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        };
        IgrColumnGroupDescriptionCollection.prototype.findByName = function (name) {
            return null;
        };
        IgrColumnGroupDescriptionCollection.prototype.add = function (item) {
            var iv = this.i.g((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnGroupDescriptionCollection.prototype.insert = function (index, item) {
            this.i.n(index, (item == null ? null : item.i));
        };
        IgrColumnGroupDescriptionCollection.prototype.clear = function () {
            this.i.m();
        };
        IgrColumnGroupDescriptionCollection.prototype.indexOf = function (item) {
            var iv = this.i.j((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnGroupDescriptionCollection.prototype.remove = function (item) {
            var iv = this.i.h((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnGroupDescriptionCollection.prototype.removeAt = function (index) {
            var iv = this.i.d(index);
            return (iv == null ? null : iv.externalObject);
        };
        return IgrColumnGroupDescriptionCollection;
    }());

    /**
     * Information about the current grouping applied to the grid.
    */
    var IgrGridGroupDescriptionsChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridGroupDescriptionsChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridGroupDescriptionsChangedEventArgs.prototype.createImplementation = function () {
            return new GridGroupDescriptionsChangedEventArgs();
        };
        Object.defineProperty(IgrGridGroupDescriptionsChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridGroupDescriptionsChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridGroupDescriptionsChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridGroupDescriptionsChangedEventArgs.prototype, "groupDescriptions", {
            get: function () {
                if (this.i.groupDescriptions == null) {
                    return null;
                }
                if (!this.i.groupDescriptions.externalObject) {
                    var e = new IgrColumnGroupDescriptionCollection();
                    e._implementation = this.i.groupDescriptions;
                    this.i.groupDescriptions.externalObject = e;
                }
                return this.i.groupDescriptions.externalObject;
            },
            set: function (v) {
                v == null ? this.i.groupDescriptions = null : this.i.groupDescriptions = v.i;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridGroupDescriptionsChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CurrentRendererSettings = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CurrentRendererSettings, _super);
        function CurrentRendererSettings() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.c = 0;
            _this.d = 0;
            _this.b = false;
            return _this;
        }
        CurrentRendererSettings.$t = igniteuiReactCore.markType(CurrentRendererSettings, 'CurrentRendererSettings');
        return CurrentRendererSettings;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridCellLayoutPanel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridCellLayoutPanel, _super);
        function DataGridCellLayoutPanel(a, b, c) {
            var _this = _super.call(this) || this;
            _this.e = null;
            _this.l = false;
            _this.r = null;
            _this._element = null;
            _this.g = null;
            _this.j = false;
            _this._rootElement = null;
            _this.n = false;
            _this.h = null;
            _this.m = false;
            _this._requestAnimationFrame = null;
            _this.v = 0;
            _this.p = -1;
            _this.o = -1;
            _this.k = false;
            _this.q = 0;
            _this.c = null;
            _this.a = null;
            _this.d = null;
            _this.b = null;
            _this.q = c;
            _this.r = a;
            _this.requestAnimationFrame = _this.r.getRequestAnimationFrame();
            _this.element = _this.r.createElement("div");
            _this.element.setRawStyleProperty("position", "relative");
            _this.element.setRawStyleProperty("box-sizing", "border-box");
            _this.refresh(_this.e, false);
            _this.g = b;
            _this.j = false;
            return _this;
        }
        Object.defineProperty(DataGridCellLayoutPanel.prototype, "element", {
            get: function () {
                return this._element;
            },
            set: function (a) {
                this._element = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridCellLayoutPanel.prototype, "s", {
            get: function () {
                return this.r;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridCellLayoutPanel.prototype, "f", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridCellLayoutPanel.prototype, "rootElement", {
            get: function () {
                return this._rootElement;
            },
            set: function (a) {
                this._rootElement = a;
            },
            enumerable: true,
            configurable: true
        });
        DataGridCellLayoutPanel.prototype.refresh = function (a, b) {
            this.e = a;
            this.aq(b);
        };
        DataGridCellLayoutPanel.prototype.viewportChanged = function () {
            this.aq(true);
        };
        DataGridCellLayoutPanel.prototype.invalidateVisibility = function (a) {
            this.h = a;
            this.n = true;
        };
        Object.defineProperty(DataGridCellLayoutPanel.prototype, "initialRefreshFinished", {
            get: function () {
                return this.j;
            },
            enumerable: true,
            configurable: true
        });
        DataGridCellLayoutPanel.prototype.ae = function (a, b, c, d) {
            this.aq(true);
        };
        DataGridCellLayoutPanel.prototype.ap = function (a) {
            var b = this.g.b(this.r, a);
            if (b.isCanvasBased) {
                var c = b.nativeCell.ac = false;
            }
            else {
                var d = b.nativeCell.z;
                d.setRawStyleProperty("top", "-1000px");
                d.setRawStyleProperty("left", "-1000px");
                if (a.k.d != 0) {
                    d.setRawStyleProperty("clip", "auto");
                }
                this.ah(a, d);
            }
        };
        DataGridCellLayoutPanel.prototype.aq = function (a) {
            if (a) {
                this.l = true;
                this.x();
                return;
            }
            if (this.m) {
                return;
            }
            if (this.l) {
                return;
            }
            this.l = true;
            this.aa(igniteuiReactCore.runOn(this, this.x));
        };
        Object.defineProperty(DataGridCellLayoutPanel.prototype, "requestAnimationFrame", {
            get: function () {
                return this._requestAnimationFrame;
            },
            set: function (a) {
                this._requestAnimationFrame = a;
            },
            enumerable: true,
            configurable: true
        });
        DataGridCellLayoutPanel.prototype.aa = function (a) {
            this.requestAnimationFrame(a);
        };
        DataGridCellLayoutPanel.prototype.x = function () {
            if (!this.l) {
                return;
            }
            this.l = false;
            if (this.n) {
                this.n = false;
                this.h();
            }
            if (this.e == null) {
                return;
            }
            if (igniteuiReactCore.Rect.l_op_Equality(this.e.actualVisibleRegion, null) || this.e.actualVisibleRegion.isEmpty) {
                return;
            }
            this.j = true;
            if (this.p != this.e.absoluteWidth) {
                this.element.setRawStyleProperty("width", this.e.absoluteWidth + "px");
            }
            if (this.o != this.e.absoluteHeight) {
                this.element.setRawStyleProperty("height", this.e.absoluteHeight + "px");
            }
            this.p = this.e.absoluteWidth;
            this.o = this.e.absoluteHeight;
            var a = this.e.actualVisibleRegion.top;
            var b = this.e.actualVisibleRegion.left;
            var c = this.e.bu;
            var d = c.count;
            var e = this.e.bh;
            var f = this.e.bh.o;
            var g = f.count;
            var h = this.e.bh.p;
            for (var i = 0; i < g; i++) {
                if (h._inner[i]) {
                    continue;
                }
                var j = e.item(f._inner[i]);
                for (var k = 0; k < j.count; k++) {
                    var l = j._inner[k];
                    this.ap(l);
                }
            }
            e.u();
            var m = false;
            var n = this.v;
            var o = true;
            var p = false;
            for (var q = 0; q < d; q++) {
                var r = c._inner[q].q;
                var s = c._inner[q].q.count;
                var t = c._inner[q].p;
                for (var u = 0; u < s; u++) {
                    if (t._inner[u]) {
                        continue;
                    }
                    var v = r._inner[u];
                    var w = this.g.b(this.r, v);
                    if (!w.isCanvasBased) {
                        o = false;
                    }
                    else {
                        p = true;
                    }
                    if (v.a3) {
                        m = true;
                    }
                    if (v.t == 1 && v.gj != n) {
                        m = true;
                    }
                }
            }
            if (p) {
                this.z();
            }
            if (m) {
                if (this.v == 0x7FFFFFFFFFFFFFFF - 1) {
                    this.v = 0;
                }
                else {
                    this.v++;
                }
                n = this.v;
            }
            var x = 0;
            var y = new CurrentRendererSettings();
            var z = this.q;
            this.m = true;
            for (var aa = 0; aa < d; aa++) {
                var ab = c._inner[aa].q;
                var ac = c._inner[aa].q.count;
                var ad = c._inner[aa].p;
                for (var ae = 0; ae < ac; ae++) {
                    if (ad._inner[ae]) {
                        continue;
                    }
                    var af = ab._inner[ae];
                    var ag = this.g.b(this.r, af);
                    if (ag.isCanvasBased) {
                        var ah = y.a;
                        this.au(y, aa, af, this.e, x, m, o);
                        if (y.a != ah && m) {
                            x++;
                        }
                    }
                    var ai = ag.isCanvasBased;
                    var aj = null;
                    if (!ai) {
                        aj = ag.nativeCell.z;
                        if (af.t == 0) {
                            this.element.append(aj);
                            this.af(af, aj);
                        }
                    }
                    if (af.t == 1) {
                        if (ai) {
                            var ak = af.r.nativeCell;
                            ak.ac = true;
                        }
                    }
                    af.t = 2;
                    var al = (af.f2 + igniteuiReactCore.intDivide(af.gf, 2));
                    var am = (af.f4 + igniteuiReactCore.intDivide(af.e0, 2));
                    var an = (al - b) / this.e.actualVisibleRegion.width;
                    var ao = (am - a) / this.e.actualVisibleRegion.height;
                    if (af.a5) {
                        if (!ai) {
                            aj.setRawPosition(af.cc, af.cd);
                        }
                    }
                    if (!ai) {
                        if (af.k.d != 0) {
                            if (this.e.bk) {
                                aj.setRawStyleProperty("clip", this.w(af.k.d, af.cc, af.cd));
                            }
                            else {
                                aj.setRawStyleProperty("clip", "auto");
                            }
                        }
                        else {
                            aj.setRawStyleProperty("clip", "auto");
                        }
                    }
                    af.jg();
                    if (ai) {
                        var ap = af.r.nativeCell;
                        ap.ch(z);
                    }
                    af.r.modelUpdated(af);
                    if (ai && y.b) {
                        var aq = y.a;
                        aq.z();
                        if (af.k.d != 0 && this.e.bk) {
                            aq.ae(this.av(af.k.d));
                        }
                        var ar = af.r.nativeCell;
                        ar.bz(aq, y.c, y.d, af.cc, af.cd, z);
                        aq.y();
                    }
                    af.i9();
                    if (m) {
                        af.gj = n;
                        if (!ai) {
                            aj.setRawStyleProperty("z-index", x.toString());
                        }
                        x++;
                    }
                    this.ag(af, aj);
                }
            }
            this.m = false;
            if (y.a != null && this.q != 1) {
                y.a.y();
            }
            this.al();
        };
        DataGridCellLayoutPanel.prototype.al = function () {
        };
        DataGridCellLayoutPanel.prototype.z = function () {
            if (!this.k) {
                this.k = true;
                var a = this.r.rootWrapper;
                var b = (window.navigator.msPointerEnabled && MSGesture !== undefined);
                var c = (window.PointerEvent || window.navigator.pointerEnabled);
                var d = (window.TouchEvent);
                if ((b || c)) {
                    a.listen("pointerdown", igniteuiReactCore.runOn(this, this.am));
                    a.listen("pointerup", igniteuiReactCore.runOn(this, this.ao));
                    a.listen("pointermove", igniteuiReactCore.runOn(this, this.an));
                }
                else {
                    a.listen("mousedown", igniteuiReactCore.runOn(this, this.ab));
                    a.listen("mouseup", igniteuiReactCore.runOn(this, this.ad));
                    a.listen("mousemove", igniteuiReactCore.runOn(this, this.ac));
                    a.listen("touchstart", igniteuiReactCore.runOn(this, this.ar));
                    a.listen("touchend", igniteuiReactCore.runOn(this, this.at));
                    a.listen("touchmove", igniteuiReactCore.runOn(this, this.as));
                }
                a.listen("dblclick", igniteuiReactCore.runOn(this, this.y));
            }
        };
        DataGridCellLayoutPanel.prototype.ab = function (a) {
            this.ak(a, false);
        };
        DataGridCellLayoutPanel.prototype.ad = function (a) {
            this.ai(a, false);
        };
        DataGridCellLayoutPanel.prototype.ac = function (a) {
            this.aj(a, false);
        };
        DataGridCellLayoutPanel.prototype.y = function (a) {
            if (this.e == null) {
                return;
            }
            var b = this.r.rootWrapper.getOffset();
            var c = this.e.e(a.pageX - b.left, a.pageY - b.top);
            if (c == null) {
                return;
            }
            if (c.r != null) {
                if (c.r.isCanvasBased && c.r.nativeCell != null) {
                    c.r.nativeCell.onDoubleClick(a);
                }
            }
        };
        DataGridCellLayoutPanel.prototype.am = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a == "touch") {
                this.ar(e_);
            }
            else {
                this.ab(e_);
            }
        };
        DataGridCellLayoutPanel.prototype.an = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a == "touch") {
                this.as(e_);
            }
            else {
                this.ac(e_);
            }
        };
        DataGridCellLayoutPanel.prototype.ao = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a == "touch") {
                this.at(e_);
            }
            else {
                this.ad(e_);
            }
        };
        DataGridCellLayoutPanel.prototype.ar = function (a) {
            this.ak(a, true);
        };
        DataGridCellLayoutPanel.prototype.ak = function (a, b) {
            if (this.e == null) {
                return;
            }
            var c = this.r.rootWrapper.getOffset();
            var d = this.e.e(a.pageX - c.left, a.pageY - c.top);
            if (d == null) {
                return;
            }
            if (d.r != null) {
                if (d.r.isCanvasBased && d.r.nativeCell != null) {
                    d.r.nativeCell.onContactStarted(a, b);
                }
            }
        };
        DataGridCellLayoutPanel.prototype.as = function (a) {
            this.aj(a, true);
        };
        DataGridCellLayoutPanel.prototype.aj = function (a, b) {
            if (this.e == null) {
                return;
            }
            var c = this.r.rootWrapper.getOffset();
            var d = this.e.e(a.pageX - c.left, a.pageY - c.top);
            if (d == null) {
                return;
            }
            if (d.r != null) {
                if (d.r.isCanvasBased && d.r.nativeCell != null) {
                    d.r.nativeCell.onContactMoved(a, b);
                }
            }
        };
        DataGridCellLayoutPanel.prototype.at = function (a) {
            this.ai(a, true);
        };
        DataGridCellLayoutPanel.prototype.ai = function (a, b) {
            if (this.e == null) {
                return;
            }
            var c = this.r.rootWrapper.getOffset();
            var d = this.e.e(a.pageX - c.left, a.pageY - c.top);
            if (d == null) {
                return;
            }
            if (d.r != null) {
                if (d.r.isCanvasBased && d.r.nativeCell != null) {
                    d.r.nativeCell.onContactCompleted(a, b);
                }
            }
        };
        DataGridCellLayoutPanel.prototype.au = function (a, b, c, d, e, f, g) {
            if (g) {
                b = 0;
            }
            if (this.c == null) {
                this.c = new Array(d.bu.count);
                this.a = new Array(d.bu.count);
                this.d = new Array(d.bu.count);
                this.b = new Array(d.bu.count);
                for (var h = 0; h < d.bu.count; h++) {
                    this.c[h] = null;
                    this.a[h] = null;
                    this.d[h] = -1;
                    this.b[h] = -1;
                }
            }
            if (this.c[b] == null) {
                var i = this.r.createElement("canvas");
                this.a[b] = i;
                i.setRawStyleProperty("position", "absolute");
                i.setRawStyleProperty("z-index", e.toString());
                this.element.append(i);
                var j_1 = this.r.get2DCanvasContext(i);
                var k = ((function () {
                    var $ret = new igniteuiReactCore.CanvasViewRenderer();
                    $ret.h$d = j_1;
                    return $ret;
                })());
                this.c[b] = new igniteuiReactCore.RenderingContext(k, j_1);
            }
            if (a.a != this.c[b]) {
                a.a = this.c[b];
                a.b = true;
                a.c = d.actualVisibleRegion.left;
                a.d = d.actualVisibleRegion.top;
                var l = d.actualVisibleRegion.width * this.q;
                var m = d.actualVisibleRegion.height * this.q;
                if (l != this.d[b] || m != this.b[b]) {
                    this.a[b].setRawSize(d.actualVisibleRegion.width, d.actualVisibleRegion.height);
                    this.a[b].setAttribute("width", l + "px");
                    this.a[b].setAttribute("height", m + "px");
                    this.d[b] = l;
                    this.b[b] = m;
                }
                if (f) {
                    this.a[b].setRawStyleProperty("z-index", e.toString());
                }
                a.a.k(0, 0, d.actualVisibleRegion.width, d.actualVisibleRegion.height);
                this.a[b].setRawPosition(a.c, a.d);
            }
        };
        DataGridCellLayoutPanel.prototype.av = function (a) {
            var b = this.e.b8;
            var c = this.e.b3 + this.e.b0;
            var d = this.e.cf;
            var e = this.e.by;
            if (a == 2) {
                c = Math.min(this.e.cj, this.e.b6) - this.e.cg - this.e.b1;
                d = this.e.cg;
            }
            return new igniteuiReactCore.Rect(0, c, b, d, e);
        };
        DataGridCellLayoutPanel.prototype.w = function (a, b, c) {
            if (a != 0) {
                var d = this.av(a);
                var e = d.x - b;
                var f = d.y - c;
                var g = e + d.width;
                var h = f + d.height;
                return "rect(" + f + "px," + g + "px," + h + "px," + e + "px)";
            }
            return "auto";
        };
        DataGridCellLayoutPanel.prototype.af = function (a, b) {
        };
        DataGridCellLayoutPanel.prototype.ah = function (a, b) {
        };
        DataGridCellLayoutPanel.prototype.ag = function (a, b) {
        };
        DataGridCellLayoutPanel.$t = igniteuiReactCore.markType(DataGridCellLayoutPanel, 'DataGridCellLayoutPanel', igniteuiReactCore.Base.$, [ICellRenderingEngine_$type]);
        return DataGridCellLayoutPanel;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridExternalWrapper = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridExternalWrapper, _super);
        function GridExternalWrapper(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        Object.defineProperty(GridExternalWrapper.prototype, "renderer", {
            get: function () {
                var grid_ = this.a;
                return (grid_._renderer);
            },
            enumerable: true,
            configurable: true
        });
        GridExternalWrapper.prototype.onContentSizeChanged = function () {
            var grid_ = this.a;
            grid_.refreshContentSize();
        };
        GridExternalWrapper.prototype.createLocalDataSource = function (a) {
            var b = new igniteuiReactCore.LocalDataSource();
            b.dataSource = a;
            return b;
        };
        GridExternalWrapper.prototype.createTextColumn = function (a) {
            if (igniteuiReactCore.TypeRegistrar.isRegistered("IgxTextColumnComponent")) {
                var column_ = igniteuiReactCore.TypeRegistrar.create("IgxTextColumnComponent");
                var b = (column_._implementation);
                b.hy = a;
                return b;
            }
            return null;
        };
        GridExternalWrapper.prototype.createNumericColumn = function (a) {
            if (igniteuiReactCore.TypeRegistrar.isRegistered("IgxNumericColumnComponent")) {
                var column_ = igniteuiReactCore.TypeRegistrar.create("IgxNumericColumnComponent");
                var b = (column_._implementation);
                b.hy = a;
                return b;
            }
            return null;
        };
        GridExternalWrapper.prototype.createDateTimeColumn = function (a) {
            if (igniteuiReactCore.TypeRegistrar.isRegistered("IgxDateTimeColumnComponent")) {
                var column_ = igniteuiReactCore.TypeRegistrar.create("IgxDateTimeColumnComponent");
                var b = (column_._implementation);
                b.hy = a;
                return b;
            }
            return null;
        };
        GridExternalWrapper.prototype.createImageColumn = function (a) {
            if (igniteuiReactCore.TypeRegistrar.isRegistered("IgxImageColumnComponent")) {
                var column_ = igniteuiReactCore.TypeRegistrar.create("IgxImageColumnComponent");
                var b = (column_._implementation);
                b.hy = a;
                return b;
            }
            return null;
        };
        GridExternalWrapper.prototype.createTemplateColumn = function (a) {
            if (igniteuiReactCore.TypeRegistrar.isRegistered("IgxTemplateColumnComponent")) {
                var column_ = igniteuiReactCore.TypeRegistrar.create("IgxTemplateColumnComponent");
                var b = (column_._implementation);
                b.hy = a;
                return b;
            }
            return null;
        };
        GridExternalWrapper.prototype.createComboBoxColumn = function (a) {
            if (igniteuiReactCore.TypeRegistrar.isRegistered("IgxComboBoxColumnComponent")) {
                var column_ = igniteuiReactCore.TypeRegistrar.create("IgxComboBoxColumnComponent");
                var b = (column_._implementation);
                b.hy = a;
                return b;
            }
            return null;
        };
        GridExternalWrapper.prototype.focusScroller = function () {
            var grid_ = this.a;
            grid_._focusScroller();
        };
        GridExternalWrapper.prototype.insertExternalColumnAtIndex = function (index_, column_) {
            var grid_ = this.a;
            grid_._insertExternalColumnAtIndex(index_, column_);
        };
        GridExternalWrapper.prototype.removeExternalColumn = function (column_) {
            var grid_ = this.a;
            grid_._removeExternalColumn(column_);
        };
        GridExternalWrapper.prototype.setDefaultCursor = function () {
            var grid_ = this.a;
            grid_._setDefaultCursor();
        };
        GridExternalWrapper.prototype.setResizeCursor = function () {
            var grid_ = this.a;
            grid_._setResizeCursor();
        };
        GridExternalWrapper.prototype.setHandCursor = function () {
            var grid_ = this.a;
            grid_._setHandCursor();
        };
        GridExternalWrapper.prototype.setBorder = function (a, b, c, d, e, f, g, h, i) {
            var grid_ = this.a;
            var color_ = a._fill;
            var borderLeft_ = b;
            var borderTop_ = c;
            var borderRight_ = d;
            var borderBottom_ = e;
            var topLeftRadius_ = f;
            var topRightRadius_ = g;
            var botLeftRadius_ = h;
            var botRightRadius_ = i;
            grid_._setBorder(color_, borderLeft_, borderTop_, borderRight_, borderBottom_, topLeftRadius_, topRightRadius_, botLeftRadius_, botRightRadius_);
        };
        GridExternalWrapper.prototype.setScrollerVerticalTrackInset = function (a) {
            this.a._setScrollerVerticalTrackInset(a);
        };
        GridExternalWrapper.prototype.ensureColumnsAreManual = function () {
            var grid_ = this.a;
            grid_._ensureColumnsAreManual();
        };
        GridExternalWrapper.$t = igniteuiReactCore.markType(GridExternalWrapper, 'GridExternalWrapper', igniteuiReactCore.Base.$, [IExternalGrid_$type]);
        return GridExternalWrapper;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var BrowserTickProvider = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(BrowserTickProvider, _super);
        function BrowserTickProvider(a) {
            var _this = _super.call(this) || this;
            _this.e = 0;
            _this.c = null;
            _this._requestAnimationFrame = null;
            _this.d = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.b = false;
            _this.requestAnimationFrame = a.getRequestAnimationFrame();
            _this.c = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.Delegate_$type, 0);
            return _this;
        }
        Object.defineProperty(BrowserTickProvider.prototype, "requestAnimationFrame", {
            get: function () {
                return this._requestAnimationFrame;
            },
            set: function (a) {
                this._requestAnimationFrame = a;
            },
            enumerable: true,
            configurable: true
        });
        BrowserTickProvider.prototype.f = function () {
            var e_1, _a;
            this.b = false;
            this.d.clear();
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.c.values)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    this.d.add(a);
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            for (var b = 0; b < this.d.count; b++) {
                this.d._inner[b]();
            }
            this.d.clear();
        };
        BrowserTickProvider.prototype.setupTicking = function (a) {
            var b = this.e;
            this.e++;
            this.c.item(b, a);
            return b;
        };
        BrowserTickProvider.prototype.requestFrame = function (a) {
            if (this.b) {
                return;
            }
            this.b = true;
            this.requestAnimationFrame(igniteuiReactCore.runOn(this, this.f));
        };
        BrowserTickProvider.prototype.teardownTicking = function (a) {
            if (this.c.containsKey(a)) {
                this.c.removeItem(a);
            }
        };
        BrowserTickProvider.$t = igniteuiReactCore.markType(BrowserTickProvider, 'BrowserTickProvider', igniteuiReactCore.Base.$, [igniteuiReactCore.ITickProvider_$type]);
        return BrowserTickProvider;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var BrowserPixelConverter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(BrowserPixelConverter, _super);
        function BrowserPixelConverter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        BrowserPixelConverter.prototype.devicePixelsToPixel = function (a) {
            return a;
        };
        BrowserPixelConverter.$t = igniteuiReactCore.markType(BrowserPixelConverter, 'BrowserPixelConverter', igniteuiReactCore.Base.$, [IPlatformPixelConverter_$type]);
        return BrowserPixelConverter;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var INativeCell_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'INativeCell');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasPlaceholderView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasPlaceholderView, _super);
        function CanvasPlaceholderView() {
            var _this = _super.call(this) || this;
            _this.f = null;
            _this.j = new igniteuiReactCore.Color();
            _this.g = 1;
            _this.a = true;
            _this.c = 0;
            _this.b = 0;
            _this.k = new igniteuiReactCore.Color();
            return _this;
        }
        Object.defineProperty(CanvasPlaceholderView.prototype, "l", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                this.j = a;
                this.i();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasPlaceholderView.prototype, "h", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                this.a = true;
                this.g = a;
                this.i();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasPlaceholderView.prototype, "e", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.i();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasPlaceholderView.prototype, "d", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                this.b = a;
                this.i();
            },
            enumerable: true,
            configurable: true
        });
        CanvasPlaceholderView.prototype.i = function () {
            var a = this.e;
            var b = this.d;
            this.k = igniteuiReactCore.Color.u(igniteuiReactCore.truncate((this.j.l * this.g)), this.j.o, this.j.n, this.j.m);
        };
        CanvasPlaceholderView.$t = igniteuiReactCore.markType(CanvasPlaceholderView, 'CanvasPlaceholderView');
        return CanvasPlaceholderView;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasGridCellBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasGridCellBase, _super);
        function CanvasGridCellBase(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.r = true;
            _this.o = true;
            _this.k = null;
            _this.bk = null;
            _this.bx = null;
            _this.l = false;
            _this.ao = 1;
            _this.as = 5;
            _this.au = 5;
            _this.at = 5;
            _this.ar = 5;
            _this.cu = null;
            _this.ag = 0;
            _this.ai = 0;
            _this.ah = 0;
            _this.af = 0;
            _this.c2 = new igniteuiReactCore.Rectangle();
            _this.cy = new igniteuiReactCore.Line();
            _this.c1 = new igniteuiReactCore.Line();
            _this.cz = new igniteuiReactCore.Line();
            _this.cx = new igniteuiReactCore.Line();
            _this.c0 = new igniteuiReactCore.Line();
            _this.ay = 0;
            _this.a0 = 0;
            _this.a1 = 0;
            _this.a2 = 0;
            _this.bm = null;
            _this.j = null;
            _this.ak = 0;
            _this.aj = 0;
            _this.am = 0;
            _this.al = 0;
            _this.t = true;
            _this.az = NaN;
            _this.ct = new igniteuiReactCore.TextBlock();
            _this.cw = igniteuiReactCore.Color.u(255, 0, 0, 0);
            _this.s = true;
            _this.aq = 0;
            _this.a3 = 0;
            _this.cv = igniteuiReactCore.Color.u(255, 255, 255, 255);
            _this.m = false;
            _this.g = null;
            _this.c = 0;
            _this.e = 0;
            _this.bw = 1;
            _this.q = false;
            _this.ax = 0;
            _this.aw = 0;
            _this.i = ((function () {
                var $ret = new igniteuiReactCore.FontInfo();
                $ret.n = "Verdana";
                $ret.d = 12;
                return $ret;
            })());
            _this.p = true;
            _this.bp = -1;
            _this.bu = 0;
            _this.bv = 0;
            _this.n = false;
            _this.bn = 0;
            _this.b = 0;
            _this.ap = NaN;
            _this.h = null;
            _this.br = -1;
            _this.an = NaN;
            _this.f = 1;
            _this.av = 1;
            _this.bk = a;
            return _this;
        }
        Object.defineProperty(CanvasGridCellBase.prototype, "y", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                this.o = a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.ci = function (a) {
            this.k = a;
        };
        CanvasGridCellBase.prototype.b3 = function () {
            this.o = true;
            if (this.k != null) {
                this.k();
            }
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "isCanvasBased", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "bl", {
            get: function () {
                return this.bk;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.ck = function (a) {
            this.bx = a;
            this.o = true;
            this.r = true;
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "templateContext", {
            get: function () {
                return this.j.g();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "u", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                this.l = a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.get_aa = function () {
            return false;
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "aa", {
            get: function () {
                return this.get_aa();
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.ca = function (a, b, c, d, e) {
            this.o = true;
            this.cu = a;
            this.ag = b;
            this.ai = c;
            this.ah = d;
            this.af = e;
            this.r = true;
        };
        CanvasGridCellBase.prototype.cb = function (a) {
            this.o = true;
            this.ao = a;
            this.ct._opacity = this.ao;
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "ba", {
            get: function () {
                return this.as;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "bc", {
            get: function () {
                return this.au;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "bb", {
            get: function () {
                return this.at;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "a9", {
            get: function () {
                return this.ar;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "a5", {
            get: function () {
                return this.ag;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "a7", {
            get: function () {
                return this.ai;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "a6", {
            get: function () {
                return this.ah;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "a4", {
            get: function () {
                return this.af;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "be", {
            get: function () {
                return this.ay;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "bg", {
            get: function () {
                return this.a0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "bh", {
            get: function () {
                return this.a2;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.get_ab = function () {
            return false;
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "ab", {
            get: function () {
                return this.get_ab();
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.bz = function (a, b, c, d, e, f) {
            var g = true;
            var h = true;
            var i = false;
            if (this.ab) {
                g = false;
                h = false;
                i = false;
            }
            this.b0(a, b, c, d, e, f, g, h, i);
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "resized", {
            get: function () {
                return this.t;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.ensureCorrectSize = function () {
            this.t = this.v(this.av);
            return this.t;
        };
        CanvasGridCellBase.prototype.b0 = function (a, b, c, d, e, f, g, h, i) {
            if (!this.s) {
                return;
            }
            if (this.bw != 1) {
                a.ad(this.bw);
            }
            this.av = f;
            if (!i) {
                this.b1();
                this.ensureCorrectSize();
            }
            if (this.y || this.t || i) {
                this.y = false;
                var j = this.j;
                if (this.p || this.t || (this.i != null && this.i.g != this.bp)) {
                    this.p = false;
                    this.bp = this.i.g;
                    j.ac(this.i);
                }
                if (f != 1) {
                    this.j.z();
                    this.j.aa(f, f);
                }
                if (g) {
                    this.b4();
                }
                if (h) {
                    this.b5(this.j);
                }
                if (f != 1) {
                    this.j.y();
                }
            }
            if (!i) {
                var k = Math.round((d - b) * f);
                var l = Math.round((e - c) * f);
                if (this.ak == this.am && this.aj == this.al) {
                    a.m(this.bm.getNativeElement(), 1, k, l, this.ak, this.aj);
                }
                else {
                    a.n(this.bm.getNativeElement(), 1, 0, 0, this.ak, this.aj, k, l, this.ak, this.aj);
                }
            }
            if (this.bw != 1) {
                a.ad(1);
            }
        };
        CanvasGridCellBase.prototype.b4 = function () {
            if (!this.m) {
                this.j.k(0, 0, this.am, this.al);
            }
            this.c2.n = 0;
            this.c2.o = 0;
            this.c2.width = this.a3;
            this.c2.height = this.aq;
            this.j.v(this.c2);
            if (this.cu != null) {
                if (this.ag > 0) {
                    this.cy.am = 0;
                    this.cy.ak = this.ag / 2;
                    this.cy.an = this.aq;
                    this.cy.al = this.ag / 2;
                    this.cy._stroke = this.cu;
                    this.cy.ac = this.ag;
                    this.j.r(this.cy);
                }
                if (this.ah > 0) {
                    this.cz.am = 0;
                    this.cz.ak = Math.max(0, (this.a3 - (this.ah / 2)));
                    this.cz.an = this.aq;
                    this.cz.al = Math.max(0, (this.a3 - (this.ah / 2)));
                    this.cz._stroke = this.cu;
                    this.cz.ac = this.ah;
                    this.j.r(this.cz);
                }
                if (this.ai > 0) {
                    this.c1.am = this.ai / 2;
                    this.c1.ak = this.ag;
                    this.c1.an = this.ai / 2;
                    this.c1.al = Math.max(0, (this.a3 - (this.ah / 2)));
                    this.c1._stroke = this.cu;
                    this.c1.ac = this.ai;
                    this.j.r(this.c1);
                }
                if (this.af > 0) {
                    this.cx.am = Math.max(0, this.aq - (this.af / 2));
                    this.cx.ak = this.ag;
                    this.cx.an = Math.max(0, this.aq - (this.af / 2));
                    this.cx.al = Math.max(0, (this.a3 - (this.ah / 2)));
                    this.cx._stroke = this.cu;
                    this.cx.ac = this.af;
                    this.j.r(this.cx);
                }
            }
        };
        CanvasGridCellBase.prototype.ch = function (a) {
            this.av = a;
        };
        CanvasGridCellBase.prototype.renderStandardContent = function () {
            this.b0(this.j, 0, 0, 0, 0, this.av, false, true, true);
        };
        CanvasGridCellBase.prototype.renderStandardBackground = function () {
            this.b0(this.j, 0, 0, 0, 0, this.av, true, false, true);
        };
        CanvasGridCellBase.prototype.b5 = function (a) {
            if (this.r) {
                this.cs();
                this.r = false;
            }
            if (this.ct.ak != null) {
                this.ct.n = this.ay;
                this.ct.o = this.a1;
                this.j.w(this.ct);
                if (this.q) {
                    this.c0.ac = 1;
                    this.c0.ak = this.ay;
                    this.c0.am = this.a2 - 2;
                    this.c0.al = this.ay + (this.a0 - this.ay);
                    this.c0.an = this.a2 - 2;
                    this.c0._stroke = this.ct.am;
                    this.j.r(this.c0);
                }
            }
        };
        CanvasGridCellBase.prototype.b1 = function () {
            if (this.bm == null) {
                this.bm = this.bk.createElement("canvas");
                var a_1 = this.bk.get2DCanvasContext(this.bm);
                var b = ((function () {
                    var $ret = new igniteuiReactCore.CanvasViewRenderer();
                    $ret.h$d = a_1;
                    return $ret;
                })());
                this.j = new igniteuiReactCore.RenderingContext(b, a_1);
                this.r = true;
            }
        };
        CanvasGridCellBase.prototype.v = function (a) {
            var b = Math.round(this.a3 * a);
            var c = Math.round(this.aq * a);
            this.ak = b;
            this.aj = c;
            var d = this.bd(b);
            var e = this.bd(c);
            if (d != this.am || e != this.al) {
                this.bm.setAttribute("width", d + "px");
                this.bm.setAttribute("height", e + "px");
                this.am = d;
                this.al = e;
                this.ak = b;
                this.aj = c;
                return true;
            }
            return false;
        };
        CanvasGridCellBase.prototype.bd = function (a) {
            return a;
        };
        CanvasGridCellBase.prototype.cg = function (a, b, c, d) {
            this.o = true;
            this.as = a;
            this.au = b;
            this.at = c;
            this.ar = d;
            this.r = true;
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "bf", {
            get: function () {
                return this.az;
            },
            set: function (a) {
                this.az = a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.cl = function (a) {
            var _this = this;
            this.o = true;
            this.cw = a;
            this.ct.am = ((function () {
                var $ret = new igniteuiReactCore.Brush();
                $ret.color = _this.cw;
                return $ret;
            })());
        };
        CanvasGridCellBase.prototype.get_z = function () {
            return false;
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "z", {
            get: function () {
                return this.get_z();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "ac", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                this.o = true;
                this.s = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "a8", {
            get: function () {
                return this.aq;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasGridCellBase.prototype, "bj", {
            get: function () {
                return this.a3;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.cd = function (a) {
            this.o = true;
            this.aq = a;
            this.c2.height = this.aq;
        };
        CanvasGridCellBase.prototype.cn = function (a) {
            this.o = true;
            this.a3 = a;
            this.c2.width = this.a3;
            this.r = true;
        };
        CanvasGridCellBase.prototype.by = function () {
            if (!this.aa) {
                return;
            }
            this.l = true;
            this.g = new CanvasPlaceholderView();
            this.c = 0;
            this.e = 1;
            this.g.l = igniteuiReactCore.Color.u(120, 120, 120, 120);
            this.g.h = 0;
        };
        CanvasGridCellBase.prototype.b9 = function (a) {
            var _this = this;
            this.o = true;
            this.cv = a;
            this.m = this.cv.l == 255;
            this.c2._fill = ((function () {
                var $ret = new igniteuiReactCore.Brush();
                $ret.color = _this.cv;
                return $ret;
            })());
        };
        CanvasGridCellBase.prototype.cf = function (a) {
            this.o = true;
            this.bw = a;
        };
        CanvasGridCellBase.prototype.cj = function (a) {
            this.q = a;
            this.o = true;
        };
        CanvasGridCellBase.prototype.cr = function (a) {
            if (!this.aa) {
                return;
            }
            this.o = true;
            this.g.h = (a * 0.20000000298023224);
        };
        CanvasGridCellBase.prototype.b2 = function (a, b, c, d) {
            if (this.g != null) {
                var e = this.ax;
                var f = this.aw;
                if (this.e == 1) {
                    b = igniteuiReactCore.truncate((b + (d / 2) - (f / 2)));
                }
                else if (this.e == 2) {
                    b = igniteuiReactCore.truncate((b + (d) - (f)));
                }
                if (this.c == 1) {
                    a = igniteuiReactCore.truncate((a + (c / 2) - (e / 2)));
                }
                else if (this.c == 2) {
                    a = igniteuiReactCore.truncate((a + (c) - (e)));
                }
            }
        };
        CanvasGridCellBase.prototype.cc = function (a) {
            this.i = a;
            this.p = true;
            this.o = true;
            this.r = true;
        };
        CanvasGridCellBase.prototype.cq = function (a) {
            if (!this.aa) {
                return;
            }
            this.o = true;
            var b = igniteuiReactCore.DeviceUtils.f(12);
            if (a.af != null && !igniteuiReactCore.isNaN_(a.af.d)) {
                b = a.af.d;
            }
            if (this.aw != b) {
                this.aw = b;
            }
            var c = a.gf * 0.2;
            var d = a.e0 * 0.6;
            if (this.ax >= c && this.ax <= d) {
                return;
            }
            var e = (CanvasGridCellBase.bt.nextDouble() * (d - c) + c);
            if (this.ax != e) {
                this.ax = e;
            }
        };
        CanvasGridCellBase.prototype.co = function (a, b) {
            if (!this.aa) {
                return;
            }
            this.o = true;
            this.c = a;
            this.e = b;
        };
        CanvasGridCellBase.prototype.cp = function (a) {
            if (!this.aa) {
                return;
            }
            this.o = true;
        };
        CanvasGridCellBase.prototype.b8 = function (a) {
            this.a = a;
        };
        Object.defineProperty(CanvasGridCellBase.prototype, "d", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        CanvasGridCellBase.prototype.ce = function (a) {
            this.b = a;
            this.o = true;
            this.r = true;
        };
        CanvasGridCellBase.prototype.cs = function () {
            if (this.bx == null) {
                return;
            }
            if (this.j == null) {
                return;
            }
            if (this.p || (this.i != null && this.i.g != this.bp)) {
                this.p = false;
                this.bp = this.i.g;
                this.j.ac(this.i);
            }
            var a;
            if (this.h != this.i || this.br != this.i.g) {
                this.h = this.i;
                this.br = this.i.g;
                this.ap = igniteuiReactCore.FontUtil.getCurrentFontHeight(this.bk, this.i);
            }
            a = this.ap;
            var b = 0;
            var c = 0;
            var d = this.a3;
            var e = this.aq;
            d -= (this.ag + this.as + this.ah + this.at);
            e -= (this.ai + this.au + this.af + this.ar);
            d = Math.max(d, 0);
            e = Math.max(e, 0);
            var f = d;
            if (!igniteuiReactCore.isNaN_(this.az) && this.az < d) {
                f = this.az;
            }
            var g = this.bi(this.ct, this.bx, f, this.j);
            switch (this.b) {
                case 0:
                    b = this.as + this.ag;
                    break;
                case 3:
                case 1:
                    b = this.as + this.ag + ((d / 2) - (g / 2));
                    break;
                case 2:
                    b = Math.max(0, (this.a3 - (this.at + this.ah))) - g;
                    break;
            }
            switch (this.f) {
                case 0:
                    c = this.au + this.ai;
                    break;
                case 3:
                case 1:
                    c = this.au + this.ai + ((e / 2) - (a / 2));
                    break;
                case 2:
                    c = Math.max(0, (this.aq - (this.ar + this.af))) - a;
                    break;
            }
            this.ay = b;
            this.a0 = this.ay + g;
            this.a1 = c;
            this.a2 = this.a1 + (a / 2);
            this.o = true;
        };
        CanvasGridCellBase.prototype.bi = function (a, b, c, d) {
            var e = b;
            var f = e.length;
            var g = ("\u2026");
            if (igniteuiReactCore.isNaN_(this.an)) {
                this.an = d.f(g);
            }
            if (c <= this.an) {
                a.ak = g;
                return this.an;
            }
            var h = d.f(e);
            if (h <= c) {
                a.ak = b;
                return h;
            }
            var i = c / h;
            var j = igniteuiReactCore.truncate(Math.ceil(f * i));
            var k = e.substr(0, j) + g;
            var l = d.f(k);
            if (l > c) {
                f = j;
            }
            else {
                j = j + 1;
                k = e.substr(0, j) + g;
                l = d.f(k);
                if (l > c) {
                    f = j;
                }
            }
            while (h > c && f > 0) {
                f--;
                e = e.substr(0, f) + g;
                h = d.f(e);
            }
            a.ak = e;
            return h;
        };
        CanvasGridCellBase.prototype.cm = function (a) {
            this.f = a;
            this.o = true;
            this.r = true;
        };
        CanvasGridCellBase.prototype.ae = function (a) {
            return a.isClickActionDesired;
        };
        CanvasGridCellBase.prototype.onContactStarted = function (a, b) {
            if (this.a != null && this.ae(this.a)) {
                this.bu = a.pageX;
                this.bv = a.pageY;
                this.a.mouseDownCell(this.bu, this.bv);
            }
        };
        CanvasGridCellBase.prototype.onContactMoved = function (a, b) {
            if (this.a != null && this.ae(this.a)) {
                var c = a.pageX;
                var d = a.pageY;
                if (this.a.isMouseDown) {
                    if (b) {
                        if (igniteuiReactCore.PointUtil.equals(this.a.mousePosition, null) || Math.abs(c - this.a.mousePosition.x) > CanvasGridCellBase.bq || Math.abs(d - this.a.mousePosition.y) > CanvasGridCellBase.bq) {
                            this.a.mouseUpCell(c, d);
                        }
                        else {
                            a.stopPropagation();
                        }
                    }
                    else {
                        if (igniteuiReactCore.PointUtil.equals(this.a.mousePosition, null)) {
                            this.a.mouseUpCell(c, d);
                        }
                        else {
                            if (Math.abs(c - this.a.mousePosition.x) > CanvasGridCellBase.bo || Math.abs(d - this.a.mousePosition.y) > CanvasGridCellBase.bo) {
                                this.a.isControlPressed = a.ctrlKey;
                                this.a.dragStarted();
                            }
                        }
                    }
                }
            }
        };
        CanvasGridCellBase.prototype.onContactCompleted = function (a, b) {
            if (this.a != null && this.ae(this.a)) {
                var c = a.pageX;
                var d = a.pageY;
                if (igniteuiReactCore.PointUtil.equals(this.a.mousePosition, null) || Math.abs(c - this.a.mousePosition.x) > CanvasGridCellBase.bq || Math.abs(d - this.a.mousePosition.y) > CanvasGridCellBase.bq || this.a.isDrag) {
                    this.a.mouseUpCell(c, d);
                }
                if (this.a.isCellDown()) {
                    this.a.isControlPressed = a.ctrlKey;
                    this.a.isShiftPressed = a.shiftKey;
                    this.a.clickCell(a.which == 1);
                    this.a.mouseUpCell(a.pageX, a.pageY);
                }
            }
        };
        CanvasGridCellBase.prototype.onDoubleClick = function (a) {
            this.a.doubleClicked();
        };
        CanvasGridCellBase.$t = igniteuiReactCore.markType(CanvasGridCellBase, 'CanvasGridCellBase', igniteuiReactCore.Base.$, [INativeCell_$type]);
        CanvasGridCellBase.bt = new igniteuiReactCore.Random(0);
        CanvasGridCellBase.bq = 10;
        CanvasGridCellBase.bo = 3;
        return CanvasGridCellBase;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTextCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTextCell, _super);
        function CanvasTextCell(a) {
            var _this = _super.call(this, a) || this;
            _this.ce(0);
            _this.cm(1);
            return _this;
        }
        CanvasTextCell.prototype.get_aa = function () {
            return true;
        };
        CanvasTextCell.$t = igniteuiReactCore.markType(CanvasTextCell, 'CanvasTextCell', CanvasGridCellBase.$);
        return CanvasTextCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasCellPresenterBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasCellPresenterBase, _super);
        function CanvasCellPresenterBase(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        CanvasCellPresenterBase.prototype.modelUpdated = function (a) {
            this.b(a);
        };
        CanvasCellPresenterBase.prototype.b = function (a) {
            this.a.b8(a.c);
            if (a.ax(CellModel.d2) || a.ax(CellModel.d6) || a.ax(CellModel.d4) || a.ax(CellModel.d0)) {
                this.a.cg(a.d1, a.d5, a.d3, a.dz);
            }
            if (a.aq) {
                this.a.ca(a.kc, a.dp, a.du, a.ds, a.dm);
            }
            if (a.ba) {
                this.a.cd(a.e0);
                this.a.cn(a.gf);
            }
            if (a.as) {
                if (a.a4 && !this.a.u) {
                    this.a.by();
                }
                if (a.ax(CellModel.dl)) {
                    this.a.b9(a.kb.color);
                }
                if (a.ax(CellModel.dy)) {
                    this.a.cf(a.b0);
                }
            }
            if (a.ba && a.a4) {
                this.a.cq(a);
            }
        };
        CanvasCellPresenterBase.prototype.c = function (a, b, c) {
            if (c == 0) {
                return a.color;
            }
            if (c == 1) {
                return b.color;
            }
            var d = igniteuiReactCore.BrushUtil.k(a, c, b, 0);
            return d.color;
        };
        Object.defineProperty(CanvasCellPresenterBase.prototype, "nativeCell", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasCellPresenterBase.prototype, "isCanvasBased", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        CanvasCellPresenterBase.$t = igniteuiReactCore.markType(CanvasCellPresenterBase, 'CanvasCellPresenterBase', igniteuiReactCore.Base.$, [ICellPresenter_$type]);
        return CanvasCellPresenterBase;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasContentCellModelHelper = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasContentCellModelHelper, _super);
        function CanvasContentCellModelHelper() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        CanvasContentCellModelHelper.e = function (a) {
            if (a == null) {
                return CanvasContentCellModelHelper.d;
            }
            return a.color;
        };
        CanvasContentCellModelHelper.a = function (a, b, c) {
            if (b.as) {
                if (b.ax(CellModel.ei) || b.ax(CellModel.dw) || b.ax(CellModel.ge) || b.aw("IsRowPinned") || b.aw("IsRowSticky") || b.aw("PinnedRowOpacity")) {
                    var d = Math.min(1, Math.max(0, b.cb));
                    var e = b.bz * (1 - d);
                    c.cb(e);
                    if (b.a4) {
                        c.cr(b.bz * d);
                    }
                }
                if (b.ax(CellModel.d7)) {
                    CanvasContentCellModelHelper.c(c, b.kd);
                    if (b.a4) {
                        c.cp(b.kd);
                    }
                }
                if (b.ax(CellModel.fi)) {
                }
                if (b.ax(CellModel.e2) || b.ax(CellModel.gd)) {
                    var f = b.f;
                    var g = b.h;
                    c.ce(f);
                    c.cm(g);
                    if (b.a4) {
                        c.co(f, g);
                    }
                }
                if (b.aw("ActualFontInfo")) {
                    CanvasContentCellModelHelper.b(a, c, b.af);
                }
                if (b.aw("IsEdited") || b.aw("IsDeleted")) {
                    if (b.ay || b.av) {
                        if (b.av) {
                            c.cj(true);
                        }
                        else {
                            c.cj(false);
                        }
                    }
                    else {
                        c.cj(false);
                    }
                }
            }
        };
        CanvasContentCellModelHelper.b = function (a, b, c) {
            if (c == null) {
                c = igniteuiReactCore.FontUtil.getDefaultFont(a);
            }
            b.cc(c);
        };
        CanvasContentCellModelHelper.c = function (a, b) {
            var c = CanvasContentCellModelHelper.e(b);
            a.cl(c);
        };
        CanvasContentCellModelHelper.$t = igniteuiReactCore.markType(CanvasContentCellModelHelper, 'CanvasContentCellModelHelper');
        CanvasContentCellModelHelper.d = igniteuiReactCore.Color.u(0, 0, 0, 0);
        return CanvasContentCellModelHelper;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTextCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTextCellPresenter, _super);
        function CanvasTextCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasTextCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTextCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(TextCellModel.kq) || a.ax(CellModel.fl)) {
                    if (b.ks != null) {
                        b.ip = b.ks;
                    }
                    else {
                        if (b.go == null) {
                            b.ip = "";
                        }
                        else {
                            b.ip = b.go.toString();
                        }
                    }
                    this.d.ck(b.ip);
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        };
        CanvasTextCellPresenter.$t = igniteuiReactCore.markType(CanvasTextCellPresenter, 'CanvasTextCellPresenter', CanvasCellPresenterBase.$);
        return CanvasTextCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasNumericCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasNumericCell, _super);
        function CanvasNumericCell(a) {
            var _this = _super.call(this, a) || this;
            _this.ce(2);
            _this.cm(1);
            return _this;
        }
        CanvasNumericCell.$t = igniteuiReactCore.markType(CanvasNumericCell, 'CanvasNumericCell', CanvasTextCell.$);
        return CanvasNumericCell;
    }(CanvasTextCell));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NumericCellFormatter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(NumericCellFormatter, _super);
        function NumericCellFormatter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        NumericCellFormatter.c = function () {
            if (NumericCellFormatter.a != null) {
                return NumericCellFormatter.a;
            }
            var a = "";
            var b = 1.1;
            var c = b.toLocaleString();
            var d = false;
            for (var e = 0; e < c.length; e++) {
                if (c.charAt(e) == '1') {
                    d = !d;
                }
                if (c.charAt(e) != '1' && d) {
                    a += c.charAt(e);
                }
            }
            NumericCellFormatter.a = a;
            return NumericCellFormatter.a;
        };
        NumericCellFormatter.b = function (a) {
            if (a.ks != null) {
                return a.ks.i(a.kz);
            }
            var b = a.kz;
            var c = a.kz;
            var d = 10;
            var e = 0;
            var f = "0";
            if (igniteuiReactCore.isNaN_(a.kz)) {
                return "";
            }
            var g = 0;
            if (a.kz >= 0) {
                g = a.kz - Math.floor(a.kz);
            }
            else {
                g = Math.abs(a.kz - Math.ceil(a.kz));
            }
            var h = 0;
            if (a.kz >= 0) {
                h = a.kz - g;
            }
            else {
                h = a.kz + g;
            }
            var i = Math.abs(h);
            var j = g.toString();
            if (g == 0) {
                j = "";
            }
            else {
                j = j.substr(2);
            }
            var k = Math.round(i).toString();
            d = a.k7;
            e = a.k9;
            if (e < 0) {
                e = 0;
            }
            if (d < 0) {
                d = 10;
            }
            if (e > d) {
                d = e;
            }
            if (j.length > d) {
                var l = Math.round(g * (Math.pow(10, d))) / (Math.pow(10, d));
                j = (l).toString();
                if (l == 1) {
                    if (a.kz >= 0) {
                        h += 1;
                        i += 1;
                    }
                    else {
                        h -= 1;
                        i += 1;
                    }
                    j = "";
                    k = Math.round(i).toString();
                }
                else if (l == 0) {
                    j = "";
                }
                else {
                    j = j.substr(2);
                }
            }
            var m = k.length;
            var n = Math.max(0, a.lb - k.length);
            var o = Math.max(0, a.k9 - j.length);
            var p = false;
            if (k.charAt(0) == '1') {
                p = true;
            }
            for (var q = 0; q < n; q++) {
                var r = "0";
                if (a.kx) {
                    if (p) {
                        r = "9";
                    }
                    else {
                        r = "1";
                    }
                }
                k = r + k;
            }
            for (var s = 0; s < o; s++) {
                j = j + "0";
            }
            if (d == 0) {
                j = "";
            }
            if (a.kx && k.length > 0) {
                var t = parseInt(k);
                var u = t.toLocaleString();
                var v = '1';
                if (p) {
                    v = '9';
                }
                var w = true;
                var x = "";
                for (var y = 0; y < u.length; y++) {
                    if (u.charAt(y) == v && w) {
                        x += "0";
                    }
                    else {
                        x += u.charAt(y);
                        if (igniteuiReactCore.isDigit(u.charAt(y)) && u.charAt(y) != v) {
                            w = false;
                        }
                    }
                }
                k = x;
            }
            if (h < 0) {
                k = "-" + k;
            }
            var z = k;
            if (j.length > 0) {
                z += NumericCellFormatter.c() + j;
            }
            if (b >= 0) {
                if (!igniteuiReactCore.stringIsNullOrEmpty(a.l4)) {
                    z = a.l4 + z;
                }
                if (!igniteuiReactCore.stringIsNullOrEmpty(a.l6)) {
                    z += a.l6;
                }
            }
            else {
                if (!igniteuiReactCore.stringIsNullOrEmpty(a.lz)) {
                    z = a.lz + z;
                }
                if (!igniteuiReactCore.stringIsNullOrEmpty(a.l1)) {
                    z += a.l1;
                }
            }
            return z;
        };
        NumericCellFormatter.$t = igniteuiReactCore.markType(NumericCellFormatter, 'NumericCellFormatter');
        NumericCellFormatter.a = null;
        return NumericCellFormatter;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasNumericCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasNumericCellPresenter, _super);
        function CanvasNumericCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasNumericCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasNumericCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(NumericCellModel.lf) || b.kw()) {
                    b.ip = this.e(b);
                    this.d.ck(b.ip);
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        };
        CanvasNumericCellPresenter.prototype.e = function (a) {
            if (a.ll != null) {
                var val_ = a.kz;
                var override_ = a.ll;
                return (override_.format(val_));
            }
            return NumericCellFormatter.b(a);
        };
        CanvasNumericCellPresenter.$t = igniteuiReactCore.markType(CanvasNumericCellPresenter, 'CanvasNumericCellPresenter', CanvasCellPresenterBase.$);
        return CanvasNumericCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasDateTimeCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasDateTimeCell, _super);
        function CanvasDateTimeCell(a) {
            return _super.call(this, a) || this;
        }
        CanvasDateTimeCell.$t = igniteuiReactCore.markType(CanvasDateTimeCell, 'CanvasDateTimeCell', CanvasTextCell.$);
        return CanvasDateTimeCell;
    }(CanvasTextCell));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasDateTimeCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasDateTimeCellPresenter, _super);
        function CanvasDateTimeCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasDateTimeCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasDateTimeCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(DateTimeCellModel.k2) || a.ax(DateTimeCellModel.k3) || a.ax(DateTimeCellModel.k1)) {
                    this.e(b);
                    this.d.ck(b.ip);
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        };
        CanvasDateTimeCellPresenter.prototype.e = function (a) {
            a.ip = a.le(a.k0);
            if (a.ip == igniteuiReactCore.stringEmpty() && a.go != null) {
                a.ip = a.go.toString();
            }
        };
        CanvasDateTimeCellPresenter.$t = igniteuiReactCore.markType(CanvasDateTimeCellPresenter, 'CanvasDateTimeCellPresenter', CanvasCellPresenterBase.$);
        return CanvasDateTimeCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SortIndicatorRenderCompletedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SortIndicatorRenderCompletedEventArgs, _super);
        function SortIndicatorRenderCompletedEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        SortIndicatorRenderCompletedEventArgs.$t = igniteuiReactCore.markType(SortIndicatorRenderCompletedEventArgs, 'SortIndicatorRenderCompletedEventArgs', igniteuiReactCore.EventArgs.$);
        return SortIndicatorRenderCompletedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridSortIndicatorView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSortIndicatorView, _super);
        function GridSortIndicatorView(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.d = new igniteuiReactCore.List$1(igniteuiReactCore.Path.$, 0);
            _this.i = 0;
            _this.h = 0;
            _this.b = 0;
            _this.m = null;
            _this.c = null;
            _this.l = null;
            _this.f = 0;
            _this.e = 0;
            _this.g = 1;
            _this.k = 0;
            _this.j = 0;
            _this.a = a;
            return _this;
        }
        GridSortIndicatorView.prototype.t = function () {
            if (this.m == null || this.c == null) {
                return;
            }
            if (this.i != this.k || this.h != this.j || this.b != this.a.f) {
                this.d.clear();
                switch (this.a.f) {
                    case 0:
                        this.n();
                        break;
                    case 1:
                        this.o();
                        break;
                    case 2:
                        this.p();
                        break;
                }
                this.i = this.k;
                this.h = this.j;
                this.b = this.a.f;
            }
            switch (this.a.f) {
                case 0:
                    this.v();
                    break;
                case 1:
                    this.w();
                    break;
                case 2:
                    this.x();
                    break;
            }
            var a = Math.round(this.k * this.g);
            var b = Math.round(this.j * this.g);
            if (this.f != a || this.e != b) {
                this.m.setAttribute("width", a.toString());
                this.m.setAttribute("height", b.toString());
                this.m.setStyleProperty("width", this.k.toString() + "px");
                this.m.setStyleProperty("height", this.j.toString() + "px");
                this.m.setStyleProperty("top", "0px");
                this.m.setStyleProperty("left", "0px");
                this.f = igniteuiReactCore.truncate(Math.round(a));
                this.e = igniteuiReactCore.truncate(Math.round(b));
            }
            if (this.c.d && this.g != 1) {
                this.c.z();
                this.c.aa(this.g, this.g);
            }
            this.c.k(0, 0, this.k, this.j);
            this.c.z();
            this.c.aa(this.a.v(), this.a.v());
            for (var c = 0; c < this.d.count; c++) {
                this.c.j(this.d._inner[c].j);
                var d = this.y();
                if (this.a.a0 != null) {
                    d = this.a.a0;
                }
                this.d._inner[c]._stroke = d;
                this.c.s(this.d._inner[c]);
            }
            this.c.y();
            if (this.c.d && this.g != 1) {
                this.c.y();
            }
            this.a.at();
        };
        GridSortIndicatorView.prototype.u = function () {
            this.t();
        };
        GridSortIndicatorView.prototype.n = function () {
            this.a.an(this.k, this.j, this.d);
        };
        GridSortIndicatorView.prototype.v = function () {
            var _this = this;
            if (this.d.count != 1) {
                return;
            }
            this.d._inner[0]._opacity = this.a.r;
            var a = { $type: igniteuiReactCore.Point_$type, x: this.k / 2, y: this.j / 2 };
            var b = new igniteuiReactCore.TransformGroup();
            b.j.add(((function () {
                var $ret = new igniteuiReactCore.TranslateTransform();
                $ret.j = -a.x;
                $ret.k = -a.y;
                return $ret;
            })()));
            b.j.add(((function () {
                var $ret = new igniteuiReactCore.RotateTransform();
                $ret.j = _this.a.q;
                return $ret;
            })()));
            b.j.add(((function () {
                var $ret = new igniteuiReactCore.TranslateTransform();
                $ret.j = a.x;
                $ret.k = a.y;
                return $ret;
            })()));
            this.d._inner[0].j = b;
        };
        GridSortIndicatorView.prototype.o = function () {
            this.a.ao(this.k, this.j, this.d);
        };
        GridSortIndicatorView.prototype.w = function () {
            if (this.d.count != 4) {
                return;
            }
            this.d._inner[0]._opacity = this.a.r;
            this.d._inner[1]._opacity = this.a.r;
            this.d._inner[2]._opacity = this.a.x;
            this.d._inner[3]._opacity = this.a.x;
        };
        GridSortIndicatorView.prototype.p = function () {
            this.a.ap(this.k, this.j, this.d);
        };
        GridSortIndicatorView.prototype.x = function () {
            this.d._inner[0]._opacity = this.a.r;
            this.d._inner[1]._opacity = this.a.x;
        };
        GridSortIndicatorView.prototype.r = function (a) {
            if (a == null) {
                this.m = null;
                this.l = null;
                this.c = null;
                return;
            }
            this.g = (igniteuiReactCore.isNaN_(this.a.w) ? this.a.p : this.a.w);
            var b = a;
            this.l = b;
            this.a.j.u(this.l);
            this.a.i.u(this.l);
            this.l.rootWrapper.addClass("ui-radialgauge-container");
            var c = this.g;
            var d = Math.round(b.rootWrapper.width());
            var e = Math.round(b.rootWrapper.height());
            var f = d * c;
            var g = e * c;
            this.l.rootWrapper.setStyleProperty("position", "relative");
            var h = this.l.createElement("canvas");
            h.setStyleProperty("position", "absolute");
            this.l.append(h);
            this.f = igniteuiReactCore.truncate(Math.round(f));
            this.e = igniteuiReactCore.truncate(Math.round(g));
            h.setAttribute("width", f.toString());
            h.setAttribute("height", g.toString());
            h.setStyleProperty("width", d.toString() + "px");
            h.setStyleProperty("height", e.toString() + "px");
            this.k = d;
            this.j = e;
            this.m = h;
            var i = this.l.get2DCanvasContext(this.m);
            this.c = new igniteuiReactCore.RenderingContext(new igniteuiReactCore.CanvasViewRenderer(), i);
            if (igniteuiReactCore.isNaN_(this.a.w)) {
                this.a.p = window.devicePixelRatio;
                this.g = this.a.p;
            }
            this.t();
        };
        GridSortIndicatorView.prototype.s = function (a, b) {
            if (igniteuiReactCore.isNaN_(this.a.w)) {
                this.a.p = window.devicePixelRatio;
                this.g = this.a.p;
            }
            this.k = a;
            this.j = b;
            this.t();
        };
        GridSortIndicatorView.prototype.q = function () {
            if (igniteuiReactCore.isNaN_(this.a.w)) {
                this.a.p = window.devicePixelRatio;
                if (this.g != this.a.p) {
                    this.g = this.a.p;
                    this.t();
                }
            }
        };
        GridSortIndicatorView.prototype.y = function () {
            return GridStyleRepository.bl;
        };
        GridSortIndicatorView.$t = igniteuiReactCore.markType(GridSortIndicatorView, 'GridSortIndicatorView');
        return GridSortIndicatorView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridSortIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridSortIndicator, _super);
        function GridSortIndicator() {
            var _this = _super.call(this) || this;
            _this.ab = null;
            _this.a = 0;
            _this.az = null;
            _this.k = true;
            _this.propertyChanged = null;
            _this.g = null;
            _this.h = null;
            _this.o = NaN;
            _this.m = 1;
            _this.e = 0;
            _this.n = 0;
            _this.q = 0;
            _this.x = 0;
            _this.t = 0;
            _this.s = 0;
            _this.z = 0;
            _this.y = 0;
            _this.u = 0;
            _this.aa = 0;
            _this.c = null;
            _this.renderCompleted = null;
            _this.r = 0;
            _this.x = 0.5;
            _this.q = 180;
            _this.c = new GridSortIndicatorView(_this);
            _this.g = new igniteuiReactCore.DoubleAnimator(0, 1, 400);
            _this.h = new igniteuiReactCore.DoubleAnimator(0, 1, 400);
            _this.g.b = igniteuiReactCore.EasingFunctions.cubicEase;
            _this.h.b = igniteuiReactCore.EasingFunctions.cubicEase;
            var a = _this.g;
            a.propertyChanged = igniteuiReactCore.delegateCombine(a.propertyChanged, igniteuiReactCore.runOn(_this, _this.al));
            var b = _this.h;
            b.propertyChanged = igniteuiReactCore.delegateCombine(b.propertyChanged, igniteuiReactCore.runOn(_this, _this.am));
            return _this;
        }
        Object.defineProperty(GridSortIndicator.prototype, "ac", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                this.ab = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.as("SortDirection", igniteuiReactCore.enumGetBox(ColumnSortDirection_$type, b), igniteuiReactCore.enumGetBox(ColumnSortDirection_$type, this.a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "a0", {
            get: function () {
                return this.az;
            },
            set: function (a) {
                var b = this.az;
                this.az = a;
                if (b != this.az) {
                    this.as("IconColor", b, this.az);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "l", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                this.k = a;
                if (b != this.k) {
                    this.as("IsAnimationEnabled", b, this.k);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "i", {
            get: function () {
                return this.g;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "j", {
            get: function () {
                return this.h;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "w", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                var b = this.o;
                this.o = a;
                this.as("PixelScalingRatio", b, this.o);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "p", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                this.as("ActualPixelScalingRatio", b, this.m);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridSortIndicator.prototype, "f", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                if (b != this.e) {
                    this.as("SortIndicatorStyle", igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, b), igniteuiReactCore.enumGetBox(SortIndicatorStyle_$type, this.e));
                }
            },
            enumerable: true,
            configurable: true
        });
        GridSortIndicator.prototype.as = function (a, b, c) {
            this.aw(a, b, c);
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
        };
        Object.defineProperty(GridSortIndicator.prototype, "r", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != a) {
                    this.as("CurrentOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        GridSortIndicator.prototype.aw = function (a, b, c) {
            switch (a) {
                case "PixelScalingRatio":
                    this.p = this.w;
                    break;
                case "ActualPixelScalingRatio":
                    this.c.u();
                    break;
                case "IconColor":
                    this.c.u();
                    break;
                case "SortIndicatorStyle":
                    switch (this.f) {
                        case 0:
                            this.au(this.b, false);
                            break;
                        case 1:
                        case 2:
                            this.av(this.b, false);
                            break;
                    }
                    break;
                case "SortDirection":
                    switch (this.f) {
                        case 0:
                            this.au(igniteuiReactCore.EnumUtil.getEnumValue(ColumnSortDirection_$type, c), this.l);
                            break;
                        case 1:
                        case 2:
                            this.av(igniteuiReactCore.EnumUtil.getEnumValue(ColumnSortDirection_$type, c), this.l);
                            break;
                    }
                    break;
            }
        };
        GridSortIndicator.prototype.am = function (a, b) {
            switch (this.f) {
                case 0:
                    this.r = this.t + this.h.o * (this.z - this.t);
                    break;
                case 1:
                case 2:
                    this.r = this.t + this.h.o * (this.z - this.t);
                    this.x = this.u + this.h.o * (this.aa - this.u);
                    break;
            }
            this.c.u();
        };
        GridSortIndicator.prototype.al = function (a, b) {
            this.q = this.s + this.g.o * (this.y - this.s);
            this.c.u();
        };
        GridSortIndicator.prototype.au = function (a, b) {
            this.t = this.r;
            this.s = this.q;
            if (this.l || this.g.f() || this.h.f()) {
                this.g.w();
                this.h.w();
            }
            if (a == 0) {
                this.z = 0;
                this.y = 180;
            }
            else {
                this.z = 1;
                if (a == 1) {
                    this.y = 180;
                }
                else {
                    this.y = 0;
                }
            }
            if (b) {
                this.g.v();
                this.h.v();
            }
            else {
                this.q = this.y;
                this.r = this.z;
                this.c.u();
            }
        };
        GridSortIndicator.prototype.av = function (a, b) {
            this.t = this.r;
            this.u = this.x;
            if (this.l || this.h.f()) {
                this.h.w();
            }
            switch (a) {
                case 0:
                    this.z = 0.4;
                    this.aa = 0.4;
                    break;
                case 1:
                    this.z = 1;
                    this.aa = 0.2;
                    break;
                case 2:
                    this.z = 0.2;
                    this.aa = 1;
                    break;
            }
            if (b) {
                this.h.v();
            }
            else {
                this.r = this.z;
                this.x = this.aa;
                this.c.u();
            }
        };
        GridSortIndicator.prototype.v = function () {
            switch (this.f) {
                case 0: return 1;
                case 1: return 0.71;
                case 2: return 1;
            }
            return 1;
        };
        GridSortIndicator.prototype.ax = function (a) {
            this.c.r(a);
        };
        GridSortIndicator.prototype.ay = function (a) {
            this.j.u(a);
            this.i.u(a);
        };
        GridSortIndicator.prototype.ad = function () {
            return this.c.m.getNativeElement();
        };
        GridSortIndicator.prototype.ar = function (a, b) {
            this.c.s(a, b);
        };
        GridSortIndicator.prototype.aq = function () {
            this.c.q();
        };
        GridSortIndicator.prototype.an = function (a, b, c) {
            var d = Math.min(a, b);
            var e = { $type: igniteuiReactCore.Point_$type, x: a / 2, y: b / 2 };
            var f = d * 0.5;
            var g = f / 2;
            var h = f / 2.5;
            var i = g / 2;
            var j = new igniteuiReactCore.PathFigure();
            j._startPoint = { $type: igniteuiReactCore.Point_$type, x: e.x, y: e.y - g };
            var k = new igniteuiReactCore.LineSegment(1);
            k.c = { $type: igniteuiReactCore.Point_$type, x: e.x, y: e.y + g };
            j._segments.add(k);
            var l = new igniteuiReactCore.PathFigure();
            l._startPoint = { $type: igniteuiReactCore.Point_$type, x: e.x - h, y: e.y };
            var m = new igniteuiReactCore.LineSegment(1);
            m.c = { $type: igniteuiReactCore.Point_$type, x: e.x, y: e.y + g };
            var n = new igniteuiReactCore.LineSegment(1);
            n.c = { $type: igniteuiReactCore.Point_$type, x: e.x + h, y: e.y };
            l._segments.add(m);
            l._segments.add(n);
            var o = new igniteuiReactCore.PathGeometry();
            o.c.add(j);
            o.c.add(l);
            var p = new igniteuiReactCore.Path();
            p.ak = o;
            p._stroke = this.c.y();
            p.ac = 1.5;
            p.aj = 2;
            c.add(p);
        };
        GridSortIndicator.prototype.ao = function (a, b, c) {
            var _this = this;
            var d = igniteuiReactCore.Geometry.a("M3.792172, 7.800278 L7.983785, 3.635676 L12.148387, 7.800278L12.148387, 7.800278");
            var e = igniteuiReactCore.Geometry.a("M7.97027972,4.10930186 L7.97027972,13.8116223 L7.97027972,4.10930186 Z");
            var f = igniteuiReactCore.Geometry.a("M11.851613, 16.199722 L16.043224, 20.364325  L20.207829, 16.199722");
            var g = igniteuiReactCore.Geometry.a("M16.043224,10.1883777 L16.043224,19.8906981 L16.043224,10.1883777 Z");
            c.add(((function () {
                var $ret = new igniteuiReactCore.Path();
                $ret.ak = d;
                $ret.aj = 2;
                $ret.stroke = _this.c.y();
                $ret.ac = 2;
                return $ret;
            })()));
            c.add(((function () {
                var $ret = new igniteuiReactCore.Path();
                $ret.ak = e;
                $ret.aj = 2;
                $ret.stroke = _this.c.y();
                $ret.ac = 2;
                return $ret;
            })()));
            c.add(((function () {
                var $ret = new igniteuiReactCore.Path();
                $ret.ak = f;
                $ret.aj = 2;
                $ret.stroke = _this.c.y();
                $ret.ac = 2;
                return $ret;
            })()));
            c.add(((function () {
                var $ret = new igniteuiReactCore.Path();
                $ret.ak = g;
                $ret.aj = 2;
                $ret.stroke = _this.c.y();
                $ret.ac = 2;
                return $ret;
            })()));
        };
        GridSortIndicator.prototype.ap = function (a, b, c) {
            var _this = this;
            var d = { $type: igniteuiReactCore.Point_$type, x: a / 2, y: b / 2 };
            var e = { $type: igniteuiReactCore.Point_$type, x: d.x - 3.5, y: d.y - 1.5 };
            var f = { $type: igniteuiReactCore.Point_$type, x: d.x - 3.5, y: d.y + 1.5 };
            var g = igniteuiReactCore.Geometry.a("M" + e.x.toString() + ", " + e.y.toString() + " l 3.5,-3.5 3.5,3.5");
            var h = igniteuiReactCore.Geometry.a("M" + f.x.toString() + ", " + f.y.toString() + " l 3.5,3.5 3.5,-3.5");
            c.add(((function () {
                var $ret = new igniteuiReactCore.Path();
                $ret.ak = g;
                $ret.aj = 2;
                $ret.stroke = _this.c.y();
                $ret.ac = 2;
                return $ret;
            })()));
            c.add(((function () {
                var $ret = new igniteuiReactCore.Path();
                $ret.ak = h;
                $ret.aj = 2;
                $ret.stroke = _this.c.y();
                $ret.ac = 2;
                return $ret;
            })()));
        };
        GridSortIndicator.prototype.at = function () {
            if (this.renderCompleted != null) {
                this.renderCompleted(this, new SortIndicatorRenderCompletedEventArgs());
            }
        };
        GridSortIndicator.$t = igniteuiReactCore.markType(GridSortIndicator, 'GridSortIndicator', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return GridSortIndicator;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTextHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTextHeaderCell, _super);
        function CanvasTextHeaderCell(a) {
            var _this = _super.call(this, a) || this;
            _this.c3 = null;
            _this.c6 = null;
            _this.c5 = null;
            _this.ce(0);
            _this.cm(1);
            _this.c3 = new GridSortIndicator();
            var b = a.createElement("div");
            b.setRawStyleProperty("display", "inline-block");
            b.setRawStyleProperty("width", "16px");
            b.setRawStyleProperty("height", "16px");
            _this.c6 = b;
            var c = a.getSubRenderer(_this.c6);
            _this.c3.ax(c);
            _this.c3.w = window.devicePixelRatio;
            var d = _this.c3;
            d.renderCompleted = igniteuiReactCore.delegateCombine(d.renderCompleted, function (d, e) { return _this.b3(); });
            _this.c3.ar(16, 16);
            _this.c5 = _this.c3.ad();
            return _this;
        }
        Object.defineProperty(CanvasTextHeaderCell.prototype, "c4", {
            get: function () {
                return this.c3;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTextHeaderCell.prototype.c7 = function (a) {
            this.c4.b = a;
            this.b3();
        };
        CanvasTextHeaderCell.prototype.b5 = function (a) {
            _super.prototype.b5.call(this, a);
            var b = this.bg + 5;
            if (this.d == 2) {
                b = this.be - 21;
            }
            a.m(this.c5, 1, b, this.bh - 8, 16, 16);
        };
        CanvasTextHeaderCell.prototype.get_z = function () {
            return true;
        };
        CanvasTextHeaderCell.$t = igniteuiReactCore.markType(CanvasTextHeaderCell, 'CanvasTextHeaderCell', CanvasGridCellBase.$);
        return CanvasTextHeaderCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTextHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTextHeaderCellPresenter, _super);
        function CanvasTextHeaderCellPresenter(a) {
            var _this = _super.call(this, a) || this;
            _this.e = null;
            return _this;
        }
        Object.defineProperty(CanvasTextHeaderCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTextHeaderCellPresenter.prototype.f = function () {
            if (this.e != null) {
                this.e();
            }
        };
        CanvasTextHeaderCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(TextCellModel.kq)) {
                    b.ip = b.ks;
                    this.d.ck(b.ip);
                }
                if (a.ax(CellModel.f6)) {
                    if (a.bb) {
                        this.d.c4.l = false;
                    }
                    if (this.e == null) {
                        var c_1 = a.o;
                        this.e = function () { return c_1.sk(); };
                    }
                    this.d.c7(a.m);
                    this.d.ci(igniteuiReactCore.runOn(this, this.f));
                    if (a.bb) {
                        this.d.c4.l = true;
                    }
                }
                if (a.ax(CellModel.f7)) {
                    if (a.bb) {
                        this.d.c4.l = false;
                    }
                    this.d.c4.a0 = a.kn;
                    if (a.bb) {
                        this.d.c4.l = true;
                    }
                }
                if (a.aw("SortIndicatorStyle")) {
                    this.d.c4.f = b.kz;
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        };
        CanvasTextHeaderCellPresenter.$t = igniteuiReactCore.markType(CanvasTextHeaderCellPresenter, 'CanvasTextHeaderCellPresenter', CanvasCellPresenterBase.$);
        return CanvasTextHeaderCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasRowSeparatorCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasRowSeparatorCell, _super);
        function CanvasRowSeparatorCell(a) {
            return _super.call(this, a) || this;
        }
        CanvasRowSeparatorCell.$t = igniteuiReactCore.markType(CanvasRowSeparatorCell, 'CanvasRowSeparatorCell', CanvasGridCellBase.$);
        return CanvasRowSeparatorCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasRowSeparatorCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasRowSeparatorCellPresenter, _super);
        function CanvasRowSeparatorCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasRowSeparatorCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasRowSeparatorCellPresenter.$t = igniteuiReactCore.markType(CanvasRowSeparatorCellPresenter, 'CanvasRowSeparatorCellPresenter', CanvasCellPresenterBase.$);
        return CanvasRowSeparatorCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasImageCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasImageCell, _super);
        function CanvasImageCell(a) {
            var _this = _super.call(this, a) || this;
            _this.c3 = 1;
            _this.c4 = 3;
            _this.c8 = null;
            _this.c5 = 1;
            _this.c7 = null;
            _this.c7 = a.createElement("img");
            return _this;
        }
        Object.defineProperty(CanvasImageCell.prototype, "c6", {
            get: function () {
                return this.c5;
            },
            set: function (a) {
                this.c5 = a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasImageCell.prototype.db = function (a, b) {
            this.c9();
            this.c7.setRawStyleProperty("opacity", "0");
            if (a == null || a.length == 0) {
                this.da(this.c7);
                return;
            }
            if (igniteuiReactCore.Base.equalsStatic(a, this.c8)) {
                return;
            }
            this.de(a, b);
        };
        CanvasImageCell.prototype.da = function (a) {
            a.setAttribute("src", "");
        };
        CanvasImageCell.prototype.de = function (a, b) {
            this.c8 = a;
            this.c7.setAttribute("src", a);
        };
        CanvasImageCell.prototype.c9 = function () {
            this.da(this.c7);
            this.c8 = "";
        };
        CanvasImageCell.prototype.dc = function (a) {
            this.y = true;
            this.c3 = a;
        };
        CanvasImageCell.prototype.dd = function (a) {
            this.y = true;
            this.c4 = a;
        };
        CanvasImageCell.prototype.get_aa = function () {
            return true;
        };
        CanvasImageCell.$t = igniteuiReactCore.markType(CanvasImageCell, 'CanvasImageCell', CanvasGridCellBase.$);
        return CanvasImageCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasImageCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasImageCellPresenter, _super);
        function CanvasImageCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasImageCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasImageCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(CellModel.ei) || a.ax(CellModel.ge)) {
                    var c = Math.min(1, Math.max(0, a.cb));
                    var d = a.b1 * (1 - c);
                    this.d.c6 = d;
                }
                if (b.ax(ImageCellModel.ku) || b.ax(ImageCellModel.kv)) {
                    this.e(b.ky, b.kr);
                }
                if (b.ax(ImageCellModel.kw) || b.ax(ImageCellModel.e2) || b.ax(ImageCellModel.gd)) {
                    this.f(b.kt, b.f, b.h);
                }
                if (b.ax(ImageCellModel.f8)) {
                    if (a.t == 1) {
                        this.d.c9();
                    }
                    else if (a.t == 2) {
                        this.e(b.ky, b.kr);
                    }
                }
            }
        };
        CanvasImageCellPresenter.prototype.f = function (a, b, c) {
        };
        CanvasImageCellPresenter.prototype.e = function (a, b) {
            var c = a.toLowerCase();
            if (b == 0) {
                b = 4;
            }
            if (igniteuiReactCore.stringStartsWith(c, "http") || b == 4) {
                this.d.db(a, 4);
            }
            if (igniteuiReactCore.stringStartsWith(c, "asset") || b == 2) {
                var d = a;
                if (igniteuiReactCore.stringStartsWith(c, "asset")) {
                    d = a.substr(8);
                }
                this.d.db(d, 2);
            }
            if (igniteuiReactCore.stringStartsWith(c, "drawable") || b == 1) {
                var e = a;
                if (igniteuiReactCore.stringStartsWith(c, "drawable")) {
                    e = a.substr(11);
                }
                this.d.db(e, 1);
            }
            if (igniteuiReactCore.stringStartsWith(c, "nativeresource") || b == 1) {
                var f = a;
                if (igniteuiReactCore.stringStartsWith(c, "nativeresource")) {
                    f = a.substr(17);
                }
                this.d.db(f, 1);
            }
            if (igniteuiReactCore.stringStartsWith(c, "embeddedresource") || b == 3) {
                var g = a;
                if (igniteuiReactCore.stringStartsWith(c, "embeddedresource")) {
                    g = a.substr(19);
                }
                this.d.db(g, 3);
            }
        };
        CanvasImageCellPresenter.$t = igniteuiReactCore.markType(CanvasImageCellPresenter, 'CanvasImageCellPresenter', CanvasCellPresenterBase.$);
        return CanvasImageCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTemplateCellContainer = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTemplateCellContainer, _super);
        function CanvasTemplateCellContainer(a) {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this.c = null;
            _this._opacity = 0;
            _this.c = a;
            return _this;
        }
        Object.defineProperty(CanvasTemplateCellContainer.prototype, "isCanvasBased", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CanvasTemplateCellContainer.prototype, "opacity", {
            get: function () {
                return this._opacity;
            },
            set: function (a) {
                this._opacity = a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTemplateCellContainer.$t = igniteuiReactCore.markType(CanvasTemplateCellContainer, 'CanvasTemplateCellContainer');
        return CanvasTemplateCellContainer;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTemplateCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTemplateCell, _super);
        function CanvasTemplateCell(a) {
            var _this = _super.call(this, a) || this;
            _this.c3 = null;
            _this.c3 = new CanvasTemplateCellContainer(a);
            return _this;
        }
        Object.defineProperty(CanvasTemplateCell.prototype, "c4", {
            get: function () {
                return this.c3;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTemplateCell.prototype.get_aa = function () {
            return true;
        };
        CanvasTemplateCell.prototype.c5 = function () {
            this.b1();
        };
        CanvasTemplateCell.$t = igniteuiReactCore.markType(CanvasTemplateCell, 'CanvasTemplateCell', CanvasGridCellBase.$);
        return CanvasTemplateCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTemplateCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTemplateCellPresenter, _super);
        function CanvasTemplateCellPresenter(a, b) {
            var _this = _super.call(this, a) || this;
            _this.d = null;
            _this.d = b;
            return _this;
        }
        Object.defineProperty(CanvasTemplateCellPresenter.prototype, "e", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTemplateCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            var c = this.d.actualColumns._inner[a.k.az];
            if (a.ax(CellModel.ei) || a.ax(CellModel.ge)) {
                var d = Math.min(1, Math.max(0, a.cb));
                var e = a.b1 * (1 - d);
                this.e.c4.opacity = e;
            }
            this.e.c5();
            c.jp(a, this.e);
        };
        CanvasTemplateCellPresenter.$t = igniteuiReactCore.markType(CanvasTemplateCellPresenter, 'CanvasTemplateCellPresenter', CanvasCellPresenterBase.$);
        return CanvasTemplateCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTemplateHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTemplateHeaderCell, _super);
        function CanvasTemplateHeaderCell(a) {
            var _this = _super.call(this, a) || this;
            _this.c3 = null;
            _this.c3 = new CanvasTemplateCellContainer(a);
            return _this;
        }
        Object.defineProperty(CanvasTemplateHeaderCell.prototype, "c4", {
            get: function () {
                return this.c3;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTemplateHeaderCell.prototype.get_z = function () {
            return true;
        };
        CanvasTemplateHeaderCell.prototype.c5 = function () {
            this.b1();
        };
        CanvasTemplateHeaderCell.$t = igniteuiReactCore.markType(CanvasTemplateHeaderCell, 'CanvasTemplateHeaderCell', CanvasGridCellBase.$);
        return CanvasTemplateHeaderCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasTemplateHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasTemplateHeaderCellPresenter, _super);
        function CanvasTemplateHeaderCellPresenter(a, b) {
            var _this = _super.call(this, a) || this;
            _this.d = null;
            _this.d = b;
            return _this;
        }
        Object.defineProperty(CanvasTemplateHeaderCellPresenter.prototype, "e", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasTemplateHeaderCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = this.d.actualColumns._inner[a.k.az];
            var c = b.header;
            if (a.ax(CellModel.ei) || a.ax(CellModel.ge)) {
                var d = Math.min(1, Math.max(0, a.cb));
                var e = a.b1 * (1 - d);
            }
            var f = a;
            this.e.c5();
            c.fd(f, this.e);
        };
        CanvasTemplateHeaderCellPresenter.$t = igniteuiReactCore.markType(CanvasTemplateHeaderCellPresenter, 'CanvasTemplateHeaderCellPresenter', CanvasCellPresenterBase.$);
        return CanvasTemplateHeaderCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasSectionHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasSectionHeaderCell, _super);
        function CanvasSectionHeaderCell(a) {
            var _this = _super.call(this, a) || this;
            _this.ce(0);
            _this.cm(1);
            return _this;
        }
        CanvasSectionHeaderCell.prototype.get_aa = function () {
            return true;
        };
        CanvasSectionHeaderCell.$t = igniteuiReactCore.markType(CanvasSectionHeaderCell, 'CanvasSectionHeaderCell', CanvasGridCellBase.$);
        return CanvasSectionHeaderCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasSectionHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasSectionHeaderCellPresenter, _super);
        function CanvasSectionHeaderCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasSectionHeaderCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasSectionHeaderCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(SectionHeaderCellModel.kw) || a.ax(SectionHeaderCellModel.ky)) {
                    if (b.ks == null || (b.ks.length == 0 && b.k6 == null)) {
                        if (b.go == null) {
                            b.ip = "";
                        }
                        else {
                            b.ip = b.go.toString();
                        }
                    }
                    else {
                        if (b.k4 != null && b.kv == 0) {
                            b.ip = b.k6 + "    " + b.k4;
                        }
                        else {
                            b.ip = b.k6;
                        }
                    }
                    this.d.ck(b.ip);
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        };
        CanvasSectionHeaderCellPresenter.$t = igniteuiReactCore.markType(CanvasSectionHeaderCellPresenter, 'CanvasSectionHeaderCellPresenter', CanvasCellPresenterBase.$);
        return CanvasSectionHeaderCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasVerticalSeparatorCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasVerticalSeparatorCell, _super);
        function CanvasVerticalSeparatorCell(a) {
            return _super.call(this, a) || this;
        }
        CanvasVerticalSeparatorCell.$t = igniteuiReactCore.markType(CanvasVerticalSeparatorCell, 'CanvasVerticalSeparatorCell', CanvasGridCellBase.$);
        return CanvasVerticalSeparatorCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasVerticalSeparatorCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasVerticalSeparatorCellPresenter, _super);
        function CanvasVerticalSeparatorCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasVerticalSeparatorCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasVerticalSeparatorCellPresenter.$t = igniteuiReactCore.markType(CanvasVerticalSeparatorCellPresenter, 'CanvasVerticalSeparatorCellPresenter', CanvasCellPresenterBase.$);
        return CanvasVerticalSeparatorCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasSummaryCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasSummaryCell, _super);
        function CanvasSummaryCell(a) {
            var _this = _super.call(this, a) || this;
            _this.db = null;
            _this.dg = new igniteuiReactCore.TextBlock();
            _this.c7 = 0;
            _this.c8 = 0;
            _this.c6 = 0;
            _this.c3 = null;
            _this.da = 0;
            _this.c4 = false;
            _this.c5 = true;
            _this.c9 = 0;
            _this.ce(2);
            return _this;
        }
        CanvasSummaryCell.prototype.cn = function (a) {
            _super.prototype.cn.call(this, a);
            this.bf = igniteuiReactCore.intDivide(a, 2);
            this.c5 = true;
        };
        CanvasSummaryCell.prototype.de = function (a) {
            this.c3 = a;
            this.c4 = true;
            this.y = true;
            this.c5 = true;
        };
        CanvasSummaryCell.prototype.dc = function (a) {
            this.db = a;
            this.dg.ak = this.db;
            this.y = true;
            this.c5 = true;
        };
        CanvasSummaryCell.prototype.dd = function (a) {
            this.y = true;
            this.dg.am = ((function () {
                var $ret = new igniteuiReactCore.Brush();
                $ret.color = a;
                return $ret;
            })());
        };
        CanvasSummaryCell.prototype.df = function (a) {
            if (this.dg.ak == null) {
                return;
            }
            if (a == null) {
                return;
            }
            if (this.c4 || (this.c3 != null && this.c3.g != this.da)) {
                this.c4 = false;
                this.da = this.c3.g;
                a.ac(this.c3);
                this.c6 = igniteuiReactCore.FontUtil.getCurrentFontHeight(this.bl, this.c3);
            }
            var b = this.bj;
            var c = this.a8;
            b -= (this.a5 + this.ba + this.a6 + this.bb);
            c -= (this.a7 + this.bc + this.a4 + this.a9);
            b = Math.max(b, 0);
            c = Math.max(c, 0);
            this.c9 = this.bi(this.dg, this.db, b / 2, a);
            this.c7 = this.ba + this.a5;
            this.c8 = this.bc + this.a7 + ((c / 2) - (this.c6 / 2));
        };
        CanvasSummaryCell.prototype.b5 = function (a) {
            if (this.dg.ak != null) {
                if (this.c5) {
                    this.df(a);
                    this.c5 = false;
                }
                this.dg.n = this.c7;
                this.dg.o = this.c8;
                a.w(this.dg);
            }
            _super.prototype.b5.call(this, a);
        };
        CanvasSummaryCell.prototype.get_aa = function () {
            return false;
        };
        CanvasSummaryCell.$t = igniteuiReactCore.markType(CanvasSummaryCell, 'CanvasSummaryCell', CanvasGridCellBase.$);
        return CanvasSummaryCell;
    }(CanvasGridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CanvasSummaryCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CanvasSummaryCellPresenter, _super);
        function CanvasSummaryCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(CanvasSummaryCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        CanvasSummaryCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.aw("ResolvedSummaryLabel") || a.aw("ResolvedSummaryValue")) {
                    this.d.dc(b.ky);
                    this.d.ck(b.k0);
                }
                if (a.aw("SummaryLabelTextColor")) {
                    var c = CanvasContentCellModelHelper.e(b.k5);
                    this.d.dd(c);
                }
                if (a.aw("FontInfo")) {
                    this.d.de(b.af);
                }
                CanvasContentCellModelHelper.a(this.a.bl, b, this.a);
            }
        };
        CanvasSummaryCellPresenter.$t = igniteuiReactCore.markType(CanvasSummaryCellPresenter, 'CanvasSummaryCellPresenter', CanvasCellPresenterBase.$);
        return CanvasSummaryCellPresenter;
    }(CanvasCellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridExpansionIndicatorView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridExpansionIndicatorView, _super);
        function GridExpansionIndicatorView(a) {
            var _this = _super.call(this) || this;
            _this.k = null;
            _this.f = 1;
            _this.e = 0;
            _this.d = 0;
            _this.c = new igniteuiReactCore.List$1(igniteuiReactCore.Path.$, 0);
            _this.m = null;
            _this.b = null;
            _this.l = null;
            _this.j = 0;
            _this.g = 0;
            _this.i = 0;
            _this.h = 0;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        GridExpansionIndicatorView.prototype.o = function (a) {
            if (a == null) {
                this.m = null;
                this.l = null;
                this.b = null;
                if (this.k != null) {
                    window.removeEventListener("resize", this.k, false);
                    this.k = null;
                }
                return;
            }
            this.f = (igniteuiReactCore.isNaN_(this.a.m) ? this.a.j : this.a.m);
            var b = a;
            this.l = b;
            this.a.c.u(this.l);
            this.l.rootWrapper.addClass("ui-expansion-indicator-container");
            var c = this.f;
            var d = Math.round(b.rootWrapper.width());
            var e = Math.round(b.rootWrapper.height());
            var f = d * c;
            var g = e * c;
            var h = this.l.createElement("canvas");
            h.setStyleProperty("position", "absolute");
            this.l.append(h);
            this.e = igniteuiReactCore.truncate(Math.round(f));
            this.d = igniteuiReactCore.truncate(Math.round(g));
            h.setAttribute("width", f.toString());
            h.setAttribute("height", g.toString());
            h.setStyleProperty("width", d.toString() + "px");
            h.setStyleProperty("height", e.toString() + "px");
            this.j = d;
            this.g = e;
            this.m = h;
            var i = this.l.get2DCanvasContext(this.m);
            this.b = new igniteuiReactCore.RenderingContext(new igniteuiReactCore.CanvasViewRenderer(), i);
            if (igniteuiReactCore.isNaN_(this.a.m)) {
                this.a.j = window.devicePixelRatio;
                this.f = this.a.j;
            }
            this.q();
        };
        GridExpansionIndicatorView.prototype.p = function (a, b) {
            this.j = a;
            this.g = b;
            this.q();
        };
        GridExpansionIndicatorView.prototype.s = function () {
            if (this.a.ae != null) {
                return this.a.ae;
            }
            return ((function () {
                var $ret = new igniteuiReactCore.Brush();
                $ret.color = igniteuiReactCore.Color.u(138, 0, 0, 0);
                return $ret;
            })());
        };
        GridExpansionIndicatorView.prototype.r = function () {
            this.q();
        };
        GridExpansionIndicatorView.prototype.n = function () {
            this.c.clear();
            this.a.x(this.j, this.g, this.c);
        };
        GridExpansionIndicatorView.prototype.q = function () {
            var _this = this;
            if (this.m == null || this.b == null) {
                return;
            }
            if (this.i != this.j || this.h != this.g) {
                this.n();
                this.i = this.j;
                this.h = this.g;
            }
            if (this.c.count > 0) {
                var a_1 = { $type: igniteuiReactCore.Point_$type, x: this.j / 2, y: this.g / 2 };
                var b = new igniteuiReactCore.TransformGroup();
                b.j.add(((function () {
                    var $ret = new igniteuiReactCore.TranslateTransform();
                    $ret.j = -a_1.x;
                    $ret.k = -a_1.y;
                    return $ret;
                })()));
                b.j.add(((function () {
                    var $ret = new igniteuiReactCore.RotateTransform();
                    $ret.j = _this.a.k;
                    return $ret;
                })()));
                b.j.add(((function () {
                    var $ret = new igniteuiReactCore.TranslateTransform();
                    $ret.j = a_1.x;
                    $ret.k = a_1.y;
                    return $ret;
                })()));
                this.c._inner[0].j = b;
            }
            var c = Math.round(this.j * this.f);
            var d = Math.round(this.g * this.f);
            if (this.e != c || this.d != d) {
                this.m.setAttribute("width", c.toString());
                this.m.setAttribute("height", d.toString());
                this.m.setStyleProperty("width", this.j.toString() + "px");
                this.m.setStyleProperty("height", this.g.toString() + "px");
                this.m.setStyleProperty("top", "0px");
                this.m.setStyleProperty("left", "0px");
                this.e = igniteuiReactCore.truncate(Math.round(c));
                this.d = igniteuiReactCore.truncate(Math.round(d));
            }
            if (this.b.d && this.f != 1) {
                this.b.z();
                this.b.aa(this.f, this.f);
            }
            this.b.k(0, 0, this.j, this.g);
            this.b.z();
            for (var e = 0; e < this.c.count; e++) {
                this.b.j(this.c._inner[e].j);
                var f = this.s();
                if (this.a.ae != null) {
                    f = this.a.ae;
                }
                this.c._inner[e]._stroke = f;
                this.b.s(this.c._inner[e]);
            }
            this.b.y();
            if (this.b.d && this.f != 1) {
                this.b.y();
            }
        };
        GridExpansionIndicatorView.$t = igniteuiReactCore.markType(GridExpansionIndicatorView, 'GridExpansionIndicatorView');
        return GridExpansionIndicatorView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridExpansionIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridExpansionIndicator, _super);
        function GridExpansionIndicator() {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.o = null;
            _this.e = false;
            _this.ad = null;
            _this.d = false;
            _this.propertyChanged = null;
            _this.b = null;
            _this.i = NaN;
            _this.h = 1;
            _this.k = 0;
            _this.l = 0;
            _this.n = 0;
            _this.k = 0;
            _this.a = new GridExpansionIndicatorView(_this);
            _this.b = new igniteuiReactCore.DoubleAnimator(0, 1, 400);
            _this.b.b = igniteuiReactCore.EasingFunctions.cubicEase;
            var a = _this.b;
            a.propertyChanged = igniteuiReactCore.delegateCombine(a.propertyChanged, igniteuiReactCore.runOn(_this, _this.w));
            return _this;
        }
        Object.defineProperty(GridExpansionIndicator.prototype, "p", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                this.o = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridExpansionIndicator.prototype, "g", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                if (b != this.e) {
                    this.z("IsExpanded", b, this.e);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridExpansionIndicator.prototype, "ae", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                var b = this.ad;
                this.ad = a;
                if (b != this.ad) {
                    this.z("IconColor", b, this.ad);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridExpansionIndicator.prototype, "f", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                if (b != this.d) {
                    this.z("IsAnimationEnabled", b, this.d);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridExpansionIndicator.prototype, "c", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridExpansionIndicator.prototype, "m", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                this.z("PixelScalingRatio", b, this.i);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridExpansionIndicator.prototype, "j", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                var b = this.h;
                this.h = a;
                this.z("ActualPixelScalingRatio", b, this.h);
            },
            enumerable: true,
            configurable: true
        });
        GridExpansionIndicator.prototype.z = function (a, b, c) {
            this.aa(a, b, c);
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
        };
        GridExpansionIndicator.prototype.aa = function (a, b, c) {
            switch (a) {
                case "PixelScalingRatio":
                    this.j = this.m;
                    break;
                case "ActualPixelScalingRatio":
                    this.a.r();
                    break;
                case "IconColor":
                    this.a.r();
                    break;
                case "IsExpanded":
                    if (this.f || this.b.f()) {
                        this.b.w();
                    }
                    this.l = this.k;
                    this.n = this.g ? 90 : 0;
                    if (this.f) {
                        this.b.v();
                    }
                    else {
                        this.k = this.n;
                        this.a.r();
                    }
                    break;
            }
        };
        GridExpansionIndicator.prototype.w = function (a, b) {
            this.k = this.l + this.b.o * (this.n - this.l);
            this.a.r();
        };
        GridExpansionIndicator.prototype.x = function (a, b, c) {
            var _this = this;
            var d = igniteuiReactCore.Geometry.a("M 10.18 6.343 l 5.64 5.675 -5.64 5.639");
            c.add(((function () {
                var $ret = new igniteuiReactCore.Path();
                $ret.ak = d;
                $ret.aj = 2;
                $ret.stroke = _this.a.s();
                $ret.ac = 2;
                return $ret;
            })()));
        };
        GridExpansionIndicator.prototype.ab = function (a) {
            this.a.o(a);
        };
        GridExpansionIndicator.prototype.ac = function (a) {
            this.c.u(a);
        };
        GridExpansionIndicator.prototype.q = function () {
            return this.a.m.getNativeElement();
        };
        GridExpansionIndicator.prototype.y = function (a, b) {
            this.a.p(a, b);
        };
        GridExpansionIndicator.$t = igniteuiReactCore.markType(GridExpansionIndicator, 'GridExpansionIndicator', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return GridExpansionIndicator;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PlaceholderView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PlaceholderView, _super);
        function PlaceholderView(a) {
            var _this = _super.call(this) || this;
            _this.f = null;
            _this.k = new igniteuiReactCore.Color();
            _this.h = 1;
            _this.a = true;
            _this.c = 0;
            _this.b = 0;
            _this.g = null;
            _this.f = a;
            _this.g = _this.f.createElement("div");
            _this.g.setRawStyleProperty("position", "absolute");
            _this.g.setRawStyleProperty("pointer-events", "none");
            return _this;
        }
        Object.defineProperty(PlaceholderView.prototype, "l", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                this.k = a;
                this.j();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PlaceholderView.prototype, "i", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                this.a = true;
                this.h = a;
                this.j();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PlaceholderView.prototype, "e", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                this.c = a;
                this.j();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(PlaceholderView.prototype, "d", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                this.b = a;
                this.j();
            },
            enumerable: true,
            configurable: true
        });
        PlaceholderView.prototype.j = function () {
            var a = this.e;
            var b = this.d;
            var c = igniteuiReactCore.Color.u(igniteuiReactCore.truncate((this.k.l * this.h)), this.k.o, this.k.n, this.k.m);
            this.g.setRawStyleProperty("background-color", c.colorString);
            this.g.setRawStyleProperty("width", a + "px");
            this.g.setRawStyleProperty("height", b + "px");
        };
        PlaceholderView.$t = igniteuiReactCore.markType(PlaceholderView, 'PlaceholderView');
        return PlaceholderView;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridCellBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridCellBase, _super);
        function GridCellBase(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.c = null;
            _this.v = null;
            _this.x = null;
            _this.y = null;
            _this.g = null;
            _this.ak = 0;
            _this.ah = 24;
            _this.aj = 0;
            _this.ai = 0;
            _this.an = 0;
            _this.k = false;
            _this.l = false;
            _this.i = false;
            _this.ap = 0;
            _this.ar = 0;
            _this.aq = 0;
            _this.ao = 0;
            _this.ac = 0;
            _this.ae = 0;
            _this.ad = 0;
            _this.ab = 0;
            _this.b6 = null;
            _this.al = 0;
            _this.at = 0;
            _this.am = 0;
            _this.h = null;
            _this.e = 0;
            _this.f = 0;
            _this.u = 0;
            _this.t = 0;
            _this.m = false;
            _this.az = 0;
            _this.a0 = 0;
            _this.aa = 0;
            _this.af = 0;
            _this.j = false;
            _this.v = a;
            _this.x = _this.v.createElement("div");
            _this.x.setAttribute("tabindex", "-1");
            _this.x.setRawStyleProperty("position", "absolute");
            _this.x.setRawStyleProperty("overflow", "hidden");
            _this.x.setRawStyleProperty("box-sizing", "border-box");
            _this.x.setRawStyleProperty("outline", "none");
            var b = (window.navigator.msPointerEnabled && MSGesture !== undefined);
            var c = (window.PointerEvent || window.navigator.pointerEnabled);
            var d = (window.TouchEvent);
            if ((b || c)) {
                _this.x.listen("pointerdown", igniteuiReactCore.runOn(_this, _this.bh));
                _this.x.listen("pointerup", igniteuiReactCore.runOn(_this, _this.bl));
                _this.x.listen("pointermove", igniteuiReactCore.runOn(_this, _this.bk));
                _this.x.listen("pointerleave", igniteuiReactCore.runOn(_this, _this.bj));
                _this.x.listen("pointerenter", igniteuiReactCore.runOn(_this, _this.bi));
            }
            else {
                _this.x.listen("mousedown", igniteuiReactCore.runOn(_this, _this.a7));
                _this.x.listen("mouseup", igniteuiReactCore.runOn(_this, _this.bb));
                _this.x.listen("mousemove", igniteuiReactCore.runOn(_this, _this.ba));
                _this.x.listen("mouseleave", igniteuiReactCore.runOn(_this, _this.a9));
                _this.x.listen("touchstart", igniteuiReactCore.runOn(_this, _this.by));
                _this.x.listen("touchend", igniteuiReactCore.runOn(_this, _this.b0));
                _this.x.listen("touchmove", igniteuiReactCore.runOn(_this, _this.bz));
            }
            return _this;
        }
        Object.defineProperty(GridCellBase.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "d", {
            get: function () {
                return this.c;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "w", {
            get: function () {
                return this.v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "z", {
            get: function () {
                return this.x;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "aw", {
            get: function () {
                return this.ak;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "au", {
            get: function () {
                return this.ai;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "av", {
            get: function () {
                return this.aj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "ax", {
            get: function () {
                return this.an;
            },
            set: function (a) {
                var b = this.an;
                this.an = a;
                if (b != this.an) {
                    this.bg("Indent", b, this.an);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "o", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                this.k = a;
                if (b != this.k) {
                    this.bg("IsCollapsable", b, this.k);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridCellBase.prototype, "p", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                if (b != this.l) {
                    this.bg("IsExpanded", b, this.l);
                }
            },
            enumerable: true,
            configurable: true
        });
        GridCellBase.prototype.a6 = function () {
            this.aj = 10;
            this.ai = this.ax * 24;
            this.ak = 24;
            if (this.y == null) {
                this.y = this.v.createElement("div");
                this.y.setRawStyleProperty("display", "inline-block");
                this.y.setRawStyleProperty("vertical-align", "middle");
                this.y.setRawStyleProperty("width", this.ak + "px");
                this.y.setRawStyleProperty("height", this.ak + "px");
                this.y.setRawStyleProperty("cursor", "pointer");
                this.y.setRawStyleProperty("position", "absolute");
                this.y.setRawXPosition(this.ap + this.ai);
                this.y.setRawYPosition(igniteuiReactCore.intDivide(this.al, 2) - igniteuiReactCore.intDivide(this.ah, 2));
            }
            if (this.g == null) {
                var a = this.v.getSubRenderer(this.y);
                this.g = new GridExpansionIndicator();
                this.g.ab(a);
                this.g.y(24, 24);
            }
            if (this.y.parent() == null) {
                this.x.append(this.y);
            }
        };
        GridCellBase.prototype.bm = function () {
            this.ak = 0;
            this.aj = 0;
            if (this.y != null) {
                if (this.y.parent() != null) {
                    this.y.remove();
                }
            }
        };
        Object.defineProperty(GridCellBase.prototype, "n", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                this.i = a;
            },
            enumerable: true,
            configurable: true
        });
        GridCellBase.prototype.get_r = function () {
            return false;
        };
        Object.defineProperty(GridCellBase.prototype, "r", {
            get: function () {
                return this.get_r();
            },
            enumerable: true,
            configurable: true
        });
        GridCellBase.prototype.bu = function (a, b, c, d) {
            this.ap = a;
            this.ar = b;
            this.aq = c;
            this.ao = d;
            this.x.setRawStyleProperty("padding-left", a.toString() + "px");
            this.x.setRawStyleProperty("padding-top", b.toString() + "px");
            this.x.setRawStyleProperty("padding-right", c.toString() + "px");
            this.x.setRawStyleProperty("padding-bottom", d.toString() + "px");
        };
        GridCellBase.prototype.bp = function (a, b, c, d, e) {
            this.ac = b;
            this.ae = c;
            this.ad = d;
            this.ab = e;
            this.b6 = a;
            if (a == null) {
                this.x.setRawStyleProperty("border", "");
            }
            else {
                this.x.setRawStyleProperty("border-color", a._fill);
                this.x.setRawStyleProperty("border-left-width", b.toString() + "px");
                this.x.setRawStyleProperty("border-top-width", c.toString() + "px");
                this.x.setRawStyleProperty("border-right-width", d.toString() + "px");
                this.x.setRawStyleProperty("border-bottom-width", e.toString() + "px");
                this.x.setRawStyleProperty("border-style", "solid");
            }
        };
        GridCellBase.prototype.get_q = function () {
            return false;
        };
        Object.defineProperty(GridCellBase.prototype, "q", {
            get: function () {
                return this.get_q();
            },
            enumerable: true,
            configurable: true
        });
        GridCellBase.prototype.bq = function (a, b) {
            if (this.al != a || this.am != b) {
                var c = this.al;
                this.al = a;
                this.am = b;
                var d = Math.max(0, this.al - this.am);
                this.x.setRawStyleProperty("height", a.toString() + "px");
                this.x.setRawStyleProperty("line-height", d.toString() + "px");
                if (this.y != null) {
                    this.y.setRawYPosition(igniteuiReactCore.intDivide(this.al, 2) - igniteuiReactCore.intDivide(this.ak, 2));
                }
                this.bx(this.at, this.al, this.at, c);
            }
        };
        GridCellBase.prototype.bw = function (a, b) {
            if (this.at != a) {
                var c = this.at;
                this.at = a;
                this.x.setRawStyleProperty("width", a.toString() + "px");
                this.bx(this.at, this.al, c, this.al);
            }
        };
        GridCellBase.prototype.bx = function (a, b, c, d) {
        };
        GridCellBase.prototype.a4 = function () {
            if (!this.r) {
                return;
            }
            this.i = true;
            this.h = new PlaceholderView(this.v);
            this.e = 0;
            this.f = 1;
            this.h.l = igniteuiReactCore.Color.u(120, 120, 120, 120);
            this.h.i = 0;
            this.x.append(this.h.g);
        };
        GridCellBase.prototype.bo = function (a) {
            this.x.setRawStyleProperty("background-color", a.colorString);
        };
        GridCellBase.prototype.bt = function (a) {
            this.x.setRawStyleProperty("opacity", a.toString());
        };
        GridCellBase.prototype.b5 = function (a) {
            if (!this.r) {
                return;
            }
            this.h.i = (a * 0.20000000298023224);
        };
        GridCellBase.prototype.b3 = function (a, b, c, d) {
            if (this.h != null) {
                var e = this.u;
                var f = this.t;
                if (this.f == 1) {
                    b = igniteuiReactCore.truncate((b + (d / 2) - (f / 2)));
                }
                else if (this.f == 2) {
                    b = igniteuiReactCore.truncate((b + (d) - (f)));
                }
                if (this.e == 1) {
                    a = igniteuiReactCore.truncate((a + (c / 2) - (e / 2)));
                }
                else if (this.e == 2) {
                    a = igniteuiReactCore.truncate((a + (c) - (e)));
                }
                this.h.g.setRawXPosition(a);
                this.h.g.setRawYPosition(b);
            }
        };
        GridCellBase.prototype.be = function (a, b, c) {
        };
        GridCellBase.prototype.b4 = function (a) {
            if (!this.r) {
                return;
            }
            var b = igniteuiReactCore.DeviceUtils.f(12);
            if (a.af != null && !igniteuiReactCore.isNaN_(a.af.d)) {
                b = a.af.d;
            }
            if (this.t != b) {
                this.t = b;
                this.h.d = (b);
            }
            var c = a.gf * 0.2;
            var d = a.e0 * 0.6;
            if (this.u >= c && this.u <= d && !this.m) {
                return;
            }
            this.m = false;
            var e = (GridCellBase.ay.nextDouble() * (d - c) + c);
            if (this.u != e) {
                this.u = e;
                this.h.e = e;
            }
            this.b3(this.ap + this.ai + this.ak, this.ar, this.at - (this.ap + this.aq), this.al - (this.ar + this.ao));
        };
        GridCellBase.prototype.b1 = function (a, b) {
            if (!this.r) {
                return;
            }
            this.e = a;
            this.f = b;
            this.m = true;
        };
        GridCellBase.prototype.b2 = function (a) {
            if (!this.r) {
                return;
            }
            if (a != null) {
                this.h.l = a.color;
            }
        };
        GridCellBase.prototype.bn = function (a) {
            this.a = a;
        };
        GridCellBase.prototype.bs = function (a) {
            this.c = a;
        };
        GridCellBase.prototype.br = function (a, b) {
            switch (b) {
                case 0:
                    this.z.setRawStyleProperty("text-align", "left");
                    break;
                case 1:
                    this.z.setRawStyleProperty("text-align", "center");
                    break;
                case 2:
                    this.z.setRawStyleProperty("text-align", "right");
                    break;
                case 3:
                    this.z.setRawStyleProperty("text-align", "center");
                    break;
            }
        };
        GridCellBase.prototype.bv = function (a, b) {
            switch (b) {
                case 0:
                    a.setRawStyleProperty("vertical-align", "top");
                    break;
                case 1:
                    a.setRawStyleProperty("vertical-align", "center");
                    break;
                case 2:
                    a.setRawStyleProperty("vertical-align", "bottom");
                    break;
                case 3:
                    a.setRawStyleProperty("vertical-align", "center");
                    break;
            }
        };
        GridCellBase.prototype.s = function (a) {
            return a.isClickActionDesired;
        };
        GridCellBase.prototype.a7 = function (a) {
            this.onContactStarted(a, false);
        };
        GridCellBase.prototype.bb = function (a) {
            this.onContactCompleted(a, false);
        };
        GridCellBase.prototype.ba = function (a) {
            this.onContactMoved(a, false);
        };
        GridCellBase.prototype.a9 = function (a) {
            this.bd(a, false);
        };
        GridCellBase.prototype.a8 = function (a) {
            this.bc(a, false);
        };
        GridCellBase.prototype.bh = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a == "touch") {
                this.by(e_);
            }
            else {
                this.a7(e_);
            }
        };
        GridCellBase.prototype.bk = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a == "touch") {
                this.bz(e_);
            }
            else {
                this.ba(e_);
            }
        };
        GridCellBase.prototype.bl = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a == "touch") {
                this.b0(e_);
            }
            else {
                this.bb(e_);
            }
        };
        GridCellBase.prototype.bj = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a != "touch") {
                this.a9(e_);
            }
        };
        GridCellBase.prototype.bi = function (e_) {
            var a = (e_.originalEvent.pointerType);
            if (a != "touch") {
                this.a8(e_);
            }
        };
        GridCellBase.prototype.by = function (a) {
            this.onContactStarted(a, true);
        };
        GridCellBase.prototype.bz = function (a) {
            this.onContactMoved(a, true);
        };
        GridCellBase.prototype.b0 = function (a) {
            this.onContactCompleted(a, true);
        };
        GridCellBase.prototype.onContactStarted = function (e_, a) {
            var b = false;
            if (this.o) {
                var indicator_ = this.g.q();
                b = (e_.originalEvent.srcElement === indicator_ || e_.originalEvent.target === indicator_);
            }
            this.j = false;
            if (b) {
                this.j = true;
            }
            else {
                if (this.a != null && this.s(this.a)) {
                    this.az = e_.pageX;
                    this.a0 = e_.pageY;
                    this.a.mouseDownCell(this.az, this.a0);
                }
            }
        };
        GridCellBase.prototype.onContactMoved = function (a, b) {
            if (this.a != null) {
                var c = a.pageX;
                var d = a.pageY;
                if (this.s(this.a)) {
                    if (this.a.isMouseDown) {
                        if (b) {
                            if (igniteuiReactCore.PointUtil.equals(this.a.mousePosition, null) || Math.abs(c - this.a.mousePosition.x) > GridCellBase.as || Math.abs(d - this.a.mousePosition.y) > GridCellBase.as) {
                                this.a.mouseUpCell(c, d);
                            }
                            else {
                                a.stopPropagation();
                            }
                        }
                        else {
                            if (igniteuiReactCore.PointUtil.equals(this.a.mousePosition, null)) {
                                this.a.mouseUpCell(c, d);
                            }
                            else {
                                if (Math.abs(c - this.a.mousePosition.x) > GridCellBase.ag || Math.abs(d - this.a.mousePosition.y) > GridCellBase.ag) {
                                    this.a.isControlPressed = a.ctrlKey;
                                    this.a.dragStarted();
                                }
                            }
                        }
                    }
                }
                if (this.a.isHoverActionDesired) {
                    this.a.mouseIsOver(c, d);
                }
            }
        };
        GridCellBase.prototype.onContactCompleted = function (e_, a) {
            var _this = this;
            this.af++;
            window.setTimeout(function () { return _this.af = 0; }, 250);
            var b = false;
            if (this.o) {
                var indicator_ = this.g.q();
                b = (e_.originalEvent.srcElement === indicator_ || e_.originalEvent.target === indicator_);
            }
            if (this.j && b) {
                this.b.clickExpansionIndicator();
            }
            else {
                if (this.a != null && this.s(this.a)) {
                    var c = e_.pageX;
                    var d = e_.pageY;
                    if (igniteuiReactCore.PointUtil.equals(this.a.mousePosition, null) || Math.abs(c - this.a.mousePosition.x) > GridCellBase.as || Math.abs(d - this.a.mousePosition.y) > GridCellBase.as || this.a.isDrag) {
                        this.a.mouseUpCell(c, d);
                    }
                    if (this.a.isCellDown()) {
                        this.a.isControlPressed = e_.ctrlKey;
                        this.a.isShiftPressed = e_.shiftKey;
                        if (this.af > 1) {
                            this.a.doubleClicked();
                        }
                        else {
                            this.a.clickCell(e_.which == 1);
                        }
                        this.a.mouseUpCell(e_.pageX, e_.pageY);
                    }
                }
            }
            this.j = false;
        };
        GridCellBase.prototype.bd = function (a, b) {
            if (this.a != null && this.a.isLeaveActionDesired) {
                var c = a.pageX;
                var d = a.pageY;
                this.a.mouseLeaveCell(c, d);
            }
        };
        GridCellBase.prototype.bc = function (a, b) {
            if (this.a != null && this.a.isEnterActionDesired) {
                var c = a.pageX;
                var d = a.pageY;
                this.a.mouseEnterCell(c, d);
            }
        };
        GridCellBase.prototype.onDoubleClick = function (a) {
        };
        GridCellBase.prototype.bg = function (a, b, c) {
            switch (a) {
                case "Indent":
                    this.ai = this.ax * 24;
                    this.aj = this.ax > 0 ? 10 : 0;
                    if (this.y != null) {
                        this.y.setRawXPosition(this.ap + this.ai);
                        this.y.setRawYPosition(igniteuiReactCore.intDivide(this.al, 2) - igniteuiReactCore.intDivide(this.ah, 2));
                    }
                    break;
                case "IsCollapsable":
                    if (this.o) {
                        this.a6();
                    }
                    else {
                        this.bm();
                    }
                    break;
                case "IsExpanded":
                    if (this.g != null) {
                        this.g.g = this.p;
                    }
                    break;
            }
        };
        GridCellBase.prototype.bf = function () {
        };
        GridCellBase.prototype.a5 = function () {
            this.x.focus(true);
        };
        GridCellBase.$t = igniteuiReactCore.markType(GridCellBase, 'GridCellBase', igniteuiReactCore.Base.$, [INativeCell_$type]);
        GridCellBase.ay = new igniteuiReactCore.Random(0);
        GridCellBase.as = 10;
        GridCellBase.ag = 3;
        return GridCellBase;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var EditorCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditorCell, _super);
        function EditorCell(a) {
            var _this = _super.call(this, a) || this;
            _this.c1 = null;
            _this.c0 = null;
            _this.ct = null;
            _this.cu = null;
            _this.cf = null;
            _this.ce = null;
            _this.cv = null;
            _this.cd = null;
            _this.c5 = null;
            _this.cw = null;
            _this.cx = null;
            _this.cy = null;
            _this.cz = null;
            _this.cg = null;
            _this.cj = false;
            _this.b9 = 0;
            _this.c7 = null;
            _this.ch = null;
            _this.cb = 0;
            _this.c6 = null;
            _this.da = null;
            _this.b7 = null;
            _this.cl = true;
            _this.cn = false;
            _this.co = false;
            _this.cm = false;
            _this.ck = false;
            _this.cs = false;
            _this.z.setAttribute("tabindex", "-1");
            _this.z.setStyleProperty("outline", "none");
            _this.z.setStyleProperty("display", "flex");
            _this.z.setStyleProperty("align-items", "center");
            _this.z.listen("keydown", igniteuiReactCore.runOn(_this, _this.d1));
            _this.z.listen("focusout", igniteuiReactCore.runOn(_this, _this.d0));
            _this.z.listen("focusin", igniteuiReactCore.runOn(_this, _this.dz));
            return _this;
        }
        Object.defineProperty(EditorCell.prototype, "ca", {
            get: function () {
                return this.b9;
            },
            set: function (a) {
                var b = this.b9;
                this.b9 = a;
                if (b != this.b9) {
                    this.bg("DataType", igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, this.b9));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCell.prototype, "c9", {
            get: function () {
                return this.c7;
            },
            set: function (a) {
                var b = this.c7;
                this.c7 = a;
                if (b != this.c7) {
                    this.bg("Value", b, this.c7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCell.prototype, "ci", {
            get: function () {
                return this.ch;
            },
            set: function (a) {
                var b = this.ch;
                this.ch = a;
                if (b != this.ch) {
                    this.bg("FontInfo", b, this.ch);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCell.prototype, "cc", {
            get: function () {
                return this.cb;
            },
            set: function (a) {
                var b = this.cb;
                this.cb = a;
                if (b != this.cb) {
                    this.bg("EditorType", igniteuiReactCore.enumGetBox(EditorType_$type, b), igniteuiReactCore.enumGetBox(EditorType_$type, this.cb));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCell.prototype, "c8", {
            get: function () {
                return this.c6;
            },
            set: function (a) {
                var b = this.c6;
                this.c6 = a;
                if (b != this.c6) {
                    this.bg("ComboItemsSource", b, this.c6);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCell.prototype, "dc", {
            get: function () {
                return this.da;
            },
            set: function (a) {
                var b = this.da;
                this.da = a;
                if (b != this.da) {
                    this.bg("ComboTextField", b, this.da);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCell.prototype, "b8", {
            get: function () {
                return this.b7;
            },
            set: function (a) {
                var b = this.b7;
                this.b7 = a;
                if (b != this.b7) {
                    this.bg("ComboValueField", b, this.b7);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EditorCell.prototype, "cr", {
            get: function () {
                return this.cl;
            },
            set: function (a) {
                var b = this.cl;
                this.cl = a;
                if (b != this.cl) {
                    this.bg("IsHidden", b, this.cl);
                }
            },
            enumerable: true,
            configurable: true
        });
        EditorCell.prototype.c4 = function (a) {
            if (this.cx == null) {
                this.cx = this.w.createElement("div");
                var b = this.w.getSubRenderer(this.cx);
                this.cg = new igniteuiReactLayouts.Popup();
                this.cg.provideRenderer(b);
                this.cz = this.w.createElement("div");
                this.cz.setStyleProperty("background-color", "rgba(0,0,0,0.7)");
                this.cz.setStyleProperty("color", "#fff");
                this.cz.setStyleProperty("padding", "5px");
                this.cz.setStyleProperty("outline", "none");
                this.cz.setAttribute("tabindex", "-1");
                this.cy = this.w.createElement("div");
                this.cy.setStyleProperty("white-space", "pre");
                if (this.ci != null) {
                    this.cy.setStyleProperty("font", this.ci.fontString);
                }
                this.cz.append(this.cy);
                this.cg.appendPopupContent(this.cz);
            }
            var c = null;
            switch (a) {
                case 0:
                    c = this.c3();
                    break;
                case 1:
                    c = this.c2();
                    break;
            }
            return c;
        };
        EditorCell.prototype.c3 = function () {
            if (this.c1 != null) {
                this.du();
                this.dw();
                return this.c1;
            }
            this.c1 = this.w.createElement("div");
            this.c1.setRawStyleProperty("display", "flex");
            this.c1.setRawStyleProperty("width", "100%");
            this.c1.setRawStyleProperty("margin-top", "-10px");
            this.c1.setRawStyleProperty("height", "38px");
            this.ct = this.w.getSubRenderer(this.c1);
            this.cf = new igniteuiReactInputs.InputGroup();
            this.cf.provideContainer(this.ct);
            this.cf.k = 0;
            this.cf.d = this.d.getTheme();
            this.cf.h = 3;
            this.c0 = this.w.createElement("div");
            this.c0.setRawStyleProperty("width", "100%");
            this.cu = this.w.getSubRenderer(this.c0);
            this.ce = new igniteuiReactInputs.Input();
            this.ce.provideContainer(this.cu);
            this.ce.b0 = "text";
            var a = this.ce;
            a.changing = igniteuiReactCore.delegateCombine(a.changing, igniteuiReactCore.runOn(this, this.dy));
            this.ck = true;
            this.cf.appendContentChild(this.c0);
            this.cf.inputs.add(this.ce);
            return this.c1;
        };
        EditorCell.prototype.c2 = function () {
            var _this = this;
            if (this.cv != null) {
                this.dr();
                this.du();
                this.dw();
                return this.cv;
            }
            this.cv = this.w.createElement("div");
            this.cv.setRawStyleProperty("margin-top", "-10px");
            this.cv.setRawStyleProperty("height", "38px");
            this.cv.setRawStyleProperty("width", "100%");
            this.w.getPortal(this.cv, "MultiColumnComboBox", function (a) {
                _this.cd = a.componentRef;
                _this.cd.height = "100%";
                _this.cd.density = 3;
                _this.cd.baseTheme = _this.d.getTheme();
                _this.cd.labelVisible = false;
                _this.cd.columnHeadersVisible = false;
                _this.cd.rowSeparatorsVisible = false;
                _this.dr();
                _this.d3();
                _this.du();
                _this.dw();
                _this.c5 = _this.cd.i;
                _this.c5.valueChanged = igniteuiReactCore.delegateCombine(_this.c5.valueChanged, igniteuiReactCore.runOn(_this, _this.onComboValueChanged));
                _this.c5.textChanged = igniteuiReactCore.delegateCombine(_this.c5.textChanged, igniteuiReactCore.runOn(_this, _this.onComboTextChanged));
                _this.c5.gotFocus = igniteuiReactCore.delegateCombine(_this.c5.gotFocus, igniteuiReactCore.runOn(_this, _this.onComboGotFocus));
                _this.c5.lostFocus = igniteuiReactCore.delegateCombine(_this.c5.lostFocus, igniteuiReactCore.runOn(_this, _this.onComboLostFocus));
                _this.ck = true;
            }, false);
            return this.cv;
        };
        EditorCell.prototype.dx = function (a, b) {
            if (b.g != b.d || b.h != b.e) {
                if (this.cd != null) {
                    this.cd.closeUp();
                }
                this.dm();
            }
        };
        EditorCell.prototype.dk = function () {
            if (!this.ck) {
                if (this.c5 != null) {
                    this.c5.valueChanged = igniteuiReactCore.delegateCombine(this.c5.valueChanged, igniteuiReactCore.runOn(this, this.onComboValueChanged));
                    this.c5.textChanged = igniteuiReactCore.delegateCombine(this.c5.textChanged, igniteuiReactCore.runOn(this, this.onComboTextChanged));
                    this.c5.gotFocus = igniteuiReactCore.delegateCombine(this.c5.gotFocus, igniteuiReactCore.runOn(this, this.onComboGotFocus));
                    this.c5.lostFocus = igniteuiReactCore.delegateCombine(this.c5.lostFocus, igniteuiReactCore.runOn(this, this.onComboLostFocus));
                }
                if (this.ce != null) {
                    var a = this.ce;
                    a.changing = igniteuiReactCore.delegateCombine(a.changing, igniteuiReactCore.runOn(this, this.dy));
                }
                this.ck = true;
            }
        };
        EditorCell.prototype.dl = function () {
            if (this.ck) {
                if (this.c5 != null) {
                    this.c5.valueChanged = igniteuiReactCore.delegateRemove(this.c5.valueChanged, igniteuiReactCore.runOn(this, this.onComboValueChanged));
                    this.c5.textChanged = igniteuiReactCore.delegateRemove(this.c5.textChanged, igniteuiReactCore.runOn(this, this.onComboTextChanged));
                    this.c5.gotFocus = igniteuiReactCore.delegateRemove(this.c5.gotFocus, igniteuiReactCore.runOn(this, this.onComboGotFocus));
                    this.c5.lostFocus = igniteuiReactCore.delegateRemove(this.c5.lostFocus, igniteuiReactCore.runOn(this, this.onComboLostFocus));
                }
                if (this.ce != null) {
                    var a = this.ce;
                    a.changing = igniteuiReactCore.delegateRemove(a.changing, igniteuiReactCore.runOn(this, this.dy));
                }
                this.ck = false;
            }
        };
        EditorCell.prototype.d2 = function (a) {
            var _this = this;
            this.cn = false;
            this.co = false;
            this.cm = false;
            if (!a) {
                this.co = true;
                if (this.cc == 0) {
                    if (this.ce != null) {
                        this.ce.ck();
                        if (this.ce.b0 != "date") {
                            window.setTimeout(function () { return _this.ce.db(); }, 0);
                        }
                    }
                }
                else if (this.cc == 1) {
                    if (this.cd != null) {
                        if (this.cd.value == null && this.cd.text != "") {
                            this.cd.text = "";
                        }
                        this.cd.focus();
                        this.cd.select();
                    }
                }
            }
        };
        EditorCell.prototype.d3 = function () {
            if (this.cc == 0) {
                if (this.ce != null) {
                    if (this.c9 != null) {
                        if (this.ca == 8) {
                            var a = this.c9;
                            var b = igniteuiReactCore.dateGetMonth(a) < 10 ? "0" + igniteuiReactCore.dateGetMonth(a) : igniteuiReactCore.dateGetMonth(a).toString();
                            var c = a.getDate() < 10 ? "0" + a.getDate() : a.getDate().toString();
                            this.ce.cf = null;
                            this.ce.cf = a.getFullYear() + "-" + b + "-" + c;
                        }
                        else {
                            this.ce.cf = null;
                            this.ce.cf = this.c9.toString();
                        }
                        this.b.updateCellEditValue(this.ce.cf);
                    }
                    else {
                        this.ce.cf = null;
                    }
                }
            }
            else if (this.cc == 1) {
                if (this.cd != null) {
                    if (this.c9 == null) {
                        this.cd.text = " ";
                    }
                    this.cd.value = this.c9;
                }
            }
        };
        EditorCell.prototype.du = function () {
            if (this.cc == 0) {
                switch (this.ca) {
                    case 10:
                    case 6:
                    case 5:
                    case 1:
                    case 3:
                    case 4:
                    case 7:
                        this.ce.b0 = "number";
                        break;
                    case 8:
                        this.ce.b0 = "date";
                        break;
                    default:
                        this.ce.b0 = "text";
                        break;
                }
            }
        };
        EditorCell.prototype.dv = function () {
            this.cj = true;
            this.z.removeChildren();
            this.cw = this.c4(this.cc);
            this.z.append(this.cw);
            this.cj = false;
        };
        EditorCell.prototype.dr = function () {
            if (this.cd != null) {
                this.dl();
                this.cd.dataSource = this.c8;
                this.cd.textField = this.dc;
                this.cd.valueField = this.b8;
                if (this.dc != null) {
                    this.cd.fields = [this.dc];
                }
                else if (this.b8 != null && this.b8.length > 0) {
                    this.cd.fields = [this.b8[0]];
                }
                else {
                    var a = igniteuiReactCore.typeCast(igniteuiReactCore.IDataSource_$type, this.c8);
                    if (a != null && a.actualSchema != null) {
                        this.cd.fields = [a.actualSchema.propertyNames[0]];
                    }
                    else {
                        var b = (Array.isArray(this.c8));
                        if (b) {
                            var c = (Object.keys(this.c8[0]));
                            if (c.length > 0) {
                                this.cd.fields = [c[0]];
                            }
                        }
                    }
                }
                this.dk();
            }
        };
        EditorCell.prototype.dw = function () {
            if (this.ci != null) {
                if (this.cc == 0) {
                    if (this.ce != null) {
                        this.ce.ac = this.ci;
                    }
                }
                else if (this.cc == 1) {
                    if (this.cd != null) {
                        this.cd.textStyle = this.ci.fontString;
                    }
                }
                this.cy.setStyleProperty("font", this.ci.fontString);
            }
        };
        EditorCell.prototype.dn = function () {
            if (this.cr) {
                this.dl();
            }
            else {
                this.dk();
            }
        };
        EditorCell.prototype.d4 = function (a, b, c, d, e) {
            if (!igniteuiReactCore.stringIsNullOrWhiteSpace(a)) {
                this.cy.setRawText(a);
                this.d5();
            }
        };
        EditorCell.prototype.d5 = function () {
            var rect_ = this.z.getNativeElement().getBoundingClientRect();
            var a = new igniteuiReactCore.Rect(4);
            a.left = (rect_.left + window.pageXOffset);
            a.top = (rect_.top + window.pageYOffset);
            a.right = (rect_.right + window.pageXOffset);
            a.bottom = (rect_.bottom + window.pageYOffset);
            this.cg.showRelativeToExclusionRect(a, 1, 0);
        };
        EditorCell.prototype.dm = function () {
            if (this.cg.t) {
                this.cg.an();
            }
        };
        EditorCell.prototype.bf = function () {
            if (this.cw == null) {
                this.dv();
                this.d.setViewportChangedHandler(igniteuiReactCore.runOn(this, this.dx));
            }
        };
        EditorCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            switch (a) {
                case "EditorType":
                    this.dv();
                    break;
                case "ComboItemsSource":
                case "ComboTextField":
                case "ComboValueField":
                    this.dr();
                    break;
                case "DataType":
                    this.du();
                    break;
                case "Value":
                    this.d3();
                    break;
                case "FontInfo":
                    this.dw();
                    break;
                case "IsHidden":
                    this.dn();
                    break;
            }
        };
        EditorCell.prototype.onComboValueChanged = function (a, b) {
            this.d6();
        };
        EditorCell.prototype.onComboTextChanged = function (a, b) {
            this.d6();
        };
        EditorCell.prototype.d6 = function () {
            if (this.co && this.cc == 1) {
                if (this.cd.value != null) {
                    this.b.updateCellEditValue(this.cd.value);
                }
                else if (this.cd.value == null && igniteuiReactCore.stringIsNullOrWhiteSpace(this.cd.text)) {
                    this.b.updateCellEditValue(null);
                }
                else {
                    this.b.updateCellEditValue(this.c9);
                }
            }
        };
        EditorCell.prototype.dy = function (a, b) {
            var c = b.value;
            if (this.ca == 8) {
                var d = b.value.split('-');
                var e = parseInt(d[0]);
                var f = parseInt(d[1]);
                var g = parseInt(d[2]);
                c = igniteuiReactCore.dateFromValues(e, f, g, 0, 0, 0, 0);
            }
            this.b.updateCellEditValue(c);
        };
        EditorCell.prototype.d1 = function (a) {
            switch (igniteuiReactCore.BaseDOMEventProxy.cu(a)) {
                case 14:
                case 16:
                case 15:
                case 17:
                    a.stopPropagation();
                    break;
            }
        };
        EditorCell.prototype.cq = function (a) {
            if (a != null && this.cg != null && this.cg.t) {
                var b = this.cz.getNativeElement();
                return b.contains(a);
            }
            return false;
        };
        EditorCell.prototype.cp = function (a) {
            if (a != null) {
                var b = this.z.getNativeElement();
                return b.contains(a);
            }
            return false;
        };
        EditorCell.prototype.d0 = function (a) {
            if (!this.cj) {
                var b = (a.originalEvent.relatedTarget);
                if (this.cm && !this.cp(b) && !this.cq(b)) {
                    this.b.editorCellLostFocus();
                    this.dm();
                }
            }
        };
        EditorCell.prototype.dz = function (a) {
            if (this.cn && !this.cg.t) {
                this.d5();
            }
        };
        EditorCell.prototype.onComboLostFocus = function (a) {
            this.cm = true;
        };
        EditorCell.prototype.onComboGotFocus = function (a) {
            this.cm = false;
        };
        EditorCell.prototype.onContactStarted = function (a, b) {
            a.stopPropagation();
        };
        EditorCell.prototype.onContactCompleted = function (a, b) {
            a.stopPropagation();
        };
        EditorCell.prototype.onDoubleClick = function (a) {
            a.stopPropagation();
        };
        EditorCell.$t = igniteuiReactCore.markType(EditorCell, 'EditorCell', GridCellBase.$);
        return EditorCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CellPresenterBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CellPresenterBase, _super);
        function CellPresenterBase(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        CellPresenterBase.prototype.modelUpdated = function (a) {
            this.b(a);
        };
        CellPresenterBase.prototype.b = function (a) {
            this.a.bn(a.c);
            this.a.bs(a.d);
            this.a.bf();
            if (a.ax(CellModel.d2) || a.ax(CellModel.d6) || a.ax(CellModel.d4) || a.ax(CellModel.d0)) {
                this.a.bu(a.d1, a.d5, a.d3, a.dz);
            }
            if (a.aq) {
                this.a.bp(a.kc, a.dp, a.du, a.ds, a.dm);
                if (a.ax(CellModel.dk)) {
                    if (!a.a1 && a.o.g1 && a.a0 && a.by == 1) {
                        this.a.a5();
                    }
                }
            }
            if (a.ba) {
                this.a.bq(a.e0, (a.d5 + a.dz + a.du + a.dm));
                this.a.bw(a.gf, (a.d1 + a.d3 + a.dp + a.ds));
            }
            if (a.as) {
                if (a.a4 && !this.a.n) {
                    this.a.a4();
                }
                if (a.ax(CellModel.dl)) {
                    this.a.bo(a.kb.color);
                }
                if (a.ax(CellModel.dy)) {
                    this.a.bt(a.b0);
                }
                if (a.aw("IsCollapsable")) {
                    this.a.o = a.ar;
                    this.a.ax = a.e5;
                    this.a.p = a.az;
                    this.a.bw(a.gf, (a.d1 + a.d3 + a.dp + a.ds));
                }
                if (a.aw("Indent")) {
                    this.a.ax = a.e5;
                    this.a.bw(a.gf, (a.d1 + a.d3 + a.dp + a.ds));
                }
                if (a.aw("IsExpanded")) {
                    this.a.p = a.az;
                }
            }
            if (a.ba && a.a4) {
                this.a.b4(a);
            }
        };
        CellPresenterBase.prototype.c = function (a, b, c) {
            if (c == 0) {
                return a.color;
            }
            if (c == 1) {
                return b.color;
            }
            var d = igniteuiReactCore.BrushUtil.k(a, c, b, 0);
            return d.color;
        };
        Object.defineProperty(CellPresenterBase.prototype, "nativeCell", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CellPresenterBase.prototype, "isCanvasBased", {
            get: function () {
                return false;
            },
            enumerable: true,
            configurable: true
        });
        CellPresenterBase.$t = igniteuiReactCore.markType(CellPresenterBase, 'CellPresenterBase', igniteuiReactCore.Base.$, [ICellPresenter_$type]);
        return CellPresenterBase;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var EditorCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditorCellPresenter, _super);
        function EditorCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(EditorCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        EditorCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (b.as) {
                if (b.ax(EditorCellModel.k5) || b.ax(EditorCellModel.k3) || b.ax(EditorCellModel.k4) || b.ax(EditorCellModel.k6)) {
                    this.d.cc = b.kx;
                    this.d.c8 = b.ld;
                    this.d.dc = b.lj;
                    this.d.b8 = b.kr;
                }
                if (b.ax(EditorCellModel.k2)) {
                    this.d.ca = b.kt;
                }
                if (b.ax(EditorCellModel.k8)) {
                    this.d.c9 = b.le;
                }
                if (b.ax(EditorCellModel.k7)) {
                    this.d.d2(b.kv == null);
                }
                if (b.ax(CellModel.ey)) {
                    this.d.ci = b.af;
                }
                if (b.ax(EditorCellModel.k9)) {
                    if (igniteuiReactCore.stringIsNullOrWhiteSpace(b.lp)) {
                        this.d.cn = false;
                        this.d.dm();
                    }
                    else {
                        this.d.cn = true;
                        this.d.d4(b.lp, b.cc, b.cd, b.gf, b.e0);
                    }
                }
                if (b.ax(EditorCellModel.la)) {
                    this.d.cr = b.kz;
                }
            }
        };
        EditorCellPresenter.$t = igniteuiReactCore.markType(EditorCellPresenter, 'EditorCellPresenter', CellPresenterBase.$);
        return EditorCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var EditorRowCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditorRowCell, _super);
        function EditorRowCell(a) {
            var _this = _super.call(this, a) || this;
            _this.z.setRawStyleProperty("pointer-events", "none");
            return _this;
        }
        EditorRowCell.$t = igniteuiReactCore.markType(EditorRowCell, 'EditorRowCell', GridCellBase.$);
        return EditorRowCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var EditorRowCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(EditorRowCellPresenter, _super);
        function EditorRowCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(EditorRowCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        EditorRowCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
        };
        EditorRowCellPresenter.$t = igniteuiReactCore.markType(EditorRowCellPresenter, 'EditorRowCellPresenter', CellPresenterBase.$);
        return EditorRowCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TextCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextCell, _super);
        function TextCell(a) {
            var _this = _super.call(this, a) || this;
            _this.b7 = null;
            _this.ca = -1;
            _this.b9 = -1;
            _this.b7 = a.createElement("span");
            _this.z.setRawStyleProperty("text-align", "left");
            _this.b7.setRawStyleProperty("display", "inline-block");
            _this.b7.setRawStyleProperty("line-height", "normal");
            _this.b7.setRawStyleProperty("vertical-align", "middle");
            _this.b7.setRawStyleProperty("overflow", "hidden");
            _this.b7.setRawStyleProperty("white-space", "nowrap");
            _this.b7.setRawStyleProperty("text-overflow", "ellipsis");
            _this.z.setRawStyleProperty("vertical-align", "middle");
            _this.z.append(_this.b7);
            return _this;
        }
        Object.defineProperty(TextCell.prototype, "b8", {
            get: function () {
                return this.b7;
            },
            enumerable: true,
            configurable: true
        });
        TextCell.prototype.bw = function (a, b) {
            _super.prototype.bw.call(this, a, b);
            var c = Math.max(0, a - b - (this.au + this.aw + this.av));
            if (this.ca != c) {
                this.ca = c;
                this.b7.setRawStyleProperty("max-width", c.toString() + "px");
            }
        };
        TextCell.prototype.bq = function (a, b) {
            _super.prototype.bq.call(this, a, b);
            var c = Math.max(0, a - b);
            if (this.b9 != c) {
                this.b9 = c;
                this.b7.setRawStyleProperty("max-height", c.toString() + "px");
            }
        };
        TextCell.prototype.get_r = function () {
            return true;
        };
        TextCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            if (a == "Indent" || a == "IsCollapsable") {
                this.b7.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
            }
        };
        TextCell.$t = igniteuiReactCore.markType(TextCell, 'TextCell', GridCellBase.$);
        return TextCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ContentCellModelHelper = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ContentCellModelHelper, _super);
        function ContentCellModelHelper() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ContentCellModelHelper.g = function (a) {
            if (a == null) {
                return ContentCellModelHelper.f;
            }
            return a.color;
        };
        ContentCellModelHelper.c = function (a, b, c) {
            switch (c) {
                case 0:
                    a.setRawStyleProperty("text-align", "left");
                    break;
                case 1:
                    a.setRawStyleProperty("text-align", "center");
                    break;
                case 2:
                    a.setRawStyleProperty("text-align", "right");
                    break;
                case 3:
                    a.setRawStyleProperty("text-align", "center");
                    break;
            }
        };
        ContentCellModelHelper.e = function (a, b, c) {
            switch (c) {
                case 0:
                    b.setRawStyleProperty("vertical-align", "top");
                    break;
                case 1:
                    b.setRawStyleProperty("vertical-align", "center");
                    break;
                case 2:
                    b.setRawStyleProperty("vertical-align", "bottom");
                    break;
                case 3:
                    b.setRawStyleProperty("vertical-align", "center");
                    break;
            }
        };
        ContentCellModelHelper.a = function (a, b, c, d, e) {
            if (b.as) {
                if (b.ax(CellModel.ei) || b.ax(CellModel.dw) || b.ax(CellModel.ge) || b.aw("IsRowPinned") || b.aw("IsRowSticky") || b.aw("PinnedRowOpacity")) {
                    var f = Math.min(1, Math.max(0, b.cb));
                    var g = b.bz * (1 - f);
                    d.setRawStyleProperty("opacity", g.toString());
                    if (b.a4) {
                        e.b5(b.bz * f);
                    }
                }
                if (b.ax(CellModel.d7)) {
                    ContentCellModelHelper.d(d, b.kd);
                    if (b.a4) {
                        e.b2(b.kd);
                    }
                }
                if (b.ax(CellModel.fi)) {
                    switch (b.z) {
                        case 0:
                            d.setRawStyleProperty("white-space", "nowrap");
                            d.setRawStyleProperty("text-overflow", "ellipsis");
                            break;
                        case 3:
                        case 2:
                            d.setRawStyleProperty("white-space", "pre-wrap");
                            d.setRawStyleProperty("text-overflow", "ellipsis");
                            break;
                        case 1:
                            d.setRawStyleProperty("white-space", "nowrap");
                            d.setRawStyleProperty("text-overflow", "clip");
                            break;
                    }
                }
                if (b.ax(CellModel.e2) || b.ax(CellModel.gd)) {
                    var h = b.f;
                    var i = b.h;
                    ContentCellModelHelper.c(c, d, h);
                    e.be(c, d, h);
                    ContentCellModelHelper.e(c, d, i);
                    if (b.a4) {
                        e.b1(h, i);
                    }
                }
                if (b.aw("ActualFontInfo")) {
                    ContentCellModelHelper.b(a, d, b.ad);
                }
                if (b.aw("IsEdited") || b.aw("IsDeleted")) {
                    if (b.ay || b.av) {
                        if (b.av) {
                            d.setRawStyleProperty("text-decoration", "line-through");
                        }
                        else {
                            d.setRawStyleProperty("text-decoration", "none");
                        }
                    }
                    else {
                        d.setRawStyleProperty("text-decoration", "none");
                    }
                }
            }
        };
        ContentCellModelHelper.b = function (a, b, c) {
            if (c == null) {
                c = igniteuiReactCore.FontUtil.getDefaultFont(a);
            }
            b.setRawStyleProperty("font", c.fontString);
        };
        ContentCellModelHelper.d = function (a, b) {
            var c = ContentCellModelHelper.g(b);
            a.setRawStyleProperty("color", c.colorString);
        };
        ContentCellModelHelper.$t = igniteuiReactCore.markType(ContentCellModelHelper, 'ContentCellModelHelper');
        ContentCellModelHelper.f = igniteuiReactCore.Color.u(0, 0, 0, 0);
        return ContentCellModelHelper;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TextCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextCellPresenter, _super);
        function TextCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(TextCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        TextCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(TextCellModel.kq) || a.ax(CellModel.fl)) {
                    if (b.ks != null) {
                        b.ip = b.ks;
                    }
                    else {
                        if (b.go == null) {
                            b.ip = "";
                        }
                        else {
                            b.ip = b.go.toString();
                        }
                    }
                    this.d.b8.setRawText(b.ip);
                }
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.b8, this.a);
            }
        };
        TextCellPresenter.$t = igniteuiReactCore.markType(TextCellPresenter, 'TextCellPresenter', CellPresenterBase.$);
        return TextCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NumericCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(NumericCell, _super);
        function NumericCell(a) {
            var _this = _super.call(this, a) || this;
            _this.br(_this.b8, 2);
            _this.bv(_this.b8, 1);
            return _this;
        }
        NumericCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            if (a == "Indent" || a == "IsCollapsable") {
                this.b8.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
            }
        };
        NumericCell.$t = igniteuiReactCore.markType(NumericCell, 'NumericCell', TextCell.$);
        return NumericCell;
    }(TextCell));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var NumericCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(NumericCellPresenter, _super);
        function NumericCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(NumericCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        NumericCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(NumericCellModel.lf) || b.kw()) {
                    b.ip = this.e(b);
                    this.d.b8.setRawText(b.ip);
                }
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.b8, this.a);
            }
        };
        NumericCellPresenter.prototype.e = function (a) {
            if (a.ll != null) {
                var val_ = a.kz;
                var override_ = a.ll;
                return (override_.format(val_));
            }
            return NumericCellFormatter.b(a);
        };
        NumericCellPresenter.$t = igniteuiReactCore.markType(NumericCellPresenter, 'NumericCellPresenter', CellPresenterBase.$);
        return NumericCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DateTimeCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DateTimeCell, _super);
        function DateTimeCell(a) {
            return _super.call(this, a) || this;
        }
        DateTimeCell.$t = igniteuiReactCore.markType(DateTimeCell, 'DateTimeCell', TextCell.$);
        return DateTimeCell;
    }(TextCell));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DateTimeCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DateTimeCellPresenter, _super);
        function DateTimeCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(DateTimeCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        DateTimeCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(DateTimeCellModel.k2) || a.ax(DateTimeCellModel.k3) || a.ax(DateTimeCellModel.k1) || a.ax(DateTimeCellModel.fl)) {
                    this.e(b);
                    this.d.b8.setRawText(b.ip);
                }
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.b8, this.a);
            }
        };
        DateTimeCellPresenter.prototype.e = function (a) {
            a.ip = a.le(a.k0);
            if (a.ip == igniteuiReactCore.stringEmpty() && a.go != null) {
                a.ip = a.go.toString();
            }
        };
        DateTimeCellPresenter.$t = igniteuiReactCore.markType(DateTimeCellPresenter, 'DateTimeCellPresenter', CellPresenterBase.$);
        return DateTimeCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterDialogOpeningEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogOpeningEventArgs, _super);
        function GridFilterDialogOpeningEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        GridFilterDialogOpeningEventArgs.$t = igniteuiReactCore.markType(GridFilterDialogOpeningEventArgs, 'GridFilterDialogOpeningEventArgs');
        return GridFilterDialogOpeningEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterDialogFilterChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogFilterChangeEventArgs, _super);
        function GridFilterDialogFilterChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            return _this;
        }
        GridFilterDialogFilterChangeEventArgs.$t = igniteuiReactCore.markType(GridFilterDialogFilterChangeEventArgs, 'GridFilterDialogFilterChangeEventArgs');
        return GridFilterDialogFilterChangeEventArgs;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnFilterCondition = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnFilterCondition, _super);
        function ColumnFilterCondition() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ColumnFilterCondition.prototype.b = function () {
            return false;
        };
        ColumnFilterCondition.prototype.a = function (a, b) {
            return null;
        };
        ColumnFilterCondition.$t = igniteuiReactCore.markType(ColumnFilterCondition, 'ColumnFilterCondition');
        return ColumnFilterCondition;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnFilterConditionCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnFilterConditionCollection, _super);
        function ColumnFilterConditionCollection() {
            return _super.call(this, ColumnFilterCondition.$, 0) || this;
        }
        ColumnFilterConditionCollection.$t = igniteuiReactCore.markType(ColumnFilterConditionCollection, 'ColumnFilterConditionCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(ColumnFilterCondition.$));
        return ColumnFilterConditionCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnFilterConditionGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnFilterConditionGroup, _super);
        function ColumnFilterConditionGroup() {
            var _this = _super.call(this) || this;
            _this.f = false;
            _this.e = null;
            _this.e = new ColumnFilterConditionCollection();
            _this.f = false;
            return _this;
        }
        ColumnFilterConditionGroup.prototype.b = function () {
            return true;
        };
        ColumnFilterConditionGroup.prototype.equals = function (a) {
            if (a == null) {
                return false;
            }
            if (!(igniteuiReactCore.typeCast(ColumnFilterConditionGroup.$, a) !== null)) {
                return false;
            }
            var b = a;
            if (b.g != this.g) {
                return false;
            }
            for (var c = 0; c < this.g; c++) {
                if (!igniteuiReactCore.Base.equalsStatic(this.item(c), b.item(c))) {
                    return false;
                }
            }
            return true;
        };
        Object.defineProperty(ColumnFilterConditionGroup.prototype, "g", {
            get: function () {
                return this.e.count;
            },
            enumerable: true,
            configurable: true
        });
        ColumnFilterConditionGroup.prototype.h = function (a) {
            this.e.add(a);
        };
        ColumnFilterConditionGroup.prototype.j = function (a) {
            this.e.remove(a);
        };
        ColumnFilterConditionGroup.prototype.k = function (a) {
            this.e.removeAt(a);
        };
        ColumnFilterConditionGroup.prototype.item = function (a, b) {
            if (arguments.length === 2) {
                this.e._inner[a] = b;
                return b;
            }
            else {
                return this.e._inner[a];
            }
        };
        ColumnFilterConditionGroup.prototype.i = function () {
            this.e.clear();
        };
        ColumnFilterConditionGroup.prototype.c = function () {
            var a = new Array(this.e.count);
            for (var b = 0; b < this.e.count; b++) {
                a[b] = this.e._inner[b];
            }
            return a;
        };
        ColumnFilterConditionGroup.prototype.a = function (a, b) {
            if (this.e.count == 0) {
                return null;
            }
            var c = this.e._inner[this.e.count - 1].a(a, b);
            for (var d = this.e.count - 2; d >= 0; d--) {
                if (this.f) {
                    c = igniteuiReactCore.FilterFactory.instance.or(this.e._inner[d].a(a, b), c);
                }
                else {
                    c = igniteuiReactCore.FilterFactory.instance.and(this.e._inner[d].a(a, b), c);
                }
            }
            return c;
        };
        ColumnFilterConditionGroup.$t = igniteuiReactCore.markType(ColumnFilterConditionGroup, 'ColumnFilterConditionGroup', ColumnFilterCondition.$);
        return ColumnFilterConditionGroup;
    }(ColumnFilterCondition));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterDialogViewModelRow = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogViewModelRow, _super);
        function GridFilterDialogViewModelRow() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = null;
            _this.b = null;
            _this.k = null;
            _this.a = null;
            _this.g = null;
            _this.h = null;
            _this.propertyChanged = null;
            return _this;
        }
        Object.defineProperty(GridFilterDialogViewModelRow.prototype, "f", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.m("OperatorTypes");
                }
            },
            enumerable: true,
            configurable: true
        });
        GridFilterDialogViewModelRow.prototype.m = function (a) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
        };
        Object.defineProperty(GridFilterDialogViewModelRow.prototype, "e", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (b != this.b) {
                    this.m("Operators");
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialogViewModelRow.prototype, "l", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                this.k = a;
                if (b != this.k) {
                    this.m("CurrentOperator");
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialogViewModelRow.prototype, "d", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.m("OperandNumber");
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialogViewModelRow.prototype, "i", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (b != this.g) {
                    this.m("Operand1");
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialogViewModelRow.prototype, "j", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                var b = this.h;
                this.h = a;
                if (b != this.h) {
                    this.m("Operand2");
                }
            },
            enumerable: true,
            configurable: true
        });
        GridFilterDialogViewModelRow.$t = igniteuiReactCore.markType(GridFilterDialogViewModelRow, 'GridFilterDialogViewModelRow', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return GridFilterDialogViewModelRow;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterDialogViewModelGrouping = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogViewModelGrouping, _super);
        function GridFilterDialogViewModelGrouping() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = 0;
            _this.b = 0;
            _this.a = false;
            return _this;
        }
        GridFilterDialogViewModelGrouping.$t = igniteuiReactCore.markType(GridFilterDialogViewModelGrouping, 'GridFilterDialogViewModelGrouping');
        return GridFilterDialogViewModelGrouping;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterDialogViewModelGroupingLevel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogViewModelGroupingLevel, _super);
        function GridFilterDialogViewModelGroupingLevel() {
            return _super.call(this, GridFilterDialogViewModelGrouping.$, 0) || this;
        }
        GridFilterDialogViewModelGroupingLevel.$t = igniteuiReactCore.markType(GridFilterDialogViewModelGroupingLevel, 'GridFilterDialogViewModelGroupingLevel', igniteuiReactCore.ObservableCollection$1.$.specialize(GridFilterDialogViewModelGrouping.$));
        return GridFilterDialogViewModelGroupingLevel;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Identifies the operator type of a column comparison condition.
     */
    var ColumnComparisonConditionOperatorType = /*@__PURE__*/ (function (ColumnComparisonConditionOperatorType) {
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["Contains"] = 0] = "Contains";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["DoesNotContain"] = 1] = "DoesNotContain";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["DoesNotEndWith"] = 2] = "DoesNotEndWith";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["DoesNotStartWith"] = 3] = "DoesNotStartWith";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["EndsWith"] = 4] = "EndsWith";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["Equals"] = 5] = "Equals";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["GreaterThan"] = 6] = "GreaterThan";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["GreaterThanOrEqualTo"] = 7] = "GreaterThanOrEqualTo";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["LessThan"] = 8] = "LessThan";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["LessThanOrEqualTo"] = 9] = "LessThanOrEqualTo";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["NotEquals"] = 10] = "NotEquals";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["StartsWith"] = 11] = "StartsWith";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["IsNotNull"] = 12] = "IsNotNull";
        ColumnComparisonConditionOperatorType[ColumnComparisonConditionOperatorType["IsNull"] = 13] = "IsNull";
        return ColumnComparisonConditionOperatorType;
    })({});
    /**
     * @hidden
     */
    var ColumnComparisonConditionOperatorType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ColumnComparisonConditionOperatorType', 'Contains,0|DoesNotContain,1|DoesNotEndWith,2|DoesNotStartWith,3|EndsWith,4|Equals,5|GreaterThan,6|GreaterThanOrEqualTo,7|LessThan,8|LessThanOrEqualTo,9|NotEquals,10|StartsWith,11|IsNotNull,12|IsNull,13');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnComparisonFilterCondition = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnComparisonFilterCondition, _super);
        function ColumnComparisonFilterCondition() {
            var _this = _super.call(this) || this;
            _this.e = 0;
            _this.j = null;
            _this.g = false;
            _this.g = true;
            return _this;
        }
        ColumnComparisonFilterCondition.c = function (a) {
            var b = new igniteuiReactCore.List$1(ColumnComparisonConditionOperatorType_$type, 0);
            switch (a) {
                case 11: break;
                case 2: break;
                case 10:
                case 6:
                case 5:
                case 1:
                case 3:
                case 8:
                    b.add(6);
                    b.add(7);
                    b.add(8);
                    b.add(9);
                    break;
                case 0:
                    b.add(11);
                    b.add(3);
                    b.add(4);
                    b.add(2);
                    b.add(0);
                    b.add(1);
                    b.add(6);
                    b.add(7);
                    b.add(8);
                    b.add(9);
                    break;
            }
            b.add(5);
            b.add(10);
            b.add(12);
            b.add(13);
            return b.toArray();
        };
        ColumnComparisonFilterCondition.prototype.equals = function (a) {
            if (a == null) {
                return false;
            }
            if (!(igniteuiReactCore.typeCast(ColumnComparisonFilterCondition.$, a) !== null)) {
                return false;
            }
            var b = a;
            if (b.e != this.e) {
                return false;
            }
            if (!igniteuiReactCore.Base.equalsStatic(b.j, this.j)) {
                return false;
            }
            if (!igniteuiReactCore.Base.equalsStatic(b.g, this.g)) {
                return false;
            }
            return true;
        };
        ColumnComparisonFilterCondition.prototype.a = function (a, b) {
            switch (this.e) {
                case 0:
                    {
                        if (this.j == null) {
                            return null;
                        }
                        var c = igniteuiReactCore.FilterFactory.instance.property(a);
                        var d = igniteuiReactCore.FilterFactory.instance.literal(this.j);
                        c = ColumnComparisonFilterCondition.f(b, c);
                        if (null == c) {
                            return null;
                        }
                        if (!this.g) {
                            c = c.toLower();
                            d = d.toLower();
                        }
                        return c.contains(d);
                    }
                case 1:
                    {
                        if (this.j == null) {
                            return null;
                        }
                        var e = igniteuiReactCore.FilterFactory.instance.property(a);
                        var f = igniteuiReactCore.FilterFactory.instance.literal(this.j);
                        e = ColumnComparisonFilterCondition.f(b, e);
                        if (null == e) {
                            return null;
                        }
                        if (!this.g) {
                            e = e.toLower();
                            f = f.toLower();
                        }
                        return e.contains(f).not();
                    }
                case 2:
                    {
                        if (this.j == null) {
                            return null;
                        }
                        var g = igniteuiReactCore.FilterFactory.instance.property(a);
                        var h = igniteuiReactCore.FilterFactory.instance.literal(this.j);
                        g = ColumnComparisonFilterCondition.f(b, g);
                        if (null == g) {
                            return null;
                        }
                        if (!this.g) {
                            g = g.toLower();
                            h = h.toLower();
                        }
                        return g.endsWith(h).not();
                    }
                case 3:
                    {
                        if (this.j == null) {
                            return null;
                        }
                        var i = igniteuiReactCore.FilterFactory.instance.property(a);
                        var j = igniteuiReactCore.FilterFactory.instance.literal(this.j);
                        i = ColumnComparisonFilterCondition.f(b, i);
                        if (null == i) {
                            return null;
                        }
                        if (!this.g) {
                            i = i.toLower();
                            j = j.toLower();
                        }
                        return i.startsWith(j).not();
                    }
                case 4:
                    {
                        if (this.j == null) {
                            return null;
                        }
                        var k = igniteuiReactCore.FilterFactory.instance.property(a);
                        var l = igniteuiReactCore.FilterFactory.instance.literal(this.j);
                        k = ColumnComparisonFilterCondition.f(b, k);
                        if (null == k) {
                            return null;
                        }
                        if (!this.g) {
                            k = k.toLower();
                            l = l.toLower();
                        }
                        return k.endsWith(l);
                    }
                case 5:
                    {
                        var m = igniteuiReactCore.FilterFactory.instance.property(a);
                        var n = igniteuiReactCore.FilterFactory.instance.literal(this.i(this.j, b));
                        if (b == 0 && !this.g) {
                            m = m.toLower();
                            n = n.toLower();
                        }
                        return m.isEqualTo(n);
                    }
                case 6:
                    {
                        var o = igniteuiReactCore.FilterFactory.instance.property(a);
                        var p = igniteuiReactCore.FilterFactory.instance.literal(this.i(this.j, b));
                        if (b == 0 && !this.g) {
                            o = o.toLower();
                            p = p.toLower();
                        }
                        return o.isGreaterThan(p);
                    }
                case 7:
                    {
                        var q = igniteuiReactCore.FilterFactory.instance.property(a);
                        var r = igniteuiReactCore.FilterFactory.instance.literal(this.i(this.j, b));
                        if (b == 0 && !this.g) {
                            q = q.toLower();
                            r = r.toLower();
                        }
                        return q.isGreaterThanOrEqualTo(r);
                    }
                case 8:
                    {
                        var s = igniteuiReactCore.FilterFactory.instance.property(a);
                        var t = igniteuiReactCore.FilterFactory.instance.literal(this.i(this.j, b));
                        if (b == 0 && !this.g) {
                            s = s.toLower();
                            t = t.toLower();
                        }
                        return s.isLessThan(t);
                    }
                case 9:
                    {
                        var u = igniteuiReactCore.FilterFactory.instance.property(a);
                        var v = igniteuiReactCore.FilterFactory.instance.literal(this.i(this.j, b));
                        if (b == 0 && !this.g) {
                            u = u.toLower();
                            v = v.toLower();
                        }
                        return u.isLessThanOrEqualTo(v);
                    }
                case 10:
                    {
                        var w = igniteuiReactCore.FilterFactory.instance.property(a);
                        var x = igniteuiReactCore.FilterFactory.instance.literal(this.i(this.j, b));
                        if (b == 0 && !this.g) {
                            w = w.toLower();
                            x = x.toLower();
                        }
                        return w.isNotEqualTo(x);
                    }
                case 11:
                    {
                        if (this.j == null) {
                            return null;
                        }
                        var y = igniteuiReactCore.FilterFactory.instance.property(a);
                        var z = igniteuiReactCore.FilterFactory.instance.literal(this.j);
                        y = ColumnComparisonFilterCondition.f(b, y);
                        if (null == y) {
                            return null;
                        }
                        if (!this.g) {
                            y = y.toLower();
                            z = z.toLower();
                        }
                        return y.startsWith(z);
                    }
                case 12:
                    {
                        var aa = igniteuiReactCore.FilterFactory.instance.property(a);
                        var ab = igniteuiReactCore.FilterFactory.instance.literal(null);
                        return aa.isNotEqualTo(ab);
                    }
                case 13:
                    {
                        var ac = igniteuiReactCore.FilterFactory.instance.property(a);
                        var ad = igniteuiReactCore.FilterFactory.instance.literal(null);
                        return ac.isEqualTo(ad);
                    }
            }
            return null;
        };
        ColumnComparisonFilterCondition.f = function (a, b) {
            switch (a) {
                case 9:
                case 8:
                case 2:
                case 11: return null;
                case 10:
                case 6:
                case 5:
                case 1:
                case 3:
                case 4:
                case 7: return b.cast(igniteuiReactCore.enumGetBox(igniteuiReactCore.DataSourceSchemaPropertyType_$type, 0));
                case 0: break;
                default: break;
            }
            return b;
        };
        ColumnComparisonFilterCondition.h = function (a) {
            if (a == 12 || a == 13) {
                return 0;
            }
            else {
                return 1;
            }
        };
        ColumnComparisonFilterCondition.d = function (a) {
            var b = new Array(a.length);
            for (var c = 0; c < a.length; c++) {
                b[c] = ColumnComparisonFilterCondition.h(a[c]);
            }
            return b;
        };
        ColumnComparisonFilterCondition.prototype.i = function (value_, a) {
            if (value_ == null) {
                return null;
            }
            switch (a) {
                case 2: return (!!value_);
                case 10: return (+value_);
                case 8:
                    if (igniteuiReactCore.typeCast(igniteuiReactCore.Date_$type, value_) !== null) {
                        return value_;
                    }
                    if (typeof value_ === 'string') {
                        var b_1;
                        if (((function () { var c = igniteuiReactCore.dateTryParse(value_, b_1); b_1 = c.p1; return c.ret; })())) {
                            return b_1;
                        }
                        else {
                            return null;
                        }
                    }
                    return (new Date(+value_));
                case 6: return (+value_);
                case 5: return (+value_);
                case 1: return (+value_);
                case 3: return (+value_);
                case 11: return value_;
                case 4: return (+value_);
                case 7: return (+value_);
                case 0: return value_ != null ? value_.toString() : value_;
            }
            return value_;
        };
        ColumnComparisonFilterCondition.$t = igniteuiReactCore.markType(ColumnComparisonFilterCondition, 'ColumnComparisonFilterCondition', ColumnFilterCondition.$);
        return ColumnComparisonFilterCondition;
    }(ColumnFilterCondition));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FilterDialogRenderCompletedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(FilterDialogRenderCompletedEventArgs, _super);
        function FilterDialogRenderCompletedEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FilterDialogRenderCompletedEventArgs.$t = igniteuiReactCore.markType(FilterDialogRenderCompletedEventArgs, 'FilterDialogRenderCompletedEventArgs', igniteuiReactCore.EventArgs.$);
        return FilterDialogRenderCompletedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterDialogViewModelGroupingLevelCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogViewModelGroupingLevelCollection, _super);
        function GridFilterDialogViewModelGroupingLevelCollection() {
            return _super.call(this, GridFilterDialogViewModelGroupingLevel.$, 0) || this;
        }
        GridFilterDialogViewModelGroupingLevelCollection.$t = igniteuiReactCore.markType(GridFilterDialogViewModelGroupingLevelCollection, 'GridFilterDialogViewModelGroupingLevelCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(GridFilterDialogViewModelGroupingLevel.$));
        return GridFilterDialogViewModelGroupingLevelCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridFilterDialogView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogView, _super);
        function GridFilterDialogView(a) {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.q = null;
            _this.ad = new igniteuiReactCore.Path();
            _this.j = 0;
            _this.i = 0;
            _this.o = null;
            _this.d = null;
            _this.m = null;
            _this.n = null;
            _this.p = null;
            _this.g = 0;
            _this.f = 0;
            _this.h = 1;
            _this.l = 0;
            _this.k = 0;
            _this.e = false;
            _this.c = null;
            _this.b = a;
            return _this;
        }
        GridFilterDialogView.prototype.aa = function () {
            if (this.j != this.l || this.i != this.k) {
                this.v();
                this.j = this.l;
                this.j = this.k;
                this.o.setStyleProperty("width", this.l.toString() + "px");
                this.o.setStyleProperty("height", this.k.toString() + "px");
            }
            var a = Math.round(this.b.af * this.h);
            var b = Math.round(this.b.af * this.h);
            if (this.g != a || this.f != b) {
                this.o.setAttribute("width", a.toString());
                this.o.setAttribute("height", b.toString());
                this.g = igniteuiReactCore.truncate(Math.round(a));
                this.f = igniteuiReactCore.truncate(Math.round(b));
            }
            this.z();
            this.ad._fill = this.b.bp != null ? this.b.bp : GridStyleRepository.az;
            if (this.d.d && this.h != 1) {
                this.d.z();
                this.d.aa(this.h, this.h);
            }
            this.d.k(0, 0, this.l, this.k);
            this.d.s(this.ad);
            if (this.d.d && this.h != 1) {
                this.d.y();
            }
            this.b.bb();
        };
        GridFilterDialogView.prototype.v = function () {
            this.b.a6(this.l, this.k, this.ad);
        };
        GridFilterDialogView.prototype.u = function () {
            if (igniteuiReactCore.KeyFrameAnimationFactory.h == null) {
                igniteuiReactCore.KeyFrameAnimationFactory.h = this.m;
            }
        };
        GridFilterDialogView.prototype.a = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.m.rootWrapper, 0, null, a);
        };
        GridFilterDialogView.prototype.x = function (a, b, c) {
            if (a == null) {
                if (this.o != null) {
                    this.o.destroy();
                }
                this.o = null;
                this.m = null;
                this.n = null;
                this.d = null;
                return;
            }
            this.h = (igniteuiReactCore.isNaN_(this.b.ae) ? this.b.ad : this.b.ae);
            var d = a;
            this.m = d;
            this.n = c;
            this.p = b;
            this.m.rootWrapper.addClass("ig-filter-icon");
            this.m.rootWrapper.setStyleProperty("cursor", "pointer");
            this.q = this.m.rootWrapper;
            var e = this.h;
            var f = Math.round(d.rootWrapper.width());
            var g = Math.round(d.rootWrapper.height());
            var h = this.b.af * e;
            var i = this.b.af * e;
            var j = this.m.createElement("canvas");
            j.setStyleProperty("position", "absolute");
            j.setStyleProperty("left", "0");
            j.setStyleProperty("top", "0");
            this.m.append(j);
            this.g = igniteuiReactCore.truncate(Math.round(h));
            this.f = igniteuiReactCore.truncate(Math.round(i));
            j.setAttribute("width", this.g.toString());
            j.setAttribute("height", this.g.toString());
            j.setStyleProperty("width", f.toString() + "px");
            j.setStyleProperty("height", g.toString() + "px");
            this.z();
            j.listen("mousedown", igniteuiReactCore.runOn(this, this.r));
            j.listen("mouseup", igniteuiReactCore.runOn(this, this.s));
            this.l = f;
            this.k = g;
            this.o = j;
            var k = this.m.get2DCanvasContext(this.o);
            this.d = new igniteuiReactCore.RenderingContext(new igniteuiReactCore.CanvasViewRenderer(), k);
            if (igniteuiReactCore.isNaN_(this.b.ae)) {
                this.b.ad = window.devicePixelRatio;
                this.h = this.b.ad;
            }
            this.aa();
        };
        GridFilterDialogView.prototype.z = function () {
            if (this.b.k == this.b.l) {
                this.m.rootWrapper.setStyleProperty("position", "relative");
                this.m.rootWrapper.setStyleProperty("left", "0px");
                this.m.rootWrapper.setStyleProperty("top", "0px");
                return;
            }
            this.m.rootWrapper.setStyleProperty("position", "absolute");
            if (this.b.l == 2) {
                this.m.rootWrapper.setStyleProperty("left", "unset");
                this.m.rootWrapper.setStyleProperty("right", this.b.aj + "px");
            }
            else {
                this.m.rootWrapper.setStyleProperty("left", this.b.ai + "px");
            }
            var a = igniteuiReactCore.intDivide(this.p.height(), 2) - (this.k / 2);
            this.m.rootWrapper.setStyleProperty("top", a + "px");
        };
        GridFilterDialogView.prototype.r = function (a) {
        };
        GridFilterDialogView.prototype.s = function (a) {
            if (a.button == 2) {
                return;
            }
            if (!this.e) {
                this.b.bd();
            }
            else {
                this.b.a2();
            }
        };
        GridFilterDialogView.prototype.ab = function () {
            this.aa();
        };
        GridFilterDialogView.prototype.y = function (a, b) {
            if (igniteuiReactCore.isNaN_(this.b.ae)) {
                this.b.ad = window.devicePixelRatio;
                this.h = this.b.ad;
            }
            this.l = a;
            this.k = b;
            this.aa();
        };
        GridFilterDialogView.prototype.w = function () {
            if (igniteuiReactCore.isNaN_(this.b.ae)) {
                this.b.ad = window.devicePixelRatio;
                if (this.h != this.b.ad) {
                    this.h = this.b.ad;
                    this.aa();
                    return;
                }
            }
            this.z();
        };
        GridFilterDialogView.prototype.ac = function (a) {
            this.e = true;
            var b = new GridFilterDialogPanel(this.b, this.o, this.m, this.n);
            b.a = this.b;
            b.s(a);
            this.c = b;
        };
        GridFilterDialogView.prototype.t = function () {
            this.e = false;
            if (this.c != null) {
                this.c.k();
                this.c.l();
                this.c = null;
            }
        };
        GridFilterDialogView.$t = igniteuiReactCore.markType(GridFilterDialogView, 'GridFilterDialogView');
        return GridFilterDialogView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridFilterDialogPanel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogPanel, _super);
        function GridFilterDialogPanel(a, b, c, d) {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.j = null;
            _this.d = null;
            _this.i = 264;
            _this.a = null;
            _this.h = null;
            _this.f = null;
            _this.e = null;
            _this.g = null;
            _this.b = a;
            var e = c.createElement("div");
            var f = c.getSubRenderer(e);
            e.setStyleProperty("position", "absolute");
            e.setStyleProperty("width", _this.i + "px");
            e.setStyleProperty("top", "0px");
            e.setStyleProperty("left", "0px");
            e.setStyleProperty("display", "none");
            e.setStyleProperty("z-index", "10000");
            e.setStyleProperty("background-color", "#fff");
            e.setStyleProperty("border-radius", "3px");
            e.setStyleProperty("overflow", "auto");
            var g = igniteuiReactCore.ElevationHelper.e(12, _this.b.bo, _this.b.bn, _this.b.bm);
            e.setStyleProperty("boxShadow", g);
            e.listen("mousedown", igniteuiReactCore.runOn(_this, _this.n));
            _this.onDocumentKeyDown = _this.onDocumentKeyDown.bind(_this);
            _this.onDocumentMouseClick = _this.onDocumentMouseClick.bind(_this);
            _this.h = b;
            _this.f = f;
            _this.g = e;
            _this.e = d;
            return _this;
        }
        GridFilterDialogPanel.prototype.n = function (a) {
            a.stopPropagation();
        };
        GridFilterDialogPanel.prototype.onDocumentKeyDown = function (a) {
            if (igniteuiReactCore.BaseDOMEventProxy.cu(a) == 8) {
                this.b.a2();
            }
        };
        GridFilterDialogPanel.prototype.onDocumentMouseClick = function (e_) {
            var filterIconCanvas_ = this.b.aq();
            var a = (e_.srcElement === filterIconCanvas_ || e_.target === filterIconCanvas_);
            if (!a) {
                this.b.a2();
            }
        };
        GridFilterDialogPanel.prototype.onFilterApplyClick = function () {
            this.b.a2();
        };
        GridFilterDialogPanel.prototype.onFilterCancelClick = function () {
            this.b.a2();
        };
        GridFilterDialogPanel.prototype.s = function (a) {
            var _this = this;
            this.m();
            this.g.setStyleProperty("display", "block");
            this.f.appendToBody(this.g);
            if (this.j == null) {
                this.e.getPortal(this.g, "GridColumnOptions", function (b) {
                    _this.d = b;
                    var comp_ = b.componentRef;
                    var col_ = a;
                    var displayDensity_ = a.grid.fg;
                    var buttonDensity_ = GridFilterDialogPanel.c(displayDensity_, true);
                    var filterListDensity_ = GridFilterDialogPanel.c(displayDensity_, true);
                    _this.j = comp_.i;
                    var options_ = _this.j;
                    options_.column = col_;
                    options_.density = displayDensity_;
                    options_.buttonDensity = buttonDensity_;
                    options_.filterListDensity = filterListDensity_;
                    options_.filterApplyButtonClick = igniteuiReactCore.delegateCombine(options_.filterApplyButtonClick, igniteuiReactCore.runOn(_this, _this.onFilterApplyClick));
                    options_.filterCancelButtonClick = igniteuiReactCore.delegateCombine(options_.filterCancelButtonClick, igniteuiReactCore.runOn(_this, _this.onFilterCancelClick));
                }, false);
            }
            document.addEventListener("keydown", this.onDocumentKeyDown, false);
            document.addEventListener("mousedown", this.onDocumentMouseClick, false);
        };
        GridFilterDialogPanel.prototype.m = function () {
            var a = this.h.width();
            var filterIcon_ = this.h.getNativeElement();
            var boundingRect_ = filterIcon_.getBoundingClientRect();
            var b = (boundingRect_.left);
            var c = (boundingRect_.right);
            var gridDiv_ = this.e.rootWrapper.getNativeElement();
            var gridBoundingRect_ = gridDiv_.getBoundingClientRect();
            var d = (gridBoundingRect_.right);
            var e = (window.innerWidth);
            var f = true;
            if (b > e - this.i - 10) {
                f = false;
            }
            if (f) {
                this.g.setStyleProperty("left", this.h.getOffset().left + "px");
            }
            else {
                var g = Math.max(10, this.h.getOffset().left - (this.i - a));
                this.g.setStyleProperty("left", g + "px");
            }
            this.g.setStyleProperty("top", (this.h.getOffset().top + this.h.outerHeight()) + "px");
        };
        GridFilterDialogPanel.prototype.k = function () {
            document.removeEventListener("keydown", this.onDocumentKeyDown, false);
            document.removeEventListener("mousedown", this.onDocumentMouseClick, false);
            var options_ = this.j;
            options_.filterApplyButtonClick = igniteuiReactCore.delegateRemove(options_.filterApplyButtonClick, igniteuiReactCore.runOn(this, this.onFilterApplyClick));
            options_.filterCancelButtonClick = igniteuiReactCore.delegateRemove(options_.filterCancelButtonClick, igniteuiReactCore.runOn(this, this.onFilterCancelClick));
            ;
            options_.column = null;
            this.g.setStyleProperty("display", "none");
            this.g.remove();
        };
        GridFilterDialogPanel.prototype.l = function () {
            this.f.destroy();
            this.g.unlistenAll();
            this.j = null;
            this.g = null;
            if (this.d != null) {
                this.d.destroy();
            }
        };
        GridFilterDialogPanel.c = function (a, b) {
            switch (a) {
                case 1: return b ? 2 : 1;
                case 2: return b ? 3 : 1;
                case 3: return b ? 3 : 2;
                case 0: return a;
                default: return a;
            }
        };
        GridFilterDialogPanel.$t = igniteuiReactCore.markType(GridFilterDialogPanel, 'GridFilterDialogPanel');
        return GridFilterDialogPanel;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridFilterDialog = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialog, _super);
        function GridFilterDialog() {
            var _this = _super.call(this) || this;
            _this.am = null;
            _this.w = true;
            _this.propertyChanged = null;
            _this.ab = NaN;
            _this.aa = 1;
            _this.j = 2;
            _this.i = 0;
            _this.ag = 0;
            _this.ah = 0;
            _this.bl = null;
            _this.ac = igniteuiReactCore.DeviceUtils.g(24);
            _this.bo = null;
            _this.bn = null;
            _this.bm = null;
            _this.m = null;
            _this.u = null;
            _this.v = false;
            _this.f = null;
            _this.dialogOpening = null;
            _this.filterChanging = null;
            _this.filterChanged = null;
            _this.r = null;
            _this.renderCompleted = null;
            _this.r = new GridFilterDialogView(_this);
            _this.bo = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
            _this.bn = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
            _this.bm = igniteuiReactCore.BrushUtil.g(20, 0, 0, 0);
            return _this;
        }
        Object.defineProperty(GridFilterDialog.prototype, "an", {
            get: function () {
                return this.am;
            },
            set: function (a) {
                this.am = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "x", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (b != this.w) {
                    this.ba("IsAnimationEnabled", b, this.w);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "ae", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                var b = this.ab;
                this.ab = a;
                this.ba("PixelScalingRatio", b, this.ab);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "ad", {
            get: function () {
                return this.aa;
            },
            set: function (a) {
                var b = this.aa;
                this.aa = a;
                this.ba("ActualPixelScalingRatio", b, this.aa);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "l", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.ba("IconHorizontalAlignment", igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.j));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "k", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                if (b != this.i) {
                    this.ba("HeaderTextALignment", igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, b), igniteuiReactCore.enumGetBox(CellContentHorizontalAlignment_$type, this.i));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "ai", {
            get: function () {
                return this.ag;
            },
            set: function (a) {
                var b = this.ag;
                this.ag = a;
                if (b != this.ag) {
                    this.ba("CellPaddingLeft", b, this.ag);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "aj", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (b != this.ah) {
                    this.ba("CellPaddingRight", b, this.ah);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "bp", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (b != this.bl) {
                    this.ba("IconColor", b, this.bl);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "af", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (b != this.ac) {
                    this.ba("ViewSize", b, this.ac);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridFilterDialog.prototype, "y", {
            get: function () {
                return this.r.e;
            },
            enumerable: true,
            configurable: true
        });
        GridFilterDialog.prototype.ba = function (a, b, c) {
            this.be(a, b, c);
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
        };
        GridFilterDialog.prototype.be = function (a, b, c) {
            switch (a) {
                case "PixelScalingRatio":
                    this.ad = this.ae;
                    break;
                case "ActualPixelScalingRatio":
                    this.r.ab();
                    break;
                case "IconHorizontalAlignment":
                case "IconColor":
                case "HeaderTextALignment":
                case "CellPaddingLeft":
                case "CellPaddingRight":
                case "ViewSize":
                    this.r.ab();
                    break;
            }
        };
        GridFilterDialog.prototype.bf = function (a, b, c) {
            this.r.x(a, b, c);
        };
        GridFilterDialog.prototype.bd = function () {
            var a = null;
            var b = 0;
            if (this.dialogOpening != null) {
                var c = new GridFilterDialogOpeningEventArgs();
                this.dialogOpening(this, c);
                this.m = c.a;
            }
            this.bj(this.m);
            if (this.m != null) {
                var d = this.m;
                d.propertyChanged = igniteuiReactCore.delegateCombine(d.propertyChanged, igniteuiReactCore.runOn(this, this.a3));
            }
        };
        GridFilterDialog.prototype.a3 = function (a, b) {
            switch (b.propertyName) {
                case "IsHidden":
                    this.a2();
                    break;
            }
        };
        GridFilterDialog.prototype.bj = function (a) {
            this.r.ac(a);
        };
        GridFilterDialog.prototype.a9 = function () {
        };
        GridFilterDialog.prototype.a4 = function () {
            this.r.u();
            if (this.u == null) {
                var a = new igniteuiReactCore.AnimationKeyFrameEffectTiming();
                a.g = 200;
                a.b = 0;
                this.u = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.r.a(a).m(new igniteuiReactCore.AnimationKeyFrameProperty(1, 0)).m(new igniteuiReactCore.AnimationKeyFrameProperty(1, 1)));
            }
        };
        GridFilterDialog.prototype.bi = function () {
            var _this = this;
            if (this.filterChanged != null) {
                this.filterChanged(this, ((function () {
                    var $ret = new GridFilterDialogFilterChangeEventArgs();
                    $ret.a = _this.f;
                    return $ret;
                })()));
            }
        };
        GridFilterDialog.prototype.bh = function () {
            if (this.filterChanged != null) {
                this.filterChanged(this, ((function () {
                    var $ret = new GridFilterDialogFilterChangeEventArgs();
                    $ret.a = null;
                    return $ret;
                })()));
            }
        };
        GridFilterDialog.prototype.bg = function (a, b) {
            var c = this.e(a);
            if (b) {
                if (this.filterChanged != null) {
                    this.filterChanged(this, ((function () {
                        var $ret = new GridFilterDialogFilterChangeEventArgs();
                        $ret.a = c;
                        return $ret;
                    })()));
                }
            }
            else {
                if (this.filterChanging != null) {
                    this.filterChanging(this, ((function () {
                        var $ret = new GridFilterDialogFilterChangeEventArgs();
                        $ret.a = c;
                        return $ret;
                    })()));
                }
            }
        };
        GridFilterDialog.prototype.e = function (a) {
            var b = new ColumnFilterConditionGroup();
            b.f = a.k;
            var c = new igniteuiReactCore.Stack$1(ColumnFilterConditionGroup.$);
            var d = 0;
            var e = b;
            for (var f = 0; f < a.f.count; f++) {
                var g = this.h(d, c, a, f);
                while (g != null) {
                    e.h(g);
                    e = g;
                    d++;
                    g = this.h(d, c, a, f);
                }
                g = this.g(d, c, a, f);
                while (g != null) {
                    e = g;
                    d--;
                    g = this.g(d, c, a, f);
                }
                if (e == null) {
                    e = b;
                }
                if (this.z(a, a.f._inner[f])) {
                    continue;
                }
                e.h(this.d(a.f._inner[f]));
            }
            if (b.g == 0) {
                return null;
            }
            return b;
        };
        GridFilterDialog.prototype.z = function (a, b) {
            var c = 0;
            for (var d = 0; d < b.e.length; d++) {
                if (b.e[d] == b.l) {
                    c = d;
                    break;
                }
            }
            if (b.d[c] > 0 && b.i == null) {
                return true;
            }
            if (a.a != 0 && b.d[c] > 0 && typeof b.i === 'string' && igniteuiReactCore.stringIsNullOrEmpty(b.i)) {
                return true;
            }
            return false;
        };
        GridFilterDialog.prototype.g = function (a, b, c, d) {
            var e = this.al(c, d);
            if (a > e) {
                b.e();
                return b.d();
            }
            return null;
        };
        GridFilterDialog.prototype.al = function (a, b) {
            var c = a.c(b);
            if (c == null) {
                return 0;
            }
            return a.e.indexOf(c);
        };
        GridFilterDialog.prototype.h = function (a, b, c, d) {
            var e = this.al(c, d);
            if (a < e) {
                var f = c.b(d);
                var g = new ColumnFilterConditionGroup();
                g.f = f.a;
                b.h(g);
                return g;
            }
            return null;
        };
        GridFilterDialog.prototype.d = function (a) {
            var b = new ColumnComparisonFilterCondition();
            b.e = this.c(a.l);
            b.j = a.i;
            return b;
        };
        GridFilterDialog.prototype.c = function (a) {
            return igniteuiReactCore.EnumUtil.getEnumValue(ColumnComparisonConditionOperatorType_$type, igniteuiReactCore.EnumUtil.parse(ColumnComparisonConditionOperatorType_$type, a, true));
        };
        GridFilterDialog.prototype.bc = function (a) {
            this.bg(a, false);
        };
        GridFilterDialog.prototype.s = function (a, b) {
            var c = new GridFilterDialogViewModel();
            if (a != null) {
                this.a1(c, a, b);
            }
            else {
                var d = new GridFilterDialogViewModelRow();
                d.f = b;
                d.e = GridFilterDialog.a(b);
                d.d = GridFilterDialog.b(b);
                d.l = GridFilterDialog.au(b[0]);
                c.f.add(d);
            }
            return c;
        };
        GridFilterDialog.prototype.a1 = function (a, b, c) {
            if (b.b()) {
                var d = b;
                for (var e = 0; e < d.g; e++) {
                    var f = d.item(e);
                    this.a1(a, f, c);
                }
            }
            else {
                a.f.add(this.t(b, c));
            }
        };
        GridFilterDialog.prototype.t = function (a, b) {
            var c = new GridFilterDialogViewModelRow();
            c.l = GridFilterDialog.au(a.e);
            c.f = b;
            c.e = GridFilterDialog.a(b);
            c.i = GridFilterDialog.ao(GridFilterDialog.ak(a.e), a.e, a);
            c.j = GridFilterDialog.ap(GridFilterDialog.ak(a.e), a.e, a);
            c.d = GridFilterDialog.b(b);
            return c;
        };
        GridFilterDialog.ak = function (a) {
            return ColumnComparisonFilterCondition.h(a);
        };
        GridFilterDialog.ao = function (a, b, c) {
            if (a == 0) {
                return "";
            }
            return c.j != null ? c.j.toString() : "";
        };
        GridFilterDialog.ap = function (a, b, c) {
            return "";
        };
        GridFilterDialog.b = function (a) {
            return ColumnComparisonFilterCondition.d(a);
        };
        GridFilterDialog.a = function (a) {
            var b = new Array(a.length);
            for (var c = 0; c < a.length; c++) {
                b[c] = igniteuiReactCore.EnumUtil.getName(ColumnComparisonConditionOperatorType_$type, a[c]);
            }
            return b;
        };
        GridFilterDialog.au = function (a) {
            return igniteuiReactCore.EnumUtil.getName(ColumnComparisonConditionOperatorType_$type, a);
        };
        GridFilterDialog.prototype.a8 = function (a, b) {
            this.r.y(a, b);
        };
        GridFilterDialog.prototype.a7 = function () {
            this.r.w();
        };
        GridFilterDialog.prototype.a6 = function (a, b, c) {
            var d = igniteuiReactCore.Geometry.a("M12 14c -1.1 0 -2 -0.9 -2 -2 s0.9 -2 2 -2 s2 0.9 2 2 S13.1 14 12 14 z M12 8c -1.1 0 -2 -0.9 -2 -2 s0.9 -2 2 -2 s2 0.9 2 2 S13.1 8 12 8z M12 16 c1.1 0 2 0.9 2 2s -0.9 2 -2 2 s-2 -0.9 -2 -2 S10.9 16 12 16z");
            c.ak = d;
            c._fill = this.bp == null ? GridStyleRepository.az : this.bp;
        };
        GridFilterDialog.prototype.bk = function () {
            var _this = this;
            this.v = false;
            if (igniteuiReactCore.NativeUI.e(this.r.q) == 1) {
                return;
            }
            if (this.x) {
                this.a4();
                if (this.u.playbackRate < 0) {
                    this.u.reverse();
                }
                else {
                    this.u.play();
                }
                this.u.finished.f(function (a) { return _this.u.commitStyles(); });
            }
            else {
                igniteuiReactCore.NativeUI.t(this.r.q, 1);
            }
        };
        GridFilterDialog.prototype.a5 = function () {
            var _this = this;
            this.v = true;
            if (!this.y) {
                if (this.x) {
                    this.a4();
                    if (this.u.playbackRate < 0) {
                        this.u.play();
                    }
                    else {
                        this.u.reverse();
                    }
                    this.u.finished.f(function (a) { return _this.u.commitStyles(); });
                }
                else {
                    igniteuiReactCore.NativeUI.t(this.r.q, 0);
                }
                this.v = false;
            }
        };
        GridFilterDialog.prototype.a2 = function () {
            this.r.t();
            this.a9();
            if (this.v) {
                this.a5();
            }
            if (this.m != null) {
                var a = this.m;
                a.propertyChanged = igniteuiReactCore.delegateRemove(a.propertyChanged, igniteuiReactCore.runOn(this, this.a3));
                this.m = null;
            }
        };
        GridFilterDialog.prototype.aq = function () {
            return this.r.o.getNativeElement();
        };
        GridFilterDialog.prototype.bb = function () {
            if (this.renderCompleted != null) {
                this.renderCompleted(this, new FilterDialogRenderCompletedEventArgs());
            }
        };
        GridFilterDialog.$t = igniteuiReactCore.markType(GridFilterDialog, 'GridFilterDialog', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return GridFilterDialog;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridFilterDialogViewModel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogViewModel, _super);
        function GridFilterDialogViewModel() {
            var _this = _super.call(this) || this;
            _this.a = 0;
            _this.e = null;
            _this.k = false;
            _this.m = 0;
            _this.f = null;
            _this.onModified = null;
            _this.k = false;
            _this.f = new GridFilterDialogViewModelRowCollection();
            _this.f.ae = _this;
            _this.e = new GridFilterDialogViewModelGroupingLevelCollection();
            _this.f.ag = igniteuiReactCore.runOn(_this, _this.u);
            var a = _this.f;
            a.collectionChanged = igniteuiReactCore.delegateCombine(a.collectionChanged, igniteuiReactCore.runOn(_this, _this.t));
            return _this;
        }
        GridFilterDialogViewModel.prototype.n = function () {
            var a = new GridFilterDialogViewModelRow();
            var b = ColumnComparisonFilterCondition.c(this.a);
            a.f = b;
            a.e = GridFilterDialog.a(b);
            a.d = GridFilterDialog.b(b);
            a.l = GridFilterDialog.au(b[0]);
            this.f.add(a);
        };
        GridFilterDialogViewModel.prototype.u = function (a) {
            if (this.onModified != null) {
                this.onModified(this);
            }
        };
        GridFilterDialogViewModel.prototype.t = function (a, b) {
            switch (b.action) {
                case 0:
                    if (b.newItems != null) {
                        for (var c = 0; c < b.newItems.count; c++) {
                            var d = b.newItems.item(c);
                            this.q(c + b.newStartingIndex, d);
                        }
                    }
                    break;
                case 1:
                    if (b.oldItems != null) {
                        for (var e = 0; e < b.oldItems.count; e++) {
                            this.r(b.oldStartingIndex);
                        }
                    }
                    break;
                case 2:
                    if (b.oldItems != null) {
                        for (var f = 0; f < b.oldItems.count; f++) {
                            this.r(b.oldStartingIndex);
                        }
                    }
                    if (b.newItems != null) {
                        for (var g = 0; g < b.newItems.count; g++) {
                            var h = b.newItems.item(g);
                            this.q(g + b.newStartingIndex, b.newItems.item(g));
                        }
                    }
                    break;
                case 4:
                    this.s();
                    break;
            }
            if (this.onModified != null) {
                this.onModified(this);
            }
        };
        GridFilterDialogViewModel.prototype.r = function (a) {
            var b = this.c(a);
            if (b == null) {
                return;
            }
            var c = this.b(a);
            if (c == null) {
                return;
            }
            this.w(c, a);
            for (var d = b.indexOf(c) + 1; d < b.count; d++) {
                this.v(b._inner[d], -1);
            }
        };
        GridFilterDialogViewModel.prototype.w = function (a, b) {
            a.b--;
        };
        GridFilterDialogViewModel.prototype.s = function () {
            this.e.clear();
        };
        GridFilterDialogViewModel.prototype.q = function (a, b) {
            var c = this.c(a);
            if (c == null) {
                return;
            }
            var d = this.b(a);
            if (d == null) {
                return;
            }
            this.p(d, a);
            for (var e = c.indexOf(d) + 1; e < c.count; e++) {
                this.v(c._inner[e], +1);
            }
        };
        GridFilterDialogViewModel.prototype.v = function (a, b) {
            a.c += b;
            a.b -= b;
        };
        GridFilterDialogViewModel.prototype.p = function (a, b) {
            a.b++;
        };
        GridFilterDialogViewModel.prototype.b = function (a) {
            for (var b = this.e.count - 1; b >= 0; b--) {
                for (var c = 0; c < this.e._inner[b].count; c--) {
                    if (this.e._inner[b]._inner[c].c <= a && this.e._inner[b]._inner[c].b >= a) {
                        return this.e._inner[b]._inner[c];
                    }
                }
            }
            return null;
        };
        GridFilterDialogViewModel.prototype.c = function (a) {
            for (var b = this.e.count - 1; b >= 0; b--) {
                for (var c = 0; c < this.e._inner[b].count; c--) {
                    if (this.e._inner[b]._inner[c].c <= a && this.e._inner[b]._inner[c].b >= a) {
                        return this.e._inner[b];
                    }
                }
            }
            return null;
        };
        GridFilterDialogViewModel.prototype.h = function (a, b) {
            var c = this.d(a, b);
            if (this.i(c, a, b)) {
                if (this.e.count < this.m) {
                    return true;
                }
                else {
                    return false;
                }
            }
            return true;
        };
        GridFilterDialogViewModel.prototype.i = function (a, b, c) {
            if (a == null) {
                return false;
            }
            for (var d = 0; d < a.count; d++) {
                if (this.j(a._inner[d], b, c)) {
                    return true;
                }
            }
            return false;
        };
        GridFilterDialogViewModel.prototype.j = function (a, b, c) {
            if (c > a.c || b > a.b) {
                return false;
            }
            return true;
        };
        GridFilterDialogViewModel.prototype.d = function (a, b) {
            if (this.e.count == 0) {
                return null;
            }
            for (var c = 0; c < this.e.count; c++) {
                if (!this.i(this.e._inner[c], a, b)) {
                    return this.e._inner[c];
                }
            }
            return this.e._inner[this.e.count - 1];
        };
        GridFilterDialogViewModel.prototype.aa = function (a, b) {
            for (var c = 0; c < this.e.count; c++) {
                for (var d = 0; d < this.e._inner[c].count; d++) {
                    if (this.e._inner[c]._inner[d].c == a && this.e._inner[c]._inner[d].b == b) {
                        this.e._inner[c].removeAt(d);
                        break;
                    }
                }
            }
            this.x();
            if (this.onModified != null) {
                this.onModified(this);
            }
        };
        GridFilterDialogViewModel.prototype.x = function () {
            for (var a = this.e.count - 1; a >= 0; a--) {
                var b = new igniteuiReactCore.List$1(GridFilterDialogViewModelGrouping.$, 0);
                for (var c = 0; c < this.e._inner[a].count; c++) {
                    var d = this.e._inner[a]._inner[c];
                    if (a > 0) {
                        if (!this.i(this.e._inner[a - 1], d.c, d.b)) {
                            b.add(d);
                        }
                    }
                }
                for (var e = 0; e < b.count; e++) {
                    this.e._inner[a].remove(b._inner[e]);
                    this.e._inner[a - 1].add(b._inner[e]);
                }
                if (this.e._inner[a].count == 0) {
                    this.e.removeAt(a);
                }
            }
            this.y();
        };
        GridFilterDialogViewModel.prototype.y = function () {
            for (var a = this.e.count - 1; a >= 0; a--) {
                var b = new igniteuiReactCore.List$1(GridFilterDialogViewModelGrouping.$, 0);
                for (var c = 0; c < this.e._inner[a].count; c++) {
                    b.add(this.e._inner[a]._inner[c]);
                }
                b.aa(function (d, e) { return igniteuiReactCore.Base.compareSimple(d.c, e.c); });
                this.e._inner[a].clear();
                for (var d = 0; d < this.e._inner[a].count; d++) {
                    this.e._inner[a].add(b._inner[d]);
                }
            }
        };
        GridFilterDialogViewModel.prototype.l = function (a, b) {
            for (var c = 0; c < this.e.count; c++) {
                for (var d = 0; d < this.e._inner[c].count; d++) {
                    if (this.e._inner[c]._inner[d].c == a && this.e._inner[c]._inner[d].b == b) {
                        return true;
                    }
                }
            }
            return false;
        };
        GridFilterDialogViewModel.prototype.z = function (a, b) {
            for (var c = 0; c < this.e.count; c++) {
                for (var d = 0; d < this.e._inner[c].count; d++) {
                    if (this.e._inner[c]._inner[d].c == a && this.e._inner[c]._inner[d].b == b) {
                        this.e._inner[c]._inner[d].a = !this.e._inner[c]._inner[d].a;
                    }
                }
            }
            if (this.onModified != null) {
                this.onModified(this);
            }
        };
        GridFilterDialogViewModel.prototype.o = function (a, b, c) {
            if (!this.h(a, b)) {
                return;
            }
            var d = this.d(a, b);
            var e = d;
            if (this.i(d, a, b)) {
                this.e.add(new GridFilterDialogViewModelGroupingLevel());
                e = this.d(a, b);
            }
            e.add(((function () {
                var $ret = new GridFilterDialogViewModelGrouping();
                $ret.c = a;
                $ret.b = b;
                $ret.a = c;
                return $ret;
            })()));
            this.y();
            if (this.onModified != null) {
                this.onModified(this);
            }
        };
        GridFilterDialogViewModel.$t = igniteuiReactCore.markType(GridFilterDialogViewModel, 'GridFilterDialogViewModel');
        return GridFilterDialogViewModel;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridFilterDialogViewModelRowCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridFilterDialogViewModelRowCollection, _super);
        function GridFilterDialogViewModelRowCollection() {
            var _this = _super.call(this, GridFilterDialogViewModelRow.$, 0) || this;
            _this.ae = null;
            _this.af = null;
            _this.collectionChanged = igniteuiReactCore.delegateCombine(_this.collectionChanged, igniteuiReactCore.runOn(_this, _this.ah));
            return _this;
        }
        GridFilterDialogViewModelRowCollection.prototype.ah = function (a, b) {
            if (b.oldItems != null) {
                for (var c = 0; c < b.oldItems.count; c++) {
                    var d = b.oldItems.item(c);
                    d.propertyChanged = igniteuiReactCore.delegateRemove(d.propertyChanged, igniteuiReactCore.runOn(this, this.ai));
                }
            }
            if (b.newItems != null) {
                for (var e = 0; e < b.newItems.count; e++) {
                    var f = b.newItems.item(e);
                    f.propertyChanged = igniteuiReactCore.delegateCombine(f.propertyChanged, igniteuiReactCore.runOn(this, this.ai));
                }
            }
        };
        GridFilterDialogViewModelRowCollection.prototype.ai = function (a, b) {
            if (this.af != null) {
                this.af(this.ae);
            }
        };
        Object.defineProperty(GridFilterDialogViewModelRowCollection.prototype, "ag", {
            get: function () {
                return this.af;
            },
            set: function (a) {
                this.af = a;
            },
            enumerable: true,
            configurable: true
        });
        GridFilterDialogViewModelRowCollection.$t = igniteuiReactCore.markType(GridFilterDialogViewModelRowCollection, 'GridFilterDialogViewModelRowCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(GridFilterDialogViewModelRow.$));
        return GridFilterDialogViewModelRowCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TextHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextHeaderCell, _super);
        function TextHeaderCell(a) {
            var _this = _super.call(this, a) || this;
            _this.ci = null;
            _this.ce = null;
            _this.cc = null;
            _this.b8 = 0;
            _this.b7 = 0;
            _this.ca = 3;
            _this.ck = null;
            _this.cn = -1;
            _this.cm = -1;
            _this.cg = false;
            _this.cj = null;
            _this.ch = false;
            _this.ci = a.createElement("span");
            _this.z.setRawStyleProperty("text-align", "left");
            _this.z.setRawStyleProperty("vertical-align", "middle");
            _this.ci.setRawStyleProperty("display", "inline-block");
            _this.ci.setRawStyleProperty("line-height", "normal");
            _this.ci.setRawStyleProperty("vertical-align", "middle");
            _this.ci.setRawStyleProperty("overflow", "hidden");
            _this.ci.setRawStyleProperty("white-space", "nowrap");
            _this.ci.setRawStyleProperty("text-overflow", "ellipsis");
            _this.z.append(_this.ci);
            var b = 18;
            var c = 18;
            var d = a.createElement("div");
            d.setAttribute("aria-hidden", "true");
            d.setRawStyleProperty("display", "none");
            d.setRawStyleProperty("vertical-align", "middle");
            d.setRawStyleProperty("width", b + "px");
            d.setRawStyleProperty("height", c + "px");
            _this.cj = d;
            var e = a.getSubRenderer(d);
            _this.cc = new GridFilterDialog();
            _this.cc.bf(e, _this.z, a);
            _this.z.append(d);
            _this.cc.a8(b, c);
            _this.cc.af = 24;
            var f = _this.cc.x;
            _this.cc.x = false;
            _this.cc.a5();
            _this.cc.x = f;
            var g = 18;
            var h = 18;
            d = a.createElement("div");
            d.setAttribute("aria-hidden", "true");
            d.setRawStyleProperty("display", "inline-block");
            d.setRawStyleProperty("vertical-align", "middle");
            d.setRawStyleProperty("width", "0px");
            d.setRawStyleProperty("height", h + "px");
            d.setRawStyleProperty("margin", "0 0 0 5px");
            _this.ck = d;
            e = a.getSubRenderer(d);
            _this.ce = new GridSortIndicator();
            _this.ce.l = false;
            _this.ce.ax(e);
            _this.z.append(d);
            _this.ce.ar(g, h);
            var i = _this.ce;
            i.propertyChanged = igniteuiReactCore.delegateCombine(i.propertyChanged, igniteuiReactCore.runOn(_this, _this.cq));
            var j = _this.cc;
            j.dialogOpening = igniteuiReactCore.delegateCombine(j.dialogOpening, igniteuiReactCore.runOn(_this, _this.cr));
            var k = _this.cc;
            k.filterChanging = igniteuiReactCore.delegateCombine(k.filterChanging, igniteuiReactCore.runOn(_this, _this.ct));
            var l = _this.cc;
            l.filterChanged = igniteuiReactCore.delegateCombine(l.filterChanged, igniteuiReactCore.runOn(_this, _this.cs));
            _this.z.listen("mouseenter", igniteuiReactCore.runOn(_this, _this.cx));
            _this.z.listen("mouseleave", igniteuiReactCore.runOn(_this, _this.cw));
            return _this;
        }
        Object.defineProperty(TextHeaderCell.prototype, "cl", {
            get: function () {
                return this.ci;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCell.prototype, "cf", {
            get: function () {
                return this.ce;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCell.prototype, "cd", {
            get: function () {
                return this.cc;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCell.prototype, "cb", {
            get: function () {
                return this.ca;
            },
            set: function (a) {
                var b = this.ca;
                this.ca = a;
                this.bg("ColumnOptionsIconBehavior", igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconBehavior_$type, this.ca));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TextHeaderCell.prototype, "b9", {
            get: function () {
                return this.b8;
            },
            set: function (a) {
                var b = this.b8;
                this.b8 = a;
                this.bg("ColumnOptionsIconAlignment", igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, b), igniteuiReactCore.enumGetBox(ColumnOptionsIconAlignment_$type, this.b8));
            },
            enumerable: true,
            configurable: true
        });
        TextHeaderCell.prototype.s = function (a) {
            return true;
        };
        TextHeaderCell.prototype.bw = function (a, b) {
            _super.prototype.bw.call(this, a, b);
            a -= 21;
            if (this.ch) {
                a -= 15;
            }
            var c = Math.max(0, a - b);
            if (c != this.cn) {
                this.cn = c;
                this.ci.setRawStyleProperty("max-width", c.toString() + "px");
            }
        };
        TextHeaderCell.prototype.bq = function (a, b) {
            _super.prototype.bq.call(this, a, b);
            var c = Math.max(0, a - b);
            if (this.cm != c) {
                this.cm = c;
                this.ci.setRawStyleProperty("max-height", c.toString() + "px");
            }
        };
        TextHeaderCell.prototype.bx = function (a, b, c, d) {
            this.cc.a7();
        };
        TextHeaderCell.prototype.cq = function (a, b) {
            switch (b.propertyName) {
                case "CurrentOpacity":
                    if (this.cf.r > 0) {
                        this.ck.setRawStyleProperty("width", "18px");
                        if (this.b7 == 2) {
                            this.ck.setRawStyleProperty("margin", "0 5px 0 0");
                        }
                        else {
                            this.ck.setRawStyleProperty("margin", "0 0 0 5px");
                        }
                    }
                    else {
                        this.ck.setRawStyleProperty("width", "0px");
                        this.ck.setRawStyleProperty("margin", "0");
                    }
                    break;
            }
        };
        TextHeaderCell.prototype.cx = function (a) {
            if (this.b.isGridDragging) {
                return;
            }
            switch (this.cb) {
                case 2:
                case 3:
                    this.cc.bk();
                    break;
            }
        };
        TextHeaderCell.prototype.cw = function (a) {
            switch (this.cb) {
                case 2:
                case 3:
                    this.cc.a5();
                    break;
            }
        };
        TextHeaderCell.prototype.cs = function (a, b) {
            this.b.columnFilterChanged(b.a);
        };
        TextHeaderCell.prototype.ct = function (a, b) {
            this.b.columnFilterChanging(b.a);
        };
        TextHeaderCell.prototype.cr = function (a, b) {
            if (this.b != null) {
                b.a = this.d.getColumn();
                this.b.cancelEditMode(false);
            }
        };
        TextHeaderCell.prototype.be = function (a, b, c) {
            _super.prototype.be.call(this, a, b, c);
            this.b7 = c;
            this.cc.k = c;
            if (c == 2) {
                this.z.removeChild(this.ck);
                this.z.removeChild(this.cj);
                this.ci.before(this.cj);
                this.cj.before(this.ck);
                if (this.b9 == 1) {
                    this.cj.setRawStyleProperty("margin", "0 5px 0 0");
                    this.cc.l = this.b7;
                }
                else {
                    this.cj.setRawStyleProperty("margin", "0");
                    this.cc.l = 0;
                }
            }
            else {
                this.z.removeChild(this.ck);
                this.z.removeChild(this.ci);
                this.cj.before(this.ci);
                this.cj.before(this.ck);
                if (this.b9 == 1) {
                    this.cj.setRawStyleProperty("margin", "0 0 0 5px");
                    this.cc.l = this.b7;
                }
                else {
                    this.cj.setRawStyleProperty("margin", "0");
                    this.cc.l = 2;
                }
            }
        };
        TextHeaderCell.prototype.bu = function (a, b, c, d) {
            _super.prototype.bu.call(this, a, b, c, d);
            this.cc.ai = a;
            this.cc.aj = c;
        };
        TextHeaderCell.prototype.cv = function () {
            if (this.b9 == 2 || this.b9 == 0) {
                if (this.b7 == 2) {
                    this.cc.l = 0;
                }
                else {
                    this.cc.l = 2;
                }
            }
            else {
                this.cc.l = this.b7;
                if (this.b7 == 2) {
                    this.cj.setRawStyleProperty("margin", "0 5px 0 0");
                }
                else {
                    this.cj.setRawStyleProperty("margin", "0 0 0 5px");
                }
            }
        };
        TextHeaderCell.prototype.cu = function () {
            switch (this.cb) {
                case 1:
                    this.cc.x = false;
                    this.cc.bk();
                    break;
                case 2:
                    this.cc.x = false;
                    break;
                case 3:
                    this.cc.x = true;
                    break;
            }
        };
        TextHeaderCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            switch (a) {
                case "ColumnOptionsIconAlignment":
                    this.cv();
                    break;
                case "ColumnOptionsIconBehavior":
                    this.cu();
                    break;
            }
        };
        TextHeaderCell.prototype.onContactStarted = function (e_, a) {
            if (e_.button == 2) {
                return;
            }
            var filterIconCanvas_ = this.cc.aq();
            var b = (e_.originalEvent.srcElement === filterIconCanvas_ || e_.originalEvent.target === filterIconCanvas_);
            if (b) {
                this.cg = true;
                return;
            }
            if (this.cc.y) {
                this.cc.a2();
            }
            _super.prototype.onContactStarted.call(this, e_, a);
        };
        TextHeaderCell.prototype.onContactCompleted = function (e_, a) {
            if (!this.cg) {
                _super.prototype.onContactCompleted.call(this, e_, a);
            }
            this.cg = false;
        };
        TextHeaderCell.prototype.get_q = function () {
            return true;
        };
        TextHeaderCell.$t = igniteuiReactCore.markType(TextHeaderCell, 'TextHeaderCell', GridCellBase.$);
        return TextHeaderCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TextHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TextHeaderCellPresenter, _super);
        function TextHeaderCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(TextHeaderCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        TextHeaderCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(TextCellModel.kq)) {
                    b.ip = b.ks;
                    this.d.cl.setRawText(b.ip);
                }
                if (a.ax(CellModel.f6)) {
                    var c = this.d.cf.l;
                    if (a.bb) {
                        this.d.cf.l = false;
                    }
                    this.d.cf.b = a.m;
                    if (a.bb) {
                        this.d.cf.l = c;
                    }
                }
                if (a.ax(CellModel.f7)) {
                    var d = this.d.cf.l;
                    if (a.bb) {
                        this.d.cf.l = false;
                    }
                    this.d.cf.a0 = a.kn;
                    if (a.bb) {
                        this.d.cf.l = d;
                    }
                }
                if (a.aw("IsColumnOptionsEnabled")) {
                    var e = b.k1;
                    if (e) {
                        e = this.e();
                    }
                    this.d.ch = e;
                    this.d.cj.setRawStyleProperty("display", e ? "inline-block" : "none");
                    this.a.bw(a.gf, (a.fo + a.fq + a.eb + a.ee));
                }
                if (a.aw("SortIndicatorStyle")) {
                    this.d.cf.f = b.kz;
                }
                if (a.aw("ColumnOptionsIconAlignment")) {
                    this.d.b9 = b.kv;
                }
                if (a.aw("ColumnOptionsIconBehavior")) {
                    this.d.cb = b.kx;
                }
                if (a.aw("ColumnOptionsIconColor")) {
                    this.d.cd.bp = b.ld;
                }
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.cl, this.a);
            }
        };
        TextHeaderCellPresenter.prototype.e = function () {
            return igniteuiReactCore.TypeRegistrar.isRegistered("IgxGridColumnOptionsComponent");
        };
        TextHeaderCellPresenter.$t = igniteuiReactCore.markType(TextHeaderCellPresenter, 'TextHeaderCellPresenter', CellPresenterBase.$);
        return TextHeaderCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RowSeparatorCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowSeparatorCell, _super);
        function RowSeparatorCell(a) {
            return _super.call(this, a) || this;
        }
        RowSeparatorCell.$t = igniteuiReactCore.markType(RowSeparatorCell, 'RowSeparatorCell', GridCellBase.$);
        return RowSeparatorCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RowSeparatorCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RowSeparatorCellPresenter, _super);
        function RowSeparatorCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(RowSeparatorCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        RowSeparatorCellPresenter.$t = igniteuiReactCore.markType(RowSeparatorCellPresenter, 'RowSeparatorCellPresenter', CellPresenterBase.$);
        return RowSeparatorCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ImageCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ImageCell, _super);
        function ImageCell(a) {
            var _this = _super.call(this, a) || this;
            _this.cd = null;
            _this.b7 = 1;
            _this.b8 = 3;
            _this.cf = null;
            _this.b9 = false;
            _this.ca = 1;
            _this.cc = null;
            _this.cd = a.createElement("img");
            _this.cd.listen("load", igniteuiReactCore.runOn(_this, _this.ci));
            _this.cc = a.createElement("div");
            _this.cc.setRawStyleProperty("background-size", "contain");
            _this.cc.setRawStyleProperty("background-repeat", "no-repeat");
            _this.cc.setRawStyleProperty("background-position", "center");
            _this.cc.setRawStyleProperty("width", "100%");
            _this.cc.setRawStyleProperty("height", "100%");
            _this.z.setRawStyleProperty("text-align", "left");
            _this.z.setRawStyleProperty("vertical-align", "middle");
            _this.z.append(_this.cc);
            return _this;
        }
        Object.defineProperty(ImageCell.prototype, "ce", {
            get: function () {
                return this.cd;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ImageCell.prototype, "cb", {
            get: function () {
                return this.ca;
            },
            set: function (a) {
                this.ca = a;
            },
            enumerable: true,
            configurable: true
        });
        ImageCell.prototype.ci = function (a) {
            this.b9 = false;
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.cf)) {
                this.cc.setRawStyleProperty("opacity", "1");
                this.cc.setRawStyleProperty("background-image", "url(" + this.cf + ")");
            }
        };
        ImageCell.prototype.cj = function (a, b) {
            if (a == this.cf) {
                return;
            }
            this.cg();
            this.cc.setRawStyleProperty("opacity", "0");
            if (a == null || a.length == 0) {
                this.ch(this.cd);
                return;
            }
            if (igniteuiReactCore.Base.equalsStatic(a, this.cf)) {
                return;
            }
            this.cn(a, b);
            var img_ = this.cd.getNativeElement();
            if (img_ != null && (img_.complete)) {
                this.b9 = false;
                this.cd.setRawStyleProperty("opacity", "1");
                this.cc.setRawStyleProperty("background-image", "url(" + this.cf + ")");
            }
        };
        ImageCell.prototype.ch = function (a) {
            a.setAttribute("src", "");
            this.cc.setRawStyleProperty("background-image", "");
        };
        ImageCell.prototype.cm = function (a) {
            switch (a) {
                case 1:
                    this.cc.setRawStyleProperty("background-size", "100% 100%");
                    break;
                case 2:
                    this.cc.setRawStyleProperty("background-size", "auto");
                    break;
                case 0:
                    this.cc.setRawStyleProperty("background-size", "contain");
                    break;
            }
        };
        ImageCell.prototype.cn = function (a, b) {
            this.b9 = true;
            this.cf = a;
            this.ce.setAttribute("src", a);
        };
        ImageCell.prototype.cg = function () {
            if (this.b9) {
                this.ch(this.cd);
                this.cf = "";
            }
        };
        ImageCell.prototype.ck = function (a) {
            this.b7 = a;
        };
        ImageCell.prototype.cl = function (a) {
            this.b8 = a;
        };
        ImageCell.prototype.get_r = function () {
            return true;
        };
        ImageCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            if (a == "Indent" || a == "IsCollapsable") {
                this.cc.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
            }
        };
        ImageCell.$t = igniteuiReactCore.markType(ImageCell, 'ImageCell', GridCellBase.$);
        return ImageCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ImageCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ImageCellPresenter, _super);
        function ImageCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(ImageCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        ImageCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(CellModel.ei) || a.ax(CellModel.ge)) {
                    var c = Math.min(1, Math.max(0, a.cb));
                    var d = a.b1 * (1 - c);
                    this.d.cb = d;
                }
                if (b.ax(ImageCellModel.ku) || b.ax(ImageCellModel.kv)) {
                    this.e(b.ky, b.kr);
                }
                if (b.ax(ImageCellModel.kw) || b.ax(ImageCellModel.e2) || b.ax(ImageCellModel.gd)) {
                    this.f(b.kt, b.f, b.h);
                }
                if (b.ax(ImageCellModel.f8)) {
                    if (a.t == 1) {
                        this.d.cg();
                    }
                    else if (a.t == 2) {
                        this.e(b.ky, b.kr);
                    }
                }
            }
        };
        ImageCellPresenter.prototype.f = function (a, b, c) {
            this.d.cm(a);
        };
        ImageCellPresenter.prototype.e = function (a, b) {
            var c = a.toLowerCase();
            if (b == 0) {
                b = 4;
            }
            if (igniteuiReactCore.stringStartsWith(c, "http") || b == 4) {
                this.d.cj(a, 4);
            }
            if (igniteuiReactCore.stringStartsWith(c, "asset") || b == 2) {
                var d = a;
                if (igniteuiReactCore.stringStartsWith(c, "asset")) {
                    d = a.substr(8);
                }
                this.d.cj(d, 2);
            }
            if (igniteuiReactCore.stringStartsWith(c, "drawable") || b == 1) {
                var e = a;
                if (igniteuiReactCore.stringStartsWith(c, "drawable")) {
                    e = a.substr(11);
                }
                this.d.cj(e, 1);
            }
            if (igniteuiReactCore.stringStartsWith(c, "nativeresource") || b == 1) {
                var f = a;
                if (igniteuiReactCore.stringStartsWith(c, "nativeresource")) {
                    f = a.substr(17);
                }
                this.d.cj(f, 1);
            }
            if (igniteuiReactCore.stringStartsWith(c, "embeddedresource") || b == 3) {
                var g = a;
                if (igniteuiReactCore.stringStartsWith(c, "embeddedresource")) {
                    g = a.substr(19);
                }
                this.d.cj(g, 3);
            }
        };
        ImageCellPresenter.$t = igniteuiReactCore.markType(ImageCellPresenter, 'ImageCellPresenter', CellPresenterBase.$);
        return ImageCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateCellContainer = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateCellContainer, _super);
        function TemplateCellContainer(a) {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this._element = null;
            _this.b = null;
            _this.b = a;
            _this.element = a.createElement("div");
            return _this;
        }
        Object.defineProperty(TemplateCellContainer.prototype, "element", {
            get: function () {
                return this._element;
            },
            set: function (a) {
                this._element = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TemplateCellContainer.prototype, "isCanvasBased", {
            get: function () {
                return false;
            },
            enumerable: true,
            configurable: true
        });
        TemplateCellContainer.$t = igniteuiReactCore.markType(TemplateCellContainer, 'TemplateCellContainer');
        return TemplateCellContainer;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateCell, _super);
        function TemplateCell(a) {
            var _this = _super.call(this, a) || this;
            _this.b7 = null;
            _this.b7 = new TemplateCellContainer(a);
            _this.b7.element.setRawStyleProperty("box-sizing", "border-box");
            _this.z.append(_this.b7.element);
            return _this;
        }
        Object.defineProperty(TemplateCell.prototype, "b8", {
            get: function () {
                return this.b7;
            },
            enumerable: true,
            configurable: true
        });
        TemplateCell.prototype.get_r = function () {
            return true;
        };
        TemplateCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            if (a == "Indent" || a == "IsCollapsable") {
                this.b7.element.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
            }
        };
        TemplateCell.$t = igniteuiReactCore.markType(TemplateCell, 'TemplateCell', GridCellBase.$);
        return TemplateCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateCellPresenter, _super);
        function TemplateCellPresenter(a, b) {
            var _this = _super.call(this, a) || this;
            _this.d = null;
            _this.d = b;
            return _this;
        }
        Object.defineProperty(TemplateCellPresenter.prototype, "e", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        TemplateCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            var c = this.d.actualColumns._inner[a.k.az];
            if (a.ax(CellModel.ei) || a.ax(CellModel.ge)) {
                var d = Math.min(1, Math.max(0, a.cb));
                var e = a.b1 * (1 - d);
                this.e.b8.element.setRawStyleProperty("opacity", e.toString());
            }
            c.jp(a, this.e.b8);
        };
        TemplateCellPresenter.$t = igniteuiReactCore.markType(TemplateCellPresenter, 'TemplateCellPresenter', CellPresenterBase.$);
        return TemplateCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateHeaderCell, _super);
        function TemplateHeaderCell(a) {
            var _this = _super.call(this, a) || this;
            _this.b7 = null;
            _this.b7 = new TemplateCellContainer(a);
            _this.z.append(_this.b7.element);
            return _this;
        }
        Object.defineProperty(TemplateHeaderCell.prototype, "b8", {
            get: function () {
                return this.b7;
            },
            enumerable: true,
            configurable: true
        });
        TemplateHeaderCell.prototype.get_q = function () {
            return true;
        };
        TemplateHeaderCell.$t = igniteuiReactCore.markType(TemplateHeaderCell, 'TemplateHeaderCell', GridCellBase.$);
        return TemplateHeaderCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateHeaderCellPresenter, _super);
        function TemplateHeaderCellPresenter(a, b) {
            var _this = _super.call(this, a) || this;
            _this.d = null;
            _this.d = b;
            return _this;
        }
        Object.defineProperty(TemplateHeaderCellPresenter.prototype, "e", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        TemplateHeaderCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = this.d.actualColumns._inner[a.k.az];
            var c = b.header;
            if (a.ax(CellModel.ei) || a.ax(CellModel.ge)) {
                var d = Math.min(1, Math.max(0, a.cb));
                var e = a.b1 * (1 - d);
                this.e.b8.element.setRawStyleProperty("opacity", e.toString());
            }
            var f = a;
            c.fd(f, this.e.b8);
        };
        TemplateHeaderCellPresenter.$t = igniteuiReactCore.markType(TemplateHeaderCellPresenter, 'TemplateHeaderCellPresenter', CellPresenterBase.$);
        return TemplateHeaderCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SectionHeaderCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SectionHeaderCell, _super);
        function SectionHeaderCell(a) {
            var _this = _super.call(this, a) || this;
            _this.b7 = null;
            _this.b7 = a.createElement("span");
            _this.z.setRawStyleProperty("text-align", "left");
            _this.z.setRawStyleProperty("vertical-align", "middle");
            _this.z.setRawStyleProperty("overflow", "hidden");
            _this.z.setRawStyleProperty("white-space", "nowrap");
            _this.z.setRawStyleProperty("text-overflow", "ellipsis");
            _this.z.append(_this.b7);
            return _this;
        }
        Object.defineProperty(SectionHeaderCell.prototype, "b8", {
            get: function () {
                return this.b7;
            },
            enumerable: true,
            configurable: true
        });
        SectionHeaderCell.prototype.get_r = function () {
            return true;
        };
        SectionHeaderCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            if (a == "Indent") {
                this.b7.setRawStyleProperty("margin-left", this.au + this.aw + 10 + "px");
            }
            if (a == "IsCollapsable") {
                if (this.o) {
                    this.b7.setRawStyleProperty("margin-left", this.au + this.aw + 10 + "px");
                }
                else {
                    this.b7.setRawStyleProperty("margin-left", "0px");
                }
            }
        };
        SectionHeaderCell.$t = igniteuiReactCore.markType(SectionHeaderCell, 'SectionHeaderCell', GridCellBase.$);
        return SectionHeaderCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SectionHeaderCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SectionHeaderCellPresenter, _super);
        function SectionHeaderCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(SectionHeaderCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        SectionHeaderCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                if (a.ax(SectionHeaderCellModel.kw) || a.ax(SectionHeaderCellModel.ky) || a.ax(SectionHeaderCellModel.kx) || a.ax(SectionHeaderCellModel.k0)) {
                    if (b.ks == null || (b.ks.length == 0 && b.k6 == null)) {
                        if (b.go == null) {
                            b.ip = "";
                        }
                        else {
                            b.ip = b.go.toString();
                        }
                    }
                    else {
                        if (b.k4 != null && b.kv == 0) {
                            b.ip = b.k6 + "    " + b.k4;
                        }
                        else {
                            b.ip = b.k6;
                        }
                    }
                    this.d.b8.setRawText(b.ip);
                }
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.b8, this.a);
            }
        };
        SectionHeaderCellPresenter.$t = igniteuiReactCore.markType(SectionHeaderCellPresenter, 'SectionHeaderCellPresenter', CellPresenterBase.$);
        return SectionHeaderCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var VerticalSeparatorCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(VerticalSeparatorCell, _super);
        function VerticalSeparatorCell(a) {
            var _this = _super.call(this, a) || this;
            _this.z.setStyleProperty("background-clip", "padding-box");
            return _this;
        }
        VerticalSeparatorCell.prototype.bp = function (a, b, c, d, e) {
            if (a == null) {
                this.z.setRawStyleProperty("border", "");
            }
            else {
                this.z.setRawStyleProperty("border-color", a._fill);
                this.z.setRawStyleProperty("border-left-width", b == 1 ? "thin" : b.toString() + "px");
                this.z.setRawStyleProperty("border-top-width", c.toString() + "px");
                this.z.setRawStyleProperty("border-right-width", d == 1 ? "thin" : d.toString() + "px");
                this.z.setRawStyleProperty("border-bottom-width", e.toString() + "px");
                this.z.setRawStyleProperty("border-style", "solid");
            }
        };
        VerticalSeparatorCell.$t = igniteuiReactCore.markType(VerticalSeparatorCell, 'VerticalSeparatorCell', GridCellBase.$);
        return VerticalSeparatorCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var VerticalSeparatorCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(VerticalSeparatorCellPresenter, _super);
        function VerticalSeparatorCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(VerticalSeparatorCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        VerticalSeparatorCellPresenter.$t = igniteuiReactCore.markType(VerticalSeparatorCellPresenter, 'VerticalSeparatorCellPresenter', CellPresenterBase.$);
        return VerticalSeparatorCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SummaryCell = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryCell, _super);
        function SummaryCell(a) {
            var _this = _super.call(this, a) || this;
            _this.b7 = null;
            _this.b8 = null;
            _this.b9 = null;
            _this.cd = -1;
            _this.cc = -1;
            _this.z.setRawStyleProperty("vertical-align", "middle");
            _this.b9 = a.createElement("div");
            _this.b7 = a.createElement("span");
            _this.b7.setRawStyleProperty("display", "inline-block");
            _this.b7.setRawStyleProperty("width", "40%");
            _this.b7.setRawStyleProperty("white-space", "nowrap");
            _this.b7.setRawStyleProperty("text-overflow", "ellipsis");
            _this.b7.setRawStyleProperty("vertical-align", "middle");
            _this.b7.setRawStyleProperty("overflow", "hidden");
            _this.b9.append(_this.b7);
            _this.b8 = a.createElement("span");
            _this.b8.setRawStyleProperty("display", "inline-block");
            _this.b8.setRawStyleProperty("width", "60%");
            _this.b8.setRawStyleProperty("text-align", "right");
            _this.b8.setRawStyleProperty("white-space", "nowrap");
            _this.b8.setRawStyleProperty("text-overflow", "ellipsis");
            _this.b8.setRawStyleProperty("vertical-align", "middle");
            _this.b8.setRawStyleProperty("overflow", "hidden");
            _this.b9.append(_this.b8);
            _this.z.append(_this.b9);
            return _this;
        }
        Object.defineProperty(SummaryCell.prototype, "ca", {
            get: function () {
                return this.b7;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(SummaryCell.prototype, "cb", {
            get: function () {
                return this.b8;
            },
            enumerable: true,
            configurable: true
        });
        SummaryCell.prototype.bw = function (a, b) {
            _super.prototype.bw.call(this, a, b);
            var c = Math.max(0, a - b);
            if (this.cd != c) {
                this.cd = c;
            }
        };
        SummaryCell.prototype.bq = function (a, b) {
            _super.prototype.bq.call(this, a, b);
            var c = Math.max(0, a - b);
            if (this.cc != c) {
                this.cc = c;
            }
        };
        SummaryCell.prototype.get_r = function () {
            return false;
        };
        SummaryCell.prototype.bg = function (a, b, c) {
            _super.prototype.bg.call(this, a, b, c);
            if (a == "Indent" || a == "IsCollapsable") {
                this.b9.setRawStyleProperty("margin-left", this.au + this.aw + this.av + "px");
            }
        };
        SummaryCell.$t = igniteuiReactCore.markType(SummaryCell, 'SummaryCell', GridCellBase.$);
        return SummaryCell;
    }(GridCellBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SummaryCellPresenter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SummaryCellPresenter, _super);
        function SummaryCellPresenter(a) {
            return _super.call(this, a) || this;
        }
        Object.defineProperty(SummaryCellPresenter.prototype, "d", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        SummaryCellPresenter.prototype.b = function (a) {
            _super.prototype.b.call(this, a);
            var b = a;
            if (a.as) {
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.ca, this.a);
                ContentCellModelHelper.a(this.a.w, b, this.a.z, this.d.cb, this.a);
                if (a.aw("ResolvedSummaryLabel") || a.aw("ResolvedSummaryValue")) {
                    if (b.ky != null) {
                        this.d.ca.setRawText(b.ky);
                    }
                    if (b.k0 != null) {
                        this.d.cb.setRawText(b.k0);
                    }
                }
                if (a.aw("SummaryLabelTextColor")) {
                    this.d.ca.setRawStyleProperty("color", b.k5._fill);
                }
                if (a.aw("SummaryLabelFontInfo")) {
                    var c = b.kr;
                    if (c == null) {
                        c = igniteuiReactCore.FontUtil.getDefaultFont(this.a.w);
                    }
                    this.d.ca.setRawStyleProperty("font", c.fontString);
                }
            }
        };
        SummaryCellPresenter.$t = igniteuiReactCore.markType(SummaryCellPresenter, 'SummaryCellPresenter', CellPresenterBase.$);
        return SummaryCellPresenter;
    }(CellPresenterBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridPresenterManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridPresenterManager, _super);
        function DataGridPresenterManager(a, b) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.c = false;
            _this.a = a;
            _this.c = b;
            return _this;
        }
        DataGridPresenterManager.prototype.b = function (a, b) {
            if (b.r != null) {
                return b.r;
            }
            if (this.c) {
                if (igniteuiReactCore.typeCast(TextCellModel.$, b) !== null) {
                    b.r = new CanvasTextCellPresenter(new CanvasTextCell(a));
                }
                if (igniteuiReactCore.typeCast(NumericCellModel.$, b) !== null) {
                    b.r = new CanvasNumericCellPresenter(new CanvasNumericCell(a));
                }
                if (igniteuiReactCore.typeCast(DateTimeCellModel.$, b) !== null) {
                    b.r = new CanvasDateTimeCellPresenter(new CanvasDateTimeCell(a));
                }
                if (igniteuiReactCore.typeCast(TextHeaderCellModel.$, b) !== null) {
                    b.r = new CanvasTextHeaderCellPresenter(new CanvasTextHeaderCell(a));
                }
                if (igniteuiReactCore.typeCast(RowSeparatorModel.$, b) !== null) {
                    b.r = new CanvasRowSeparatorCellPresenter(new CanvasRowSeparatorCell(a));
                }
                if (igniteuiReactCore.typeCast(ImageCellModel.$, b) !== null) {
                    b.r = new CanvasImageCellPresenter(new CanvasImageCell(a));
                }
                if (igniteuiReactCore.typeCast(TemplateCellModel.$, b) !== null) {
                    b.r = new CanvasTemplateCellPresenter(new CanvasTemplateCell(a), this.a);
                }
                if (igniteuiReactCore.typeCast(TemplateHeaderCellModel.$, b) !== null) {
                    b.r = new CanvasTemplateHeaderCellPresenter(new CanvasTemplateHeaderCell(a), this.a);
                }
                if (igniteuiReactCore.typeCast(SectionHeaderCellModel.$, b) !== null) {
                    b.r = new CanvasSectionHeaderCellPresenter(new CanvasSectionHeaderCell(a));
                }
                if (igniteuiReactCore.typeCast(VerticalSeparatorCellModel.$, b) !== null) {
                    b.r = new CanvasVerticalSeparatorCellPresenter(new CanvasVerticalSeparatorCell(a));
                }
                if (igniteuiReactCore.typeCast(SummaryCellModel.$, b) !== null) {
                    b.r = new CanvasSummaryCellPresenter(new CanvasSummaryCell(a));
                }
                if (igniteuiReactCore.typeCast(EditorCellModel.$, b) !== null) {
                    b.r = new EditorCellPresenter(new EditorCell(a));
                }
                if (igniteuiReactCore.typeCast(EditorRowCellModel.$, b) !== null) {
                    b.r = new EditorRowCellPresenter(new EditorRowCell(a));
                }
            }
            else {
                if (igniteuiReactCore.typeCast(TextCellModel.$, b) !== null) {
                    b.r = new TextCellPresenter(new TextCell(a));
                }
                if (igniteuiReactCore.typeCast(NumericCellModel.$, b) !== null) {
                    b.r = new NumericCellPresenter(new NumericCell(a));
                }
                if (igniteuiReactCore.typeCast(DateTimeCellModel.$, b) !== null) {
                    b.r = new DateTimeCellPresenter(new DateTimeCell(a));
                }
                if (igniteuiReactCore.typeCast(TextHeaderCellModel.$, b) !== null) {
                    b.r = new TextHeaderCellPresenter(new TextHeaderCell(a));
                }
                if (igniteuiReactCore.typeCast(RowSeparatorModel.$, b) !== null) {
                    b.r = new RowSeparatorCellPresenter(new RowSeparatorCell(a));
                }
                if (igniteuiReactCore.typeCast(ImageCellModel.$, b) !== null) {
                    b.r = new ImageCellPresenter(new ImageCell(a));
                }
                if (igniteuiReactCore.typeCast(TemplateCellModel.$, b) !== null) {
                    b.r = new TemplateCellPresenter(new TemplateCell(a), this.a);
                }
                if (igniteuiReactCore.typeCast(TemplateHeaderCellModel.$, b) !== null) {
                    b.r = new TemplateHeaderCellPresenter(new TemplateHeaderCell(a), this.a);
                }
                if (igniteuiReactCore.typeCast(SectionHeaderCellModel.$, b) !== null) {
                    b.r = new SectionHeaderCellPresenter(new SectionHeaderCell(a));
                }
                if (igniteuiReactCore.typeCast(VerticalSeparatorCellModel.$, b) !== null) {
                    b.r = new VerticalSeparatorCellPresenter(new VerticalSeparatorCell(a));
                }
                if (igniteuiReactCore.typeCast(SummaryCellModel.$, b) !== null) {
                    b.r = new SummaryCellPresenter(new SummaryCell(a));
                }
                if (igniteuiReactCore.typeCast(EditorCellModel.$, b) !== null) {
                    b.r = new EditorCellPresenter(new EditorCell(a));
                }
                if (igniteuiReactCore.typeCast(EditorRowCellModel.$, b) !== null) {
                    b.r = new EditorRowCellPresenter(new EditorRowCell(a));
                }
            }
            return b.r;
        };
        DataGridPresenterManager.$t = igniteuiReactCore.markType(DataGridPresenterManager, 'DataGridPresenterManager');
        return DataGridPresenterManager;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IViewportManager_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IViewportManager');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridViewportManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridViewportManager, _super);
        function DataGridViewportManager(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        DataGridViewportManager.prototype.moveViewportTo = function (x_, y_) {
            var grid_ = this.a;
            if (grid_._scrollTo) {
                grid_._scrollTo(x_, y_);
            }
            else {
                grid_.scrollTo(x_, y_);
            }
            ;
        };
        DataGridViewportManager.$t = igniteuiReactCore.markType(DataGridViewportManager, 'DataGridViewportManager', igniteuiReactCore.Base.$, [IViewportManager_$type]);
        return DataGridViewportManager;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IDelayedExecutionManager_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IDelayedExecutionManager');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridDelayedExecutionManager = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridDelayedExecutionManager, _super);
        function DataGridDelayedExecutionManager(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        DataGridDelayedExecutionManager.prototype.cancelPending = function (a) {
            this.a.clearTimeout(a);
        };
        DataGridDelayedExecutionManager.prototype.executeIn = function (a, b) {
            return this.a.setTimeout(function () { return a(); }, b);
        };
        DataGridDelayedExecutionManager.$t = igniteuiReactCore.markType(DataGridDelayedExecutionManager, 'DataGridDelayedExecutionManager', igniteuiReactCore.Base.$, [IDelayedExecutionManager_$type]);
        return DataGridDelayedExecutionManager;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IPropertySetter_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IPropertySetter');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridPropertySetter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridPropertySetter, _super);
        function DataGridPropertySetter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DataGridPropertySetter.prototype.setProperty = function (target_, propertyName_, value_) {
            if (target_ == null) {
                return;
            }
            target_[propertyName_] = value_;
        };
        DataGridPropertySetter.$t = igniteuiReactCore.markType(DataGridPropertySetter, 'DataGridPropertySetter', igniteuiReactCore.Base.$, [IPropertySetter_$type]);
        return DataGridPropertySetter;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IDraggerView_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IDraggerView');
    /**
     * @hidden
     */
    var IDragger_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IDragger');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DraggerView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DraggerView, _super);
        function DraggerView(a) {
            var _this = _super.call(this) || this;
            _this._model = null;
            _this.c = null;
            _this.a = null;
            _this.model = a;
            return _this;
        }
        Object.defineProperty(DraggerView.prototype, "model", {
            get: function () {
                return this._model;
            },
            set: function (a) {
                this._model = a;
            },
            enumerable: true,
            configurable: true
        });
        DraggerView.prototype.provideContainer = function (a) {
            if (a == null) {
                if (this.c != null) {
                    this.c = null;
                }
                if (this.a != null) {
                    this.a.ak = null;
                    this.a.aq();
                }
                return;
            }
            this.c = a;
            var b = Math.round(this.c.rootWrapper.width());
            var c = Math.round(this.c.rootWrapper.height());
            this.a = new igniteuiReactCore.CanvasGestureDOMEventProxy(this.c.rootWrapper, this.c, true);
            this.a.c2 = true;
            var d = this.a;
            d.onMouseOver = igniteuiReactCore.delegateCombine(d.onMouseOver, igniteuiReactCore.runOn(this, this.d));
            var e = this.a;
            e.onMouseUp = igniteuiReactCore.delegateCombine(e.onMouseUp, igniteuiReactCore.runOn(this, this.e));
            this.a.ak = igniteuiReactCore.runOn(this, this.b);
            this.model.viewportWidth = b;
            this.model.viewportHeight = c;
        };
        DraggerView.prototype.onDetachedFromUI = function () {
            if (this.a != null) {
                this.a.bb(this.c.rootWrapper, "");
            }
        };
        DraggerView.prototype.onAttachedToUI = function () {
            if (this.a != null) {
                this.a.ap(this.c.rootWrapper, "");
            }
        };
        DraggerView.prototype.b = function (a) {
            return this.model.isDragActive;
        };
        DraggerView.prototype.d = function (a, b, c) {
            this.f(a);
        };
        DraggerView.prototype.e = function (a) {
            this.g(a);
        };
        DraggerView.prototype.captureMouse = function () {
        };
        DraggerView.prototype.releaseMouse = function () {
        };
        DraggerView.prototype.transformPoint = function (a, b) {
            var c = igniteuiReactCore.BaseDOMEventProxy.cy(this.c.rootWrapper);
            var d = { $type: igniteuiReactCore.Point_$type, x: a - c.x, y: b - c.y };
            return d;
        };
        DraggerView.prototype.f = function (a) {
            this.model.onMouseMove(a.x, a.y);
        };
        DraggerView.prototype.g = function (a) {
            this.model.onMouseUp(a.x, a.y);
        };
        DraggerView.prototype.onViewportSizeChanged = function (a, b) {
            this.a.bf = new igniteuiReactCore.Rect(0, 0, 0, a, b);
        };
        DraggerView.$t = igniteuiReactCore.markType(DraggerView, 'DraggerView', igniteuiReactCore.Base.$, [IDraggerView_$type]);
        return DraggerView;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DragSelectEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DragSelectEventArgs, _super);
        function DragSelectEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._startX = 0;
            _this._startY = 0;
            _this._currentX = 0;
            _this._currentY = 0;
            _this._controlPressed = false;
            return _this;
        }
        Object.defineProperty(DragSelectEventArgs.prototype, "startX", {
            get: function () {
                return this._startX;
            },
            set: function (a) {
                this._startX = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DragSelectEventArgs.prototype, "startY", {
            get: function () {
                return this._startY;
            },
            set: function (a) {
                this._startY = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DragSelectEventArgs.prototype, "currentX", {
            get: function () {
                return this._currentX;
            },
            set: function (a) {
                this._currentX = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DragSelectEventArgs.prototype, "currentY", {
            get: function () {
                return this._currentY;
            },
            set: function (a) {
                this._currentY = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DragSelectEventArgs.prototype, "controlPressed", {
            get: function () {
                return this._controlPressed;
            },
            set: function (a) {
                this._controlPressed = a;
            },
            enumerable: true,
            configurable: true
        });
        DragSelectEventArgs.$t = igniteuiReactCore.markType(DragSelectEventArgs, 'DragSelectEventArgs', igniteuiReactCore.EventArgs.$);
        return DragSelectEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Dragger = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Dragger, _super);
        function Dragger() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.l = null;
            _this.d = false;
            _this.c = null;
            _this.b = 3;
            _this.e = false;
            _this.a = null;
            _this.g = 0;
            _this.f = 0;
            _this.onDrag = null;
            _this.onDragEnd = null;
            _this.propertyChanged = null;
            return _this;
        }
        Object.defineProperty(Dragger.prototype, "view", {
            get: function () {
                if (this.c == null) {
                    this.c = new DraggerView(this);
                }
                return this.c;
            },
            set: function (a) {
                this.c = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Dragger.prototype, "dragType", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Dragger.prototype, "isDragActive", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Dragger.prototype, "cellPath", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Dragger.prototype, "viewportWidth", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (b != this.g) {
                    this.j("ViewportWidth", b, this.g);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Dragger.prototype, "viewportHeight", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.j("ViewportHeight", b, this.f);
                }
            },
            enumerable: true,
            configurable: true
        });
        Dragger.prototype.j = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.k(a, b, c);
        };
        Dragger.prototype.onDetachedFromUI = function () {
            this.view.onDetachedFromUI();
        };
        Dragger.prototype.onAttachedToUI = function () {
            this.view.onAttachedToUI();
        };
        Dragger.prototype.provideContainer = function (a) {
            this.view.provideContainer(a);
        };
        Dragger.prototype.onMouseMove = function (a, b) {
            var _this = this;
            if (this.e) {
                if (this.onDrag != null) {
                    this.onDrag(this, ((function () {
                        var $ret = new DragSelectEventArgs();
                        $ret.startX = _this.l.x;
                        $ret.startY = _this.l.y;
                        $ret.currentX = a;
                        $ret.currentY = b;
                        $ret.controlPressed = _this.d;
                        return $ret;
                    })()));
                }
            }
        };
        Dragger.prototype.onMouseUp = function (a, b) {
            if (this.e) {
                this.view.releaseMouse();
                this.e = false;
                if (this.onDragEnd != null) {
                    this.onDragEnd(this, new DragSelectEventArgs());
                }
                this.b = 3;
            }
        };
        Dragger.prototype.dragStart = function (a, b, c, d, e, f, g) {
            if (!this.e) {
                this.l = this.view.transformPoint(a + c, b + d);
                this.e = true;
                this.d = g;
                this.b = e;
                this.a = f;
                this.view.captureMouse();
            }
        };
        Dragger.prototype.k = function (a, b, c) {
            switch (a) {
                case "ViewportWidth":
                case "ViewportHeight":
                    this.view.onViewportSizeChanged(this.g, this.f);
                    break;
            }
        };
        Dragger.$t = igniteuiReactCore.markType(Dragger, 'Dragger', igniteuiReactCore.Base.$, [IDragger_$type, igniteuiReactCore.INotifyPropertyChanged_$type]);
        return Dragger;
    }(igniteuiReactCore.Base));

    var defaultFont = "\"Verdana\", Arial, sans-serif";
    var DataGridStylingDefaults = {};

    var IgrFormatSummaryTextEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrFormatSummaryTextEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrFormatSummaryTextEventArgs.prototype.createImplementation = function () {
            return new FormatSummaryTextEventArgs();
        };
        Object.defineProperty(IgrFormatSummaryTextEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrFormatSummaryTextEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrFormatSummaryTextEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrFormatSummaryTextEventArgs.prototype, "field", {
            /**
             * Gets the summary property name.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrFormatSummaryTextEventArgs.prototype, "displayName", {
            /**
             * Gets the summary display name.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrFormatSummaryTextEventArgs.prototype, "summaryResult", {
            /**
             * Gets the original value before formatting.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrFormatSummaryTextEventArgs.prototype, "formattedResult", {
            /**
             * Gets or sets the summary value as formatted text.  Setting this property will only affect summary cells.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrFormatSummaryTextEventArgs.prototype, "formattedText", {
            /**
             * Gets or sets the final text that will be displayed in the group header.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrFormatSummaryTextEventArgs;
    }());

    /**
     * Represents a summary that is applied to a datasource. Changes to this object are not observed or expected after it is initially assigned to a collection.
    */
    var IgrColumnSummaryDescription = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnSummaryDescription() {
            this._formatText = null;
            this._formatText_wrapped = null;
            this._provideCalculator = null;
            this._provideCalculator_wrapped = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnSummaryDescription.prototype.createImplementation = function () {
            return new ColumnSummaryDescription(0);
        };
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSummaryDescription.prototype.onImplementationCreated = function () {
        };
        IgrColumnSummaryDescription.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "field", {
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "operand", {
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = igniteuiReactCore.ensureEnum(igniteuiReactCore.SummaryOperand_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "calculatorDisplayName", {
            /**
             * Gets or sets the name to use when displaying the calculator name.
            */
            get: function () {
                return this.i.ac;
            },
            set: function (v) {
                this.i.ac = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "displayName", {
            /**
             * Gets or sets the display name for the summary.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "valueFormat", {
            /**
             * Gets or sets the format string for the summary value.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "valueFormatSpecifiers", {
            /**
             * Gets or sets the format specifiers to use with the ValueFormat string.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "displayFormat", {
            /**
             * Gets or sets the display format for the summary when in list display mode.
            */
            get: function () {
                return this.i.ad;
            },
            set: function (v) {
                this.i.ad = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "displayFormatSpecifiers", {
            /**
             * Gets or sets the format specifiers to use with the DisplayFormat string.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "formatOverride", {
            /**
             * Gets or sets an INTL.DateTimeFormat or INTL.NumericFormat to use to format the value.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "maxFractionDigits", {
            /**
             * Gets or sets the minimum fraction digits. If FormatOverride is specificied this value is ignored.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSummaryDescription.prototype.findByName = function (name) {
            if (this.valueFormatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.valueFormatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.valueFormatSpecifiers, name);
            }
            if (this.displayFormatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.displayFormatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.displayFormatSpecifiers, name);
            }
            return null;
        };
        IgrColumnSummaryDescription.prototype.equals = function (other) {
            var iv = this.i.equals(other);
            return (iv);
        };
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "formatText", {
            /**
             * Called when the value is being formatted.
            */
            get: function () {
                return this._formatText;
            },
            set: function (ev) {
                var _this = this;
                if (this._formatText_wrapped !== null) {
                    this.i.formatText = igniteuiReactCore.delegateRemove(this.i.formatText, this._formatText_wrapped);
                    this._formatText_wrapped = null;
                    this._formatText = null;
                }
                this._formatText = ev;
                this._formatText_wrapped = function (o, e) {
                    var outerArgs = new IgrFormatSummaryTextEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFormatText) {
                        _this.beforeFormatText(_this, outerArgs);
                    }
                    if (_this._formatText) {
                        _this._formatText(_this, outerArgs);
                    }
                };
                this.i.formatText = igniteuiReactCore.delegateCombine(this.i.formatText, this._formatText_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnSummaryDescription.prototype, "provideCalculator", {
            /**
             * Called when the summary calculator is required.
            */
            get: function () {
                return this._provideCalculator;
            },
            set: function (ev) {
                var _this = this;
                if (this._provideCalculator_wrapped !== null) {
                    this.i.provideCalculator = igniteuiReactCore.delegateRemove(this.i.provideCalculator, this._provideCalculator_wrapped);
                    this._provideCalculator_wrapped = null;
                    this._provideCalculator = null;
                }
                this._provideCalculator = ev;
                this._provideCalculator_wrapped = function (o, e) {
                    var outerArgs = new igniteuiReactCore.IgrProvideCalculatorEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeProvideCalculator) {
                        _this.beforeProvideCalculator(_this, outerArgs);
                    }
                    if (_this._provideCalculator) {
                        _this._provideCalculator(_this, outerArgs);
                    }
                };
                this.i.provideCalculator = igniteuiReactCore.delegateCombine(this.i.provideCalculator, this._provideCalculator_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrColumnSummaryDescription;
    }());

    var IgrColumnSummaryDescriptionCollection = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnSummaryDescriptionCollection() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnSummaryDescriptionCollection.prototype.createImplementation = function () {
            return new ColumnSummaryDescriptionCollection();
        };
        Object.defineProperty(IgrColumnSummaryDescriptionCollection.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSummaryDescriptionCollection.prototype.onImplementationCreated = function () {
        };
        IgrColumnSummaryDescriptionCollection.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        IgrColumnSummaryDescriptionCollection.prototype.item = function (index, value) {
            var int = null;
            if (value !== undefined) {
                int = this.i.set(index, value == null ? null : value.i);
            }
            else {
                int = this.i.get(index);
            }
            var ext = null;
            if (int != null) {
                ext = int.externalObject;
                if (!ext) {
                    ext = new IgrColumnSummaryDescription();
                    ext._implementation = int;
                    int.externalObject = ext;
                }
            }
            return ext;
        };
        Object.defineProperty(IgrColumnSummaryDescriptionCollection.prototype, "count", {
            get: function () {
                return this.i.size();
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnSummaryDescriptionCollection.prototype.toArray = function () {
            var arr = [];
            for (var i = 0; i < this.count; i++) {
                arr[i] = this.item(i);
            }
            return arr;
        };
        IgrColumnSummaryDescriptionCollection.prototype[Symbol.iterator] = function () {
            var i, item;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < this.count))
                            return [3 /*break*/, 4];
                        item = this.item(i);
                        if (item.externalObject) {
                            item = item.externalObject;
                        }
                        return [4 /*yield*/, item];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        };
        IgrColumnSummaryDescriptionCollection.prototype.findByName = function (name) {
            return null;
        };
        IgrColumnSummaryDescriptionCollection.prototype.add = function (item) {
            var iv = this.i.g((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnSummaryDescriptionCollection.prototype.insert = function (index, item) {
            this.i.n(index, (item == null ? null : item.i));
        };
        IgrColumnSummaryDescriptionCollection.prototype.clear = function () {
            this.i.m();
        };
        IgrColumnSummaryDescriptionCollection.prototype.indexOf = function (item) {
            var iv = this.i.j((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnSummaryDescriptionCollection.prototype.remove = function (item) {
            var iv = this.i.h((item == null ? null : item.i));
            return (iv);
        };
        IgrColumnSummaryDescriptionCollection.prototype.removeAt = function (index) {
            var iv = this.i.d(index);
            return (iv == null ? null : iv.externalObject);
        };
        return IgrColumnSummaryDescriptionCollection;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrColumnHiddenChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnHiddenChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnHiddenChangedEventArgs.prototype.createImplementation = function () {
            return new ColumnHiddenChangedEventArgs();
        };
        Object.defineProperty(IgrColumnHiddenChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnHiddenChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrColumnHiddenChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrColumnHiddenChangedEventArgs.prototype, "column", {
            get: function () {
                if (this.i.a == null) {
                    return null;
                }
                if (!this.i.a.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.a);
                    if (e) {
                        e._implementation = this.i.a;
                    }
                    this.i.a.externalObject = e;
                }
                return this.i.a.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnHiddenChangedEventArgs.prototype, "isHidden", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrColumnHiddenChangedEventArgs;
    }());

    var IgrGridFilterExpressionsEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridFilterExpressionsEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridFilterExpressionsEventArgs.prototype.createImplementation = function () {
            return new GridFilterExpressionsEventArgs();
        };
        Object.defineProperty(IgrGridFilterExpressionsEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterExpressionsEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridFilterExpressionsEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridFilterExpressionsEventArgs.prototype, "filterExpressions", {
            get: function () {
                if (this.i.a == null) {
                    return null;
                }
                if (!this.i.a.externalObject) {
                    var e = new igniteuiReactCore.IgrFilterExpressionCollection();
                    e._implementation = this.i.a;
                    this.i.a.externalObject = e;
                }
                return this.i.a.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridFilterExpressionsEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Information about the entering action.
    */
    var IgrResponsiveStateEnteringEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrResponsiveStateEnteringEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrResponsiveStateEnteringEventArgs.prototype.createImplementation = function () {
            return new ResponsiveStateEnteringEventArgs();
        };
        Object.defineProperty(IgrResponsiveStateEnteringEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrResponsiveStateEnteringEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrResponsiveStateEnteringEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrResponsiveStateEnteringEventArgs;
    }());

    /**
     * Information about the entered action.
    */
    var IgrResponsiveStateEnteredEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrResponsiveStateEnteredEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrResponsiveStateEnteredEventArgs.prototype.createImplementation = function () {
            return new ResponsiveStateEnteredEventArgs();
        };
        Object.defineProperty(IgrResponsiveStateEnteredEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrResponsiveStateEnteredEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrResponsiveStateEnteredEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrResponsiveStateEnteredEventArgs;
    }());

    /**
     * Information about the exited state.
    */
    var IgrResponsiveStateExitedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrResponsiveStateExitedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrResponsiveStateExitedEventArgs.prototype.createImplementation = function () {
            return new ResponsiveStateExitedEventArgs();
        };
        Object.defineProperty(IgrResponsiveStateExitedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrResponsiveStateExitedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrResponsiveStateExitedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrResponsiveStateExitedEventArgs;
    }());

    /**
     * Describes a state that the grid can enter based on a set of responsive conditions.
    */
    var IgrResponsiveState = /** @class */ /*@__PURE__*/ (function () {
        function IgrResponsiveState() {
            this._stateEntering = null;
            this._stateEntering_wrapped = null;
            this._stateEntered = null;
            this._stateEntered_wrapped = null;
            this._stateExited = null;
            this._stateExited_wrapped = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrResponsiveState.prototype.createImplementation = function () {
            return new ResponsiveState();
        };
        Object.defineProperty(IgrResponsiveState.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrResponsiveState.prototype.onImplementationCreated = function () {
        };
        IgrResponsiveState.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrResponsiveState.prototype, "name", {
            /**
             * The name of the responsive state
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrResponsiveState.prototype, "minimumWidth", {
            /**
             * Gets or sets the minimum width for which this state is active.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrResponsiveState.prototype, "maximumWidth", {
            /**
             * Gets or sets the maximum width for which this state is active.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrResponsiveState.prototype, "isManualState", {
            /**
             * Configures this responsive state to only be manually actived
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrResponsiveState.prototype.findByName = function (name) {
            return null;
        };
        /**
         * Adds a responsive phase to the state.
        
        * @param phase  * The phase to add.
        */
        IgrResponsiveState.prototype.addResponsivePhase = function (phase) {
            var iv = this.i.d((phase == null ? null : phase.i));
            return (iv == null ? null : iv.externalObject);
        };
        /**
         * Adds a responsive phase to the state and returns it.
        
        */
        IgrResponsiveState.prototype.responsivePhase = function () {
            var iv = this.i.a();
            return (iv == null ? null : iv.externalObject);
        };
        Object.defineProperty(IgrResponsiveState.prototype, "stateEntering", {
            /**
             * Called when a state is being entered.
            */
            get: function () {
                return this._stateEntering;
            },
            set: function (ev) {
                var _this = this;
                if (this._stateEntering_wrapped !== null) {
                    this.i.stateEntering = igniteuiReactCore.delegateRemove(this.i.stateEntering, this._stateEntering_wrapped);
                    this._stateEntering_wrapped = null;
                    this._stateEntering = null;
                }
                this._stateEntering = ev;
                this._stateEntering_wrapped = function (o, e) {
                    var outerArgs = new IgrResponsiveStateEnteringEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeStateEntering) {
                        _this.beforeStateEntering(_this, outerArgs);
                    }
                    if (_this._stateEntering) {
                        _this._stateEntering(_this, outerArgs);
                    }
                };
                this.i.stateEntering = igniteuiReactCore.delegateCombine(this.i.stateEntering, this._stateEntering_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrResponsiveState.prototype, "stateEntered", {
            /**
             * Called when a state is entered.
            */
            get: function () {
                return this._stateEntered;
            },
            set: function (ev) {
                var _this = this;
                if (this._stateEntered_wrapped !== null) {
                    this.i.stateEntered = igniteuiReactCore.delegateRemove(this.i.stateEntered, this._stateEntered_wrapped);
                    this._stateEntered_wrapped = null;
                    this._stateEntered = null;
                }
                this._stateEntered = ev;
                this._stateEntered_wrapped = function (o, e) {
                    var outerArgs = new IgrResponsiveStateEnteredEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeStateEntered) {
                        _this.beforeStateEntered(_this, outerArgs);
                    }
                    if (_this._stateEntered) {
                        _this._stateEntered(_this, outerArgs);
                    }
                };
                this.i.stateEntered = igniteuiReactCore.delegateCombine(this.i.stateEntered, this._stateEntered_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrResponsiveState.prototype, "stateExited", {
            /**
             * Called when a state is exited.
            */
            get: function () {
                return this._stateExited;
            },
            set: function (ev) {
                var _this = this;
                if (this._stateExited_wrapped !== null) {
                    this.i.stateExited = igniteuiReactCore.delegateRemove(this.i.stateExited, this._stateExited_wrapped);
                    this._stateExited_wrapped = null;
                    this._stateExited = null;
                }
                this._stateExited = ev;
                this._stateExited_wrapped = function (o, e) {
                    var outerArgs = new IgrResponsiveStateExitedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeStateExited) {
                        _this.beforeStateExited(_this, outerArgs);
                    }
                    if (_this._stateExited) {
                        _this._stateExited(_this, outerArgs);
                    }
                };
                this.i.stateExited = igniteuiReactCore.delegateCombine(this.i.stateExited, this._stateExited_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrResponsiveState;
    }());

    var IgrResponsiveStatesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrResponsiveStatesCollection, _super);
        function IgrResponsiveStatesCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrResponsiveState.$type) {
                IgrResponsiveState.$type = igniteuiReactCore.markType(IgrResponsiveState, "IgrResponsiveState");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrResponsiveStatesCollection.prototype._createInnerColl = function () {
            if (!IgrResponsiveState.$type) {
                IgrResponsiveState.$type = igniteuiReactCore.markType(IgrResponsiveState, "IgrResponsiveState");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrResponsiveState.$type, ResponsiveState.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrResponsiveState();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrResponsiveStatesCollection;
    }(igniteuiReactCore.IgCollection));

    /**
     * Animation settings for the grid.
    */
    var IgrGridAnimationSettings = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridAnimationSettings() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridAnimationSettings.prototype.createImplementation = function () {
            return new GridAnimationSettings();
        };
        Object.defineProperty(IgrGridAnimationSettings.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridAnimationSettings.prototype.onImplementationCreated = function () {
        };
        IgrGridAnimationSettings.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        IgrGridAnimationSettings.prototype.findByName = function (name) {
            return null;
        };
        return IgrGridAnimationSettings;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Represents a Row separator, this is used to visually separate the rows in a grid
    */
    var IgrRowSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrRowSeparator, _super);
        function IgrRowSeparator(props) {
            return _super.call(this, props) || this;
        }
        IgrRowSeparator.prototype.createImplementation = function () {
            return new RowSeparator();
        };
        Object.defineProperty(IgrRowSeparator.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrRowSeparator;
    }(IgrDefinitionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Represents a Header Row separator. This is used to visually separate the header row from the rest of the rows in a grid.
    */
    var IgrHeaderRowSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrHeaderRowSeparator, _super);
        function IgrHeaderRowSeparator(props) {
            return _super.call(this, props) || this;
        }
        IgrHeaderRowSeparator.prototype.createImplementation = function () {
            return new HeaderRowSeparator();
        };
        Object.defineProperty(IgrHeaderRowSeparator.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrHeaderRowSeparator;
    }(IgrDefinitionBase));

    var IgrGridCellPosition = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridCellPosition() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridCellPosition.prototype.createImplementation = function () {
            return new GridCellPosition();
        };
        Object.defineProperty(IgrGridCellPosition.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridCellPosition.prototype.onImplementationCreated = function () {
        };
        IgrGridCellPosition.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridCellPosition.prototype, "rowIndex", {
            /**
             * Gets or sets the row position of the cell.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellPosition.prototype, "columnUniqueKey", {
            /**
             * Gets or sets the column position of the cell.  Can be null for spanning elements like section headers.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridCellPosition.prototype.findByName = function (name) {
            return null;
        };
        return IgrGridCellPosition;
    }());

    /**
     * Information about the change to the selected cells in the grid.
    */
    var IgrGridActiveCellChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridActiveCellChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridActiveCellChangedEventArgs.prototype.createImplementation = function () {
            return new GridActiveCellChangedEventArgs();
        };
        Object.defineProperty(IgrGridActiveCellChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridActiveCellChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridActiveCellChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridActiveCellChangedEventArgs.prototype, "newActiveCell", {
            /**
             * The new active cell.
            */
            get: function () {
                if (this.i.newActiveCell == null) {
                    return null;
                }
                if (!this.i.newActiveCell.externalObject) {
                    var e = new IgrGridCellPosition();
                    e._implementation = this.i.newActiveCell;
                    this.i.newActiveCell.externalObject = e;
                }
                return this.i.newActiveCell.externalObject;
            },
            set: function (v) {
                v == null ? this.i.newActiveCell = null : this.i.newActiveCell = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridActiveCellChangedEventArgs.prototype, "oldActiveCell", {
            /**
             * The old active cell.
            */
            get: function () {
                if (this.i.oldActiveCell == null) {
                    return null;
                }
                if (!this.i.oldActiveCell.externalObject) {
                    var e = new IgrGridCellPosition();
                    e._implementation = this.i.oldActiveCell;
                    this.i.oldActiveCell.externalObject = e;
                }
                return this.i.oldActiveCell.externalObject;
            },
            set: function (v) {
                v == null ? this.i.oldActiveCell = null : this.i.oldActiveCell = v.i;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridActiveCellChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridScrollerKeyboardListener = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridScrollerKeyboardListener, _super);
        function DataGridScrollerKeyboardListener(a) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.a = a;
            return _this;
        }
        DataGridScrollerKeyboardListener.prototype.onDownArrow = function (a, b) {
            return this.a.h8(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onEnd = function (a, b) {
            return this.a.h9(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onHome = function (a, b) {
            return this.a.id(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onLeftArrow = function (a, b) {
            return this.a.ie(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onPageDown = function (a, b) {
            return this.a.ig(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onPageUp = function (a, b) {
            return this.a.ih(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onRightArrow = function (a, b) {
            return this.a.ii(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onTab = function (a, b) {
            return this.a.ij(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onUpArrow = function (a, b) {
            return this.a.ik(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onWheel = function () {
            this.a.sc();
        };
        DataGridScrollerKeyboardListener.prototype.onEnter = function (a, b) {
            return this.a.ia(a, b);
        };
        DataGridScrollerKeyboardListener.prototype.onEscape = function () {
            return this.a.ib();
        };
        DataGridScrollerKeyboardListener.prototype.onF2 = function () {
            return this.a.ic();
        };
        DataGridScrollerKeyboardListener.$t = igniteuiReactCore.markType(DataGridScrollerKeyboardListener, 'DataGridScrollerKeyboardListener', igniteuiReactCore.Base.$, [igniteuiReactCore.IScrollerKeyboardListener_$type]);
        return DataGridScrollerKeyboardListener;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrHeaderSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrHeaderSeparator, _super);
        function IgrHeaderSeparator(props) {
            return _super.call(this, props) || this;
        }
        IgrHeaderSeparator.prototype.createImplementation = function () {
            return new HeaderSeparator();
        };
        Object.defineProperty(IgrHeaderSeparator.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrHeaderSeparator;
    }(IgrDefinitionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrColumnResizingSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumnResizingSeparator, _super);
        function IgrColumnResizingSeparator(props) {
            return _super.call(this, props) || this;
        }
        IgrColumnResizingSeparator.prototype.createImplementation = function () {
            return new ColumnResizingSeparator();
        };
        Object.defineProperty(IgrColumnResizingSeparator.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrColumnResizingSeparator;
    }(IgrDefinitionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrColumnMovingSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumnMovingSeparator, _super);
        function IgrColumnMovingSeparator(props) {
            return _super.call(this, props) || this;
        }
        IgrColumnMovingSeparator.prototype.createImplementation = function () {
            return new ColumnMovingSeparator();
        };
        Object.defineProperty(IgrColumnMovingSeparator.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnMovingSeparator.prototype, "separatorWidth", {
            /**
             * Gets or sets the separator width for this column.
            */
            get: function () {
                return this.i.em;
            },
            set: function (v) {
                this.i.em = +v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrColumnMovingSeparator;
    }(IgrDefinitionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrPinnedAreaSeparator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrPinnedAreaSeparator, _super);
        function IgrPinnedAreaSeparator(props) {
            return _super.call(this, props) || this;
        }
        IgrPinnedAreaSeparator.prototype.createImplementation = function () {
            return new PinnedAreaSeparator();
        };
        Object.defineProperty(IgrPinnedAreaSeparator.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrPinnedAreaSeparator;
    }(IgrDefinitionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Event arguments for the ColumnPinnedChanged event.
    */
    var IgrColumnPinnedChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnPinnedChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnPinnedChangedEventArgs.prototype.createImplementation = function () {
            return new ColumnPinnedChangedEventArgs();
        };
        Object.defineProperty(IgrColumnPinnedChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnPinnedChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrColumnPinnedChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrColumnPinnedChangedEventArgs.prototype, "column", {
            /**
             * The column whose pinned state has changed.
            */
            get: function () {
                if (this.i.a == null) {
                    return null;
                }
                if (!this.i.a.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.a);
                    if (e) {
                        e._implementation = this.i.a;
                    }
                    this.i.a.externalObject = e;
                }
                return this.i.a.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinnedChangedEventArgs.prototype, "pinned", {
            /**
             * The new pinned state for the column.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(PinnedPositions_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrColumnPinnedChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Event arguments for the CellValueChanging event
    */
    var IgrGridCellValueChangingEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridCellValueChangingEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridCellValueChangingEventArgs.prototype.createImplementation = function () {
            return new GridCellValueChangingEventArgs();
        };
        Object.defineProperty(IgrGridCellValueChangingEventArgs.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridCellValueChangingEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridCellValueChangingEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridCellValueChangingEventArgs.prototype, "cellInfo", {
            /**
             * The backing information for the current cell.
            */
            get: function () {
                if (this.i.cellInfo == null) {
                    return null;
                }
                if (!this.i.cellInfo.externalObject) {
                    var ext = null;
                    switch (this.i.cellInfo.$type.name) {
                        case "DateTimeCellModel":
                            ext = new IgrDateTimeCellInfo();
                            break;
                        case "ImageCellModel":
                            ext = new IgrImageCellInfo();
                            break;
                        case "NumericCellModel":
                            ext = new IgrNumericCellInfo();
                            break;
                        case "RowSeparatorModel":
                            ext = new IgrRowSeparatorInfo();
                            break;
                        case "SectionHeaderCellModel":
                            ext = new IgrSectionHeaderCellInfo();
                            break;
                        case "TemplateCellModel":
                            ext = new IgrTemplateCellInfo();
                            break;
                        case "TemplateHeaderCellModel":
                            ext = new IgrTemplateHeaderCellInfo();
                            break;
                        case "TemplateSectionHeaderCellModel":
                            ext = new IgrTemplateSectionHeaderCellInfo();
                            break;
                        case "TextCellModel":
                            ext = new IgrTextCellInfo();
                            break;
                        case "TextHeaderCellModel":
                            ext = new IgrTextHeaderCellInfo();
                            break;
                    }
                    ext._implementation = this.i.cellInfo;
                    this.i.cellInfo.externalObject = ext;
                }
                return this.i.cellInfo.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellValueChangingEventArgs.prototype, "editID", {
            /**
         * Gets the edit ID for this value change.
        */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellValueChangingEventArgs.prototype, "column", {
            /**
             * Gets the column the cell belongs to.
            */
            get: function () {
                if (this.i.b == null) {
                    return null;
                }
                if (!this.i.b.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.b);
                    if (e) {
                        e._implementation = this.i.b;
                    }
                    this.i.b.externalObject = e;
                }
                return this.i.b.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellValueChangingEventArgs.prototype, "oldValue", {
            /**
             * Gets the old cell value.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellValueChangingEventArgs.prototype, "newValue", {
            /**
             * Gets the new cell value.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridCellValueChangingEventArgs;
    }());

    /**
     * Event arguments for the DataCommitting event.
    */
    var IgrGridDataCommittingEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridDataCommittingEventArgs() {
        }
        Object.defineProperty(IgrGridDataCommittingEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridDataCommittingEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridDataCommittingEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridDataCommittingEventArgs.prototype, "changes", {
            /**
             * Gets a list of changes that are about to be committed.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridDataCommittingEventArgs.prototype, "commitID", {
            /**
             * The ID for the commit. Use this as the argument for the AcceptCommit or RejectCommit methods.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridDataCommittingEventArgs;
    }());

    /**
     * Event arguments for the DataCommitted event.
    */
    var IgrGridDataCommittedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridDataCommittedEventArgs() {
        }
        Object.defineProperty(IgrGridDataCommittedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridDataCommittedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridDataCommittedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridDataCommittedEventArgs.prototype, "commitID", {
            /**
             * Gets the ID for this commit.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridDataCommittedEventArgs.prototype, "changes", {
            /**
             * Gets a list of the changes that were committed.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridDataCommittedEventArgs;
    }());

    /**
     * Event arguments for the SizeChanged event.
    */
    var IgrGridSizeChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridSizeChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridSizeChangedEventArgs.prototype.createImplementation = function () {
            return new GridSizeChangedEventArgs();
        };
        Object.defineProperty(IgrGridSizeChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridSizeChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridSizeChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridSizeChangedEventArgs.prototype, "width", {
            /**
             * The new width.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridSizeChangedEventArgs.prototype, "height", {
            /**
             * The new height.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = +v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridSizeChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Event arguments for the GridColumnWidthChanged event.
    */
    var IgrGridColumnWidthChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnWidthChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridColumnWidthChangedEventArgs.prototype.createImplementation = function () {
            return new GridColumnWidthChangedEventArgs();
        };
        Object.defineProperty(IgrGridColumnWidthChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridColumnWidthChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridColumnWidthChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridColumnWidthChangedEventArgs.prototype, "column", {
            /**
             * The column whose Width has changed
            */
            get: function () {
                if (this.i.a == null) {
                    return null;
                }
                if (!this.i.a.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.a);
                    if (e) {
                        e._implementation = this.i.a;
                    }
                    this.i.a.externalObject = e;
                }
                return this.i.a.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnWidthChangedEventArgs.prototype, "oldWidth", {
            /**
             * The old column width.
            */
            get: function () {
                if (this.i.b == null) {
                    return null;
                }
                if (!this.i.b.externalObject) {
                    var e = new IgrColumnWidth();
                    e._implementation = this.i.b;
                    this.i.b.externalObject = e;
                }
                return this.i.b.externalObject;
            },
            set: function (v) {
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnWidthChangedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var AccessibilityRow = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(AccessibilityRow, _super);
        function AccessibilityRow() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.i = null;
            _this.e = 0;
            _this.d = 0;
            _this.f = null;
            _this.a = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, CellModel.$, 0);
            return _this;
        }
        Object.defineProperty(AccessibilityRow.prototype, "c", {
            get: function () {
                return this.e + 2;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(AccessibilityRow.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        AccessibilityRow.prototype.j = function (a, b) {
            if (!this.b.d(a.k.az)) {
                this.b.s(a.k.az, a);
            }
            else if (this.b.item(a.k.az) != a) {
                this.b.item(a.k.az, a);
            }
            b.setAttribute("id", this.g(a));
            b.setAttribute("role", this.f);
            if (a.k.au) {
                b.setAttribute("aria-colindex", "1");
                b.setAttribute("aria-colspan", this.d.toString());
            }
            else {
                b.setAttribute("aria-colindex", (a.k.az + 1).toString());
            }
            if (a.b8 == 1) {
                b.setAttribute("aria-selected", "true");
            }
            else {
                b.setAttribute("aria-selected", "false");
            }
            if (a.k.g) {
                if (a.m == 1) {
                    b.setAttribute("aria-sort", "ascending");
                }
                else if (a.m == 2) {
                    b.setAttribute("aria-sort", "descending");
                }
                else {
                    b.setAttribute("aria-sort", "none");
                }
            }
            if (a.ar) {
                b.setAttribute("aria-expanded", a.az ? "true" : "false");
            }
        };
        AccessibilityRow.prototype.h = function () {
            var a = "";
            for (var b = 0; b < this.d; b++) {
                if (this.b.d(b)) {
                    if (a.length > 0) {
                        a += " ";
                    }
                    var c = this.g(this.b.item(b));
                    a += c;
                }
            }
            if (a == "") {
                for (var d = 0; d < this.b.o.count; d++) {
                    var e = this.b.o._inner[d];
                    var f = this.b.item(e);
                    var g = this.g(f);
                    a += g;
                }
            }
            return a;
        };
        AccessibilityRow.prototype.k = function () {
            this.b.u();
        };
        AccessibilityRow.prototype.g = function (a) {
            if (a.k.ag || (a.k.aj && !a.k.h)) {
                if (a.k.au) {
                    return "cellid" + this.i + "r" + this.c + "span";
                }
                return "cellid" + this.i + "r" + this.c + "c" + a.k.az;
            }
            return null;
        };
        AccessibilityRow.prototype.l = function (a, b) {
            a.getNativeElement().removeAttribute(b);
        };
        AccessibilityRow.$t = igniteuiReactCore.markType(AccessibilityRow, 'AccessibilityRow');
        return AccessibilityRow;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridAccessibilityLayoutPanel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridAccessibilityLayoutPanel, _super);
        function DataGridAccessibilityLayoutPanel(a, b, c) {
            var _this = _super.call(this, a, b, c) || this;
            _this.a0 = new igniteuiReactCore.List$1(igniteuiReactCore.DomWrapper_$type, 0);
            _this.a1 = new igniteuiReactCore.Stack$1(igniteuiReactCore.DomWrapper_$type);
            _this.ay = new igniteuiReactCore.FastIterationDictionary$2(igniteuiReactCore.Number_$type, AccessibilityRow.$, 0);
            _this.aw = null;
            _this.a5 = null;
            _this.a5 = DataGridAccessibilityLayoutPanel.a4.toString();
            DataGridAccessibilityLayoutPanel.a4++;
            return _this;
        }
        DataGridAccessibilityLayoutPanel.prototype.refresh = function (a, b) {
            _super.prototype.refresh.call(this, a, b);
            if (this.rootElement != null) {
                var c = a.ck();
                var d = a.br.count;
                if (a.cl > 0) {
                    c++;
                }
                this.rootElement.setAttribute("role", "grid");
                this.rootElement.setAttribute("aria-rowcount", c.toString());
                this.rootElement.setAttribute("aria-colcount", d.toString());
                this.rootElement.setAttribute("aria-multiselectable", "true");
            }
        };
        DataGridAccessibilityLayoutPanel.prototype.af = function (a, b) {
            if (this.az(a)) {
                if (a.k.g) {
                    if (this.aw == null) {
                        this.aw = new AccessibilityRow();
                        this.aw.i = this.a5;
                        this.aw.e = -1;
                        this.aw.d = this.f.br.count;
                        this.aw.f = "columnheader";
                    }
                    this.aw.j(a, b);
                }
                else {
                    var c = a.k.g ? -1 : a.k.w;
                    var d = this.ax(c);
                    if (d == null) {
                        d = new AccessibilityRow();
                        d.i = this.a5;
                        d.e = c;
                        d.d = this.f.br.count;
                        d.f = "gridcell";
                        this.ay.s(c, d);
                    }
                    d.j(a, b);
                }
            }
        };
        DataGridAccessibilityLayoutPanel.prototype.ah = function (a, b) {
            if (this.az(a)) {
                this.a9(b, "id");
                this.a9(b, "role");
                this.a9(b, "aria-colindex");
                this.a9(b, "aria-selected");
                if (a.k.g) {
                    this.a9(b, "aria-sort");
                }
            }
        };
        DataGridAccessibilityLayoutPanel.prototype.ag = function (a, b) {
            if (this.az(a)) {
                this.af(a, b);
            }
        };
        DataGridAccessibilityLayoutPanel.prototype.al = function () {
            this.a6();
            if (this.aw != null) {
                this.a8(this.aw);
                this.aw.k();
            }
            var a = this.ay.q;
            for (var b = 0; b < a.count; b++) {
                var c = a._inner[b];
                this.a8(c);
                c.k();
            }
            this.aw = null;
            this.ay.u();
        };
        DataGridAccessibilityLayoutPanel.prototype.ax = function (a) {
            var b = this.ay.o;
            for (var c = 0; c < b.count; c++) {
                var d = b._inner[c];
                var e = this.ay.item(d);
                if (e != null && e.e == a) {
                    return e;
                }
            }
            return null;
        };
        DataGridAccessibilityLayoutPanel.prototype.a2 = function () {
            if (this.a1.f > 0) {
                return this.a1.e();
            }
            return null;
        };
        DataGridAccessibilityLayoutPanel.prototype.a3 = function (a) {
            for (var b = 0; b < this.a0.count; b++) {
                var c = parseInt(this.a0._inner[b].getAttribute("aria-rowindex"));
                if (c == a.c) {
                    return this.a0._inner[b];
                }
            }
            return null;
        };
        DataGridAccessibilityLayoutPanel.prototype.a8 = function (a) {
            var b = this.a3(a);
            if (b != null) {
                b.setAttribute("aria-owns", a.h());
                return;
            }
            b = this.a2();
            if (b != null) {
                b.setAttribute("aria-rowindex", a.c.toString());
                b.setAttribute("aria-owns", a.h());
                this.a7(a, b);
                return;
            }
            b = this.s.createElement("div");
            b.setAttribute("role", "row");
            b.setAttribute("aria-rowindex", a.c.toString());
            b.setAttribute("aria-owns", a.h());
            this.a7(a, b);
        };
        DataGridAccessibilityLayoutPanel.prototype.a6 = function () {
            for (var a = 0; a < this.a0.count; a++) {
                var b = this.a0._inner[a];
                var c = parseInt(b.getAttribute("aria-rowindex")) - 2;
                if (c != -1 && !this.ay.d(c)) {
                    b.remove();
                    this.a1.h(b);
                    this.a0.removeAt(a);
                    a--;
                }
            }
        };
        DataGridAccessibilityLayoutPanel.prototype.a7 = function (a, b) {
            var c = -1;
            for (var d = 0; d < this.a0.count; d++) {
                var e = parseInt(this.a0._inner[d].getAttribute("aria-rowindex"));
                if (a.c < e) {
                    c = d;
                    break;
                }
            }
            if (c != -1) {
                var native_ = this.element.getNativeElement();
                native_.insertBefore(b.getNativeElement(), this.a0._inner[c].getNativeElement());
                this.a0.insert(c, b);
            }
            else {
                this.element.append(b);
                this.a0.add(b);
            }
        };
        DataGridAccessibilityLayoutPanel.prototype.az = function (a) {
            return a.k.ag || (a.k.aj && !a.k.h);
        };
        DataGridAccessibilityLayoutPanel.prototype.a9 = function (a, b) {
            a.getNativeElement().removeAttribute(b);
        };
        DataGridAccessibilityLayoutPanel.$t = igniteuiReactCore.markType(DataGridAccessibilityLayoutPanel, 'DataGridAccessibilityLayoutPanel', DataGridCellLayoutPanel.$);
        DataGridAccessibilityLayoutPanel.a4 = 0;
        return DataGridAccessibilityLayoutPanel;
    }(DataGridCellLayoutPanel));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridCellEditStartedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridCellEditStartedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridCellEditStartedEventArgs.prototype.createImplementation = function () {
            return new GridCellEditStartedEventArgs();
        };
        Object.defineProperty(IgrGridCellEditStartedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridCellEditStartedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridCellEditStartedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridCellEditStartedEventArgs.prototype, "column", {
            /**
             * Gets the column of the cell that started editing.
            */
            get: function () {
                if (this.i.a == null) {
                    return null;
                }
                if (!this.i.a.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.a);
                    if (e) {
                        e._implementation = this.i.a;
                    }
                    this.i.a.externalObject = e;
                }
                return this.i.a.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellEditStartedEventArgs.prototype, "row", {
            /**
             * Gets the row index of the cell that started editing.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellEditStartedEventArgs.prototype, "item", {
            /**
             * Gets the row item.
            */
            get: function () {
                return this.i.item;
            },
            set: function (v) {
                this.i.item = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridCellEditStartedEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridCellEditEndedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridCellEditEndedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridCellEditEndedEventArgs.prototype.createImplementation = function () {
            return new GridCellEditEndedEventArgs();
        };
        Object.defineProperty(IgrGridCellEditEndedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridCellEditEndedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridCellEditEndedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridCellEditEndedEventArgs.prototype, "column", {
            /**
             * Gets the column of the cell that ended editing.
            */
            get: function () {
                if (this.i.a == null) {
                    return null;
                }
                if (!this.i.a.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.a);
                    if (e) {
                        e._implementation = this.i.a;
                    }
                    this.i.a.externalObject = e;
                }
                return this.i.a.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellEditEndedEventArgs.prototype, "row", {
            /**
             * Gets the row index of the cell that ended editing.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridCellEditEndedEventArgs.prototype, "item", {
            /**
             * Gets the row item.
            */
            get: function () {
                return this.i.item;
            },
            set: function (v) {
                this.i.item = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridCellEditEndedEventArgs;
    }());

    var IgrGridRowEditStartedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridRowEditStartedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridRowEditStartedEventArgs.prototype.createImplementation = function () {
            return new GridRowEditStartedEventArgs();
        };
        Object.defineProperty(IgrGridRowEditStartedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridRowEditStartedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridRowEditStartedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridRowEditStartedEventArgs.prototype, "row", {
            /**
             * Gets the row that started editing.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridRowEditStartedEventArgs.prototype, "item", {
            /**
             * Gets the row item.
            */
            get: function () {
                return this.i.item;
            },
            set: function (v) {
                this.i.item = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridRowEditStartedEventArgs;
    }());

    var IgrGridRowEditEndedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridRowEditEndedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridRowEditEndedEventArgs.prototype.createImplementation = function () {
            return new GridRowEditEndedEventArgs();
        };
        Object.defineProperty(IgrGridRowEditEndedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridRowEditEndedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridRowEditEndedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridRowEditEndedEventArgs.prototype, "row", {
            /**
             * Gets the row that ended editing.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridRowEditEndedEventArgs.prototype, "item", {
            /**
             * Gets the row item.
            */
            get: function () {
                return this.i.item;
            },
            set: function (v) {
                this.i.item = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridRowEditEndedEventArgs;
    }());

    var GridStylingDefaults = {};
    var IgrDataGrid = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDataGrid, _super);
        function IgrDataGrid(props) {
            var _this = _super.call(this, props) || this;
            _this.contentColumns = [];
            /**
             * The columns actually present in the grid. Do not directly modify this array.
             * This array's contents can be modified by causing React to reproject the child content.
             * Or adding and removing columns from the manual columns collection on the columns property.
             */
            _this.combinedColumns = [];
            _this._columns = null;
            _this._disableManualColumnSync = false;
            _this._scrollerStyle = 1 /* Fading */;
            _this._columnsAdapter = null;
            _this._renderer = null;
            _this._scroller = null;
            _this._dragger = null;
            _this._wrapper = null;
            _this._grid = null;
            _this._dataSource = null;
            _this._insetLeft = 0;
            _this._insetTop = 0;
            _this._insetRight = 0;
            _this._insetBottom = 0;
            _this._selectedItems = null;
            _this._selectedKeys = null;
            _this._selectedCells = null;
            _this._selectedCellRanges = null;
            _this._pinnedItems = null;
            _this._pinnedKeys = null;
            _this._responsiveStates = null;
            _this._actualColumns = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._filterExpressionsChanging = null;
            _this._filterExpressionsChanging_wrapped = null;
            _this._filterExpressionsChanged = null;
            _this._filterExpressionsChanged_wrapped = null;
            _this._cellPreviewPointerDown = null;
            _this._cellPreviewPointerDown_wrapped = null;
            _this._cellPreviewPointerUp = null;
            _this._cellPreviewPointerUp_wrapped = null;
            _this._cellPointerDown = null;
            _this._cellPointerDown_wrapped = null;
            _this._cellPointerUp = null;
            _this._cellPointerUp_wrapped = null;
            _this._cellClicked = null;
            _this._cellClicked_wrapped = null;
            _this._sortDescriptionsChanged = null;
            _this._sortDescriptionsChanged_wrapped = null;
            _this._groupDescriptionsChanged = null;
            _this._groupDescriptionsChanged_wrapped = null;
            _this._columnHiddenChanged = null;
            _this._columnHiddenChanged_wrapped = null;
            _this._columnPinnedChanged = null;
            _this._columnPinnedChanged_wrapped = null;
            _this._cellValueChanging = null;
            _this._cellValueChanging_wrapped = null;
            _this._dataCommitted = null;
            _this._dataCommitted_wrapped = null;
            _this._dataCommitting = null;
            _this._dataCommitting_wrapped = null;
            _this._sizeChanged = null;
            _this._sizeChanged_wrapped = null;
            _this._actualColumnsChanged = null;
            _this._actualColumnsChanged_wrapped = null;
            _this._columnsAutoGenerated = null;
            _this._columnsAutoGenerated_wrapped = null;
            _this._selectedItemsChanged = null;
            _this._selectedItemsChanged_wrapped = null;
            _this._selectedKeysChanged = null;
            _this._selectedKeysChanged_wrapped = null;
            _this._selectedCellsChanged = null;
            _this._selectedCellsChanged_wrapped = null;
            _this._activeCellChanged = null;
            _this._activeCellChanged_wrapped = null;
            _this._selectedCellRangesChanged = null;
            _this._selectedCellRangesChanged_wrapped = null;
            _this._columnWidthChanged = null;
            _this._columnWidthChanged_wrapped = null;
            _this._cellEditStarted = null;
            _this._cellEditStarted_wrapped = null;
            _this._cellEditEnded = null;
            _this._cellEditEnded_wrapped = null;
            _this._rowEditStarted = null;
            _this._rowEditStarted_wrapped = null;
            _this._rowEditEnded = null;
            _this._rowEditEnded_wrapped = null;
            _this._actualPrimaryKeyChange = null;
            _this._actualPrimaryKeyChange_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._getFilterDialog = _this._getFilterDialog.bind(_this);
            _this._contentChildrenManager = new igniteuiReactCore.ContentChildrenManager(function (ch) { return ch.props.name || ch.key || ch.props.field; }, function (ch) { return ch.name || ch.key || ch.field; }, function () { return _this._updateContentChildren(); });
            var useCanvas = false;
            if (props.useCanvas) {
                _this.useCanvas = true;
                useCanvas = true;
            }
            if (props.useAccessibility) {
                _this.useAccessibility = true;
            }
            if (document) {
                _this._container = document.createElement("div");
                _this._container.style.display = "block";
                _this._container.style.width = "100%";
                _this._container.style.height = "100%";
                _this._container.style.boxSizing = "border-box";
            }
            var root;
            root = _this._container;
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("filterDialog", _this.requestRender);
            _this._portalManager.disableContentPortal = true;
            _this._renderer = new igniteuiReactCore.ReactRenderer(root, document, true, DataGridStylingDefaults, _this._portalManager);
            _this._wrapper = _this._renderer;
            _this._implementation = new Grid();
            var grid = _this.i;
            _this._grid = grid;
            _this._columnsAdapter = new igniteuiReactCore.CollectionAdapter(_this.contentColumns, _this.i.columns, _this.combinedColumns, function (c) { return c.i; }, function (i) {
                i._provideRenderer(_this._wrapper);
                if (_this._container && _this._container.parentElement) {
                    i._styling(_this._container, _this, _this);
                }
            }, function (i) { i._provideRenderer(null); }, function (i) { return i.name || i.field; });
            grid.externalGrid = new GridExternalWrapper(_this);
            grid.tickProvider = new BrowserTickProvider(_this._renderer);
            grid.platformPixelConverter = new BrowserPixelConverter();
            if (_this.useAccessibility) {
                _this._contentLayout = new DataGridAccessibilityLayoutPanel(_this._renderer, new DataGridPresenterManager(_this._grid, false), window.devicePixelRatio);
            }
            else {
                _this._contentLayout = new DataGridCellLayoutPanel(_this._renderer, new DataGridPresenterManager(_this._grid, useCanvas), window.devicePixelRatio);
            }
            grid.renderingEngine = _this._contentLayout;
            grid.viewportManager = new DataGridViewportManager(_this);
            grid.delayedExecutionManager = new DataGridDelayedExecutionManager(_this._renderer);
            grid.propertySetter = new DataGridPropertySetter();
            //grid.provideContainer(ren);
            var scroller = new igniteuiReactCore.Scroller();
            scroller.scrollbarStyle = _this.scrollbarStyle;
            _this._scroller = scroller;
            _this._scroller.keyboardListener = new DataGridScrollerKeyboardListener(grid);
            scroller.provideContainer(_this._renderer);
            _this._content = (_this._contentLayout.element.getNativeElement());
            scroller.provideContent(new igniteuiReactCore.ReactWrapper(_this._content, _this._renderer));
            scroller.onScrolling = function () { return _this.onScroll(); };
            scroller.onScrollStart = function () { return _this.onScrollStart(); };
            scroller.onScrollStop = function () { return _this.onScrollStop(); };
            scroller.viewportWidth = _this._container.clientWidth;
            scroller.viewportHeight = _this._container.clientHeight;
            grid.dragger = new Dragger();
            grid.dragger.provideContainer(_this._renderer);
            grid.dragger.viewportWidth = _this._container.clientWidth;
            grid.dragger.viewportHeight = _this._container.clientHeight;
            _this.initializeProperties();
            scroller.verticalTrackStartInset = _this.actualHeaderHeight;
            _this._renderer.addSizeWatcher(function () {
                _this.containerResized();
            });
            return _this;
        }
        IgrDataGrid.prototype._insertExternalColumnAtIndex = function (index, column) {
            //let contentCount = this.contentColumns.length;
            var contentCount = this._columnsAdapter.actualContent.length;
            this.columns.insert(index - contentCount, column);
        };
        IgrDataGrid.prototype._removeExternalColumn = function (column) {
            var ind = -1;
            for (var i = 0; i < this.columns.count; i++) {
                if (this.columns.item(i) === column) {
                    ind = i;
                    break;
                }
            }
            if (ind >= 0) {
                this.columns.removeAt(ind);
            }
        };
        IgrDataGrid.prototype._updateContentChildren = function () {
            this.contentColumns.length = 0;
            var contentChildrenActual = this._contentChildrenManager.contentChildrenActual;
            for (var i = 0; i < contentChildrenActual.length; i++) {
                if ((Column.$type).isAssignableFrom(contentChildrenActual[i].i.$type)) {
                    if (!contentChildrenActual[i]._iniailizedMarkup) {
                        contentChildrenActual[i]._iniailizedMarkup = true;
                        contentChildrenActual[i].isFromMarkup = true;
                    }
                    this.contentColumns.push(contentChildrenActual[i]);
                }
            }
            if (this._columnsAdapter !== null) {
                this._columnsAdapter.notifyContentChanged();
            }
        };
        Object.defineProperty(IgrDataGrid.prototype, "actualDataSource", {
            get: function () {
                return this.i.actualDataSource;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            this.i.syncBorder();
            this._contentLayout.rootElement = this._elRef;
        };
        IgrDataGrid.prototype._getFilterDialog = function (ref) {
            this._filterDialogRef = ref;
        };
        IgrDataGrid.prototype._ensureColumnsAreManual = function () {
            this._disableManualColumnSync = true;
            this._columnsAdapter.shiftContentToManual(this.columns, function (i) { return i.isFromMarkup = false; });
            this._disableManualColumnSync = false;
        };
        Object.defineProperty(IgrDataGrid.prototype, "columns", {
            /**
             * A collection or manually added columns for the grid.
            */
            get: function () {
                var _this = this;
                if (this._columns === null) {
                    var coll = new IgrGridColumnCollection();
                    var inner = coll._innerColl;
                    inner.addListener(function (sender, e) {
                        if (_this._disableManualColumnSync) {
                            return;
                        }
                        switch (e.action) {
                            case igniteuiReactCore.NotifyCollectionChangedAction.Add:
                                _this._columnsAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Remove:
                                _this._columnsAdapter.removeManualItemAt(e.oldStartingIndex);
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Replace:
                                _this._columnsAdapter.removeManualItemAt(e.oldStartingIndex);
                                _this._columnsAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Reset:
                                _this._columnsAdapter.clearManualItems();
                                break;
                        }
                    });
                    this._columns = coll;
                }
                return this._columns;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this.containerResized();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.width = value;
                    this.containerResized();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "useCanvas", {
            get: function () {
                return this._useCanvas;
            },
            set: function (value) {
                this._useCanvas = igniteuiReactCore.ensureBool(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "useAccessibility", {
            get: function () {
                return this._useAccessibility;
            },
            set: function (value) {
                this._useAccessibility = igniteuiReactCore.ensureBool(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "scrollbarStyle", {
            get: function () {
                return this._scrollerStyle;
            },
            set: function (style) {
                this._scrollerStyle = igniteuiReactCore.ensureEnum(igniteuiReactCore.ScrollbarStyle_$type, style);
                if (this._scroller) {
                    this._scroller.scrollbarStyle = this._scrollerStyle;
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.render = function () {
            // if (!this._childrenDiffer(this.props.children)) {
            // 	let div = React.createElement("div", {
            // 		ref: (ref) => {
            // 			this._elRef = ref;
            // 		},
            // 		children: this.props.children
            // 	});
            // 	return div;
            // } else {
            var children = this._contentChildrenManager.getChildren(this.props.children);
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-data-grid igr-data-grid",
                ref: this._getMainRef,
                style: { boxSizing: "border-box", overflow: "hidden" },
                children: children
            });
            return div;
            //}
        };
        IgrDataGrid.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this._elRef.appendChild(this._container);
            this.containerResized();
            this.initializeContent();
        };
        IgrDataGrid.prototype.createImplementation = function () {
            var test = Grid;
            return new Grid();
        };
        IgrDataGrid.prototype.ngOnInit = function () {
        };
        Object.defineProperty(IgrDataGrid.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.onImplementationCreated = function () {
        };
        IgrDataGrid.prototype.requestRender = function () {
            this.setState({});
        };
        IgrDataGrid.prototype._focusScroller = function () {
            this._scroller.focus();
        };
        IgrDataGrid.prototype._setDefaultCursor = function () {
            if (this._elRef.style.cursor !== "") {
                this._elRef.style.cursor = "";
            }
        };
        IgrDataGrid.prototype._setResizeCursor = function () {
            if (this._elRef.style.cursor !== "col-resize") {
                this._elRef.style.cursor = "col-resize";
            }
        };
        IgrDataGrid.prototype._setHandCursor = function () {
            if (this._elRef.style.cursor !== "grabbing") {
                this._elRef.style.cursor = "grabbing";
            }
        };
        IgrDataGrid.prototype._setBorder = function (borderColor, borderLeft, borderTop, borderRight, borderBottom, radiusTopLeft, radiusTopRight, radiusBottomLeft, radiusBottomRight) {
            if (this._elRef) {
                if (borderLeft !== 0 || borderTop !== 0 || borderRight !== 0 || borderBottom !== 0) {
                    this._elRef.style.borderStyle = "solid";
                    this._elRef.style.borderColor = borderColor;
                    this._elRef.style.borderTopWidth = borderTop + "px";
                    this._elRef.style.borderRightWidth = borderRight + "px";
                    this._elRef.style.borderBottomWidth = borderBottom + "px";
                    this._elRef.style.borderLeftWidth = borderLeft + "px";
                    this._elRef.style.borderTopLeftRadius = radiusTopLeft + "px";
                    this._elRef.style.borderTopRightRadius = radiusTopRight + "px";
                    this._elRef.style.borderBottomLeftRadius = radiusBottomLeft + "px";
                    this._elRef.style.borderBottomRightRadius = radiusBottomRight + "px";
                }
                else {
                    this._elRef.style.borderStyle = "none";
                }
            }
        };
        IgrDataGrid.prototype._setScrollerVerticalTrackInset = function (inset) {
            this._scroller.verticalTrackStartInset = inset;
        };
        IgrDataGrid.prototype.initializeContent = function () {
            // supports themes or custom properties set in CSS 
            var prev = this._grid.columnPropertyUpdatingAnimationMode;
            this._grid.columnPropertyUpdatingAnimationMode = ColumnPropertyUpdatingAnimationMode.None;
            this._styling(this._container, this);
            this._grid.columnPropertyUpdatingAnimationMode = prev;
            this._updateContentChildren();
            prev = this._grid.columnPropertyUpdatingAnimationMode;
            this._grid.columnPropertyUpdatingAnimationMode = ColumnPropertyUpdatingAnimationMode.None;
            for (var i = 0; i < this.actualColumns.count; i++) {
                var c = this.actualColumns.item(i);
                c._styling(this._container, this, this);
            }
            this._grid.columnPropertyUpdatingAnimationMode = prev;
            this._grid.itemsSource = this._dataSource;
        };
        IgrDataGrid.prototype.componentWillUnmount = function () {
            //this._grid.destroy();
            this._wrapper.destroy();
        };
        IgrDataGrid.prototype.initializeProperties = function () {
            var e_1, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDataGrid.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDataGrid.prototype.containerResized = function () {
            var width = this._container.clientWidth;
            var height = this._container.clientHeight;
            this._scroller.viewportWidth = width;
            this._scroller.viewportHeight = height;
            this._grid.dragger.viewportWidth = width;
            this._grid.dragger.viewportHeight = height;
            this._grid.onSizeChanged(width, height);
            if (this._grid.model.actualVisibleRegion.isEmpty &&
                width > 0 && height > 0) {
                this._grid.setViewport(0, 0, width, height);
            }
            else {
                this.onScroll();
            }
        };
        ;
        IgrDataGrid.prototype.refreshContentSize = function () {
            if (this._content != null) {
                var width = this._grid.model.absoluteWidth;
                var height = this._grid.model.absoluteHeight;
                if (this._scroller != null) {
                    this._scroller.contentWidth = width;
                    this._scroller.contentHeight = height;
                }
            }
        };
        IgrDataGrid.prototype.onScroll = function () {
            var top = this._scroller.scrollTop;
            var left = this._scroller.scrollLeft;
            var width = this._scroller.viewportWidth;
            var height = this._scroller.viewportHeight;
            //console.log("top:" + top);
            this._grid.setViewport(left, top, left + width, top + height);
        };
        IgrDataGrid.prototype.onScrollStart = function () {
            this._grid.notifyScrollStart();
        };
        IgrDataGrid.prototype.onScrollStop = function () {
            this._grid.notifyScrollStop();
        };
        IgrDataGrid.prototype.scrollTo = function (x, y) {
            this._scroller.scrollTo(x, y);
            //let width = this._scroller.viewportWidth;
            //let height = this._scroller.viewportHeight;
            //this._grid.setViewport(x, y, x + width, y + height);
        };
        Object.defineProperty(IgrDataGrid.prototype, "dataSource", {
            get: function () {
                return this._dataSource;
            },
            set: function (value) {
                this._dataSource = value;
                if (this._grid != null) {
                    this._grid.itemsSource = this._dataSource;
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.forColumnsWithPropertyPath = function (propertyPath, callback) {
            for (var i = 0; i < this.i.actualColumns.count; i++) {
                var col = this.i.actualColumns.item(i).externalObject;
                if (col.field == propertyPath) {
                    callback(col);
                }
            }
        };
        Object.defineProperty(IgrDataGrid.prototype, "defaultColumnWidth", {
            /**
             * Gets or sets the default column width to use if a column as no local width.
             * */
            get: function () {
                var ext = this.i.defaultColumnWidth.externalObject;
                if (!ext) {
                    ext = new IgrColumnWidth();
                    ext._implementation = this.i.defaultColumnWidth;
                }
                return ext;
            },
            set: function (value) {
                if (typeof value == "string") {
                    var int = ColumnWidth.parse(value);
                    var ext = new IgrColumnWidth();
                    ext._implementation = int;
                    value = ext;
                }
                this.i.defaultColumnWidth = value.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "insetLeft", {
            /**
             * Gets or sets the amount of left inset space to use around the grid content.
            */
            get: function () {
                return this._insetLeft;
            },
            set: function (v) {
                this._insetLeft = +v;
                var inset = new igniteuiReactCore.Thickness(1, this._insetLeft, this._insetTop, this._insetRight, this._insetBottom);
                this.i.inset = inset;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "insetTop", {
            /**
             * Gets or sets the amount of top inset space to use around the grid content.
            */
            get: function () {
                return this._insetTop;
            },
            set: function (v) {
                this._insetTop = +v;
                var inset = new igniteuiReactCore.Thickness(1, this._insetLeft, this._insetTop, this._insetRight, this._insetBottom);
                this.i.inset = inset;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "insetRight", {
            /**
             * Gets or sets the amount of right inset space to use around the grid content.
            */
            get: function () {
                return this._insetLeft;
            },
            set: function (v) {
                this._insetRight = +v;
                var inset = new igniteuiReactCore.Thickness(1, this._insetLeft, this._insetTop, this._insetRight, this._insetBottom);
                this.i.inset = inset;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "insetBottom", {
            /**
             * Gets or sets the amount of bottom inset space to use around the grid content.
            */
            get: function () {
                return this._insetBottom;
            },
            set: function (v) {
                this._insetBottom = +v;
                var inset = new igniteuiReactCore.Thickness(1, this._insetLeft, this._insetTop, this._insetRight, this._insetBottom);
                this.i.inset = inset;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnResizingMode", {
            /**
         * Gets or sets the type of column resizing to use.
        */
            get: function () {
                return this.i.bu;
            },
            set: function (v) {
                this.i.bu = igniteuiReactCore.ensureEnum(ColumnResizingMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnMovingMode", {
            /**
             * Gets or sets the type column moving to use.
            */
            get: function () {
                return this.i.bg;
            },
            set: function (v) {
                this.i.bg = igniteuiReactCore.ensureEnum(ColumnMovingMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "isRowHoverEnabled", {
            /**
             * Gets or sets whether the row will highlight when hovered.
            */
            get: function () {
                return this.i.h4;
            },
            set: function (v) {
                this.i.h4 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowHoverBackground", {
            /**
             * Gets or sets the background color for rows when hovered.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u7);
            },
            set: function (v) {
                this.i.u7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editRowBorder", {
            /**
             * Gets or sets the border color for rows being edited.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.uz);
            },
            set: function (v) {
                this.i.uz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editRowBorderWidthBottom", {
            get: function () {
                return this.i.v0 ? this.i.v0.b : NaN;
            },
            set: function (v) {
                this.ensureEditRowBorderWidth();
                this.i.v0.b = +v;
                this.i.v0 = this.i.v0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editRowBorderWidthLeft", {
            get: function () {
                return this.i.v0 ? this.i.v0.c : NaN;
            },
            set: function (v) {
                this.ensureEditRowBorderWidth();
                this.i.v0.c = +v;
                this.i.v0 = this.i.v0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editRowBorderWidthRight", {
            get: function () {
                return this.i.v0 ? this.i.v0.d : NaN;
            },
            set: function (v) {
                this.ensureEditRowBorderWidth();
                this.i.v0.d = +v;
                this.i.v0 = this.i.v0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editRowBorderWidthTop", {
            get: function () {
                return this.i.v0 ? this.i.v0.e : NaN;
            },
            set: function (v) {
                this.ensureEditRowBorderWidth();
                this.i.v0.e = +v;
                this.i.v0 = this.i.v0;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.ensureEditRowBorderWidth = function () {
            if (this.i.v0) {
                return;
            }
            this.i.v0 = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrDataGrid.prototype, "sectionHeader", {
            /**
             * Gets or sets the header type used for sectioning off groups of rows.
            */
            get: function () {
                if (this.i.ey == null) {
                    return null;
                }
                if (!this.i.ey.externalObject) {
                    var e = IgrSectionHeader._createFromInternal(this.i.ey);
                    if (e) {
                        e._implementation = this.i.ey;
                    }
                    this.i.ey.externalObject = e;
                }
                return this.i.ey.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.ey = null : this.i.ey = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRowRoot", {
            /**
             * Gets or sets the cell definition used for summary rows at the root level.
            */
            get: function () {
                if (this.i.e8 == null) {
                    return null;
                }
                if (!this.i.e8.externalObject) {
                    var e = IgrSummaryRowRoot._createFromInternal(this.i.e8);
                    if (e) {
                        e._implementation = this.i.e8;
                    }
                    this.i.e8.externalObject = e;
                }
                return this.i.e8.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.e8 = null : this.i.e8 = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRowSection", {
            /**
             * Gets or sets the cell definition used for summary rows at the section level.
            */
            get: function () {
                if (this.i.fa == null) {
                    return null;
                }
                if (!this.i.fa.externalObject) {
                    var e = IgrSummaryRowSection._createFromInternal(this.i.fa);
                    if (e) {
                        e._implementation = this.i.fa;
                    }
                    this.i.fa.externalObject = e;
                }
                return this.i.fa.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.fa = null : this.i.fa = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowSeparator", {
            /**
             * Gets or sets the row seperator settings.
            */
            get: function () {
                if (this.i.eu == null) {
                    return null;
                }
                if (!this.i.eu.externalObject) {
                    var e = IgrRowSeparator._createFromInternal(this.i.eu);
                    if (e) {
                        e._implementation = this.i.eu;
                    }
                    this.i.eu.externalObject = e;
                }
                return this.i.eu.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.eu = null : this.i.eu = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerRowSeparator", {
            /**
             * Gets or sets the header row seperator settings.
            */
            get: function () {
                if (this.i.d2 == null) {
                    return null;
                }
                if (!this.i.d2.externalObject) {
                    var e = IgrHeaderRowSeparator._createFromInternal(this.i.d2);
                    if (e) {
                        e._implementation = this.i.d2;
                    }
                    this.i.d2.externalObject = e;
                }
                return this.i.d2.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.d2 = null : this.i.d2 = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerSeparator", {
            /**
             * Gets or sets the header seperator settings.
            */
            get: function () {
                if (this.i.d4 == null) {
                    return null;
                }
                if (!this.i.d4.externalObject) {
                    var e = IgrHeaderSeparator._createFromInternal(this.i.d4);
                    if (e) {
                        e._implementation = this.i.d4;
                    }
                    this.i.d4.externalObject = e;
                }
                return this.i.d4.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.d4 = null : this.i.d4 = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnResizingSeparator", {
            /**
             * Gets or sets the column resizing seperator settings.
            */
            get: function () {
                if (this.i.bw == null) {
                    return null;
                }
                if (!this.i.bw.externalObject) {
                    var e = IgrColumnResizingSeparator._createFromInternal(this.i.bw);
                    if (e) {
                        e._implementation = this.i.bw;
                    }
                    this.i.bw.externalObject = e;
                }
                return this.i.bw.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.bw = null : this.i.bw = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnMovingSeparator", {
            /**
             * Gets or sets the column resizing seperator settings.
            */
            get: function () {
                if (this.i.bi == null) {
                    return null;
                }
                if (!this.i.bi.externalObject) {
                    var e = IgrColumnMovingSeparator._createFromInternal(this.i.bi);
                    if (e) {
                        e._implementation = this.i.bi;
                    }
                    this.i.bi.externalObject = e;
                }
                return this.i.bi.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.bi = null : this.i.bi = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "pinnedAreaSeparator", {
            /**
             * Gets or sets the pinned area separator settings.
            */
            get: function () {
                if (this.i.ei == null) {
                    return null;
                }
                if (!this.i.ei.externalObject) {
                    var e = IgrPinnedAreaSeparator._createFromInternal(this.i.ei);
                    if (e) {
                        e._implementation = this.i.ei;
                    }
                    this.i.ei.externalObject = e;
                }
                return this.i.ei.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.ei = null : this.i.ei = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "autoGenerateDesiredProperties", {
            /**
             * Gets or sets the desired properties the grid will automatically generate columns for.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "dataSourceDesiredProperties", {
            /**
             * Gets or sets the desired properties for the data source to load. If specified the data source may decide to constrain the properties it fetches to these properties and must make sure that at least those properties are loaded, rather than the default behavior for that data source.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "density", {
            /**
             * Gets or sets the display density to use for the grid.
            */
            get: function () {
                return this.i.fg;
            },
            set: function (v) {
                this.i.fg = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualRowHeight", {
            /**
             * Gets the actual height for the rows in the grid.
            */
            get: function () {
                return this.i.kl;
            },
            set: function (v) {
                this.i.kl = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowHeight", {
            /**
             * Gets or sets the height to use for the rows in the grid. If not set the grid will
             * use the default value for the set display density.
            */
            get: function () {
                return this.i.le;
            },
            set: function (v) {
                this.i.le = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "defaultColumnMinWidth", {
            /**
             * Gets or sets the default minimum width to use on all columns. Ignored if NaN.
            */
            get: function () {
                return this.i.jn;
            },
            set: function (v) {
                this.i.jn = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualHeaderHeight", {
            /**
             * Gets the height used for the header row.
            */
            get: function () {
                return this.i.kk;
            },
            set: function (v) {
                this.i.kk = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerHeight", {
            /**
             * Gets or sets the height to use for the header row.
            */
            get: function () {
                return this.i.k6;
            },
            set: function (v) {
                this.i.k6 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerClickAction", {
            /**
             * Returns/sets the action to take when a column header is clicked.
            */
            get: function () {
                return this.i.d0;
            },
            set: function (v) {
                this.i.d0 = igniteuiReactCore.ensureEnum(HeaderClickAction_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editMode", {
            /**
             * Gets or sets the type of edit mode
            */
            get: function () {
                return this.i.cf;
            },
            set: function (v) {
                this.i.cf = igniteuiReactCore.ensureEnum(EditModeType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editModeClickAction", {
            /**
             * Gets or sets the type of click action required to enter edit mode.
            */
            get: function () {
                return this.i.cd;
            },
            set: function (v) {
                this.i.cd = igniteuiReactCore.ensureEnum(EditModeClickAction_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "autoGenerateColumns", {
            /**
             * Configures whether or not the grid will autogenerate columns when the data source is set.
            */
            get: function () {
                return this.i.g3;
            },
            set: function (v) {
                this.i.g3 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowSeparatorHeight", {
            /**
             * Sets or gets the height to use for the row separators.
            */
            get: function () {
                return this.i.lg;
            },
            set: function (v) {
                this.i.lg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "isPlaceholderRenderingEnabled", {
            /**
             * Configures whether or not place holders are used for cells who do not have their data yet.
            */
            get: function () {
                return this.i.hy;
            },
            set: function (v) {
                this.i.hy = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnAddingAnimationMode", {
            /**
             * Sets or gets the Column Adding Animation mode to use.
            */
            get: function () {
                return this.i.bz;
            },
            set: function (v) {
                this.i.bz = igniteuiReactCore.ensureEnum(ColumnShowingAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnPropertyUpdatingAnimationMode", {
            /**
             * Sets or gets the Column Property Updating Animation mode to use.
            */
            get: function () {
                return this.i.columnPropertyUpdatingAnimationMode;
            },
            set: function (v) {
                this.i.columnPropertyUpdatingAnimationMode = igniteuiReactCore.ensureEnum(ColumnPropertyUpdatingAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellDataLoadedAnimationMode", {
            /**
             * Sets or gets the cell data loaded animation mode to use.
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = igniteuiReactCore.ensureEnum(CellDataLoadedAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowSelectionAnimationMode", {
            /**
             * Sets or gets the row selection animation mode to use.
            */
            get: function () {
                return this.i.es;
            },
            set: function (v) {
                this.i.es = igniteuiReactCore.ensureEnum(RowSelectionAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowHoverAnimationMode", {
            /**
             * Sets or gets the row hover animation mode to use.
            */
            get: function () {
                return this.i.ep;
            },
            set: function (v) {
                this.i.ep = igniteuiReactCore.ensureEnum(RowHoverAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellSelectionAnimationMode", {
            /**
             * Sets or gets the cell selection animation mode to use.
            */
            get: function () {
                return this.i.aw;
            },
            set: function (v) {
                this.i.aw = igniteuiReactCore.ensureEnum(CellSelectionAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "animationSettings", {
            /**
             * Sets or gets the default animation settings for the grid.
            */
            get: function () {
                if (this.i.cm == null) {
                    return null;
                }
                if (!this.i.cm.externalObject) {
                    var e = new IgrGridAnimationSettings();
                    e._implementation = this.i.cm;
                    this.i.cm.externalObject = e;
                }
                return this.i.cm.externalObject;
            },
            set: function (v) {
                v == null ? this.i.cm = null : this.i.cm = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnResizingAnimationMode", {
            /**
             * Sets or gets the column resizing animation mode to use. Only applies when resizing in Deferred mode.
            */
            get: function () {
                return this.i.br;
            },
            set: function (v) {
                this.i.br = igniteuiReactCore.ensureEnum(ColumnResizingAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnShowingAnimationMode", {
            /**
             * Sets or gets the column showing animation mode to use.
            */
            get: function () {
                return this.i.b0;
            },
            set: function (v) {
                this.i.b0 = igniteuiReactCore.ensureEnum(ColumnShowingAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnMovingAnimationMode", {
            /**
             * Sets or gets the column moving animation mode to use.
            */
            get: function () {
                return this.i.bd;
            },
            set: function (v) {
                this.i.bd = igniteuiReactCore.ensureEnum(ColumnMovingAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnHidingAnimationMode", {
            /**
             * Sets or gets the column hiding animation mode to use.
            */
            get: function () {
                return this.i.ba;
            },
            set: function (v) {
                this.i.ba = igniteuiReactCore.ensureEnum(ColumnHidingAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnExchangingAnimationMode", {
            /**
             * Sets or gets the column exchanging animation mode to use.
            */
            get: function () {
                return this.i.a4;
            },
            set: function (v) {
                this.i.a4 = igniteuiReactCore.ensureEnum(ColumnExchangingAnimationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectionMode", {
            /**
             * Sets or gets the grid selection mode.
            */
            get: function () {
                return this.i.dt;
            },
            set: function (v) {
                this.i.dt = igniteuiReactCore.ensureEnum(GridSelectionMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "activationMode", {
            /**
             * Sets or gets the grid selection mode.
            */
            get: function () {
                return this.i.ch;
            },
            set: function (v) {
                this.i.ch = igniteuiReactCore.ensureEnum(GridActivationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectionBehavior", {
            /**
             * Sets or gets how selection behaves in the grid.
            */
            get: function () {
                return this.i.dr;
            },
            set: function (v) {
                this.i.dr = igniteuiReactCore.ensureEnum(GridSelectionBehavior_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedItems", {
            /**
             * Gets which items are currently selected in the grid. Collection can be updated to programatically select items.
            */
            get: function () {
                if (this._selectedItems === null) {
                    var coll = new IgrGridSelectedItemsCollection();
                    var innerColl = this.i.ad;
                    if (!innerColl) {
                        innerColl = new GridSelectedItemsCollection();
                    }
                    this._selectedItems = coll._fromInner(innerColl);
                }
                return this._selectedItems;
            },
            set: function (v) {
                if (this._selectedItems !== null) {
                    this._selectedItems._setSyncTarget(null);
                    this._selectedItems = null;
                }
                var coll = new IgrGridSelectedItemsCollection();
                this._selectedItems = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(igniteuiReactCore.Base.$type);
                var innerColl = this.i.ad;
                if (!innerColl) {
                    innerColl = new GridSelectedItemsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._selectedItems._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedKeys", {
            /**
             * Gets which primary key values are currently selected in the grid. Collection can be updated to programatically select items.
            */
            get: function () {
                if (this._selectedKeys === null) {
                    var coll = new IgrGridSelectedKeysCollection();
                    var innerColl = this.i.ah;
                    if (!innerColl) {
                        innerColl = new GridSelectedKeysCollection();
                    }
                    this._selectedKeys = coll._fromInner(innerColl);
                }
                return this._selectedKeys;
            },
            set: function (v) {
                if (this._selectedKeys !== null) {
                    this._selectedKeys._setSyncTarget(null);
                    this._selectedKeys = null;
                }
                var coll = new IgrGridSelectedKeysCollection();
                this._selectedKeys = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(PrimaryKeyValue.$type);
                var innerColl = this.i.ah;
                if (!innerColl) {
                    innerColl = new GridSelectedKeysCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._selectedKeys._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedCells", {
            /**
             * Gets which cells are currently selected in the grid. Collection can be updated to programatically select cells.
            */
            get: function () {
                if (this._selectedCells === null) {
                    var coll = new IgrGridSelectedCellsCollection();
                    var innerColl = this.i.dm;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellsCollection();
                    }
                    this._selectedCells = coll._fromInner(innerColl);
                }
                return this._selectedCells;
            },
            set: function (v) {
                if (this._selectedCells !== null) {
                    this._selectedCells._setSyncTarget(null);
                    this._selectedCells = null;
                }
                var coll = new IgrGridSelectedCellsCollection();
                this._selectedCells = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellKey.$type);
                var innerColl = this.i.dm;
                if (!innerColl) {
                    innerColl = new GridSelectedCellsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._selectedCells._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedCellRanges", {
            /**
             * Gets which cell ranges are currently selected in the grid. Collection can be updated to programatically select cells.
            */
            get: function () {
                if (this._selectedCellRanges === null) {
                    var coll = new IgrGridSelectedCellRangesCollection();
                    var innerColl = this.i.dj;
                    if (!innerColl) {
                        innerColl = new GridSelectedCellRangesCollection();
                    }
                    this._selectedCellRanges = coll._fromInner(innerColl);
                }
                return this._selectedCellRanges;
            },
            set: function (v) {
                if (this._selectedCellRanges !== null) {
                    this._selectedCellRanges._setSyncTarget(null);
                    this._selectedCellRanges = null;
                }
                var coll = new IgrGridSelectedCellRangesCollection();
                this._selectedCellRanges = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(CellRange.$type);
                var innerColl = this.i.dj;
                if (!innerColl) {
                    innerColl = new GridSelectedCellRangesCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._selectedCellRanges._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "pinnedItems", {
            /**
             * Gets which items are currently pinned in the grid. Collection can be updated to programatically pin items.
            */
            get: function () {
                if (this._pinnedItems === null) {
                    var coll = new IgrGridSelectedItemsCollection();
                    var innerColl = this.i.ac;
                    if (!innerColl) {
                        innerColl = new GridSelectedItemsCollection();
                    }
                    this._pinnedItems = coll._fromInner(innerColl);
                }
                return this._pinnedItems;
            },
            set: function (v) {
                if (this._pinnedItems !== null) {
                    this._pinnedItems._setSyncTarget(null);
                    this._pinnedItems = null;
                }
                var coll = new IgrGridSelectedItemsCollection();
                this._pinnedItems = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(igniteuiReactCore.Base.$type);
                var innerColl = this.i.ac;
                if (!innerColl) {
                    innerColl = new GridSelectedItemsCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._pinnedItems._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "pinnedKeys", {
            /**
             * Gets which primary keys are currently pinned in the grid. Collection can be updated to programatically pin items.
            */
            get: function () {
                if (this._pinnedKeys === null) {
                    var coll = new IgrGridSelectedKeysCollection();
                    var innerColl = this.i.ag;
                    if (!innerColl) {
                        innerColl = new GridSelectedKeysCollection();
                    }
                    this._pinnedKeys = coll._fromInner(innerColl);
                }
                return this._pinnedKeys;
            },
            set: function (v) {
                if (this._pinnedKeys !== null) {
                    this._pinnedKeys._setSyncTarget(null);
                    this._pinnedKeys = null;
                }
                var coll = new IgrGridSelectedKeysCollection();
                this._pinnedKeys = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(PrimaryKeyValue.$type);
                var innerColl = this.i.ag;
                if (!innerColl) {
                    innerColl = new GridSelectedKeysCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._pinnedKeys._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "isColumnOptionsEnabled", {
            /**
             * Gets or sets whether to show the column options UI in the headers for columns.
            */
            get: function () {
                return this.i.hn;
            },
            set: function (v) {
                this.i.hn = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "isGroupRowSticky", {
            /**
             * Gets or sets if group rows will stick to the top of the grid.
            */
            get: function () {
                return this.i.hu;
            },
            set: function (v) {
                this.i.hu = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "isHeaderSeparatorVisible", {
            /**
             * Gets or sets if header separators are rendered.
            */
            get: function () {
                return this.i.hv;
            },
            set: function (v) {
                this.i.hv = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellSelectedBackground", {
            /**
             * Gets or sets the default background color to use for content cells when a row is in a selected state
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ut);
            },
            set: function (v) {
                this.i.ut = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "sectionHeaderSelectedBackground", {
            /**
             * Gets or sets the default background color to use for section header cells when a row is in a selected state
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vd);
            },
            set: function (v) {
                this.i.vd = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRootBackground", {
            /**
             * Gets or sets the default background color to use for summary cells at the root level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vg);
            },
            set: function (v) {
                this.i.vg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summarySectionBackground", {
            /**
             * Gets or sets the default background color to use for summary cells at the section level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vk);
            },
            set: function (v) {
                this.i.vk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "pinnedRowOpacity", {
            /**
             * Gets or sets the default opacity to use for pinned rows
            */
            get: function () {
                return this.i.jp;
            },
            set: function (v) {
                this.i.jp = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editTextStyle", {
            /**
             * Gets or sets the font to use for cells that have been edited.
            */
            get: function () {
                if (this.i.fq == null) {
                    return null;
                }
                return this.i.fq.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fq = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "editOpacity", {
            /**
             * Gets or sets the default opacity for unsaved cell edits.
            */
            get: function () {
                return this.i.jo;
            },
            set: function (v) {
                this.i.jo = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "deletedTextColor", {
            /**
             * Gets or sets the text color for unsaved deleted rows.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.uy);
            },
            set: function (v) {
                this.i.uy = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "stickyRowBackground", {
            /**
             * Gets or sets the default color to use for sticky rows
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vf);
            },
            set: function (v) {
                this.i.vf = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "pinnedRowBackground", {
            /**
             * Gets or sets the default color to use for pinned rows
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u6);
            },
            set: function (v) {
                this.i.u6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "lastStickyRowBackground", {
            /**
             * Gets or sets the default color to use for the last sticky row
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u5);
            },
            set: function (v) {
                this.i.u5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "activeCell", {
            /**
             * Gets or sets the position of the active cell.
            */
            get: function () {
                if (this.i.cw == null) {
                    return null;
                }
                if (!this.i.cw.externalObject) {
                    var e = new IgrGridCellPosition();
                    e._implementation = this.i.cw;
                    this.i.cw.externalObject = e;
                }
                return this.i.cw.externalObject;
            },
            set: function (v) {
                v == null ? this.i.cw = null : this.i.cw = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellBackground", {
            /**
             * Gets or sets the default background color to use for content cells
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.us);
            },
            set: function (v) {
                this.i.us = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellTextColor", {
            /**
             * Gets or sets the default text color to use for content cells
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.uu);
            },
            set: function (v) {
                this.i.uu = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerSortIndicatorColor", {
            /**
             * Gets or sets the default text color to use for content cells
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u3);
            },
            set: function (v) {
                this.i.u3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerSortIndicatorStyle", {
            /**
             * Gets or sets the default render style for sort indicators in header cells.
            */
            get: function () {
                return this.i.e2;
            },
            set: function (v) {
                this.i.e2 = igniteuiReactCore.ensureEnum(SortIndicatorStyle_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellTextStyle", {
            /**
             * Gets or sets the font to use for content cells
            */
            get: function () {
                if (this.i.fp == null) {
                    return null;
                }
                return this.i.fp.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fp = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "sectionHeaderBackground", {
            /**
             * Gets or sets the default background color to use for section header cells
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vc);
            },
            set: function (v) {
                this.i.vc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "sectionHeaderTextColor", {
            /**
             * Gets or sets the default text color to use for section header cells
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ve);
            },
            set: function (v) {
                this.i.ve = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "sectionHeaderTextStyle", {
            /**
             * Gets or sets the font to use for section header cells
            */
            get: function () {
                if (this.i.fs == null) {
                    return null;
                }
                return this.i.fs.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fs = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRootLabelTextStyle", {
            /**
             * Gets or sets the font to use for summary labels at the root level.
            */
            get: function () {
                if (this.i.ft == null) {
                    return null;
                }
                return this.i.ft.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.ft = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summarySectionLabelTextStyle", {
            /**
             * Gets or sets the font to use for summary labels at the section level.
            */
            get: function () {
                if (this.i.fv == null) {
                    return null;
                }
                return this.i.fv.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fv = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRootValueTextColor", {
            /**
             * Gets or sets the default text color to use for summary cells at the root level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vj);
            },
            set: function (v) {
                this.i.vj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRootValueTextStyle", {
            /**
             * Gets or sets the font to use for summary values at the root level.
            */
            get: function () {
                if (this.i.fu == null) {
                    return null;
                }
                return this.i.fu.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fu = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summarySectionValueTextStyle", {
            /**
             * Gets or sets the font to use for summary values at the section level.
            */
            get: function () {
                if (this.i.fw == null) {
                    return null;
                }
                return this.i.fw.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fw = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summarySectionValueTextColor", {
            /**
             * Gets or sets the default text color to use for summary cells at the section level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vn);
            },
            set: function (v) {
                this.i.vn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRootLabelTextColor", {
            /**
             * Gets or sets the default text color to use for summary labels in summary cells at the root level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vh);
            },
            set: function (v) {
                this.i.vh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summarySectionLabelTextColor", {
            /**
             * Gets or sets the default text color to use for summary labels in summary cells at the section level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vl);
            },
            set: function (v) {
                this.i.vl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryRootSelectedBackground", {
            /**
             * Gets or sets the default background color to use for summary cells at the root level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vi);
            },
            set: function (v) {
                this.i.vi = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summarySectionSelectedBackground", {
            /**
             * Gets or sets the default background color to use for summary cells at the section level.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vm);
            },
            set: function (v) {
                this.i.vm = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "pinnedAreaSeparatorWidth", {
            /**
             * Gets or sets the width of the pinned area separators.
            */
            get: function () {
                return this.i.lc;
            },
            set: function (v) {
                this.i.lc = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerSeparatorWidth", {
            /**
             * Gets or sets the width of the header separators.
            */
            get: function () {
                return this.i.la;
            },
            set: function (v) {
                this.i.la = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerSeparatorBackground", {
            /**
             * Gets or sets the default background color to use for header separators.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u2);
            },
            set: function (v) {
                this.i.u2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerBackground", {
            /**
             * Gets or sets the default background color to use for header cells
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u0);
            },
            set: function (v) {
                this.i.u0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerTextColor", {
            /**
             * Gets or sets the default text color to use for header cells
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u4);
            },
            set: function (v) {
                this.i.u4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerTextStyle", {
            /**
             * Gets or sets the font to use for header cells
            */
            get: function () {
                if (this.i.fr == null) {
                    return null;
                }
                return this.i.fr.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.fr = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowSeparatorBackground", {
            /**
             * Gets or sets the default background color to use for row separators
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u8);
            },
            set: function (v) {
                this.i.u8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "headerRowSeparatorBackground", {
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u1);
            },
            set: function (v) {
                this.i.u1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowSeparatorStickyRowBackground", {
            /**
             * Gets or sets the default sticky row background color to use for row separators
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.vb);
            },
            set: function (v) {
                this.i.vb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowSeparatorLastStickyRowBackground", {
            /**
             * Gets or sets the default last sticky row background color to use for row separators
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.u9);
            },
            set: function (v) {
                this.i.u9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowSeparatorPinnedRowBackground", {
            /**
             * Gets or sets the pinned row background color to use for row separators
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.va);
            },
            set: function (v) {
                this.i.va = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnResizingSeparatorWidth", {
            /**
             * Sets or gets the width to use for the column resizing separator.
            */
            get: function () {
                return this.i.kp;
            },
            set: function (v) {
                this.i.kp = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnMovingSeparatorWidth", {
            /**
             * Sets or gets the width to use for the column resizing separator.
            */
            get: function () {
                return this.i.kn;
            },
            set: function (v) {
                this.i.kn = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnResizingSeparatorBackground", {
            /**
             * Gets or sets the default background color to use for column resizing separator.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ux);
            },
            set: function (v) {
                this.i.ux = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnMovingSeparatorBackground", {
            /**
             * Gets or sets the default background color to use for column moving separator.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.uv);
            },
            set: function (v) {
                this.i.uv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "shiftSectionContent", {
            /**
             * Gets or sets if the section header content should be shifted into the normal column scrollable area when there are pinned columns
            */
            get: function () {
                return this.i.iv;
            },
            set: function (v) {
                this.i.iv = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnOptionsIconAlignment", {
            /**
             * Gets or sets the column options icon alignment in header cells.
            */
            get: function () {
                return this.i.bk;
            },
            set: function (v) {
                this.i.bk = igniteuiReactCore.ensureEnum(ColumnOptionsIconAlignment_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnOptionsIconColor", {
            /**
             * Gets or sets the column options icon color in header cells.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.uw);
            },
            set: function (v) {
                this.i.uw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnOptionsIconBehavior", {
            /**
             * Gets or sets how the column options icon will behave inside header cells.
            */
            get: function () {
                return this.i.bm;
            },
            set: function (v) {
                this.i.bm = igniteuiReactCore.ensureEnum(ColumnOptionsIconBehavior_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "border", {
            /**
             * Gets or sets the border color around the grid.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.border);
            },
            set: function (v) {
                this.i.border = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualBorderWidth", {
            /**
             * Gets the actual border width.
            */
            get: function () {
                return this.i.vw;
            },
            set: function (v) {
                this.i.vw = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "borderWidthBottom", {
            get: function () {
                return this.i.vx ? this.i.vx.b : NaN;
            },
            set: function (v) {
                this.ensureBorderWidth();
                this.i.vx.b = +v;
                this.i.vx = this.i.vx;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "borderWidthLeft", {
            get: function () {
                return this.i.vx ? this.i.vx.c : NaN;
            },
            set: function (v) {
                this.ensureBorderWidth();
                this.i.vx.c = +v;
                this.i.vx = this.i.vx;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "borderWidthRight", {
            get: function () {
                return this.i.vx ? this.i.vx.d : NaN;
            },
            set: function (v) {
                this.ensureBorderWidth();
                this.i.vx.d = +v;
                this.i.vx = this.i.vx;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "borderWidthTop", {
            get: function () {
                return this.i.vx ? this.i.vx.e : NaN;
            },
            set: function (v) {
                this.ensureBorderWidth();
                this.i.vx.e = +v;
                this.i.vx = this.i.vx;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.ensureBorderWidth = function () {
            if (this.i.vx) {
                return;
            }
            this.i.vx = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrDataGrid.prototype, "notifyOnAllSelectionChanges", {
            /**
             * Gets or sets if the grid should notify on programmatic selection changes as well as changes from the UI.
            */
            get: function () {
                return this.i.h7;
            },
            set: function (v) {
                this.i.h7 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cornerRadiusBottomRight", {
            get: function () {
                return this.i.ts ? this.i.ts.b : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.ts.b = +v;
                this.i.ts = this.i.ts;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cornerRadiusBottomLeft", {
            get: function () {
                return this.i.ts ? this.i.ts.a : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.ts.a = +v;
                this.i.ts = this.i.ts;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cornerRadiusTopLeft", {
            get: function () {
                return this.i.ts ? this.i.ts.c : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.ts.c = +v;
                this.i.ts = this.i.ts;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cornerRadiusTopRight", {
            get: function () {
                return this.i.ts ? this.i.ts.d : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.ts.d = +v;
                this.i.ts = this.i.ts;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.ensureCornerRadius = function () {
            if (this.i.ts) {
                return;
            }
            this.i.ts = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrDataGrid.prototype, "actualCornerRadiusBottomRight", {
            get: function () {
                return this.i.tq ? this.i.tq.b : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.tq.b = +v;
                this.i.tq = this.i.tq;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualCornerRadiusBottomLeft", {
            get: function () {
                return this.i.tq ? this.i.tq.a : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.tq.a = +v;
                this.i.tq = this.i.tq;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualCornerRadiusTopLeft", {
            get: function () {
                return this.i.tq ? this.i.tq.c : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.tq.c = +v;
                this.i.tq = this.i.tq;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualCornerRadiusTopRight", {
            get: function () {
                return this.i.tq ? this.i.tq.d : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.tq.d = +v;
                this.i.tq = this.i.tq;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.ensureActualCornerRadius = function () {
            if (this.i.tq) {
                return;
            }
            this.i.tq = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrDataGrid.prototype, "isActiveCellStyleEnabled", {
            /**
             * Gets or sets whether the active cell style will be applied to cells when made active.
            */
            get: function () {
                return this.i.he;
            },
            set: function (v) {
                this.i.he = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "responsiveStates", {
            /**
             * A set of states that can be applied to the columns of the grid based on available space.
            */
            get: function () {
                if (this._responsiveStates === null) {
                    var coll = new IgrResponsiveStatesCollection();
                    var innerColl = this.i.en;
                    if (!innerColl) {
                        innerColl = new ResponsiveStatesCollection();
                    }
                    this._responsiveStates = coll._fromInner(innerColl);
                }
                return this._responsiveStates;
            },
            set: function (v) {
                if (this._responsiveStates !== null) {
                    this._responsiveStates._setSyncTarget(null);
                    this._responsiveStates = null;
                }
                var coll = new IgrResponsiveStatesCollection();
                this._responsiveStates = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(ResponsiveState.$type);
                var innerColl = this.i.en;
                if (!innerColl) {
                    innerColl = new ResponsiveStatesCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._responsiveStates._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualVisibleRegion", {
            /**
             * Gets the region of the grid that is visible.
            */
            get: function () {
                return igniteuiReactCore.fromRect(this.i.vp);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "sortDescriptions", {
            /**
             * Gets the current sort that is applied to the grid. Collection can be updated to modify the sort for the grid. Once sort descriptions are in this collection, the grid will no longer listen for changes on their properties.
            */
            get: function () {
                if (this.i.b4 == null) {
                    return null;
                }
                if (!this.i.b4.externalObject) {
                    var e = new IgrColumnSortDescriptionCollection();
                    e._implementation = this.i.b4;
                    this.i.b4.externalObject = e;
                }
                return this.i.b4.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "groupDescriptions", {
            /**
             * Gets the current grouping that is applied to the grid. Collection can be updated to modify the grouping for the grid. Once grouping descriptions are in this collection, the grid will no longer listen for changes on their properties.
            */
            get: function () {
                if (this.i.a7 == null) {
                    return null;
                }
                if (!this.i.a7.externalObject) {
                    var e = new IgrColumnGroupDescriptionCollection();
                    e._implementation = this.i.a7;
                    this.i.a7.externalObject = e;
                }
                return this.i.a7.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "filterExpressions", {
            /**
             * Gets the current filter that is applied to the grid. Collection can be updated to modify the filter for the grid. Once filter expresisons are in this collection, the grid will no longer listen for changes on their properties.
            */
            get: function () {
                if (this.i.v == null) {
                    return null;
                }
                if (!this.i.v.externalObject) {
                    var e = new igniteuiReactCore.IgrFilterExpressionCollection();
                    e._implementation = this.i.v;
                    this.i.v.externalObject = e;
                }
                return this.i.v.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryDescriptions", {
            /**
             * Gets the current summaries that are applied to the grid.
            */
            get: function () {
                if (this.i.b7 == null) {
                    return null;
                }
                if (!this.i.b7.externalObject) {
                    var e = new IgrColumnSummaryDescriptionCollection();
                    e._implementation = this.i.b7;
                    this.i.b7.externalObject = e;
                }
                return this.i.b7.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "summaryScope", {
            /**
             * Gets or sets the scope which summaries are calculated for.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = igniteuiReactCore.ensureEnum(igniteuiReactCore.DataSourceSummaryScope_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "isGroupCollapsable", {
            /**
             * Gets or sets whether group headers are collapsable.
            */
            get: function () {
                return this.i.hs;
            },
            set: function (v) {
                this.i.hs = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "groupHeaderDisplayMode", {
            /**
             * Gets or sets how group headers are displayed when there are multiple groups defined in the grid.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = igniteuiReactCore.ensureEnum(igniteuiReactCore.DataSourceSectionHeaderDisplayMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "isGroupExpandedDefault", {
            /**
             * Gets or sets whether groups are expanded or collapsed by default.
            */
            get: function () {
                return this.i.ht;
            },
            set: function (v) {
                this.i.ht = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "groupSummaryDisplayMode", {
            /**
             * Gets or sets the display mode summaries will use inside groups.
            */
            get: function () {
                return this.i.dy;
            },
            set: function (v) {
                this.i.dy = igniteuiReactCore.ensureEnum(GroupSummaryDisplayMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "autoAcceptEdits", {
            /**
             * Gets or sets whether to automatically accept edits or require explicit acceptance or rejections of edits
             * when handling the CellValueChanging or DataCommitting events.
             * When True, nothing is required on the part of the developer in order for edits to be accepted. In
             * order to validate and reject a user cell edit you must explicitly handle the CellValueChanging event
             * and call the RejectEdit method using the edit ID provided by the event. In order to reject a whole
             * commit you need to handle the DataComitting event and explicitly call the RejectCommit method using
             * the commit ID provided by the event.
             * When False, cell edits are not immediately accepted until you explicitly call the AcceptEdit method
             * using the edit ID provided by the CellValueChanging event. If you do not handle this event then edits
             * will be auto accepted.
            */
            get: function () {
                return this.i.g2;
            },
            set: function (v) {
                this.i.g2 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "primaryKey", {
            /**
             * Sets or gets the user provided primary key to assume for the data. Certain functionality of the grid requires a way to uniquely identify items in order to work correctly.
             * If a primary key cannot be inferred from the data source, you may need to provide one here.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualPrimaryKey", {
            /**
             * Gets either the inferred primary key from the data source, or the user provided primary key, if present. Represents the actual primary key that the grid will use in operations that require it.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualColumns", {
            get: function () {
                if (this._actualColumns === null) {
                    var coll = new IgrGridColumnCollection();
                    var innerColl = this.i.actualColumns;
                    if (!innerColl) {
                        innerColl = new GridColumnCollection();
                    }
                    this._actualColumns = coll._fromInner(innerColl);
                }
                return this._actualColumns;
            },
            set: function (v) {
                if (this._actualColumns !== null) {
                    this._actualColumns._setSyncTarget(null);
                    this._actualColumns = null;
                }
                var coll = new IgrGridColumnCollection();
                this._actualColumns = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(Column.$type);
                var innerColl = this.i.actualColumns;
                if (!innerColl) {
                    innerColl = new GridColumnCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._actualColumns._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "reactsToSortChanges", {
            /**
             * Sets or gets whether the grid will react to sort changes.
            */
            get: function () {
                return this.i.io;
            },
            set: function (v) {
                this.i.io = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "reactsToGroupChanges", {
            /**
             * Sets or gets whether the grid will react to group changes.
            */
            get: function () {
                return this.i.im;
            },
            set: function (v) {
                this.i.im = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "reactsToFilterChanges", {
            /**
             * Sets or gets whether the grid will react to filter changes.
            */
            get: function () {
                return this.i.il;
            },
            set: function (v) {
                this.i.il = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "canUndo", {
            /**
             * Gets whether an undo can be performed.
            */
            get: function () {
                return this.i.g9;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "canRedo", {
            /**
             * Gets whether a redo can be performed.
            */
            get: function () {
                return this.i.g8;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "canCommit", {
            /**
             * Gets whether a commit can be performed. False if there are any errors present
             * on any pending transactions.
            */
            get: function () {
                return this.i.g5;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.findByName = function (name) {
            if (this.sectionHeader && this.sectionHeader.name && this.sectionHeader.name == name) {
                return this.sectionHeader;
            }
            if (this.summaryRowRoot && this.summaryRowRoot.name && this.summaryRowRoot.name == name) {
                return this.summaryRowRoot;
            }
            if (this.summaryRowSection && this.summaryRowSection.name && this.summaryRowSection.name == name) {
                return this.summaryRowSection;
            }
            if (this.rowSeparator && this.rowSeparator.name && this.rowSeparator.name == name) {
                return this.rowSeparator;
            }
            if (this.headerRowSeparator && this.headerRowSeparator.name && this.headerRowSeparator.name == name) {
                return this.headerRowSeparator;
            }
            if (this.headerSeparator && this.headerSeparator.name && this.headerSeparator.name == name) {
                return this.headerSeparator;
            }
            if (this.columnResizingSeparator && this.columnResizingSeparator.name && this.columnResizingSeparator.name == name) {
                return this.columnResizingSeparator;
            }
            if (this.columnMovingSeparator && this.columnMovingSeparator.name && this.columnMovingSeparator.name == name) {
                return this.columnMovingSeparator;
            }
            if (this.pinnedAreaSeparator && this.pinnedAreaSeparator.name && this.pinnedAreaSeparator.name == name) {
                return this.pinnedAreaSeparator;
            }
            if (this.animationSettings && this.animationSettings.name && this.animationSettings.name == name) {
                return this.animationSettings;
            }
            if (this.selectedKeys != null && this.selectedKeys.findByName && this.selectedKeys.findByName(name)) {
                return this.selectedKeys.findByName(name);
            }
            if (this.selectedCells != null && this.selectedCells.findByName && this.selectedCells.findByName(name)) {
                return this.selectedCells.findByName(name);
            }
            if (this.selectedCellRanges != null && this.selectedCellRanges.findByName && this.selectedCellRanges.findByName(name)) {
                return this.selectedCellRanges.findByName(name);
            }
            if (this.pinnedKeys != null && this.pinnedKeys.findByName && this.pinnedKeys.findByName(name)) {
                return this.pinnedKeys.findByName(name);
            }
            if (this.activeCell && this.activeCell.name && this.activeCell.name == name) {
                return this.activeCell;
            }
            if (this.responsiveStates != null && this.responsiveStates.findByName && this.responsiveStates.findByName(name)) {
                return this.responsiveStates.findByName(name);
            }
            if (this.sortDescriptions != null && this.sortDescriptions.findByName && this.sortDescriptions.findByName(name)) {
                return this.sortDescriptions.findByName(name);
            }
            if (this.groupDescriptions != null && this.groupDescriptions.findByName && this.groupDescriptions.findByName(name)) {
                return this.groupDescriptions.findByName(name);
            }
            if (this.filterExpressions != null && this.filterExpressions.findByName && this.filterExpressions.findByName(name)) {
                return this.filterExpressions.findByName(name);
            }
            if (this.summaryDescriptions != null && this.summaryDescriptions.findByName && this.summaryDescriptions.findByName(name)) {
                return this.summaryDescriptions.findByName(name);
            }
            if (this.actualColumns != null && this.actualColumns.findByName && this.actualColumns.findByName(name)) {
                return this.actualColumns.findByName(name);
            }
            if (this.columns != null && this.columns.findByName && this.columns.findByName(name)) {
                return this.columns.findByName(name);
            }
            return null;
        };
        Object.defineProperty(IgrDataGrid.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGrid.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDataGrid.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DataGrid");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this.sectionHeader && this.sectionHeader._styling) {
                this.sectionHeader._styling(container, component, this);
            }
            if (this.summaryRowRoot && this.summaryRowRoot._styling) {
                this.summaryRowRoot._styling(container, component, this);
            }
            if (this.summaryRowSection && this.summaryRowSection._styling) {
                this.summaryRowSection._styling(container, component, this);
            }
            if (this.rowSeparator && this.rowSeparator._styling) {
                this.rowSeparator._styling(container, component, this);
            }
            if (this.headerRowSeparator && this.headerRowSeparator._styling) {
                this.headerRowSeparator._styling(container, component, this);
            }
            if (this.headerSeparator && this.headerSeparator._styling) {
                this.headerSeparator._styling(container, component, this);
            }
            if (this.columnResizingSeparator && this.columnResizingSeparator._styling) {
                this.columnResizingSeparator._styling(container, component, this);
            }
            if (this.columnMovingSeparator && this.columnMovingSeparator._styling) {
                this.columnMovingSeparator._styling(container, component, this);
            }
            if (this.pinnedAreaSeparator && this.pinnedAreaSeparator._styling) {
                this.pinnedAreaSeparator._styling(container, component, this);
            }
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDataGrid.prototype.getHitCell = function (x, y) {
            var iv = this.i.ap(x, y);
            return (iv == null ? null : iv.externalObject);
        };
        /**
         * Forces a refresh of the grid content.
        
        */
        IgrDataGrid.prototype.refresh = function () {
            this.i.sk();
        };
        /**
         * Makes sure pending work has completed if the grid need to be synchronously examined.
        
        */
        IgrDataGrid.prototype.flush = function () {
            this.i.p4();
        };
        IgrDataGrid.prototype.notifyScrollStart = function () {
            this.i.notifyScrollStart();
        };
        IgrDataGrid.prototype.notifyScrollStop = function () {
            this.i.notifyScrollStop();
        };
        IgrDataGrid.prototype.exchangeColumn = function (newColumn, oldColumn) {
            this.i.p2((newColumn == null ? null : newColumn.i), (oldColumn == null ? null : oldColumn.i));
        };
        IgrDataGrid.prototype.pinColumn = function (column, position) {
            this.i.sd((column == null ? null : column.i), (position == null ? null : position));
        };
        IgrDataGrid.prototype.moveColumn = function (oldIndex, newIndex) {
            this.i.qf(oldIndex, newIndex);
        };
        /**
         * Moves a column to the left, if possible.
        
        * @param columnIndex  * The index of the column to move.
        */
        IgrDataGrid.prototype.moveColumnLeft = function (columnIndex) {
            this.i.qg(columnIndex);
        };
        /**
         * Moves a column to the right, if possible.
        
        * @param columnIndex  * The index of the column to move.
        */
        IgrDataGrid.prototype.moveColumnRight = function (columnIndex) {
            this.i.qh(columnIndex);
        };
        /**
         * Returns true if a column can be moved to the left of it's current position; otherwise false.
        
        * @param columnIndex  * The index of the column.
        */
        IgrDataGrid.prototype.canMoveColumnLeft = function (columnIndex) {
            var iv = this.i.g6(columnIndex);
            return (iv);
        };
        /**
         * Returns true if a column can be moved to the right of it's current position; otherwise false.
        
        * @param columnIndex  * The index of the column.
        */
        IgrDataGrid.prototype.canMoveColumnRight = function (columnIndex) {
            var iv = this.i.g7(columnIndex);
            return (iv);
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrDataGrid.prototype.exportVisualModel = function () {
            var iv = this.i.lp();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrDataGrid.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.nb();
            return (iv);
        };
        /**
         * Scrolls the grid to given row, by index
        
        * @param rowNumber  * The row index to scroll to.
        */
        IgrDataGrid.prototype.scrollToRowByIndex = function (rowNumber) {
            this.i.s2(rowNumber);
        };
        /**
         * Scrolls the grid so that a row is the last visible, by index.
        
        * @param rowNumber  * The row index to scroll to.
        */
        IgrDataGrid.prototype.scrollToLastRowByIndex = function (rowNumber) {
            this.i.s1(rowNumber);
        };
        /**
         * Scrolls to an item, if found.
        
        * @param item  * The item to scroll to.
        */
        IgrDataGrid.prototype.scrollToItem = function (item) {
            var iv = this.i.it(item);
            return (iv);
        };
        IgrDataGrid.prototype.scrollToPrimaryKey = function (key) {
            var iv = this.i.iu(key);
            return (iv);
        };
        /**
         * Scrolls the grid to given column, by index
        
        * @param columnNumber  * The column number to scroll to.
        */
        IgrDataGrid.prototype.scrollToColumnByIndex = function (columnNumber) {
            this.i.sz(columnNumber);
        };
        /**
         * Gets the last visible index in the grid.
        
        */
        IgrDataGrid.prototype.getLastVisibleIndex = function () {
            var iv = this.i.k2();
            return (iv);
        };
        /**
         * Gets the first visible index in the grid.
        
        */
        IgrDataGrid.prototype.getFirstVisibleIndex = function () {
            var iv = this.i.ky();
            return (iv);
        };
        /**
         * Invalidates the bound data for the rows currently visible.
        
        */
        IgrDataGrid.prototype.invalidateVisibleRows = function () {
            this.i.qe();
        };
        /**
         * Manually set the active responsive state of the grid.
        
        * @param name
        */
        IgrDataGrid.prototype.setActiveResponsiveState = function (name) {
            this.i.s7(name);
        };
        IgrDataGrid.prototype.notifySetItem = function (index, oldItem, newItem) {
            this.i.qp(index, oldItem, newItem);
        };
        /**
         * Manually notifies the grid's data source that the data it has bound to has been cleared and needs to be re-examined.
         * This should not be called if the data that the grid is bound to is already observable.
        
        */
        IgrDataGrid.prototype.notifyClearItems = function () {
            this.i.qj();
        };
        IgrDataGrid.prototype.notifyInsertItem = function (index, newItem) {
            this.i.ql(index, newItem);
        };
        IgrDataGrid.prototype.notifyRemoveItem = function (index, oldItem) {
            this.i.qm(index, oldItem);
        };
        /**
         * Returns the data index of an item within the bound data source.
        
        * @param item  * The item from which to get the index.
        */
        IgrDataGrid.prototype.dataIndexOfItem = function (item) {
            var iv = this.i.kr(item);
            return (iv);
        };
        IgrDataGrid.prototype.dataIndexOfPrimaryKey = function (key) {
            var iv = this.i.ks(key);
            return (iv);
        };
        /**
         * Resolves the value of a specific cell.
        
        * @param cellKey  * The cell to resolve.
        */
        IgrDataGrid.prototype.resolveCellValue = function (cellKey) {
            var iv = this.i.ls((cellKey == null ? null : cellKey.i));
            return (iv);
        };
        IgrDataGrid.prototype.resolveCellValueFromPosition = function (row, column) {
            var iv = this.i.lt(row, column);
            return (iv);
        };
        /**
         * Gets the column that appears at the index specified. This is not the columns actual index in the
         * column's collection but the index for how it appears visually in the grid.
        
        * @param index  * The rendered index of the column.
        */
        IgrDataGrid.prototype.getColumnAtRenderedIndex = function (index) {
            var iv = this.i.az(index);
            return (iv == null ? null : iv.externalObject);
        };
        /**
         * Gets the summary results for root level.
        
        */
        IgrDataGrid.prototype.getRootSummaryResults = function () {
            var iv = this.i.j();
            return (iv);
        };
        /**
         * Gets the summary results for a specific section.
        
        */
        IgrDataGrid.prototype.getSectionSummaryResults = function (sectionIndex) {
            var iv = this.i.k(sectionIndex);
            return (iv);
        };
        /**
         * Commits any edits that may exist in the datasource.
        
        */
        IgrDataGrid.prototype.commitEdits = function () {
            this.i.px();
        };
        /**
         * Cancels any edits that may exist in the datasource.
        
        */
        IgrDataGrid.prototype.cancelEdits = function () {
            this.i.pp();
        };
        /**
         * Accepts a specific commit to the datasource.
        
        * @param commitID  * The ID of the commit provided by the Committing event.
        */
        IgrDataGrid.prototype.acceptCommit = function (commitID) {
            this.i.pi(commitID);
        };
        /**
         * Rejects a specific commit.
        
        * @param commitID  * The ID of the commit provided by the Committing event.
        */
        IgrDataGrid.prototype.rejectCommit = function (commitID) {
            this.i.sn(commitID);
        };
        /**
         * Undo the last edit.
        
        */
        IgrDataGrid.prototype.undo = function () {
            this.i.tf();
        };
        /**
         * Redo the last edit.
        
        */
        IgrDataGrid.prototype.redo = function () {
            this.i.sj();
        };
        IgrDataGrid.prototype.updatePropertyAtKey = function (key, propertyPath, value) {
            this.i.tk(key, propertyPath, value);
        };
        IgrDataGrid.prototype.removeItemByKey = function (key) {
            this.i.ss(key);
        };
        /**
         * Removes an item by its instance.
        
        * @param item  * The item instance to remove.
        */
        IgrDataGrid.prototype.removeItem = function (item) {
            this.i.sr(item);
        };
        /**
         * Accept a pending edit turning it into a real edit.
        
        * @param editID  * The ID of the edit. Provided by the CellValueChanging event.
        */
        IgrDataGrid.prototype.acceptEdit = function (editID) {
            this.i.pj(editID);
        };
        /**
         * Reject a pending edit.
        
        * @param editID  * The ID of the edit. Provided by the CellValueChanging event.
        */
        IgrDataGrid.prototype.rejectEdit = function (editID) {
            this.i.so(editID);
        };
        IgrDataGrid.prototype.setEditError = function (editID, errorMessage) {
            this.i.s9(editID, errorMessage);
        };
        Object.defineProperty(IgrDataGrid.prototype, "filterExpressionsChanging", {
            get: function () {
                return this._filterExpressionsChanging;
            },
            set: function (ev) {
                var _this = this;
                if (this._filterExpressionsChanging_wrapped !== null) {
                    this.i.filterExpressionsChanging = igniteuiReactCore.delegateRemove(this.i.filterExpressionsChanging, this._filterExpressionsChanging_wrapped);
                    this._filterExpressionsChanging_wrapped = null;
                    this._filterExpressionsChanging = null;
                }
                this._filterExpressionsChanging = ev;
                this._filterExpressionsChanging_wrapped = function (o, e) {
                    var outerArgs = new IgrGridFilterExpressionsEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFilterExpressionsChanging) {
                        _this.beforeFilterExpressionsChanging(_this, outerArgs);
                    }
                    if (_this._filterExpressionsChanging) {
                        _this._filterExpressionsChanging(_this, outerArgs);
                    }
                };
                this.i.filterExpressionsChanging = igniteuiReactCore.delegateCombine(this.i.filterExpressionsChanging, this._filterExpressionsChanging_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "filterExpressionsChanged", {
            get: function () {
                return this._filterExpressionsChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._filterExpressionsChanged_wrapped !== null) {
                    this.i.filterExpressionsChanged = igniteuiReactCore.delegateRemove(this.i.filterExpressionsChanged, this._filterExpressionsChanged_wrapped);
                    this._filterExpressionsChanged_wrapped = null;
                    this._filterExpressionsChanged = null;
                }
                this._filterExpressionsChanged = ev;
                this._filterExpressionsChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridFilterExpressionsEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFilterExpressionsChanged) {
                        _this.beforeFilterExpressionsChanged(_this, outerArgs);
                    }
                    if (_this._filterExpressionsChanged) {
                        _this._filterExpressionsChanged(_this, outerArgs);
                    }
                };
                this.i.filterExpressionsChanged = igniteuiReactCore.delegateCombine(this.i.filterExpressionsChanged, this._filterExpressionsChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellPreviewPointerDown", {
            /**
             * Previews that a pointer is down on a cell.
            */
            get: function () {
                return this._cellPreviewPointerDown;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellPreviewPointerDown_wrapped !== null) {
                    this.i.cellPreviewPointerDown = igniteuiReactCore.delegateRemove(this.i.cellPreviewPointerDown, this._cellPreviewPointerDown_wrapped);
                    this._cellPreviewPointerDown_wrapped = null;
                    this._cellPreviewPointerDown = null;
                }
                this._cellPreviewPointerDown = ev;
                this._cellPreviewPointerDown_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellPreviewPointerDown) {
                        _this.beforeCellPreviewPointerDown(_this, outerArgs);
                    }
                    if (_this._cellPreviewPointerDown) {
                        _this._cellPreviewPointerDown(_this, outerArgs);
                    }
                };
                this.i.cellPreviewPointerDown = igniteuiReactCore.delegateCombine(this.i.cellPreviewPointerDown, this._cellPreviewPointerDown_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellPreviewPointerUp", {
            /**
             * Previews that a pointer is up on a cell.
            */
            get: function () {
                return this._cellPreviewPointerUp;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellPreviewPointerUp_wrapped !== null) {
                    this.i.cellPreviewPointerUp = igniteuiReactCore.delegateRemove(this.i.cellPreviewPointerUp, this._cellPreviewPointerUp_wrapped);
                    this._cellPreviewPointerUp_wrapped = null;
                    this._cellPreviewPointerUp = null;
                }
                this._cellPreviewPointerUp = ev;
                this._cellPreviewPointerUp_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellPreviewPointerUp) {
                        _this.beforeCellPreviewPointerUp(_this, outerArgs);
                    }
                    if (_this._cellPreviewPointerUp) {
                        _this._cellPreviewPointerUp(_this, outerArgs);
                    }
                };
                this.i.cellPreviewPointerUp = igniteuiReactCore.delegateCombine(this.i.cellPreviewPointerUp, this._cellPreviewPointerUp_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellPointerDown", {
            /**
             * Indicates a pointer is down on a cell.
            */
            get: function () {
                return this._cellPointerDown;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellPointerDown_wrapped !== null) {
                    this.i.cellPointerDown = igniteuiReactCore.delegateRemove(this.i.cellPointerDown, this._cellPointerDown_wrapped);
                    this._cellPointerDown_wrapped = null;
                    this._cellPointerDown = null;
                }
                this._cellPointerDown = ev;
                this._cellPointerDown_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellPointerDown) {
                        _this.beforeCellPointerDown(_this, outerArgs);
                    }
                    if (_this._cellPointerDown) {
                        _this._cellPointerDown(_this, outerArgs);
                    }
                };
                this.i.cellPointerDown = igniteuiReactCore.delegateCombine(this.i.cellPointerDown, this._cellPointerDown_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellPointerUp", {
            /**
             * Indicates a pointer is up on a cell.
            */
            get: function () {
                return this._cellPointerUp;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellPointerUp_wrapped !== null) {
                    this.i.cellPointerUp = igniteuiReactCore.delegateRemove(this.i.cellPointerUp, this._cellPointerUp_wrapped);
                    this._cellPointerUp_wrapped = null;
                    this._cellPointerUp = null;
                }
                this._cellPointerUp = ev;
                this._cellPointerUp_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellPointerUp) {
                        _this.beforeCellPointerUp(_this, outerArgs);
                    }
                    if (_this._cellPointerUp) {
                        _this._cellPointerUp(_this, outerArgs);
                    }
                };
                this.i.cellPointerUp = igniteuiReactCore.delegateCombine(this.i.cellPointerUp, this._cellPointerUp_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellClicked", {
            /**
             * Called when a cell is clicked.
            */
            get: function () {
                return this._cellClicked;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellClicked_wrapped !== null) {
                    this.i.cellClicked = igniteuiReactCore.delegateRemove(this.i.cellClicked, this._cellClicked_wrapped);
                    this._cellClicked_wrapped = null;
                    this._cellClicked = null;
                }
                this._cellClicked = ev;
                this._cellClicked_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellClicked) {
                        _this.beforeCellClicked(_this, outerArgs);
                    }
                    if (_this._cellClicked) {
                        _this._cellClicked(_this, outerArgs);
                    }
                };
                this.i.cellClicked = igniteuiReactCore.delegateCombine(this.i.cellClicked, this._cellClicked_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "sortDescriptionsChanged", {
            /**
             * Called when sorting has changed.
            */
            get: function () {
                return this._sortDescriptionsChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._sortDescriptionsChanged_wrapped !== null) {
                    this.i.sortDescriptionsChanged = igniteuiReactCore.delegateRemove(this.i.sortDescriptionsChanged, this._sortDescriptionsChanged_wrapped);
                    this._sortDescriptionsChanged_wrapped = null;
                    this._sortDescriptionsChanged = null;
                }
                this._sortDescriptionsChanged = ev;
                this._sortDescriptionsChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridSortDescriptionsChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSortDescriptionsChanged) {
                        _this.beforeSortDescriptionsChanged(_this, outerArgs);
                    }
                    if (_this._sortDescriptionsChanged) {
                        _this._sortDescriptionsChanged(_this, outerArgs);
                    }
                };
                this.i.sortDescriptionsChanged = igniteuiReactCore.delegateCombine(this.i.sortDescriptionsChanged, this._sortDescriptionsChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "groupDescriptionsChanged", {
            /**
             * Called when grouping has changed.
            */
            get: function () {
                return this._groupDescriptionsChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._groupDescriptionsChanged_wrapped !== null) {
                    this.i.groupDescriptionsChanged = igniteuiReactCore.delegateRemove(this.i.groupDescriptionsChanged, this._groupDescriptionsChanged_wrapped);
                    this._groupDescriptionsChanged_wrapped = null;
                    this._groupDescriptionsChanged = null;
                }
                this._groupDescriptionsChanged = ev;
                this._groupDescriptionsChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridGroupDescriptionsChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeGroupDescriptionsChanged) {
                        _this.beforeGroupDescriptionsChanged(_this, outerArgs);
                    }
                    if (_this._groupDescriptionsChanged) {
                        _this._groupDescriptionsChanged(_this, outerArgs);
                    }
                };
                this.i.groupDescriptionsChanged = igniteuiReactCore.delegateCombine(this.i.groupDescriptionsChanged, this._groupDescriptionsChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnHiddenChanged", {
            /**
             * Called when a column is hidden or unhidden.
            */
            get: function () {
                return this._columnHiddenChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._columnHiddenChanged_wrapped !== null) {
                    this.i.columnHiddenChanged = igniteuiReactCore.delegateRemove(this.i.columnHiddenChanged, this._columnHiddenChanged_wrapped);
                    this._columnHiddenChanged_wrapped = null;
                    this._columnHiddenChanged = null;
                }
                this._columnHiddenChanged = ev;
                this._columnHiddenChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrColumnHiddenChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeColumnHiddenChanged) {
                        _this.beforeColumnHiddenChanged(_this, outerArgs);
                    }
                    if (_this._columnHiddenChanged) {
                        _this._columnHiddenChanged(_this, outerArgs);
                    }
                };
                this.i.columnHiddenChanged = igniteuiReactCore.delegateCombine(this.i.columnHiddenChanged, this._columnHiddenChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnPinnedChanged", {
            /**
             * Called when a column is pinned or unpinned.
            */
            get: function () {
                return this._columnPinnedChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._columnPinnedChanged_wrapped !== null) {
                    this.i.columnPinnedChanged = igniteuiReactCore.delegateRemove(this.i.columnPinnedChanged, this._columnPinnedChanged_wrapped);
                    this._columnPinnedChanged_wrapped = null;
                    this._columnPinnedChanged = null;
                }
                this._columnPinnedChanged = ev;
                this._columnPinnedChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrColumnPinnedChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeColumnPinnedChanged) {
                        _this.beforeColumnPinnedChanged(_this, outerArgs);
                    }
                    if (_this._columnPinnedChanged) {
                        _this._columnPinnedChanged(_this, outerArgs);
                    }
                };
                this.i.columnPinnedChanged = igniteuiReactCore.delegateCombine(this.i.columnPinnedChanged, this._columnPinnedChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellValueChanging", {
            /**
             * Called when a cell has been edited.
            */
            get: function () {
                return this._cellValueChanging;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellValueChanging_wrapped !== null) {
                    this.i.cellValueChanging = igniteuiReactCore.delegateRemove(this.i.cellValueChanging, this._cellValueChanging_wrapped);
                    this._cellValueChanging_wrapped = null;
                    this._cellValueChanging = null;
                }
                this._cellValueChanging = ev;
                this._cellValueChanging_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellValueChangingEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellValueChanging) {
                        _this.beforeCellValueChanging(_this, outerArgs);
                    }
                    if (_this._cellValueChanging) {
                        _this._cellValueChanging(_this, outerArgs);
                    }
                };
                this.i.cellValueChanging = igniteuiReactCore.delegateCombine(this.i.cellValueChanging, this._cellValueChanging_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "dataCommitted", {
            /**
             * Called when edits have been committed to the datasource.
            */
            get: function () {
                return this._dataCommitted;
            },
            set: function (ev) {
                var _this = this;
                if (this._dataCommitted_wrapped !== null) {
                    this.i.dataCommitted = igniteuiReactCore.delegateRemove(this.i.dataCommitted, this._dataCommitted_wrapped);
                    this._dataCommitted_wrapped = null;
                    this._dataCommitted = null;
                }
                this._dataCommitted = ev;
                this._dataCommitted_wrapped = function (o, e) {
                    var outerArgs = new IgrGridDataCommittedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeDataCommitted) {
                        _this.beforeDataCommitted(_this, outerArgs);
                    }
                    if (_this._dataCommitted) {
                        _this._dataCommitted(_this, outerArgs);
                    }
                };
                this.i.dataCommitted = igniteuiReactCore.delegateCombine(this.i.dataCommitted, this._dataCommitted_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "dataCommitting", {
            /**
             * Called when edits are about to be committed to the datasource.
            */
            get: function () {
                return this._dataCommitting;
            },
            set: function (ev) {
                var _this = this;
                if (this._dataCommitting_wrapped !== null) {
                    this.i.dataCommitting = igniteuiReactCore.delegateRemove(this.i.dataCommitting, this._dataCommitting_wrapped);
                    this._dataCommitting_wrapped = null;
                    this._dataCommitting = null;
                }
                this._dataCommitting = ev;
                this._dataCommitting_wrapped = function (o, e) {
                    var outerArgs = new IgrGridDataCommittingEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeDataCommitting) {
                        _this.beforeDataCommitting(_this, outerArgs);
                    }
                    if (_this._dataCommitting) {
                        _this._dataCommitting(_this, outerArgs);
                    }
                };
                this.i.dataCommitting = igniteuiReactCore.delegateCombine(this.i.dataCommitting, this._dataCommitting_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "sizeChanged", {
            /**
             * Called when the grids size has changed.
            */
            get: function () {
                return this._sizeChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._sizeChanged_wrapped !== null) {
                    this.i.sizeChanged = igniteuiReactCore.delegateRemove(this.i.sizeChanged, this._sizeChanged_wrapped);
                    this._sizeChanged_wrapped = null;
                    this._sizeChanged = null;
                }
                this._sizeChanged = ev;
                this._sizeChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridSizeChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSizeChanged) {
                        _this.beforeSizeChanged(_this, outerArgs);
                    }
                    if (_this._sizeChanged) {
                        _this._sizeChanged(_this, outerArgs);
                    }
                };
                this.i.sizeChanged = igniteuiReactCore.delegateCombine(this.i.sizeChanged, this._sizeChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualColumnsChanged", {
            get: function () {
                return this._actualColumnsChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._actualColumnsChanged_wrapped !== null) {
                    this.i.actualColumnsChanged = igniteuiReactCore.delegateRemove(this.i.actualColumnsChanged, this._actualColumnsChanged_wrapped);
                    this._actualColumnsChanged_wrapped = null;
                    this._actualColumnsChanged = null;
                }
                this._actualColumnsChanged = ev;
                this._actualColumnsChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridColumnsChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeActualColumnsChanged) {
                        _this.beforeActualColumnsChanged(_this, outerArgs);
                    }
                    if (_this._actualColumnsChanged) {
                        _this._actualColumnsChanged(_this, outerArgs);
                    }
                };
                this.i.actualColumnsChanged = igniteuiReactCore.delegateCombine(this.i.actualColumnsChanged, this._actualColumnsChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnsAutoGenerated", {
            /**
             * Called when the columns are autogenerated.
            */
            get: function () {
                return this._columnsAutoGenerated;
            },
            set: function (ev) {
                var _this = this;
                if (this._columnsAutoGenerated_wrapped !== null) {
                    this.i.columnsAutoGenerated = igniteuiReactCore.delegateRemove(this.i.columnsAutoGenerated, this._columnsAutoGenerated_wrapped);
                    this._columnsAutoGenerated_wrapped = null;
                    this._columnsAutoGenerated = null;
                }
                this._columnsAutoGenerated = ev;
                this._columnsAutoGenerated_wrapped = function (o, e) {
                    var outerArgs = new IgrGridColumnsAutoGeneratedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeColumnsAutoGenerated) {
                        _this.beforeColumnsAutoGenerated(_this, outerArgs);
                    }
                    if (_this._columnsAutoGenerated) {
                        _this._columnsAutoGenerated(_this, outerArgs);
                    }
                };
                this.i.columnsAutoGenerated = igniteuiReactCore.delegateCombine(this.i.columnsAutoGenerated, this._columnsAutoGenerated_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedItemsChanged", {
            /**
             * Called when the selected items change.
            */
            get: function () {
                return this._selectedItemsChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._selectedItemsChanged_wrapped !== null) {
                    this.i.selectedItemsChanged = igniteuiReactCore.delegateRemove(this.i.selectedItemsChanged, this._selectedItemsChanged_wrapped);
                    this._selectedItemsChanged_wrapped = null;
                    this._selectedItemsChanged = null;
                }
                this._selectedItemsChanged = ev;
                this._selectedItemsChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridSelectedItemsChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelectedItemsChanged) {
                        _this.beforeSelectedItemsChanged(_this, outerArgs);
                    }
                    if (_this._selectedItemsChanged) {
                        _this._selectedItemsChanged(_this, outerArgs);
                    }
                };
                this.i.selectedItemsChanged = igniteuiReactCore.delegateCombine(this.i.selectedItemsChanged, this._selectedItemsChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedKeysChanged", {
            /**
             * Called when the selected keys change.
            */
            get: function () {
                return this._selectedKeysChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._selectedKeysChanged_wrapped !== null) {
                    this.i.selectedKeysChanged = igniteuiReactCore.delegateRemove(this.i.selectedKeysChanged, this._selectedKeysChanged_wrapped);
                    this._selectedKeysChanged_wrapped = null;
                    this._selectedKeysChanged = null;
                }
                this._selectedKeysChanged = ev;
                this._selectedKeysChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridSelectedKeysChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelectedKeysChanged) {
                        _this.beforeSelectedKeysChanged(_this, outerArgs);
                    }
                    if (_this._selectedKeysChanged) {
                        _this._selectedKeysChanged(_this, outerArgs);
                    }
                };
                this.i.selectedKeysChanged = igniteuiReactCore.delegateCombine(this.i.selectedKeysChanged, this._selectedKeysChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedCellsChanged", {
            /**
             * Called when the selected cells change.
            */
            get: function () {
                return this._selectedCellsChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._selectedCellsChanged_wrapped !== null) {
                    this.i.selectedCellsChanged = igniteuiReactCore.delegateRemove(this.i.selectedCellsChanged, this._selectedCellsChanged_wrapped);
                    this._selectedCellsChanged_wrapped = null;
                    this._selectedCellsChanged = null;
                }
                this._selectedCellsChanged = ev;
                this._selectedCellsChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridSelectedCellsChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelectedCellsChanged) {
                        _this.beforeSelectedCellsChanged(_this, outerArgs);
                    }
                    if (_this._selectedCellsChanged) {
                        _this._selectedCellsChanged(_this, outerArgs);
                    }
                };
                this.i.selectedCellsChanged = igniteuiReactCore.delegateCombine(this.i.selectedCellsChanged, this._selectedCellsChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "activeCellChanged", {
            /**
             * Called when the active cell changes.
            */
            get: function () {
                return this._activeCellChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._activeCellChanged_wrapped !== null) {
                    this.i.activeCellChanged = igniteuiReactCore.delegateRemove(this.i.activeCellChanged, this._activeCellChanged_wrapped);
                    this._activeCellChanged_wrapped = null;
                    this._activeCellChanged = null;
                }
                this._activeCellChanged = ev;
                this._activeCellChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridActiveCellChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeActiveCellChanged) {
                        _this.beforeActiveCellChanged(_this, outerArgs);
                    }
                    if (_this._activeCellChanged) {
                        _this._activeCellChanged(_this, outerArgs);
                    }
                };
                this.i.activeCellChanged = igniteuiReactCore.delegateCombine(this.i.activeCellChanged, this._activeCellChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "selectedCellRangesChanged", {
            /**
             * Called when the selected cell ranges changed.
            */
            get: function () {
                return this._selectedCellRangesChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._selectedCellRangesChanged_wrapped !== null) {
                    this.i.selectedCellRangesChanged = igniteuiReactCore.delegateRemove(this.i.selectedCellRangesChanged, this._selectedCellRangesChanged_wrapped);
                    this._selectedCellRangesChanged_wrapped = null;
                    this._selectedCellRangesChanged = null;
                }
                this._selectedCellRangesChanged = ev;
                this._selectedCellRangesChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridSelectedCellRangesChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelectedCellRangesChanged) {
                        _this.beforeSelectedCellRangesChanged(_this, outerArgs);
                    }
                    if (_this._selectedCellRangesChanged) {
                        _this._selectedCellRangesChanged(_this, outerArgs);
                    }
                };
                this.i.selectedCellRangesChanged = igniteuiReactCore.delegateCombine(this.i.selectedCellRangesChanged, this._selectedCellRangesChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "columnWidthChanged", {
            /**
             * Called when a column's Width property has changed.
            */
            get: function () {
                return this._columnWidthChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._columnWidthChanged_wrapped !== null) {
                    this.i.columnWidthChanged = igniteuiReactCore.delegateRemove(this.i.columnWidthChanged, this._columnWidthChanged_wrapped);
                    this._columnWidthChanged_wrapped = null;
                    this._columnWidthChanged = null;
                }
                this._columnWidthChanged = ev;
                this._columnWidthChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridColumnWidthChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeColumnWidthChanged) {
                        _this.beforeColumnWidthChanged(_this, outerArgs);
                    }
                    if (_this._columnWidthChanged) {
                        _this._columnWidthChanged(_this, outerArgs);
                    }
                };
                this.i.columnWidthChanged = igniteuiReactCore.delegateCombine(this.i.columnWidthChanged, this._columnWidthChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellEditStarted", {
            get: function () {
                return this._cellEditStarted;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellEditStarted_wrapped !== null) {
                    this.i.cellEditStarted = igniteuiReactCore.delegateRemove(this.i.cellEditStarted, this._cellEditStarted_wrapped);
                    this._cellEditStarted_wrapped = null;
                    this._cellEditStarted = null;
                }
                this._cellEditStarted = ev;
                this._cellEditStarted_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellEditStartedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellEditStarted) {
                        _this.beforeCellEditStarted(_this, outerArgs);
                    }
                    if (_this._cellEditStarted) {
                        _this._cellEditStarted(_this, outerArgs);
                    }
                };
                this.i.cellEditStarted = igniteuiReactCore.delegateCombine(this.i.cellEditStarted, this._cellEditStarted_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "cellEditEnded", {
            get: function () {
                return this._cellEditEnded;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellEditEnded_wrapped !== null) {
                    this.i.cellEditEnded = igniteuiReactCore.delegateRemove(this.i.cellEditEnded, this._cellEditEnded_wrapped);
                    this._cellEditEnded_wrapped = null;
                    this._cellEditEnded = null;
                }
                this._cellEditEnded = ev;
                this._cellEditEnded_wrapped = function (o, e) {
                    var outerArgs = new IgrGridCellEditEndedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellEditEnded) {
                        _this.beforeCellEditEnded(_this, outerArgs);
                    }
                    if (_this._cellEditEnded) {
                        _this._cellEditEnded(_this, outerArgs);
                    }
                };
                this.i.cellEditEnded = igniteuiReactCore.delegateCombine(this.i.cellEditEnded, this._cellEditEnded_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowEditStarted", {
            get: function () {
                return this._rowEditStarted;
            },
            set: function (ev) {
                var _this = this;
                if (this._rowEditStarted_wrapped !== null) {
                    this.i.rowEditStarted = igniteuiReactCore.delegateRemove(this.i.rowEditStarted, this._rowEditStarted_wrapped);
                    this._rowEditStarted_wrapped = null;
                    this._rowEditStarted = null;
                }
                this._rowEditStarted = ev;
                this._rowEditStarted_wrapped = function (o, e) {
                    var outerArgs = new IgrGridRowEditStartedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeRowEditStarted) {
                        _this.beforeRowEditStarted(_this, outerArgs);
                    }
                    if (_this._rowEditStarted) {
                        _this._rowEditStarted(_this, outerArgs);
                    }
                };
                this.i.rowEditStarted = igniteuiReactCore.delegateCombine(this.i.rowEditStarted, this._rowEditStarted_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "rowEditEnded", {
            get: function () {
                return this._rowEditEnded;
            },
            set: function (ev) {
                var _this = this;
                if (this._rowEditEnded_wrapped !== null) {
                    this.i.rowEditEnded = igniteuiReactCore.delegateRemove(this.i.rowEditEnded, this._rowEditEnded_wrapped);
                    this._rowEditEnded_wrapped = null;
                    this._rowEditEnded = null;
                }
                this._rowEditEnded = ev;
                this._rowEditEnded_wrapped = function (o, e) {
                    var outerArgs = new IgrGridRowEditEndedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeRowEditEnded) {
                        _this.beforeRowEditEnded(_this, outerArgs);
                    }
                    if (_this._rowEditEnded) {
                        _this._rowEditEnded(_this, outerArgs);
                    }
                };
                this.i.rowEditEnded = igniteuiReactCore.delegateCombine(this.i.rowEditEnded, this._rowEditEnded_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGrid.prototype, "actualPrimaryKeyChange", {
            get: function () {
                return this._actualPrimaryKeyChange;
            },
            set: function (ev) {
                var _this = this;
                if (this._actualPrimaryKeyChange_wrapped !== null) {
                    this.i.propertyChanged = igniteuiReactCore.delegateRemove(this.i.propertyChanged, this._actualPrimaryKeyChange_wrapped);
                    this._actualPrimaryKeyChange_wrapped = null;
                    this._actualPrimaryKeyChange = null;
                }
                this._actualPrimaryKeyChange = ev;
                this._actualPrimaryKeyChange_wrapped = function (o, e) {
                    var ext = _this.actualPrimaryKey;
                    if (_this.beforeActualPrimaryKeyChange) {
                        _this.beforeActualPrimaryKeyChange(_this, ext);
                    }
                    if (_this._actualPrimaryKeyChange) {
                        _this._actualPrimaryKeyChange(_this, ext);
                    }
                };
                this.i.propertyChanged = igniteuiReactCore.delegateCombine(this.i.propertyChanged, this._actualPrimaryKeyChange_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrDataGrid;
    }(React.Component));

    var IgrCheckedChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckedChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrCheckedChangedEventArgs.prototype.createImplementation = function () {
            return new CheckedChangedEventArgs();
        };
        Object.defineProperty(IgrCheckedChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrCheckedChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrCheckedChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrCheckedChangedEventArgs.prototype, "index", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckedChangedEventArgs.prototype, "isChecked", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrCheckedChangedEventArgs;
    }());

    var IgrSelectAllCheckboxChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrSelectAllCheckboxChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrSelectAllCheckboxChangedEventArgs.prototype.createImplementation = function () {
            return new SelectAllCheckboxChangedEventArgs();
        };
        Object.defineProperty(IgrSelectAllCheckboxChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrSelectAllCheckboxChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrSelectAllCheckboxChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrSelectAllCheckboxChangedEventArgs.prototype, "isChecked", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrSelectAllCheckboxChangedEventArgs;
    }());

    var IgrCheckboxList = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrCheckboxList, _super);
        function IgrCheckboxList(props) {
            var _this = _super.call(this, props) || this;
            _this._dataSource = null;
            _this._wrapper = null;
            _this._implementation = null;
            _this._keys = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._checkedChanged = null;
            _this._checkedChanged_wrapped = null;
            _this._selectAllCheckboxChanged = null;
            _this._selectAllCheckboxChanged_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._getGridRef = _this._getGridRef.bind(_this);
            _this._getSelectAllSection = _this._getSelectAllSection.bind(_this);
            _this._getFilterHr = _this._getFilterHr.bind(_this);
            _this._implementation = _this.createImplementation();
            var checkboxList = _this.i;
            _this._checkboxList = checkboxList;
            checkboxList.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrCheckboxList.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._checkboxList.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._checkboxList.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "dataSource", {
            get: function () {
                return this._dataSource;
            },
            set: function (value) {
                this._dataSource = value;
                if (this._checkboxList != null) {
                    this._checkboxList.itemsSource = this._dataSource;
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrCheckboxList.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            this.verifyReferences();
        };
        IgrCheckboxList.prototype._getGridRef = function (ref) {
            this._gridRef = ref;
            this.verifyReferences();
        };
        IgrCheckboxList.prototype._getSelectAllSection = function (ref) {
            this._selectAllSectionRef = ref;
            this.verifyReferences();
        };
        IgrCheckboxList.prototype._getFilterHr = function (ref) {
            this._filterHrRef = ref;
            this.verifyReferences();
        };
        IgrCheckboxList.prototype.verifyReferences = function () {
            if (this._elRef != null &&
                this._gridRef != null &&
                this._filterHrRef != null &&
                this._selectAllSectionRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                var selectAllSectionWrapper = this._renderer.getWrapper(this._selectAllSectionRef);
                this._checkboxList.provideContainer(this._renderer, this._gridRef.i, selectAllSectionWrapper);
                var filterHr = this._renderer.getWrapper(this._filterHrRef);
                filterHr.setStyleProperty("margin", "3px 0px");
                filterHr.setStyleProperty("border-top", "1px solid #dde2eb");
                filterHr.setStyleProperty("border-left", "0px");
                filterHr.setStyleProperty("border-right", "0px");
                filterHr.setStyleProperty("border-bottom", "0px");
                this._checkboxList.provideHrElement(filterHr);
            }
        };
        IgrCheckboxList.prototype.render = function () {
            var children = [];
            //let filterContainerChildren: any[] = [];
            var filterContainer = React.createElement("div", {
                key: "filterContainer"
                //children: filterContainerChildren
            });
            children.push(filterContainer);
            var filterHr = React.createElement("hr", {
                ref: this._getFilterHr,
                key: "filterHr"
                //children: filterContainerChildren
            });
            children.push(filterHr);
            /*let filter = React.createElement("input", {
                ref: this._getFilterRef,
                type: "text",
                key: "checkboxListFilterInput"
            });
            filterContainerChildren.push(filter);*/
            var selectAllSection = React.createElement("div", {
                ref: this._getSelectAllSection,
                key: "selectAllSection"
            });
            children.push(selectAllSection);
            var grid = React.createElement(IgrDataGrid, {
                ref: this._getGridRef,
                key: "checkboxListGrid",
                scrollbarStyle: "Default",
                headerHeight: 0
            });
            children.push(grid);
            var div = React.createElement("div", {
                className: "ig-checkbox-list igr-checkbox-list",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrCheckboxList.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrCheckboxList.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrCheckboxList.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrCheckboxList.prototype.componentWillUnmount = function () {
            if (this._checkboxList)
                this._checkboxList.destroy();
            if (this._renderer)
                this._renderer.destroy();
        };
        IgrCheckboxList.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this._checkboxList.notifySizeChanged();
            this.initializeContent();
        };
        IgrCheckboxList.prototype.initializeContent = function () {
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrCheckboxList.prototype.createImplementation = function () {
            return new CheckboxList();
        };
        Object.defineProperty(IgrCheckboxList.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "keys", {
            /**
             * Gets the collection responsible for selection in the CheckboxList. Selection is determined by two factors:
             * whether everything is selected or deselected and the values present in this collection. If everything is
             * selected then any items in this collection will be deselected. If everything is deselected then any items in
             * this collection will be selected. The CheckboxList defaults all items as deselected. This state can change
             * when you use the SelectAll and DeselectAll methods.
            */
            get: function () {
                if (this._keys === null) {
                    var coll = new IgrGridSelectedKeysCollection();
                    var innerColl = this.i.g;
                    if (!innerColl) {
                        innerColl = new GridSelectedKeysCollection();
                    }
                    this._keys = coll._fromInner(innerColl);
                }
                return this._keys;
            },
            set: function (v) {
                if (this._keys !== null) {
                    this._keys._setSyncTarget(null);
                    this._keys = null;
                }
                var coll = new IgrGridSelectedKeysCollection();
                this._keys = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(PrimaryKeyValue.$type);
                var innerColl = this.i.g;
                if (!innerColl) {
                    innerColl = new GridSelectedKeysCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._keys._setSyncTarget(syncColl);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "primaryKey", {
            /**
             * Gets or sets the primary key to use for the CheckboxList.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "dataMemberPath", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.at;
            },
            set: function (v) {
                this.i.at = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "selectedMemberPath", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.a9;
            },
            set: function (v) {
                this.i.a9 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "filterPlaceholderText", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.ax;
            },
            set: function (v) {
                this.i.ax = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "searchInputType", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = igniteuiReactCore.ensureEnum(igniteuiReactInputs.InputGroupDisplayType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "rowHeight", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.aj;
            },
            set: function (v) {
                this.i.aj = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "cellTextStyle", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                if (this.i.z == null) {
                    return null;
                }
                return this.i.z.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.z = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "indexType", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureEnum(CheckboxListIndexType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "baseTheme", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "density", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "selectAllCaption", {
            /**
             * Gets / sets the caption of the "Select All" checkbox.
            */
            get: function () {
                return this.i.a6;
            },
            set: function (v) {
                this.i.a6 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "selectAllCaptionTextColor", {
            /**
             * Gets or sets the color to use for the "Select All" label.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.cj);
            },
            set: function (v) {
                this.i.cj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "actualSelectAllCaptionTextColor", {
            /**
             * Gets or sets the color to use for the actual header selectAllCaption text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.cf);
            },
            set: function (v) {
                this.i.cf = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "showSelectAll", {
            /**
             * Gets / sets whether the "Select all" checkbox is visible.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "backgroundColor", {
            /**
             * Gets or sets the color to use for the background of the component.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.cg);
            },
            set: function (v) {
                this.i.cg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "textColor", {
            /**
             * Gets or sets the color to use for the text of the component.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.cl);
            },
            set: function (v) {
                this.i.cl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrCheckboxList.prototype.findByName = function (name) {
            if (this.keys != null && this.keys.findByName && this.keys.findByName(name)) {
                return this.keys.findByName(name);
            }
            return null;
        };
        Object.defineProperty(IgrCheckboxList.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrCheckboxList.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCheckboxList.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("CheckboxList");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        /**
     * selects all the items in the checkbox list.

    */
        IgrCheckboxList.prototype.selectAll = function () {
            this.i.b5();
        };
        /**
         * Deselects all the items in the checkbox list.
        
        */
        IgrCheckboxList.prototype.deselectAll = function () {
            this.i.bh();
        };
        IgrCheckboxList.prototype.notifySetItem = function (index, oldItem, newItem) {
            this.i.bo(index, oldItem, newItem);
        };
        /**
         * Manually notifies the checkboxlist's grid that the data it has bound to has been cleared and needs to be re-examined.
         * This should not be called if the data that the grid is bound to is already observable.
        
        */
        IgrCheckboxList.prototype.notifyClearItems = function () {
            this.i.bl();
        };
        IgrCheckboxList.prototype.notifyInsertItem = function (index, newItem) {
            this.i.bm(index, newItem);
        };
        IgrCheckboxList.prototype.notifyRemoveItem = function (index, oldItem) {
            this.i.bn(index, oldItem);
        };
        IgrCheckboxList.prototype.addKeyValue = function (value) {
            this.i.be(value);
        };
        IgrCheckboxList.prototype.removeKeyValue = function (value) {
            this.i.b4(value);
        };
        /**
         * Returns true if no items are selected / checked; otherwise false.
        
        */
        IgrCheckboxList.prototype.isNothingSelected = function () {
            var iv = this.i.ad();
            return (iv);
        };
        /**
         * Returns true if all of the items are selected / checked; otherwise false.
        
        */
        IgrCheckboxList.prototype.isEverythingSelected = function () {
            var iv = this.i.ac();
            return (iv);
        };
        Object.defineProperty(IgrCheckboxList.prototype, "checkedChanged", {
            /**
             * Called when a checkbox is checked or unchecked.
            */
            get: function () {
                return this._checkedChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._checkedChanged_wrapped !== null) {
                    this.i.checkedChanged = igniteuiReactCore.delegateRemove(this.i.checkedChanged, this._checkedChanged_wrapped);
                    this._checkedChanged_wrapped = null;
                    this._checkedChanged = null;
                }
                this._checkedChanged = ev;
                this._checkedChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrCheckedChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCheckedChanged) {
                        _this.beforeCheckedChanged(_this, outerArgs);
                    }
                    if (_this._checkedChanged) {
                        _this._checkedChanged(_this, outerArgs);
                    }
                };
                this.i.checkedChanged = igniteuiReactCore.delegateCombine(this.i.checkedChanged, this._checkedChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxList.prototype, "selectAllCheckboxChanged", {
            /**
             * Called when the SelectAll checkbox is checked or unchecked.
            */
            get: function () {
                return this._selectAllCheckboxChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._selectAllCheckboxChanged_wrapped !== null) {
                    this.i.selectAllCheckboxChanged = igniteuiReactCore.delegateRemove(this.i.selectAllCheckboxChanged, this._selectAllCheckboxChanged_wrapped);
                    this._selectAllCheckboxChanged_wrapped = null;
                    this._selectAllCheckboxChanged = null;
                }
                this._selectAllCheckboxChanged = ev;
                this._selectAllCheckboxChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrSelectAllCheckboxChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelectAllCheckboxChanged) {
                        _this.beforeSelectAllCheckboxChanged(_this, outerArgs);
                    }
                    if (_this._selectAllCheckboxChanged) {
                        _this._selectAllCheckboxChanged(_this, outerArgs);
                    }
                };
                this.i.selectAllCheckboxChanged = igniteuiReactCore.delegateCombine(this.i.selectAllCheckboxChanged, this._selectAllCheckboxChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrCheckboxList;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Represents a class used to configure the appearance of a text column header cells.
    */
    var IgrTextHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTextHeader, _super);
        function IgrTextHeader(props) {
            return _super.call(this, props) || this;
        }
        IgrTextHeader.prototype.createImplementation = function () {
            return new TextHeader();
        };
        Object.defineProperty(IgrTextHeader.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTextHeader;
    }(IgrHeader));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTextHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTextHeaderModule() {
        }
        IgrTextHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrTextHeader", IgrTextHeader);
            igniteuiReactCore.TypeRegistrar.register("TextHeader", TextHeader.$type);
        };
        return IgrTextHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSectionHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSectionHeaderModule() {
        }
        IgrSectionHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrSectionHeader", IgrSectionHeader);
            igniteuiReactCore.TypeRegistrar.register("SectionHeader", SectionHeader.$type);
        };
        return IgrSectionHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRowSeparatorModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRowSeparatorModule() {
        }
        IgrRowSeparatorModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrRowSeparator", IgrRowSeparator);
            igniteuiReactCore.TypeRegistrar.register("RowSeparator", RowSeparator.$type);
        };
        return IgrRowSeparatorModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrHeaderSeparatorModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrHeaderSeparatorModule() {
        }
        IgrHeaderSeparatorModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrHeaderSeparator", IgrHeaderSeparator);
            igniteuiReactCore.TypeRegistrar.register("HeaderSeparator", HeaderSeparator.$type);
        };
        return IgrHeaderSeparatorModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnResizingSeparatorModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnResizingSeparatorModule() {
        }
        IgrColumnResizingSeparatorModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrColumnResizingSeparator", IgrColumnResizingSeparator);
            igniteuiReactCore.TypeRegistrar.register("ColumnResizingSeparator", ColumnResizingSeparator.$type);
        };
        return IgrColumnResizingSeparatorModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnMovingSeparatorModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnMovingSeparatorModule() {
        }
        IgrColumnMovingSeparatorModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrColumnMovingSeparator", IgrColumnMovingSeparator);
            igniteuiReactCore.TypeRegistrar.register("ColumnMovingSeparator", ColumnMovingSeparator.$type);
        };
        return IgrColumnMovingSeparatorModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSummaryRowRootModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSummaryRowRootModule() {
        }
        IgrSummaryRowRootModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrSummaryRowRoot", IgrSummaryRowRoot);
            igniteuiReactCore.TypeRegistrar.register("SummaryRowRoot", SummaryRowRoot.$type);
        };
        return IgrSummaryRowRootModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSummaryRowSectionModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSummaryRowSectionModule() {
        }
        IgrSummaryRowSectionModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrSummaryRowSection", IgrSummaryRowSection);
            igniteuiReactCore.TypeRegistrar.register("SummaryRowSection", SummaryRowSection.$type);
        };
        return IgrSummaryRowSectionModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnWidthModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnWidthModule() {
        }
        IgrColumnWidthModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrColumnWidth", IgrColumnWidth);
            igniteuiReactCore.TypeRegistrar.register("ColumnWidth", ColumnWidth.$type);
        };
        return IgrColumnWidthModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnSortDescriptionModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnSortDescriptionModule() {
        }
        IgrColumnSortDescriptionModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrColumnSortDescription", IgrColumnSortDescription);
            igniteuiReactCore.TypeRegistrar.register("ColumnSortDescription", ColumnSortDescription.$type);
        };
        return IgrColumnSortDescriptionModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnGroupDescriptionModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnGroupDescriptionModule() {
        }
        IgrColumnGroupDescriptionModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrColumnGroupDescription", IgrColumnGroupDescription);
            igniteuiReactCore.TypeRegistrar.register("ColumnGroupDescription", ColumnGroupDescription.$type);
        };
        return IgrColumnGroupDescriptionModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnSummaryDescriptionModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnSummaryDescriptionModule() {
        }
        IgrColumnSummaryDescriptionModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrColumnSummaryDescription", IgrColumnSummaryDescription);
            igniteuiReactCore.TypeRegistrar.register("ColumnSummaryDescription", ColumnSummaryDescription.$type);
        };
        return IgrColumnSummaryDescriptionModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrPrimaryKeyValueModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrPrimaryKeyValueModule() {
        }
        IgrPrimaryKeyValueModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrPrimaryKeyValue", IgrPrimaryKeyValue);
            igniteuiReactCore.TypeRegistrar.register("PrimaryKeyValue", PrimaryKeyValue.$type);
        };
        return IgrPrimaryKeyValueModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCellKeyModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCellKeyModule() {
        }
        IgrCellKeyModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrCellKey", IgrCellKey);
            igniteuiReactCore.TypeRegistrar.register("CellKey", CellKey.$type);
        };
        return IgrCellKeyModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCellRangeModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCellRangeModule() {
        }
        IgrCellRangeModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrCellRange", IgrCellRange);
            igniteuiReactCore.TypeRegistrar.register("CellRange", CellRange.$type);
        };
        return IgrCellRangeModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridCellPositionModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridCellPositionModule() {
        }
        IgrGridCellPositionModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrGridCellPosition", IgrGridCellPosition);
            igniteuiReactCore.TypeRegistrar.register("GridCellPosition", GridCellPosition.$type);
        };
        return IgrGridCellPositionModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDataGridCoreModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDataGridCoreModule() {
        }
        IgrDataGridCoreModule.register = function () {
            IgrTextHeaderModule.register();
            IgrSectionHeaderModule.register();
            IgrRowSeparatorModule.register();
            IgrHeaderSeparatorModule.register();
            IgrColumnResizingSeparatorModule.register();
            IgrColumnMovingSeparatorModule.register();
            IgrSummaryRowRootModule.register();
            IgrSummaryRowSectionModule.register();
            IgrColumnWidthModule.register();
            IgrColumnSortDescriptionModule.register();
            IgrColumnGroupDescriptionModule.register();
            IgrColumnSummaryDescriptionModule.register();
            IgrPrimaryKeyValueModule.register();
            IgrCellKeyModule.register();
            IgrCellRangeModule.register();
            IgrGridCellPositionModule.register();
            igniteuiReactCore.IgrLocalDataSourceModule.register();
            igniteuiReactCore.IgrNumberFormatSpecifierModule.register();
            igniteuiReactCore.IgrDateTimeFormatSpecifierModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDataGrid', IgrDataGrid);
        };
        return IgrDataGridCoreModule;
    }());

    /**
     * Represents a Text grid column, used to allow the developer to display a formatted text in a cell.
    */
    var IgrTextColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTextColumn, _super);
        function IgrTextColumn(props) {
            return _super.call(this, props) || this;
        }
        IgrTextColumn.prototype.createImplementation = function () {
            return new TextColumn();
        };
        Object.defineProperty(IgrTextColumn.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextColumn.prototype, "editorType", {
            /**
             * Gets or sets the editor type used for editing cells in this column.
            */
            get: function () {
                return this.i.jp;
            },
            set: function (v) {
                this.i.jp = igniteuiReactCore.ensureEnum(EditorType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextColumn.prototype, "editorDataSource", {
            /**
             * Gets or sets the ComboBox data source.
            */
            get: function () {
                return this.i.jq;
            },
            set: function (v) {
                this.i.jq = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextColumn.prototype, "editorTextField", {
            /**
             * Gets or sets the ComboBox text field.
            */
            get: function () {
                return this.i.js;
            },
            set: function (v) {
                this.i.js = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTextColumn.prototype, "editorValueField", {
            /**
             * Gets or sets the ComboBox value field.
            */
            get: function () {
                return this.i.jo;
            },
            set: function (v) {
                this.i.jo = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTextColumn;
    }(IgrColumn));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTextColumnModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTextColumnModule() {
        }
        IgrTextColumnModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrTextColumn", IgrTextColumn);
            igniteuiReactCore.TypeRegistrar.register("TextColumn", TextColumn.$type);
        };
        return IgrTextColumnModule;
    }());

    /**
     * Represents a Numeric grid column, used to allow the developer to display a formatted number in a cell.
    */
    var IgrNumericColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrNumericColumn, _super);
        function IgrNumericColumn(props) {
            return _super.call(this, props) || this;
        }
        IgrNumericColumn.prototype.createImplementation = function () {
            return new NumericColumn();
        };
        Object.defineProperty(IgrNumericColumn.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "negativePrefix", {
            /**
             * Gets or sets the string to prefix a negative value. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.kh;
            },
            set: function (v) {
                this.i.kh = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "positivePrefix", {
            /**
             * Gets or sets the string to prefix a positive value. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.kl;
            },
            set: function (v) {
                this.i.kl = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "negativeSuffix", {
            /**
             * Gets or sets the string to suffix a negative value. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.kj;
            },
            set: function (v) {
                this.i.kj = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "positiveSuffix", {
            /**
             * Gets or sets the string to suffix a positive value. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.kn;
            },
            set: function (v) {
                this.i.kn = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "maxFractionDigits", {
            /**
             * Gets or sets the maximum fraction digits. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.jy;
            },
            set: function (v) {
                this.i.jy = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "minFractionDigits", {
            /**
             * Gets or sets the minimum fraction digits. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.jz;
            },
            set: function (v) {
                this.i.jz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "minIntegerDigits", {
            /**
             * Gets or sets the minimum integer digits. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.j0;
            },
            set: function (v) {
                this.i.j0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "showGroupingSeparator", {
            /**
             * Gets or sets whether to show a grouping separator. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.jt;
            },
            set: function (v) {
                this.i.jt = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "formatString", {
            /**
             * Gets or sets the format string to apply to the value. If set, the other value formatting properties on this column are ignored.
            */
            get: function () {
                return this.i.kc;
            },
            set: function (v) {
                this.i.kc = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "formatSpecifiers", {
            get: function () {
                return this.i.jq;
            },
            set: function (v) {
                this.i.jq = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "formatOverride", {
            /**
             * Gets or sets the INTL NumericFormat object to use for formatting the date values.
            */
            get: function () {
                return this.i.j3;
            },
            set: function (v) {
                this.i.j3 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "editorType", {
            /**
             * Gets or sets the editor type used for editing cells in this column.
            */
            get: function () {
                return this.i.jr;
            },
            set: function (v) {
                this.i.jr = igniteuiReactCore.ensureEnum(EditorType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "editorDataSource", {
            /**
             * Gets or sets the ComboBox data source.
            */
            get: function () {
                return this.i.j2;
            },
            set: function (v) {
                this.i.j2 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "editorTextField", {
            /**
             * Gets or sets the ComboBox text field.
            */
            get: function () {
                return this.i.j9;
            },
            set: function (v) {
                this.i.j9 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrNumericColumn.prototype, "editorValueField", {
            /**
             * Gets or sets the ComboBox value field.
            */
            get: function () {
                return this.i.jp;
            },
            set: function (v) {
                this.i.jp = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrNumericColumn.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.formatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name);
            }
            return null;
        };
        return IgrNumericColumn;
    }(IgrColumn));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrNumericColumnModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrNumericColumnModule() {
        }
        IgrNumericColumnModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrNumericColumn", IgrNumericColumn);
            igniteuiReactCore.TypeRegistrar.register("NumericColumn", NumericColumn.$type);
        };
        return IgrNumericColumnModule;
    }());

    /**
     * A column for displaying date/time values.
    */
    var IgrDateTimeColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDateTimeColumn, _super);
        function IgrDateTimeColumn(props) {
            return _super.call(this, props) || this;
        }
        IgrDateTimeColumn.prototype.createImplementation = function () {
            return new DateTimeColumn();
        };
        Object.defineProperty(IgrDateTimeColumn.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "dateTimeFormat", {
            /**
             * Gets or sets the date time format to use for this column. If FormatString is specificied this value is ignored.
            */
            get: function () {
                return this.i.jt;
            },
            set: function (v) {
                this.i.jt = igniteuiReactCore.ensureEnum(DateTimeFormats_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "formatString", {
            /**
             * Gets or sets the format string to apply to the value. If set, the other value formatting properties on this column are ignored.
            */
            get: function () {
                return this.i.j4;
            },
            set: function (v) {
                this.i.j4 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "formatSpecifiers", {
            get: function () {
                return this.i.jq;
            },
            set: function (v) {
                this.i.jq = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "formatOverride", {
            /**
             * Gets or sets the INTL DateTimeFormat object to use for formatting the date values.
            */
            get: function () {
                return this.i.jy;
            },
            set: function (v) {
                this.i.jy = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "editorType", {
            /**
             * Gets or sets the editor type used for editing cells in this column.
            */
            get: function () {
                return this.i.ju;
            },
            set: function (v) {
                this.i.ju = igniteuiReactCore.ensureEnum(EditorType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "editorDataSource", {
            /**
             * Gets or sets the ComboBox data source.
            */
            get: function () {
                return this.i.jx;
            },
            set: function (v) {
                this.i.jx = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "editorTextField", {
            /**
             * Gets or sets the ComboBox text field.
            */
            get: function () {
                return this.i.j1;
            },
            set: function (v) {
                this.i.j1 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDateTimeColumn.prototype, "editorValueField", {
            /**
             * Gets or sets the ComboBox value field.
            */
            get: function () {
                return this.i.jp;
            },
            set: function (v) {
                this.i.jp = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrDateTimeColumn.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.formatSpecifiers != null && igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name)) {
                return igniteuiReactCore.arrayFindByName(this.formatSpecifiers, name);
            }
            return null;
        };
        return IgrDateTimeColumn;
    }(IgrColumn));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDateTimeColumnModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDateTimeColumnModule() {
        }
        IgrDateTimeColumnModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrDateTimeColumn", IgrDateTimeColumn);
            igniteuiReactCore.TypeRegistrar.register("DateTimeColumn", DateTimeColumn.$type);
        };
        return IgrDateTimeColumnModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Information about the cell that has content which is being created or updated.
    */
    var IgrTemplateCellUpdatingEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTemplateCellUpdatingEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrTemplateCellUpdatingEventArgs.prototype.createImplementation = function () {
            return new TemplateCellUpdatingEventArgs();
        };
        Object.defineProperty(IgrTemplateCellUpdatingEventArgs.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateCellUpdatingEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTemplateCellUpdatingEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrTemplateCellUpdatingEventArgs.prototype, "isCanvasBased", {
            get: function () {
                return this.i.content.isCanvasBased;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateCellUpdatingEventArgs.prototype, "content", {
            /**
             * The host in which to add or update content if this is a DOM based cell.
            */
            get: function () {
                if (this.isCanvasBased) {
                    return null;
                }
                else {
                    return this.i.content.element.getNativeElement();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateCellUpdatingEventArgs.prototype.ensureCorrectSize = function () {
            return this.i.content.ensureCorrectSize();
        };
        Object.defineProperty(IgrTemplateCellUpdatingEventArgs.prototype, "context", {
            get: function () {
                if (this.isCanvasBased) {
                    return this.i.content.templateContext;
                }
                else {
                    return null;
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateCellUpdatingEventArgs.prototype.renderStandardBackground = function () {
            this.i.content.renderStandardBackground();
        };
        IgrTemplateCellUpdatingEventArgs.prototype.renderStandardContent = function () {
            this.i.content.renderStandardContent();
        };
        Object.defineProperty(IgrTemplateCellUpdatingEventArgs.prototype, "cellInfo", {
            /**
             * The backing information for the current cell.
            */
            get: function () {
                if (this.i.cellInfo == null) {
                    return null;
                }
                if (!this.i.cellInfo.externalObject) {
                    var ext = null;
                    switch (this.i.cellInfo.$type.name) {
                        case "DateTimeCellModel":
                            ext = new IgrDateTimeCellInfo();
                            break;
                        case "ImageCellModel":
                            ext = new IgrImageCellInfo();
                            break;
                        case "NumericCellModel":
                            ext = new IgrNumericCellInfo();
                            break;
                        case "RowSeparatorModel":
                            ext = new IgrRowSeparatorInfo();
                            break;
                        case "SectionHeaderCellModel":
                            ext = new IgrSectionHeaderCellInfo();
                            break;
                        case "TemplateCellModel":
                            ext = new IgrTemplateCellInfo();
                            break;
                        case "TemplateHeaderCellModel":
                            ext = new IgrTemplateHeaderCellInfo();
                            break;
                        case "TemplateSectionHeaderCellModel":
                            ext = new IgrTemplateSectionHeaderCellInfo();
                            break;
                        case "TextCellModel":
                            ext = new IgrTextCellInfo();
                            break;
                        case "TextHeaderCellModel":
                            ext = new IgrTextHeaderCellInfo();
                            break;
                    }
                    ext._implementation = this.i.cellInfo;
                    this.i.cellInfo.externalObject = ext;
                }
                return this.i.cellInfo.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateCellUpdatingEventArgs;
    }());

    /**
     * A column with customizable content.
    */
    var IgrTemplateColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTemplateColumn, _super);
        function IgrTemplateColumn(props) {
            var _this = _super.call(this, props) || this;
            _this._templateCells = [];
            _this._activeCellContent = new Map();
            _this._activeCellContentElements = new Map();
            _this._templateCellInitialData = new Map();
            _this._templateCellInitialTemplate = new Map();
            _this._currCellInfo = null;
            _this._template = null;
            _this._templateSelector = null;
            _this._hasSelector = false;
            _this._selectorStyles = new Map();
            _this._selectorTemplates = new Map();
            _this._keyCount = 0;
            _this._cellUpdating = null;
            _this._cellUpdating_wrapped = null;
            _this.cellInfoChanged = _this.cellInfoChanged.bind(_this);
            _this._templateRef = _this._templateRef.bind(_this);
            return _this;
        }
        IgrTemplateColumn.prototype.createImplementation = function () {
            return new TemplateColumn();
        };
        Object.defineProperty(IgrTemplateColumn.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateColumn.prototype.beforeStyleKeyRequested = function (s, e) {
            if (this.template == null && this.templateSelector == null) {
                return;
            }
            if (!this._hasSelector) {
                return;
            }
            var selector = this._templateSelector;
            if (selector == null) {
                return;
            }
            var actualTemplate = this._templateSelector(this, e.resolvedValue);
            if (actualTemplate == null) {
                return;
            }
            var key;
            if (this._selectorStyles.has(actualTemplate)) {
                key = this._selectorStyles.get(actualTemplate);
                e.styleKey = key;
            }
            else {
                if (this._selectorStyles.size < 1000) {
                    key = "template_" + this.field + "_" + this._keyCount;
                    this._selectorStyles.set(actualTemplate, key);
                    this._selectorTemplates[key] = actualTemplate;
                    this._keyCount++;
                    e.styleKey = key;
                }
            }
        };
        IgrTemplateColumn.prototype.render = function () {
            // if (!this._childrenDiffer(this.props.children)) {
            // 	let div = React.createElement("div", {
            // 		ref: (ref) => {
            // 			this._elRef = ref;
            // 		},
            // 		children: this.props.children
            // 	});
            // 	return div;
            // } else {
            var children = [];
            if (this._templateCells && this._templateCells.length > 0) {
                for (var i = 0; i < this._templateCells.length; i++) {
                    var t = this._templateCells[i];
                    if (this._activeCellContentElements.has(t)) {
                        children.push(this._activeCellContentElements.get(t));
                    }
                    else {
                        var tEle = React.createElement(igniteuiReactCore.IgrTemplateContainer, {
                            ref: this._templateRef,
                            key: this._templateCells[i].key,
                            owner: this._templateCells[i],
                            omitContainer: true
                        });
                        var portal = ReactDOM.createPortal(tEle, t, this._templateCells[i].key);
                        this._activeCellContentElements.set(t, portal);
                        children.push(portal);
                    }
                }
            }
            else {
                return null;
            }
            var div = React.createElement("div", {
                children: children
            });
            return div;
            //}
        };
        IgrTemplateColumn.prototype._templateRef = function (t) {
            if (t === null) {
                return;
            }
            if (t.currentOwner) {
                if (this._templateCellInitialTemplate.has(t.currentOwner)) {
                    t.template = this._templateCellInitialTemplate.get(t.currentOwner);
                    this._templateCellInitialTemplate.delete(t.currentOwner);
                }
                if (this._templateCellInitialData.has(t.currentOwner)) {
                    t.dataContext = this._templateCellInitialData.get(t.currentOwner);
                    this._templateCellInitialTemplate.delete(t.currentOwner);
                }
            }
            this._activeCellContent.set(t.currentOwner, t);
        };
        IgrTemplateColumn.prototype.beforeCellUpdating = function (s, e) {
            if (this.template == null && this.templateSelector == null) {
                return;
            }
            var info = e.cellInfo;
            var existingView;
            if (!info.isContentDirty &&
                !info.isDataDirty &&
                !info.isSizeDirty) {
                return;
            }
            var actualTemplate = this._template;
            if (this._hasSelector) {
                if (this._selectorTemplates.has(info.styleKey)) {
                    actualTemplate = this._selectorTemplates.get(info.styleKey);
                }
            }
            var internalContent = e.content;
            if (internalContent == null) {
                return;
            }
            if (this._activeCellContent.has(internalContent)) {
                var templateView = this._activeCellContent.get(internalContent);
                templateView.dataContext = info;
                this.updateCellInfo(info);
                if (templateView.template != actualTemplate) {
                    templateView.template = actualTemplate;
                }
                else {
                    existingView = templateView;
                }
            }
            else {
                this._templateCells.push(internalContent);
                this._templateCellInitialData.set(internalContent, info);
                this.updateCellInfo(info);
                this._templateCellInitialTemplate.set(internalContent, actualTemplate);
                this.updateTemplates();
            }
        };
        IgrTemplateColumn.prototype.updateCellInfo = function (info) {
            var oldInfo = this._currCellInfo;
            if (oldInfo != null) {
                oldInfo.removeOnChangedListener(this.cellInfoChanged);
            }
            this._currCellInfo = info;
            if (this._currCellInfo != null) {
                this._currCellInfo.addOnChangedListener(this.cellInfoChanged);
            }
        };
        IgrTemplateColumn.prototype.cellInfoChanged = function () {
            this.updateTemplates();
        };
        IgrTemplateColumn.prototype.dummyStyleKeyRequested = function (s, e) {
        };
        IgrTemplateColumn.prototype.dummyCellUpdating = function (s, e) {
        };
        Object.defineProperty(IgrTemplateColumn.prototype, "hasTemplate", {
            get: function () {
                return this._template != null || this._templateSelector != null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateColumn.prototype, "template", {
            get: function () {
                return this._template;
            },
            set: function (value) {
                var oldValue = this.hasTemplate;
                this._template = value;
                this.ensureTemplateEvents(oldValue);
                this.onTemplateChanged();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateColumn.prototype, "templateSelector", {
            get: function () {
                return this._templateSelector;
            },
            set: function (value) {
                var oldValue = this.hasTemplate;
                this._templateSelector = value;
                this._hasSelector = this._templateSelector != null;
                this.ensureTemplateEvents(oldValue);
                this.onTemplateChanged();
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateColumn.prototype.onTemplateChanged = function () {
            this._selectorStyles.clear();
            this._selectorTemplates.clear();
            this._keyCount = 0;
        };
        IgrTemplateColumn.prototype.updateTemplates = function () {
            this.setState({});
        };
        IgrTemplateColumn.prototype.ensureTemplateEvents = function (oldValue) {
            if (this.hasTemplate && !oldValue) {
                if (!this.cellStyleKeyRequested) {
                    this.cellStyleKeyRequested = this.dummyStyleKeyRequested;
                    this._styleKeyRequested = null;
                }
                if (!this.cellUpdating) {
                    this.cellUpdating = this.dummyCellUpdating;
                    this._cellUpdating = null;
                }
            }
            if (!this.hasTemplate && oldValue) {
                if (!this.cellStyleKeyRequested) {
                    this.cellStyleKeyRequested = null;
                }
                if (!this.cellUpdating) {
                    this.cellUpdating = null;
                }
            }
        };
        Object.defineProperty(IgrTemplateColumn.prototype, "cellUpdating", {
            /**
             * Called when the cell content is being created or updated.
            */
            get: function () {
                return this._cellUpdating;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellUpdating_wrapped !== null) {
                    this.i.cellUpdating = igniteuiReactCore.delegateRemove(this.i.cellUpdating, this._cellUpdating_wrapped);
                    this._cellUpdating_wrapped = null;
                    this._cellUpdating = null;
                }
                this._cellUpdating = ev;
                this._cellUpdating_wrapped = function (o, e) {
                    var outerArgs = new IgrTemplateCellUpdatingEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellUpdating) {
                        _this.beforeCellUpdating(_this, outerArgs);
                    }
                    if (_this._cellUpdating) {
                        _this._cellUpdating(_this, outerArgs);
                    }
                };
                this.i.cellUpdating = igniteuiReactCore.delegateCombine(this.i.cellUpdating, this._cellUpdating_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateColumn;
    }(IgrColumn));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTemplateColumnModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTemplateColumnModule() {
        }
        IgrTemplateColumnModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrTemplateColumn", IgrTemplateColumn);
            igniteuiReactCore.TypeRegistrar.register("TemplateColumn", TemplateColumn.$type);
        };
        return IgrTemplateColumnModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCheckboxListModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckboxListModule() {
        }
        IgrCheckboxListModule.register = function () {
            IgrDataGridCoreModule.register();
            IgrTextColumnModule.register();
            IgrNumericColumnModule.register();
            IgrDateTimeColumnModule.register();
            IgrTemplateColumnModule.register();
            igniteuiReactInputs.IgrCheckboxModule.register();
            igniteuiReactInputs.IgrInputGroupModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckboxList', IgrCheckboxList);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckboxList', IgrCheckboxList);
            igniteuiReactCore.TypeRegistrar.register('CheckboxList', CheckboxList.$type);
        };
        return IgrCheckboxListModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnChooserInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnChooserInfo, _super);
        function ColumnChooserInfo() {
            var _this = _super.call(this) || this;
            _this.columnName = null;
            _this.isNotHidden = false;
            return _this;
        }
        ColumnChooserInfo.$t = igniteuiReactCore.markType(ColumnChooserInfo, 'ColumnChooserInfo');
        return ColumnChooserInfo;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnChooserView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnChooserView, _super);
        function ColumnChooserView() {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this.c = null;
            _this.e = null;
            _this.a = null;
            _this.b = null;
            return _this;
        }
        ColumnChooserView.prototype.h = function () {
        };
        ColumnChooserView.prototype.g = function (a) {
            if (a == null) {
                this.b = null;
                return;
            }
            this.b = a;
            this.e = this.b.rootWrapper.getChildAt(0);
            this.e.setStyleProperty("margin", "4px 0px 4px 0px");
            this.k();
            this.j();
            var b = Math.round(a.rootWrapper.width());
            var c = Math.round(a.rootWrapper.height());
            this.b.rootWrapper.setStyleProperty("position", "relative");
            this.i();
        };
        ColumnChooserView.prototype.i = function () {
            if (this.b != null) {
                this.b.rootWrapper.setStyleProperty("background-color", this.a.ao._fill);
            }
        };
        ColumnChooserView.prototype.j = function () {
            if (this.b != null) {
                var a = this.b.rootWrapper.getChildAt(1);
                a.setStyleProperty("width", "100%");
                if (this.a.t != null) {
                    a.setStyleProperty("height", "calc(100% - 25px");
                }
                else {
                    a.setStyleProperty("height", "calc(100% - 5px");
                }
            }
        };
        ColumnChooserView.prototype.k = function () {
            if (this.e != null && this.a.t != null) {
                this.e.setText(this.a.t);
                this.e.setStyleProperty("font", "16px \"Segoe UI\", Verdana");
            }
            this.l();
            this.m();
            this.j();
        };
        ColumnChooserView.prototype.l = function () {
            if (this.e != null && this.a.ap != null) {
                this.e.setStyleProperty("color", this.a.ap._fill);
            }
        };
        ColumnChooserView.prototype.m = function () {
            if (this.e != null && this.a.j != null) {
                this.e.setStyleProperty("font", this.a.j.fontString);
            }
        };
        ColumnChooserView.prototype.f = function () {
        };
        ColumnChooserView.$t = igniteuiReactCore.markType(ColumnChooserView, 'ColumnChooserView');
        return ColumnChooserView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnChooser = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnChooser, _super);
        function ColumnChooser() {
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.h = null;
            _this.propertyChanged = null;
            _this.k = false;
            _this.a = null;
            _this.m = null;
            _this.i = null;
            _this.an = igniteuiReactCore.BrushUtil.g(255, 0, 153, 255);
            _this.l = "Filter columns list ...";
            _this.d = 1;
            _this.f = 2;
            _this.am = igniteuiReactCore.BrushUtil.g(255, 248, 248, 248);
            _this.k = false;
            var a = new ColumnChooserView();
            a.a = _this;
            _this.c = a;
            _this.c.h();
            return _this;
        }
        ColumnChooser.prototype.notifySizeChanged = function () {
            this.c.f();
        };
        ColumnChooser.prototype.destroy = function () {
            if (this.h != null) {
                var a = this.h;
                a.checkedChanged = igniteuiReactCore.delegateRemove(a.checkedChanged, igniteuiReactCore.runOn(this, this.aa));
                var b = this.h;
                b.selectAllCheckboxChanged = igniteuiReactCore.delegateRemove(b.selectAllCheckboxChanged, igniteuiReactCore.runOn(this, this.ab));
            }
            this.provideContainer(null, null);
            if (this.a != null) {
                var c = this.a.actualColumns;
                c.collectionChanged = igniteuiReactCore.delegateRemove(c.collectionChanged, igniteuiReactCore.runOn(this, this.x));
                var d = this.a;
                d.columnHiddenChanged = igniteuiReactCore.delegateRemove(d.columnHiddenChanged, igniteuiReactCore.runOn(this, this.ak));
            }
        };
        ColumnChooser.prototype.provideContainer = function (a, b) {
            this.h = b;
            if (this.h != null) {
                var c = this.h;
                c.checkedChanged = igniteuiReactCore.delegateCombine(c.checkedChanged, igniteuiReactCore.runOn(this, this.aa));
                var d = this.h;
                d.selectAllCheckboxChanged = igniteuiReactCore.delegateCombine(d.selectAllCheckboxChanged, igniteuiReactCore.runOn(this, this.ab));
            }
            this.y();
            this.c.g(a);
        };
        Object.defineProperty(ColumnChooser.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.ae("TargetGrid", b, this.a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnChooser.prototype, "t", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.ae("Title", b, this.m);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnChooser.prototype, "j", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                if (b != this.i) {
                    this.ae("TitleStyle", b, this.i);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnChooser.prototype, "ap", {
            get: function () {
                return this.an;
            },
            set: function (a) {
                var b = this.an;
                this.an = a;
                if (b != this.an) {
                    this.ae("TitleColor", b, this.an);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnChooser.prototype, "q", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                if (b != this.l) {
                    this.ae("FilterPlaceholderText", b, this.l);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnChooser.prototype, "e", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                if (b != this.d) {
                    this.ae("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, this.d));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnChooser.prototype, "g", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.ae("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.f));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnChooser.prototype, "ao", {
            get: function () {
                return this.am;
            },
            set: function (a) {
                var b = this.am;
                this.am = a;
                if (b != this.am) {
                    this.ae("BackgroundColor", b, this.am);
                }
            },
            enumerable: true,
            configurable: true
        });
        ColumnChooser.prototype.ae = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.af(a, b, c);
        };
        ColumnChooser.prototype.af = function (a, b, c) {
            switch (a) {
                case "TargetGrid":
                    if (b != null) {
                        var d = b.actualColumns;
                        d.collectionChanged = igniteuiReactCore.delegateRemove(d.collectionChanged, igniteuiReactCore.runOn(this, this.x));
                        var e = b;
                        e.columnHiddenChanged = igniteuiReactCore.delegateRemove(e.columnHiddenChanged, igniteuiReactCore.runOn(this, this.ak));
                    }
                    if (this.a != null) {
                        var f = this.a.actualColumns;
                        f.collectionChanged = igniteuiReactCore.delegateCombine(f.collectionChanged, igniteuiReactCore.runOn(this, this.x));
                        var g = this.a;
                        g.columnHiddenChanged = igniteuiReactCore.delegateCombine(g.columnHiddenChanged, igniteuiReactCore.runOn(this, this.ak));
                    }
                    this.y();
                    break;
                case "Title":
                    this.c.k();
                    break;
                case "TitleStyle":
                    this.c.m();
                    break;
                case "TitleColor":
                    this.c.l();
                    break;
                case "FilterPlaceholderText":
                    if (this.h != null) {
                        this.h.ax = this.q;
                    }
                    break;
                case "BaseTheme":
                    this.ai();
                    break;
                case "Density":
                    this.ah();
                    break;
                case "BackgroundColor":
                    if (this.h != null) {
                        this.h.cg = this.ao;
                    }
                    this.c.i();
                    break;
            }
        };
        ColumnChooser.prototype.ai = function () {
            if (this.h != null) {
                this.h.l = this.e;
            }
        };
        ColumnChooser.prototype.ah = function () {
            if (this.h != null) {
                this.h.n = this.g;
            }
        };
        ColumnChooser.prototype.ak = function (a, b) {
            if (this.k == false) {
                this.y();
            }
            this.k = false;
        };
        ColumnChooser.prototype.x = function (a, b) {
            this.y();
        };
        ColumnChooser.prototype.y = function () {
            var e_1, _a;
            if (this.a != null && this.h != null) {
                this.h.l = this.e;
                this.h.n = this.g;
                this.h.cg = this.ao;
                var a = void 0;
                var b = new igniteuiReactCore.ObservableCollection$1(ColumnChooserInfo.$, 0);
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.a.actualColumns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var c = _c.value;
                        a = new ColumnChooserInfo();
                        var d = c.hy;
                        if (c.h2 != null) {
                            d = c.h2;
                        }
                        a.columnName = d;
                        a.isNotHidden = !c.gd;
                        b.add(a);
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                if (this.q != null) {
                    this.h.ax = this.q;
                }
                this.h.itemsSource = b;
                var e = "";
                var f = "";
                e = "columnName";
                f = "isNotHidden";
                this.h.a9 = f;
                this.h.at = e;
                this.h.ag = true;
            }
        };
        ColumnChooser.prototype.al = function (a) {
            if (this.h != null) {
                this.h.updateHrMargin(a);
            }
        };
        ColumnChooser.prototype.aj = function () {
            var e_2, _a;
            this.h.b5();
            if (this.a != null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.a.actualColumns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var a = _c.value;
                        this.k = true;
                        a.gd = false;
                    }
                }
                catch (e_2_1) {
                    e_2 = { error: e_2_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_2)
                            throw e_2.error;
                    }
                }
            }
        };
        ColumnChooser.prototype.ac = function () {
            var e_3, _a;
            this.h.bh();
            if (this.a != null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.a.actualColumns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var a = _c.value;
                        this.k = true;
                        a.gd = true;
                    }
                }
                catch (e_3_1) {
                    e_3 = { error: e_3_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_3)
                            throw e_3.error;
                    }
                }
            }
        };
        ColumnChooser.prototype.ab = function (a, b) {
            this.k = true;
            if (b.a) {
                this.aj();
            }
            else {
                this.ac();
            }
        };
        ColumnChooser.prototype.aa = function (a, b) {
            this.k = true;
            var c = this.h.h.actualDataSource.getItemAtIndex(b.b);
            var d = this.a.actualColumns.count;
            for (var e = 0; e < d; e++) {
                if (this.a.actualColumns._inner[e].hy == c.columnName || this.a.actualColumns._inner[e].id == c.columnName || this.a.actualColumns._inner[e].h2 == c.columnName) {
                    this.a.actualColumns._inner[e].gd = !b.a;
                }
            }
        };
        ColumnChooser.$t = igniteuiReactCore.markType(ColumnChooser, 'ColumnChooser', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return ColumnChooser;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*@__PURE__*/ IgrCheckboxListModule.register();
    var IgrColumnChooser = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumnChooser, _super);
        function IgrColumnChooser(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._getCheckboxListRef = _this._getCheckboxListRef.bind(_this);
            /*this._getShowAllRef = this._getShowAllRef.bind(this);
            this._getHideAllRef = this._getHideAllRef.bind(this);*/
            _this._implementation = _this.createImplementation();
            var columnChooser = _this.i;
            _this._columnChooser = columnChooser;
            columnChooser.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrColumnChooser.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._columnChooser.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._columnChooser.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnChooser.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            if (this._elRef != null && this._checkboxListRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._columnChooser.provideContainer(this._renderer, this._checkboxListRef.i);
            }
        };
        IgrColumnChooser.prototype._getCheckboxListRef = function (ref) {
            this._checkboxListRef = ref;
            if (this._elRef != null && this._checkboxListRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._columnChooser.provideContainer(this._renderer, this._checkboxListRef.i);
            }
        };
        IgrColumnChooser.prototype.render = function () {
            var children = [];
            var title = React.createElement("span", {
                key: "titleSpan"
            });
            children.push(title);
            var checkboxList = React.createElement(IgrCheckboxList, {
                ref: this._getCheckboxListRef,
                key: "checkboxList"
            });
            children.push(checkboxList);
            var div = React.createElement("div", {
                className: "ig-column-chooser igr-column-chooser",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrColumnChooser.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrColumnChooser.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrColumnChooser.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrColumnChooser.prototype.componentWillUnmount = function () {
            this._columnChooser.destroy();
            if (this._renderer) {
                this._renderer.destroy();
            }
        };
        IgrColumnChooser.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this._columnChooser.notifySizeChanged();
            this.initializeContent();
        };
        IgrColumnChooser.prototype.initializeContent = function () {
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrColumnChooser.prototype.createImplementation = function () {
            return new ColumnChooser();
        };
        Object.defineProperty(IgrColumnChooser.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "targetGrid", {
            /**
         * Gets or Sets the property name that contains the values.
        */
            get: function () {
                if (this.i.b == null) {
                    return null;
                }
                return this.i.b.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "title", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "titleStyle", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                if (this.i.j == null) {
                    return null;
                }
                return this.i.j.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.j = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "titleColor", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ap);
            },
            set: function (v) {
                this.i.ap = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "filterPlaceholderText", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "baseTheme", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "density", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnChooser.prototype, "backgroundColor", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ao);
            },
            set: function (v) {
                this.i.ao = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnChooser.prototype.findByName = function (name) {
            if (this.targetGrid && this.targetGrid.name && this.targetGrid.name == name) {
                return this.targetGrid;
            }
            return null;
        };
        Object.defineProperty(IgrColumnChooser.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnChooser.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrColumnChooser.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ColumnChooser");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this.targetGrid && this.targetGrid._styling) {
                this.targetGrid._styling(container, component, this);
            }
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        return IgrColumnChooser;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnChooserModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnChooserModule() {
        }
        IgrColumnChooserModule.register = function () {
            IgrCheckboxListModule.register();
            igniteuiReactInputs.IgrButtonModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrColumnChooser', IgrColumnChooser);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrColumnChooser', IgrColumnChooser);
            igniteuiReactCore.TypeRegistrar.register('ColumnChooser', ColumnChooser.$type);
        };
        return IgrColumnChooserModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnPinningInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnPinningInfo, _super);
        function ColumnPinningInfo() {
            var _this = _super.call(this) || this;
            _this.columnName = null;
            _this.isPinned = false;
            return _this;
        }
        ColumnPinningInfo.$t = igniteuiReactCore.markType(ColumnPinningInfo, 'ColumnPinningInfo');
        return ColumnPinningInfo;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ColumnPinningView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnPinningView, _super);
        function ColumnPinningView() {
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.a = null;
            _this.b = null;
            return _this;
        }
        ColumnPinningView.prototype.f = function () {
        };
        ColumnPinningView.prototype.e = function (a) {
            if (a == null) {
                this.b = null;
                return;
            }
            this.b = a;
            var b = Math.round(a.rootWrapper.width());
            var c = Math.round(a.rootWrapper.height());
            this.b.rootWrapper.setStyleProperty("position", "relative");
            this.g();
            this.c = this.b.rootWrapper.getChildAt(0);
            this.c.setStyleProperty("margin", "4px 0px 4px 0px");
            this.i();
            this.h();
        };
        ColumnPinningView.prototype.g = function () {
            if (this.b != null) {
                this.b.rootWrapper.setStyleProperty("background-color", this.a.al._fill);
            }
        };
        ColumnPinningView.prototype.i = function () {
            if (this.c != null && this.a.t != null) {
                this.c.setText(this.a.t);
                this.c.setStyleProperty("font", "16px \"Segoe UI\", Verdana");
            }
            this.j();
            this.k();
            this.h();
        };
        ColumnPinningView.prototype.j = function () {
            if (this.c != null && this.a.am != null) {
                this.c.setStyleProperty("color", this.a.am._fill);
            }
        };
        ColumnPinningView.prototype.k = function () {
            if (this.c != null && this.a.j != null) {
                this.c.setStyleProperty("font", this.a.j.fontString);
            }
        };
        ColumnPinningView.prototype.h = function () {
            if (this.b != null) {
                var a = this.b.rootWrapper.getChildAt(1);
                a.setStyleProperty("width", "100%");
                if (this.a.t != null) {
                    a.setStyleProperty("height", "calc(100% - 25px");
                }
                else {
                    a.setStyleProperty("height", "calc(100% - 5px");
                }
            }
        };
        ColumnPinningView.prototype.d = function () {
        };
        ColumnPinningView.$t = igniteuiReactCore.markType(ColumnPinningView, 'ColumnPinningView');
        return ColumnPinningView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ColumnPinning = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ColumnPinning, _super);
        function ColumnPinning() {
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.h = null;
            _this.propertyChanged = null;
            _this.k = false;
            _this.a = null;
            _this.m = null;
            _this.i = null;
            _this.ak = igniteuiReactCore.BrushUtil.g(255, 0, 153, 255);
            _this.l = "Filter columns list ...";
            _this.d = 1;
            _this.f = 2;
            _this.aj = igniteuiReactCore.BrushUtil.g(255, 248, 248, 248);
            _this.k = false;
            var a = new ColumnPinningView();
            a.a = _this;
            _this.c = a;
            _this.c.f();
            return _this;
        }
        ColumnPinning.prototype.ai = function (a) {
            if (this.h != null) {
                this.h.updateHrMargin(a);
            }
        };
        ColumnPinning.prototype.notifySizeChanged = function () {
            this.c.d();
        };
        ColumnPinning.prototype.destroy = function () {
            if (this.h != null) {
                var a = this.h;
                a.checkedChanged = igniteuiReactCore.delegateRemove(a.checkedChanged, igniteuiReactCore.runOn(this, this.ac));
            }
            this.provideContainer(null, null);
            if (this.a != null) {
                var b = this.a.actualColumns;
                b.collectionChanged = igniteuiReactCore.delegateRemove(b.collectionChanged, igniteuiReactCore.runOn(this, this.x));
                var c = this.a;
                c.columnPinnedChanged = igniteuiReactCore.delegateRemove(c.columnPinnedChanged, igniteuiReactCore.runOn(this, this.ah));
            }
        };
        ColumnPinning.prototype.provideContainer = function (a, b) {
            this.h = b;
            if (this.h != null) {
                var c = this.h;
                c.checkedChanged = igniteuiReactCore.delegateCombine(c.checkedChanged, igniteuiReactCore.runOn(this, this.ac));
            }
            this.y();
            this.c.e(a);
        };
        Object.defineProperty(ColumnPinning.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.ab("TargetGrid", b, this.a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnPinning.prototype, "t", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.ab("Title", b, this.m);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnPinning.prototype, "j", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                if (b != this.i) {
                    this.ab("TitleStyle", b, this.i);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnPinning.prototype, "am", {
            get: function () {
                return this.ak;
            },
            set: function (a) {
                var b = this.ak;
                this.ak = a;
                if (b != this.ak) {
                    this.ab("TitleColor", b, this.ak);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnPinning.prototype, "q", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                if (b != this.l) {
                    this.ab("FilterPlaceholderText", b, this.l);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnPinning.prototype, "e", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                if (b != this.d) {
                    this.ab("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, this.d));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnPinning.prototype, "g", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.ab("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.f));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ColumnPinning.prototype, "al", {
            get: function () {
                return this.aj;
            },
            set: function (a) {
                var b = this.aj;
                this.aj = a;
                if (b != this.aj) {
                    this.ab("BackgroundColor", b, this.aj);
                }
            },
            enumerable: true,
            configurable: true
        });
        ColumnPinning.prototype.ab = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.ad(a, b, c);
        };
        ColumnPinning.prototype.ad = function (a, b, c) {
            switch (a) {
                case "TargetGrid":
                    if (b != null) {
                        var d = b.actualColumns;
                        d.collectionChanged = igniteuiReactCore.delegateRemove(d.collectionChanged, igniteuiReactCore.runOn(this, this.x));
                        var e = b;
                        e.columnPinnedChanged = igniteuiReactCore.delegateRemove(e.columnPinnedChanged, igniteuiReactCore.runOn(this, this.ah));
                    }
                    if (this.a != null) {
                        var f = this.a.actualColumns;
                        f.collectionChanged = igniteuiReactCore.delegateCombine(f.collectionChanged, igniteuiReactCore.runOn(this, this.x));
                        var g = this.a;
                        g.columnPinnedChanged = igniteuiReactCore.delegateCombine(g.columnPinnedChanged, igniteuiReactCore.runOn(this, this.ah));
                    }
                    this.y();
                    break;
                case "Title":
                    this.c.i();
                    break;
                case "TitleStyle":
                    this.c.k();
                    break;
                case "TitleColor":
                    this.c.j();
                    break;
                case "FilterPlaceholderText":
                    if (this.h != null) {
                        this.h.ax = this.q;
                    }
                    break;
                case "BaseTheme":
                    this.ag();
                    break;
                case "Density":
                    this.af();
                    break;
                case "BackgroundColor":
                    if (this.h != null) {
                        this.h.cg = this.al;
                    }
                    this.c.g();
                    break;
            }
        };
        ColumnPinning.prototype.ag = function () {
            if (this.h != null) {
                this.h.l = this.e;
            }
        };
        ColumnPinning.prototype.af = function () {
            if (this.h != null) {
                this.h.n = this.g;
            }
        };
        ColumnPinning.prototype.ah = function (a, b) {
            if (this.k == false) {
                this.y();
            }
            this.k = false;
        };
        ColumnPinning.prototype.x = function (a, b) {
            this.y();
        };
        ColumnPinning.prototype.y = function () {
            var e_1, _a;
            if (this.a != null && this.h != null) {
                this.h.l = this.e;
                this.h.n = this.g;
                this.h.cg = this.al;
                var a = void 0;
                var b = new igniteuiReactCore.ObservableCollection$1(ColumnPinningInfo.$, 0);
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.a.actualColumns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var c = _c.value;
                        a = new ColumnPinningInfo();
                        var d = c.hy;
                        if (c.h2 != null) {
                            d = c.h2;
                        }
                        a.columnName = d;
                        if (c.fk == 1) {
                            a.isPinned = true;
                        }
                        else {
                            a.isPinned = false;
                        }
                        b.add(a);
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.h.ag = false;
                if (this.q != null) {
                    this.h.ax = this.q;
                }
                this.h.itemsSource = b;
                var e = "";
                var f = "";
                e = "columnName";
                f = "isPinned";
                this.h.a9 = f;
                this.h.at = e;
            }
        };
        ColumnPinning.prototype.ac = function (a, b) {
            this.k = true;
            var c = this.h.h.actualDataSource.getItemAtIndex(b.b);
            var d = this.a.actualColumns.count;
            for (var e = 0; e < d; e++) {
                if (this.a.actualColumns._inner[e].hy == c.columnName || this.a.actualColumns._inner[e].id == c.columnName || this.a.actualColumns._inner[e].h2 == c.columnName) {
                    if (this.a.actualColumns._inner[e].fk == 0) {
                        this.a.actualColumns._inner[e].fk = 1;
                    }
                    else if (this.a.actualColumns._inner[e].fk == 2) {
                        this.a.actualColumns._inner[e].fk = 1;
                    }
                    else {
                        this.a.actualColumns._inner[e].fk = 0;
                    }
                    break;
                }
            }
        };
        ColumnPinning.$t = igniteuiReactCore.markType(ColumnPinning, 'ColumnPinning', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return ColumnPinning;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*@__PURE__*/ IgrCheckboxListModule.register();
    var IgrColumnPinning = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumnPinning, _super);
        function IgrColumnPinning(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._getCheckboxListRef = _this._getCheckboxListRef.bind(_this);
            _this._implementation = _this.createImplementation();
            var columnPinning = _this.i;
            _this._columnPinning = columnPinning;
            columnPinning.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrColumnPinning.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._columnPinning.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._columnPinning.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnPinning.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            if (this._elRef != null && this._checkboxListRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._columnPinning.provideContainer(this._renderer, this._checkboxListRef.i);
            }
        };
        IgrColumnPinning.prototype._getCheckboxListRef = function (ref) {
            this._checkboxListRef = ref;
            if (this._elRef != null && this._checkboxListRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._columnPinning.provideContainer(this._renderer, this._checkboxListRef.i);
            }
        };
        IgrColumnPinning.prototype.render = function () {
            var children = [];
            var title = React.createElement("span", {
                key: "titleSpan"
            });
            children.push(title);
            var checkboxList = React.createElement(IgrCheckboxList, {
                ref: this._getCheckboxListRef,
                key: "checkboxList"
            });
            children.push(checkboxList);
            var div = React.createElement("div", {
                className: "ig-column-pinning igr-column-pinning",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrColumnPinning.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrColumnPinning.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrColumnPinning.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrColumnPinning.prototype.componentWillUnmount = function () {
            this._columnPinning.destroy();
            if (this._renderer) {
                this._renderer.destroy();
            }
        };
        IgrColumnPinning.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this._columnPinning.notifySizeChanged();
            this.initializeContent();
        };
        IgrColumnPinning.prototype.initializeContent = function () {
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrColumnPinning.prototype.createImplementation = function () {
            return new ColumnPinning();
        };
        Object.defineProperty(IgrColumnPinning.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "targetGrid", {
            /**
         * Gets or Sets the property name that contains the values.
        */
            get: function () {
                if (this.i.b == null) {
                    return null;
                }
                return this.i.b.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "title", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "titleStyle", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                if (this.i.j == null) {
                    return null;
                }
                return this.i.j.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.j = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "titleColor", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.am);
            },
            set: function (v) {
                this.i.am = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "filterPlaceholderText", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "baseTheme", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "density", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPinning.prototype, "backgroundColor", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.al);
            },
            set: function (v) {
                this.i.al = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnPinning.prototype.findByName = function (name) {
            if (this.targetGrid && this.targetGrid.name && this.targetGrid.name == name) {
                return this.targetGrid;
            }
            return null;
        };
        Object.defineProperty(IgrColumnPinning.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnPinning.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrColumnPinning.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ColumnPinning");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this.targetGrid && this.targetGrid._styling) {
                this.targetGrid._styling(container, component, this);
            }
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        return IgrColumnPinning;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrColumnPinningModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnPinningModule() {
        }
        IgrColumnPinningModule.register = function () {
            IgrCheckboxListModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrColumnPinning', IgrColumnPinning);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrColumnPinning', IgrColumnPinning);
            igniteuiReactCore.TypeRegistrar.register('ColumnPinning', ColumnPinning.$type);
        };
        return IgrColumnPinningModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Represents an Image grid column, used to allow the developer to display an image in a cell.
    */
    var IgrImageColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrImageColumn, _super);
        function IgrImageColumn(props) {
            return _super.call(this, props) || this;
        }
        IgrImageColumn.prototype.createImplementation = function () {
            return new ImageColumn();
        };
        Object.defineProperty(IgrImageColumn.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageColumn.prototype, "imageStretchOption", {
            /**
             * Gets or sets the stretch option to use when rendering images
            */
            get: function () {
                return this.i.jt;
            },
            set: function (v) {
                this.i.jt = igniteuiReactCore.ensureEnum(ImageStretchOptions_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageColumn.prototype, "editorType", {
            /**
             * Gets or sets the editor type used for editing cells in this column.
            */
            get: function () {
                return this.i.jp;
            },
            set: function (v) {
                this.i.jp = igniteuiReactCore.ensureEnum(EditorType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageColumn.prototype, "editorDataSource", {
            /**
             * Gets or sets the ComboBox data source.
            */
            get: function () {
                return this.i.ju;
            },
            set: function (v) {
                this.i.ju = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageColumn.prototype, "editorTextField", {
            /**
             * Gets or sets the ComboBox text field.
            */
            get: function () {
                return this.i.jv;
            },
            set: function (v) {
                this.i.jv = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrImageColumn.prototype, "editorValueField", {
            /**
             * Gets or sets the ComboBox value field.
            */
            get: function () {
                return this.i.jo;
            },
            set: function (v) {
                this.i.jo = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrImageColumn;
    }(IgrColumn));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrImageColumnModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrImageColumnModule() {
        }
        IgrImageColumnModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrImageColumn", IgrImageColumn);
            igniteuiReactCore.TypeRegistrar.register("ImageColumn", ImageColumn.$type);
        };
        return IgrImageColumnModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateHeaderCellUpdatingEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateHeaderCellUpdatingEventArgs, _super);
        function TemplateHeaderCellUpdatingEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._cellInfo = null;
            _this._content = null;
            return _this;
        }
        Object.defineProperty(TemplateHeaderCellUpdatingEventArgs.prototype, "cellInfo", {
            get: function () {
                return this._cellInfo;
            },
            set: function (a) {
                this._cellInfo = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TemplateHeaderCellUpdatingEventArgs.prototype, "content", {
            get: function () {
                return this._content;
            },
            set: function (a) {
                this._content = a;
            },
            enumerable: true,
            configurable: true
        });
        TemplateHeaderCellUpdatingEventArgs.$t = igniteuiReactCore.markType(TemplateHeaderCellUpdatingEventArgs, 'TemplateHeaderCellUpdatingEventArgs', igniteuiReactCore.EventArgs.$);
        return TemplateHeaderCellUpdatingEventArgs;
    }(igniteuiReactCore.EventArgs));

    /**
     * Information about the header cell that has content which is being created or updated.
    */
    var IgrTemplateHeaderCellUpdatingEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTemplateHeaderCellUpdatingEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrTemplateHeaderCellUpdatingEventArgs.prototype.createImplementation = function () {
            return new TemplateHeaderCellUpdatingEventArgs();
        };
        Object.defineProperty(IgrTemplateHeaderCellUpdatingEventArgs.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateHeaderCellUpdatingEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTemplateHeaderCellUpdatingEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrTemplateHeaderCellUpdatingEventArgs.prototype, "isCanvasBased", {
            get: function () {
                return this.i.content.isCanvasBased;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateHeaderCellUpdatingEventArgs.prototype, "content", {
            /**
             * The host in which to add or update content if this is a DOM based cell.
            */
            get: function () {
                if (this.isCanvasBased) {
                    return null;
                }
                else {
                    return this.i.content.element.getNativeElement();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateHeaderCellUpdatingEventArgs.prototype, "context", {
            get: function () {
                if (this.isCanvasBased) {
                    return this.i.content.templateContext;
                }
                else {
                    return null;
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateHeaderCellUpdatingEventArgs.prototype.ensureCorrectSize = function () {
            return this.i.content.ensureCorrectSize();
        };
        IgrTemplateHeaderCellUpdatingEventArgs.prototype.renderStandardBackground = function () {
            this.i.content.renderStandardBackground();
        };
        IgrTemplateHeaderCellUpdatingEventArgs.prototype.renderStandardContent = function () {
            this.i.content.renderStandardContent();
        };
        Object.defineProperty(IgrTemplateHeaderCellUpdatingEventArgs.prototype, "cellInfo", {
            /**
             * The backing information for the current cell.
            */
            get: function () {
                if (this.i.cellInfo == null) {
                    return null;
                }
                if (!this.i.cellInfo.externalObject) {
                    var ext = null;
                    switch (this.i.cellInfo.$type.name) {
                        case "DateTimeCellModel":
                            ext = new IgrDateTimeCellInfo();
                            break;
                        case "ImageCellModel":
                            ext = new IgrImageCellInfo();
                            break;
                        case "NumericCellModel":
                            ext = new IgrNumericCellInfo();
                            break;
                        case "RowSeparatorModel":
                            ext = new IgrRowSeparatorInfo();
                            break;
                        case "SectionHeaderCellModel":
                            ext = new IgrSectionHeaderCellInfo();
                            break;
                        case "TemplateCellModel":
                            ext = new IgrTemplateCellInfo();
                            break;
                        case "TemplateHeaderCellModel":
                            ext = new IgrTemplateHeaderCellInfo();
                            break;
                        case "TemplateSectionHeaderCellModel":
                            ext = new IgrTemplateSectionHeaderCellInfo();
                            break;
                        case "TextCellModel":
                            ext = new IgrTextCellInfo();
                            break;
                        case "TextHeaderCellModel":
                            ext = new IgrTextHeaderCellInfo();
                            break;
                    }
                    ext._implementation = this.i.cellInfo;
                    this.i.cellInfo.externalObject = ext;
                }
                return this.i.cellInfo.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateHeaderCellUpdatingEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateHeader, _super);
        function TemplateHeader() {
            var _this = _super.call(this) || this;
            _this.cellUpdating = null;
            return _this;
        }
        TemplateHeader.prototype.l = function (a) {
            return new TemplateHeaderCellModel();
        };
        TemplateHeader.prototype.cm = function (a, b, c) {
            var d = "template-header-" + a.az.toString();
            return d;
        };
        TemplateHeader.prototype.cy = function (a, b, c, d) {
            _super.prototype.cy.call(this, a, b, c, d);
            var e = a;
            var f = b.a0(a.k);
            e.ks = f.hh;
            e.m = f.e6;
            e.kv = f.f3;
        };
        TemplateHeader.prototype.fd = function (a, b) {
            if (this.cellUpdating != null) {
                this.cellUpdating(this, ((function () {
                    var $ret = new TemplateHeaderCellUpdatingEventArgs();
                    $ret.cellInfo = a;
                    $ret.content = b;
                    return $ret;
                })()));
            }
        };
        TemplateHeader.$t = igniteuiReactCore.markType(TemplateHeader, 'TemplateHeader', Header.$);
        return TemplateHeader;
    }(Header));

    /**
     * A type of header with customizable content.
    */
    var IgrTemplateHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTemplateHeader, _super);
        function IgrTemplateHeader(props) {
            var _this = _super.call(this, props) || this;
            _this._cellUpdating = null;
            _this._cellUpdating_wrapped = null;
            return _this;
        }
        IgrTemplateHeader.prototype.createImplementation = function () {
            return new TemplateHeader();
        };
        Object.defineProperty(IgrTemplateHeader.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateHeader.prototype, "cellUpdating", {
            /**
             * Called when the header cell content is being created or updated.
            */
            get: function () {
                return this._cellUpdating;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellUpdating_wrapped !== null) {
                    this.i.cellUpdating = igniteuiReactCore.delegateRemove(this.i.cellUpdating, this._cellUpdating_wrapped);
                    this._cellUpdating_wrapped = null;
                    this._cellUpdating = null;
                }
                this._cellUpdating = ev;
                this._cellUpdating_wrapped = function (o, e) {
                    var outerArgs = new IgrTemplateHeaderCellUpdatingEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellUpdating) {
                        _this.beforeCellUpdating(_this, outerArgs);
                    }
                    if (_this._cellUpdating) {
                        _this._cellUpdating(_this, outerArgs);
                    }
                };
                this.i.cellUpdating = igniteuiReactCore.delegateCombine(this.i.cellUpdating, this._cellUpdating_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateHeader;
    }(IgrHeader));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTemplateHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTemplateHeaderModule() {
        }
        IgrTemplateHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrTemplateHeader", IgrTemplateHeader);
            igniteuiReactCore.TypeRegistrar.register("TemplateHeader", TemplateHeader.$type);
        };
        return IgrTemplateHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * A combobox column.
    */
    var IgrComboBoxColumn = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrComboBoxColumn, _super);
        function IgrComboBoxColumn(props) {
            return _super.call(this, props) || this;
        }
        IgrComboBoxColumn.prototype.createImplementation = function () {
            return new ComboBoxColumn();
        };
        Object.defineProperty(IgrComboBoxColumn.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrComboBoxColumn.prototype, "actualDataSource", {
            /**
             * Gets the actual data source that is being used by the combo. If a collection was provided for the combobox data, an implicit LocalDataSource is created, and this is available via this property.
            */
            get: function () {
                return this.i.jq;
            },
            set: function (v) {
                this.i.jq = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrComboBoxColumn.prototype, "dataSource", {
            /**
             * Gets or sets the ComboBox data source.
            */
            get: function () {
                return this.i.jr;
            },
            set: function (v) {
                this.i.jr = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrComboBoxColumn.prototype, "textField", {
            /**
             * Gets or sets the ComboBox text field.
            */
            get: function () {
                return this.i.jv;
            },
            set: function (v) {
                this.i.jv = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrComboBoxColumn.prototype, "valueField", {
            /**
             * Gets or sets the ComboBox value field.
            */
            get: function () {
                return this.i.jo;
            },
            set: function (v) {
                this.i.jo = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrComboBoxColumn;
    }(IgrColumn));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrComboBoxColumnModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrComboBoxColumnModule() {
        }
        IgrComboBoxColumnModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrComboBoxColumn", IgrComboBoxColumn);
            igniteuiReactCore.TypeRegistrar.register("ComboBoxColumn", ComboBoxColumn.$type);
        };
        return IgrComboBoxColumnModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDataGridAllColumnsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDataGridAllColumnsModule() {
        }
        IgrDataGridAllColumnsModule.register = function () {
            IgrNumericColumnModule.register();
            IgrDateTimeColumnModule.register();
            IgrImageColumnModule.register();
            IgrTemplateColumnModule.register();
            igniteuiReactCore.IgrTemplateContentModule.register();
            IgrTextColumnModule.register();
            IgrTemplateHeaderModule.register();
            IgrComboBoxColumnModule.register();
            IgrDataGridCoreModule.register();
        };
        return IgrDataGridAllColumnsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnOptionsViewBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnOptionsViewBase, _super);
        function GridColumnOptionsViewBase() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.d = null;
            _this.f = null;
            _this.a = null;
            return _this;
        }
        Object.defineProperty(GridColumnOptionsViewBase.prototype, "g", {
            get: function () {
                return this.f;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsViewBase.prototype, "b", {
            get: function () {
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsViewBase.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnOptionsViewBase.prototype.c = function () {
            var a = this.f.outerWidth();
            var b = this.f.outerHeight();
            var c = new igniteuiReactCore.SizeData(a, b);
            return c;
        };
        GridColumnOptionsViewBase.prototype.k = function () {
        };
        GridColumnOptionsViewBase.prototype.m = function () {
            var a = this.g;
            if (null != a) {
                igniteuiReactCore.NativeUI.j(a, this.b.bk);
                igniteuiReactCore.NativeUI.n(a, this.b.bn);
            }
        };
        GridColumnOptionsViewBase.prototype.l = function (a) {
            if (a == null) {
                this.d = null;
                this.f = null;
                this.k();
                return;
            }
            this.d = a;
            var b = this.d.rootWrapper;
            this.h(b);
        };
        GridColumnOptionsViewBase.prototype.h = function (a) {
            this.f = a;
            this.k();
            this.m();
        };
        GridColumnOptionsViewBase.prototype.i = function (a) {
            this.a = a;
        };
        GridColumnOptionsViewBase.prototype.j = function () {
        };
        GridColumnOptionsViewBase.$t = igniteuiReactCore.markType(GridColumnOptionsViewBase, 'GridColumnOptionsViewBase');
        return GridColumnOptionsViewBase;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridColumnOptionsUtilities = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnOptionsUtilities, _super);
        function GridColumnOptionsUtilities() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        GridColumnOptionsUtilities.d = function (a, b, c, d, e, f, g) {
            if (g === void 0) {
                g = false;
            }
            var h = a.createElement("label");
            e = a.createElement("input");
            e.setAttribute("type", "checkbox");
            if (!igniteuiReactCore.stringIsNullOrEmpty(b)) {
                e.setAttribute("id", b);
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(d)) {
                e.setAttribute("AccessKey", d);
            }
            f = a.createElement("text");
            f.setRawText(c);
            if (g) {
                h.append(f);
                h.append(e);
            }
            else {
                h.append(e);
                h.append(f);
            }
            return {
                ret: h,
                p4: e,
                p5: f
            };
        };
        GridColumnOptionsUtilities.e = function (a, b, c, d, e, f) {
            var g = a.createElement("label");
            f = a.createElement("input");
            f.setAttribute("name", c);
            f.setAttribute("type", "radio");
            f.setAttribute("id", b);
            g.append(f);
            var h = a.createElement("text");
            h.setRawText(d);
            f.setAttribute("AccessKey", e);
            g.append(h);
            return {
                ret: g,
                p5: f
            };
        };
        GridColumnOptionsUtilities.f = function (a, b, c, d, e, f, g, h, i, j) {
            if (i === void 0) {
                i = true;
            }
            if (j === void 0) {
                j = false;
            }
            var k;
            return {
                ret: ((function () { var l = GridColumnOptionsUtilities.g(a, b, 0, c, d, e, f, g, h, k, i, j); f = l.p6; g = l.p7; h = l.p8; k = l.p9; return l.ret; })()),
                p5: f,
                p6: g,
                p7: h
            };
        };
        GridColumnOptionsUtilities.g = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
            if (k === void 0) {
                k = true;
            }
            if (l === void 0) {
                l = false;
            }
            if (m === void 0) {
                m = true;
            }
            var n = a.createElement("div");
            var o = a.getSubRenderer(n);
            g = new igniteuiReactInputs.Button();
            g.provideContainer(o);
            g.s = c;
            g.h = d;
            g.d = e;
            var p = null != b;
            j = null;
            if (p) {
                j = a.createElement("div");
                j.setStyleProperty("display", "inline-block");
                h = new igniteuiReactInputs.Icon();
                var q = a.getSubRenderer(j);
                h.provideContainer(q);
                h.svgPath = b;
                j.setStyleProperty("width", igniteuiReactCore.stringFormat("{0}px", f.width.toString()));
                j.setStyleProperty("height", igniteuiReactCore.stringFormat("{0}px", f.height.toString()));
                if (m) {
                    if (k) {
                        j.setStyleProperty("margin-right", "7px");
                    }
                    else {
                        j.setStyleProperty("margin-left", "7px");
                    }
                }
            }
            else {
                h = null;
            }
            i = o.createElement("label");
            i.setStyleProperty("display", "inline-block");
            i.setStyleProperty("margin", "0px");
            var r = a.createElement("div");
            r.setStyleProperty("display", "flex");
            r.setStyleProperty("flex-direction", "row");
            r.setStyleProperty("flex-wrap", "no-wrap");
            r.setStyleProperty("align-items", "center");
            if (k) {
                if (p) {
                    r.append(j);
                }
                r.append(i);
            }
            else {
                r.append(i);
                if (p) {
                    r.append(j);
                }
            }
            if (l) {
                r.setStyleProperty("justify-content", "space-between");
                g.hg = "1";
                n.setStyleProperty("display", "flex");
                n.setStyleProperty("flex-direction", "column");
                n.setStyleProperty("align-items", "stretch");
                g.gb = "flex";
                g.he = "column";
                g.fv = "stretch";
            }
            g.appendButtonContent(r);
            return {
                ret: n,
                p6: g,
                p7: h,
                p8: i,
                p9: j
            };
        };
        GridColumnOptionsUtilities.h = function (a, b, c, d, e, f) {
            var e_1, _a, e_2, _b;
            var g = a.createElement("div");
            var h = a.getSubRenderer(g);
            f = new igniteuiReactInputs.ButtonGroup();
            f.k = d;
            f.g = e;
            f.provideContainer(h);
            f.p = 0;
            try {
                for (var _c = tslib_1.__values(igniteuiReactCore.fromEnum(b)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var i = _d.value;
                    f.buttons.add(i);
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            var j = g.getChildAt(0);
            try {
                for (var _e = tslib_1.__values(igniteuiReactCore.fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var k = _f.value;
                    j.append(k);
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return {
                ret: g,
                p5: f
            };
        };
        GridColumnOptionsUtilities.b = function (a) {
            var b = a.getNativeElement();
            return b.checked;
        };
        GridColumnOptionsUtilities.i = function (a, b) {
            var c = a.getNativeElement();
            c.checked = b;
        };
        GridColumnOptionsUtilities.a = function (a) {
            switch (a) {
                case 0: return 1;
                case 1: return 2;
                default: return 1;
            }
        };
        GridColumnOptionsUtilities.c = function (a) {
            switch (a) {
                case 1: return 0;
                case 2: return 1;
                case 0:
                default: return 0;
            }
        };
        GridColumnOptionsUtilities.j = function (a, b, c) {
            if (c === void 0) {
                c = "block";
            }
            var d = b ? c : "none";
            a.setStyleProperty("display", d);
        };
        GridColumnOptionsUtilities.l = function (a, b) {
            if (null != a) {
                a.d = b.i;
                a.h = b.p;
                a.v = b.z;
            }
        };
        GridColumnOptionsUtilities.k = function (a, b) {
            if (null != a) {
                a.g = b.i;
                a.k = b.p;
            }
        };
        GridColumnOptionsUtilities.$t = igniteuiReactCore.markType(GridColumnOptionsUtilities, 'GridColumnOptionsUtilities');
        return GridColumnOptionsUtilities;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var GridColumnOptionsBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnOptionsBase, _super);
        function GridColumnOptionsBase() {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this.propertyChanged = null;
            _this.ac = null;
            _this.ae = null;
            _this.e = null;
            _this.ah = false;
            _this.bi = GridColumnOptionsBase.bl;
            _this.h = 0;
            _this.g = 1;
            _this.n = 0;
            _this.l = 0;
            _this.x = null;
            _this.v = null;
            _this.a = null;
            _this.o = 0;
            _this.m = 2;
            _this.y = null;
            _this.w = null;
            _this.bj = GridColumnOptionsBase.bm;
            var a = _this.f();
            _this.e = a;
            _this.onViewInitialized();
            a.i(_this);
            return _this;
        }
        GridColumnOptionsBase.prototype.a8 = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.ba(a, b, c);
        };
        Object.defineProperty(GridColumnOptionsBase.prototype, "ad", {
            get: function () {
                if (null == this.ac) {
                    this.ac = new igniteuiReactCore.FontInfo();
                    this.ac.n = "'Segoe UI', Verdana";
                    this.ac.d = 12;
                }
                return this.ac;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "af", {
            get: function () {
                if (null == this.ae) {
                    this.ae = new igniteuiReactCore.FontInfo();
                    this.ae.n = "'Segoe UI', Verdana";
                    this.ae.d = 14;
                }
                return this.ae;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "ai", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (b != this.ah) {
                    this.a8("AutoSize", b, this.ah);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "bk", {
            get: function () {
                return this.bi;
            },
            set: function (a) {
                var b = this.bi;
                this.bi = a;
                if (b != this.bi) {
                    this.a8("BackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "j", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                var b = this.h;
                this.h = a;
                if (b != this.h) {
                    this.a8("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "i", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (b != this.g) {
                    this.a8("ActualBaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "buttonDensity", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.a8("ButtonDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "p", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                if (b != this.l) {
                    this.a8("ActualButtonDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "ab", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                var b = this.x;
                this.x = a;
                if (b != this.x) {
                    this.a8("ButtonTextStyle", b, this.x);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "z", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                var b = this.v;
                this.v = a;
                if (this.v != b) {
                    this.a8("ActualButtonTextStyle", b, this.v);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "column", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                if (b != a) {
                    this.a1(false);
                    this.a = a;
                    this.a8("Column", b, this.a);
                    this.a1(true);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "density", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                var b = this.o;
                this.o = a;
                if (b != this.o) {
                    this.a8("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "q", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.a8("ActualDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "ag", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                var b = this.y;
                this.y = a;
                if (b != this.y) {
                    this.a8("LabelTextStyle", b, this.y);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "aa", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (this.w != b) {
                    this.a8("ActualLabelTextStyle", b, this.w);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "c", {
            get: function () {
                var a = this.column;
                if (null == a) {
                    return null;
                }
                return a.grid;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsBase.prototype, "bn", {
            get: function () {
                return this.bj;
            },
            set: function (a) {
                var b = this.bj;
                this.bj = a;
                if (b != this.bj) {
                    this.a8("TextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        GridColumnOptionsBase.prototype.a3 = function () {
            this.bg(this.d, this.c);
            this.e.m();
        };
        GridColumnOptionsBase.prototype.a4 = function (a, b) {
            var c = this.column;
            if (null == c) {
                return;
            }
        };
        GridColumnOptionsBase.prototype.a5 = function (a, b) {
        };
        GridColumnOptionsBase.prototype.a6 = function (a, b) {
        };
        GridColumnOptionsBase.prototype.a7 = function (a, b) {
        };
        GridColumnOptionsBase.prototype.onViewInitialized = function () {
        };
        GridColumnOptionsBase.prototype.ba = function (a, b, c) {
            switch (a) {
                case "Column":
                    this.a3();
                    break;
                case "LabelTextStyle":
                    this.bh();
                    break;
                case "ButtonTextStyle":
                    this.be();
                    break;
                case "BackgroundColor":
                case "TextColor":
                    this.e.m();
                    break;
                case "ButtonDensity":
                case "Density":
                    this.q = this.density == 0 ? 2 : this.density;
                    this.p = this.buttonDensity == 0 ? this.q : this.buttonDensity;
                    break;
                case "BaseTheme":
                    this.i = this.j == 0 ? 1 : this.j;
                    break;
            }
        };
        GridColumnOptionsBase.prototype.be = function () {
            this.z = (null == this.ab) ? this.ad : this.ab;
        };
        GridColumnOptionsBase.prototype.bg = function (a, b) {
            if (a != b) {
                this.bf(a, b);
            }
        };
        GridColumnOptionsBase.prototype.bf = function (a, b) {
            if (null != a) {
                this.a2(a, false);
            }
            if (null != b) {
                this.a2(b, true);
            }
            this.d = b;
        };
        GridColumnOptionsBase.prototype.bh = function () {
            this.aa = (null == this.ag) ? this.af : this.ag;
        };
        GridColumnOptionsBase.prototype.a1 = function (a) {
            var b = this.column;
            if (null == b) {
                return;
            }
            if (a) {
                b.propertyChanged = igniteuiReactCore.delegateCombine(b.propertyChanged, igniteuiReactCore.runOn(this, this.a4));
            }
            else {
                b.propertyChanged = igniteuiReactCore.delegateRemove(b.propertyChanged, igniteuiReactCore.runOn(this, this.a4));
            }
        };
        GridColumnOptionsBase.prototype.a2 = function (a, b) {
            if (b) {
                a.propertyChanged = igniteuiReactCore.delegateCombine(a.propertyChanged, igniteuiReactCore.runOn(this, this.a7));
                var c = a.actualColumns;
                c.collectionChanged = igniteuiReactCore.delegateCombine(c.collectionChanged, igniteuiReactCore.runOn(this, this.a5));
                a.a7.l(igniteuiReactCore.runOn(this, this.a6));
            }
            else {
                a.propertyChanged = igniteuiReactCore.delegateRemove(a.propertyChanged, igniteuiReactCore.runOn(this, this.a7));
                var d = a.actualColumns;
                d.collectionChanged = igniteuiReactCore.delegateRemove(d.collectionChanged, igniteuiReactCore.runOn(this, this.a5));
                a.a7.o(igniteuiReactCore.runOn(this, this.a6));
            }
        };
        GridColumnOptionsBase.prototype.bd = function (a) {
            GridColumnOptionsUtilities.l(a, this);
        };
        GridColumnOptionsBase.prototype.bc = function (a) {
            GridColumnOptionsUtilities.k(a, this);
        };
        GridColumnOptionsBase.prototype.destroy = function () {
            this.provideRenderer(null);
        };
        GridColumnOptionsBase.prototype.provideRenderer = function (a) {
            this.e.l(a);
        };
        GridColumnOptionsBase.$t = igniteuiReactCore.markType(GridColumnOptionsBase, 'GridColumnOptionsBase', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        GridColumnOptionsBase.bl = igniteuiReactCore.BrushUtil.g(255, 248, 248, 248);
        GridColumnOptionsBase.bm = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
        return GridColumnOptionsBase;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnOptionsSectionBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnOptionsSectionBase, _super);
        function GridColumnOptionsSectionBase() {
            var _this = _super.call(this) || this;
            _this.bh();
            _this.be();
            return _this;
        }
        GridColumnOptionsSectionBase.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
            switch (a) {
                case "ActualLabelTextStyle":
                case "ActualBaseTheme":
                case "ActualButtonDensity":
                case "ActualButtonTextStyle":
                case "ActualDensity":
                    this.e.m();
                    break;
            }
        };
        GridColumnOptionsSectionBase.$t = igniteuiReactCore.markType(GridColumnOptionsSectionBase, 'GridColumnOptionsSectionBase', GridColumnOptionsBase.$);
        return GridColumnOptionsSectionBase;
    }(GridColumnOptionsBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnOptionsSimpleSectionBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnOptionsSimpleSectionBase, _super);
        function GridColumnOptionsSimpleSectionBase() {
            var _this = _super.call(this) || this;
            _this.br = null;
            _this.bp = true;
            return _this;
        }
        Object.defineProperty(GridColumnOptionsSimpleSectionBase.prototype, "bs", {
            get: function () {
                if (null == this.br) {
                    return this.bu;
                }
                return this.br;
            },
            set: function (a) {
                var b = this.bs;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.br = a;
                this.a8("Caption", b, this.br);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptionsSimpleSectionBase.prototype, "bq", {
            get: function () {
                return this.bp;
            },
            set: function (a) {
                var b = this.bq;
                if (a == b) {
                    return;
                }
                this.bp = a;
                this.a8("ShowCaption", b, this.bp);
            },
            enumerable: true,
            configurable: true
        });
        GridColumnOptionsSimpleSectionBase.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
            switch (a) {
                case "ShowCaption":
                case "Caption":
                    this.e.m();
                    break;
            }
        };
        GridColumnOptionsSimpleSectionBase.$t = igniteuiReactCore.markType(GridColumnOptionsSimpleSectionBase, 'GridColumnOptionsSimpleSectionBase', GridColumnOptionsSectionBase.$);
        return GridColumnOptionsSimpleSectionBase;
    }(GridColumnOptionsSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnGroupOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnGroupOptionsView, _super);
        function GridColumnGroupOptionsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.s = null;
            _this.p = null;
            _this.r = null;
            _this.o = null;
            _this.t = null;
            _this.q = false;
            return _this;
        }
        Object.defineProperty(GridColumnGroupOptionsView.prototype, "n", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnGroupOptionsView.prototype.x = function () {
            if (null == this.p) {
                return;
            }
            this.q = true;
            try {
                var a = this.n.bz;
                if (a) {
                    this.p.svgPath = GridColumnGroupOptionsView.v;
                }
                else {
                    this.p.svgPath = GridColumnGroupOptionsView.u;
                }
            }
            finally {
                this.q = false;
            }
        };
        GridColumnGroupOptionsView.prototype.k = function () {
            var _this = this;
            _super.prototype.k.call(this);
            if (null == this.g || null == this.e) {
                return;
            }
            var a = this.e;
            var b = this.n;
            var c = this.g;
            this.r = ((function () { var d = GridColumnOptionsUtilities.g(a, GridColumnGroupOptionsView.u, 1, b.p, b.j, new igniteuiReactCore.Size(1, 24, 24), _this.o, _this.p, _this.s, _this.t, false, true, false); _this.o = d.p6; _this.p = d.p7; _this.s = d.p8; _this.t = d.p9; return d.ret; })());
            var d = this.o;
            d.clicked = igniteuiReactCore.delegateCombine(d.clicked, igniteuiReactCore.runOn(this, this.w));
            c.append(this.r);
        };
        GridColumnGroupOptionsView.prototype.m = function () {
            _super.prototype.m.call(this);
            this.x();
            var a = this.n;
            if (null != this.s) {
                this.s.setRawText(this.n.bs);
                var b = this.n.bq;
                GridColumnOptionsUtilities.j(this.s, b, "inline-block");
                if (b) {
                    this.o.s = 1;
                    this.o.fv = "stretch";
                    this.t.setStyleProperty("justify-content", "space-between");
                }
                else {
                    this.o.s = 4;
                    this.o.fv = "center";
                    this.t.setStyleProperty("justify-content", "center");
                }
                this.s.setStyleProperty("font", a.aa.fontString);
            }
            a.bd(this.o);
        };
        GridColumnGroupOptionsView.prototype.w = function (a, b) {
            if (this.q) {
                return;
            }
            var c = this.n.bz;
            this.n.bz = !c;
        };
        GridColumnGroupOptionsView.$t = igniteuiReactCore.markType(GridColumnGroupOptionsView, 'GridColumnGroupOptionsView', GridColumnOptionsViewBase.$);
        GridColumnGroupOptionsView.u = "M9,19v-2h11v2H9z M9,15v-2h11v2H9z M9,11V9h11v2H9z M7,7V5h13v2H7z M4,5h2v2H4V5z";
        GridColumnGroupOptionsView.v = "M16.8,18.3H9.6v-2h5.2l-2-2H9.6v-2h1.2L3.4,4.9l1.4-1.4l15.6,15.6L19,20.5L16.8,18.3z M20.6,14.3h-2.2l-2-2h4.2V14.3  L20.6,14.3z M20.6,10.3h-6.2l-2-2h8.2L20.6,10.3L20.6,10.3L20.6,10.3z M20.6,6.3H10.4l-2-2h12.2L20.6,6.3L20.6,6.3L20.6,6.3z";
        return GridColumnGroupOptionsView;
    }(GridColumnOptionsViewBase));
    /**
     * @hidden
     */
    var GridColumnGroupOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnGroupOptions, _super);
        function GridColumnGroupOptions() {
            return _super.call(this) || this;
        }
        GridColumnGroupOptions.prototype.f = function () {
            return new GridColumnGroupOptionsView();
        };
        GridColumnGroupOptions.prototype.get_bu = function () {
            return "Group Column";
        };
        Object.defineProperty(GridColumnGroupOptions.prototype, "bu", {
            get: function () {
                return this.get_bu();
            },
            enumerable: true,
            configurable: true
        });
        GridColumnGroupOptions.prototype.bo = function () {
            if (null == this.column) {
                return false;
            }
            if (null == this.c) {
                return false;
            }
            return true;
        };
        GridColumnGroupOptions.prototype.bf = function (a, b) {
            if (null != a) {
                a.groupDescriptionsChanged = igniteuiReactCore.delegateRemove(a.groupDescriptionsChanged, igniteuiReactCore.runOn(this, this.b0));
            }
            if (null != b) {
                b.groupDescriptionsChanged = igniteuiReactCore.delegateCombine(b.groupDescriptionsChanged, igniteuiReactCore.runOn(this, this.b0));
            }
        };
        GridColumnGroupOptions.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
        };
        Object.defineProperty(GridColumnGroupOptions.prototype, "bz", {
            get: function () {
                var a;
                var b = this.bx(a);
                a = b.p0;
                return a != -1;
            },
            set: function (a) {
                if (a) {
                    this.b1();
                }
                else {
                    this.b2();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnGroupOptions.prototype, "by", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnGroupOptions.prototype.bx = function (a) {
            var b = this.column;
            return {
                ret: ((function () { var c = GridColumnGroupOptions.bw(b, a); a = c.p1; return c.ret; })()),
                p0: a
            };
        };
        GridColumnGroupOptions.bw = function (a, b) {
            if (null != a) {
                var c = a.grid;
                if (null != c) {
                    var d = a.hy;
                    var e = c.a7.i;
                    for (var f = 0; f < e.count; f++) {
                        var g = e.item(f);
                        var h = g.f;
                        if (0 == igniteuiReactCore.StringComparer.b.compare(d, h)) {
                            b = f;
                            return {
                                ret: g,
                                p1: b
                            };
                        }
                    }
                }
            }
            b = -1;
            return {
                ret: null,
                p1: b
            };
        };
        GridColumnGroupOptions.prototype.b1 = function () {
            var a = this.c;
            var b = this.column;
            if (null != a && null != b) {
                var c = new ColumnGroupDescription(1, b.hy);
                var d = b.e6;
                var e = d != 0 ? GridColumnOptionsUtilities.c(d) : 0;
                c.c = e;
                a.a7.g(c);
                b.e6 = 0;
            }
        };
        GridColumnGroupOptions.prototype.b2 = function () {
            var _this = this;
            var a = this.c;
            var b = this.column;
            if (null != a && null != b) {
                var c_1;
                var d = ((function () { var e = _this.bx(c_1); c_1 = e.p0; return e.ret; })());
                if (c_1 != -1) {
                    a.a7.d(c_1);
                }
            }
        };
        GridColumnGroupOptions.prototype.b0 = function (a, b) {
            this.by.m();
        };
        GridColumnGroupOptions.$t = igniteuiReactCore.markType(GridColumnGroupOptions, 'GridColumnGroupOptions', GridColumnOptionsSimpleSectionBase.$);
        return GridColumnGroupOptions;
    }(GridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnSortOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnSortOptionsView, _super);
        function GridColumnSortOptionsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.v = null;
            _this.u = null;
            _this.z = null;
            _this.q = null;
            _this.w = null;
            _this.o = null;
            _this.p = null;
            _this.r = null;
            _this.s = null;
            _this.t = false;
            return _this;
        }
        Object.defineProperty(GridColumnSortOptionsView.prototype, "n", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnSortOptionsView.prototype.x = function () {
            var _this = this;
            var a = this.e;
            var b = this.n;
            var c = a.createElement("div");
            var d = new igniteuiReactCore.List$1(igniteuiReactCore.DomWrapper_$type, 0);
            var e = ((function () { var f = GridColumnOptionsUtilities.f(a, GridColumnSortOptionsView.ab, b.p, b.j, new igniteuiReactCore.Size(1, 18, 18), _this.o, _this.r, _this.u, true, true); _this.o = f.p5; _this.r = f.p6; _this.u = f.p7; return f.ret; })());
            var f = ((function () { var g = GridColumnOptionsUtilities.f(a, GridColumnSortOptionsView.aa, b.p, b.j, new igniteuiReactCore.Size(1, 18, 18), _this.p, _this.s, _this.z, true, true); _this.p = g.p5; _this.s = g.p6; _this.z = g.p7; return g.ret; })());
            d.add(e);
            d.add(f);
            var g = [this.o, this.p];
            var h = ((function () { var i = GridColumnOptionsUtilities.h(a, g, d, b.p, b.j, _this.q); _this.q = i.p5; return i.ret; })());
            var i = this.q;
            i.selectionChanged = igniteuiReactCore.delegateCombine(i.selectionChanged, igniteuiReactCore.runOn(this, this.ac));
            c.append(h);
            return c;
        };
        GridColumnSortOptionsView.prototype.y = function () {
            var a = this.e.createElement("label");
            return a;
        };
        GridColumnSortOptionsView.prototype.ad = function () {
            if (null == this.q) {
                return;
            }
            this.t = true;
            try {
                var a = this.n.bw;
                switch (a) {
                    case 0:
                        this.q.d = [];
                        break;
                    case 1:
                        this.q.d = [0];
                        break;
                    case 2:
                        this.q.d = [1];
                        break;
                }
            }
            finally {
                this.t = false;
            }
        };
        GridColumnSortOptionsView.prototype.k = function () {
            _super.prototype.k.call(this);
            if (null == this.g || null == this.e) {
                return;
            }
            this.w = this.y();
            this.v = this.x();
            var a = this.g;
            a.setStyleProperty("display", "flex");
            a.setStyleProperty("flex-direction", "row");
            a.setStyleProperty("flex-wrap", "no-wrap");
            a.setStyleProperty("justify-content", "space-between");
            a.setStyleProperty("align-items", "center");
            a.append(this.w);
            a.append(this.v);
        };
        GridColumnSortOptionsView.prototype.m = function () {
            _super.prototype.m.call(this);
            this.ad();
            var a = this.n;
            if (null != this.w) {
                this.w.setRawText(a.bs);
                if (a.bq) {
                    this.g.setStyleProperty("display", "flex");
                    this.w.setStyleProperty("display", "inline-block");
                }
                else {
                    this.g.setStyleProperty("display", "block");
                    this.w.setStyleProperty("display", "none");
                }
                this.w.setStyleProperty("font", a.aa.fontString);
            }
            if (null != this.u) {
                this.u.setRawText(this.n.bz);
            }
            if (null != this.z) {
                this.z.setRawText(this.n.b3);
            }
            a.bd(this.o);
            a.bd(this.p);
            a.bc(this.q);
            var b = a.bw == 1;
            var c = a.bw == 2;
        };
        GridColumnSortOptionsView.prototype.ac = function (a, b) {
            if (this.t) {
                return;
            }
            var c;
            if (null == this.q || null == this.q.d || 0 == this.q.d.length) {
                c = 0;
            }
            else {
                if (this.q.d.length > 1) {
                }
                var d = this.q.d[0];
                switch (d) {
                    case 0:
                        c = 1;
                        break;
                    case 1:
                        c = 2;
                        break;
                    default:
                        c = 0;
                        break;
                }
            }
            this.n.bw = c;
        };
        GridColumnSortOptionsView.$t = igniteuiReactCore.markType(GridColumnSortOptionsView, 'GridColumnSortOptionsView', GridColumnOptionsViewBase.$);
        GridColumnSortOptionsView.ab = "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z";
        GridColumnSortOptionsView.aa = "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z";
        return GridColumnSortOptionsView;
    }(GridColumnOptionsViewBase));
    /**
     * @hidden
     */
    var GridColumnSortOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnSortOptions, _super);
        function GridColumnSortOptions() {
            var _this = _super.call(this) || this;
            _this.by = "Asc";
            _this.b2 = "Desc";
            return _this;
        }
        GridColumnSortOptions.prototype.f = function () {
            return new GridColumnSortOptionsView();
        };
        GridColumnSortOptions.prototype.get_bu = function () {
            return "Sort";
        };
        Object.defineProperty(GridColumnSortOptions.prototype, "bu", {
            get: function () {
                return this.get_bu();
            },
            enumerable: true,
            configurable: true
        });
        GridColumnSortOptions.prototype.bo = function () {
            if (null == this.column) {
                return false;
            }
            var a = this.c;
            if (null == a) {
                return true;
            }
            switch (a.d0) {
                case 1:
                case 3:
                case 0:
                case 2: return true;
                case 4: return false;
                default: break;
            }
            return true;
        };
        GridColumnSortOptions.prototype.a4 = function (a, b) {
            _super.prototype.a4.call(this, a, b);
            var c = this.column;
            if (null == c) {
                return;
            }
            switch (b.propertyName) {
                case "SortDirection":
                    this.bx.m();
                    break;
            }
        };
        GridColumnSortOptions.prototype.a6 = function (a, b) {
            _super.prototype.a6.call(this, a, b);
            this.bx.m();
        };
        GridColumnSortOptions.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
            switch (a) {
                case "AscendingCaption":
                case "DescendingCaption":
                    this.bx.m();
                    break;
            }
        };
        Object.defineProperty(GridColumnSortOptions.prototype, "bx", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSortOptions.prototype, "bz", {
            get: function () {
                return this.by;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.by)) {
                    return;
                }
                var b = this.by;
                this.by = a;
                this.a8("AscendingCaption", b, this.by);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSortOptions.prototype, "b3", {
            get: function () {
                return this.b2;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.b2)) {
                    return;
                }
                var b = this.b2;
                this.b2 = a;
                this.a8("DescendingCaption", b, this.b2);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnSortOptions.prototype, "bw", {
            get: function () {
                var a = this.column;
                if (null != a) {
                    var b_1;
                    var c = ((function () { var d = GridColumnGroupOptions.bw(a, b_1); b_1 = d.p1; return d.ret; })());
                    if (null != c) {
                        var d = GridColumnOptionsUtilities.a(c.c);
                        return d;
                    }
                    return a.e6;
                }
                return 0;
            },
            set: function (a) {
                var b = this.column;
                if (null != b) {
                    var c_1;
                    var d = ((function () { var e = GridColumnGroupOptions.bw(b, c_1); c_1 = e.p1; return e.ret; })());
                    if (null != d) {
                        var e = b.grid;
                        if (e != null) {
                            var f = a != 0 ? GridColumnOptionsUtilities.c(a) : 0;
                            d.c = f;
                            e.a7.d(c_1);
                            e.a7.n(c_1, d);
                        }
                        return;
                    }
                    b.e6 = a;
                }
            },
            enumerable: true,
            configurable: true
        });
        GridColumnSortOptions.$t = igniteuiReactCore.markType(GridColumnSortOptions, 'GridColumnSortOptions', GridColumnOptionsSimpleSectionBase.$);
        return GridColumnSortOptions;
    }(GridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridColumnOptionsBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnOptionsBase, _super);
        function IgrGridColumnOptionsBase(props) {
            var _this = _super.call(this, props) || this;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            return _this;
        }
        IgrGridColumnOptionsBase.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: true,
            configurable: true
        });
        IgrGridColumnOptionsBase._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrGridColumnOptionsBase.prototype.onImplementationCreated = function () {
        };
        IgrGridColumnOptionsBase.prototype.componentDidMount = function () {
            var e_1, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrGridColumnOptionsBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrGridColumnOptionsBase.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "autoSize", {
            /**
             * Gets or sets the autoSize for which this AutoSizeOptions will apply.
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "backgroundColor", {
            /**
             * Gets or sets the color to use for the background of the component.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bk);
            },
            set: function (v) {
                this.i.bk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "baseTheme", {
            /**
             * Gets or sets the base built in theme to use for the component.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "actualBaseTheme", {
            /**
             * Gets the actual display baseTheme to use for the component.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "buttonDensity", {
            /**
             * Gets or sets the display Density to use for the buttons in the component.
            */
            get: function () {
                return this.i.buttonDensity;
            },
            set: function (v) {
                this.i.buttonDensity = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "actualButtonDensity", {
            /**
             * Gets the actual display buttonDensity to use for the component.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "buttonTextStyle", {
            /**
             * Gets or sets the font to use for buttons.
            */
            get: function () {
                if (this.i.ab == null) {
                    return null;
                }
                return this.i.ab.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.ab = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "column", {
            /**
             * Gets or sets the column for which this ColumnOptions will apply.
            */
            get: function () {
                if (this.i.column == null) {
                    return null;
                }
                if (!this.i.column.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.column);
                    if (e) {
                        e._implementation = this.i.column;
                    }
                    this.i.column.externalObject = e;
                }
                return this.i.column.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.column = null : this.i.column = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "density", {
            /**
             * Gets or sets the display density to use for the component.
            */
            get: function () {
                return this.i.density;
            },
            set: function (v) {
                this.i.density = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "actualDensity", {
            /**
             * Gets the actual display density to use for the component.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "labelTextStyle", {
            /**
             * Gets or sets the font to use for labels.
            */
            get: function () {
                if (this.i.ag == null) {
                    return null;
                }
                return this.i.ag.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.ag = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "textColor", {
            /**
             * Gets or sets the color to use for the text of the component.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bn);
            },
            set: function (v) {
                this.i.bn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrGridColumnOptionsBase.prototype.findByName = function (name) {
            if (this.column && this.column.name && this.column.name == name) {
                return this.column;
            }
            return null;
        };
        Object.defineProperty(IgrGridColumnOptionsBase.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridColumnOptionsBase.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrGridColumnOptionsBase.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("GridColumnOptionsBase");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this.column && this.column._styling) {
                this.column._styling(container, component, this);
            }
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        return IgrGridColumnOptionsBase;
    }(React.Component));

    var IgrGridColumnOptionsSectionBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnOptionsSectionBase, _super);
        function IgrGridColumnOptionsSectionBase(props) {
            return _super.call(this, props) || this;
        }
        Object.defineProperty(IgrGridColumnOptionsSectionBase.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnOptionsSectionBase;
    }(IgrGridColumnOptionsBase));

    var IgrGridColumnOptionsSimpleSectionBase = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnOptionsSimpleSectionBase, _super);
        function IgrGridColumnOptionsSimpleSectionBase(props) {
            return _super.call(this, props) || this;
        }
        Object.defineProperty(IgrGridColumnOptionsSimpleSectionBase.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsSimpleSectionBase.prototype, "caption", {
            get: function () {
                return this.i.bs;
            },
            set: function (v) {
                this.i.bs = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptionsSimpleSectionBase.prototype, "showCaption", {
            get: function () {
                return this.i.bq;
            },
            set: function (v) {
                this.i.bq = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnOptionsSimpleSectionBase;
    }(IgrGridColumnOptionsSectionBase));

    var IgrGridColumnSortOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnSortOptions, _super);
        function IgrGridColumnSortOptions(props) {
            var _this = _super.call(this, props) || this;
            _this._reactRenderer = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            if (document) {
                _this._mainDiv = document.createElement("div");
                _this._mainDiv.style.display = "block";
                _this._mainDiv.style.width = "100%";
                _this._mainDiv.style.height = "100%";
            }
            var ren = new igniteuiReactCore.ReactRenderer(_this._mainDiv, document, true, DataGridStylingDefaults);
            _this._reactRenderer = ren;
            var gridColumnSortOptions = _this.i;
            gridColumnSortOptions.provideRenderer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrGridColumnSortOptions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrGridColumnSortOptions.prototype.render = function () {
            var children = [];
            React.Children.forEach(this.props.children, function (ch) {
                children.push(ch);
            });
            var div = React.createElement("div", {
                className: "ig-grid-column-sort-options igr-grid-column-sort-options",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrGridColumnSortOptions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrGridColumnSortOptions.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrGridColumnSortOptions.prototype.updateStyle = function () {
            this._styling(this._mainDiv, this);
        };
        IgrGridColumnSortOptions.prototype.componentWillUnmount = function () {
            this.i.destroy();
            this._reactRenderer.destroy();
        };
        IgrGridColumnSortOptions.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._mainDiv);
            this.initializeContent();
        };
        IgrGridColumnSortOptions.prototype.initializeContent = function () {
            this._styling(this._mainDiv, this);
            this.updateStyle();
        };
        IgrGridColumnSortOptions.prototype.createImplementation = function () {
            return new GridColumnSortOptions();
        };
        Object.defineProperty(IgrGridColumnSortOptions.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnSortOptions.prototype, "ascendingCaption", {
            get: function () {
                return this.i.bz;
            },
            set: function (v) {
                this.i.bz = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnSortOptions.prototype, "descendingCaption", {
            get: function () {
                return this.i.b3;
            },
            set: function (v) {
                this.i.b3 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnSortOptions.prototype, "sortDirection", {
            get: function () {
                return this.i.bw;
            },
            set: function (v) {
                this.i.bw = igniteuiReactCore.ensureEnum(ColumnSortDirection_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnSortOptions;
    }(IgrGridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridColumnSortOptionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnSortOptionsModule() {
        }
        IgrGridColumnSortOptionsModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnSortOptions', IgrGridColumnSortOptions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnSortOptions', IgrGridColumnSortOptions);
            igniteuiReactCore.TypeRegistrar.register('GridColumnSortOptions', GridColumnSortOptions.$type);
        };
        return IgrGridColumnSortOptionsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnMoveOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnMoveOptionsView, _super);
        function GridColumnMoveOptionsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.q = null;
            _this.v = null;
            _this.w = null;
            _this.o = null;
            _this.p = null;
            _this.r = null;
            return _this;
        }
        Object.defineProperty(GridColumnMoveOptionsView.prototype, "n", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnMoveOptionsView.prototype.s = function () {
            var _this = this;
            var a = this.e;
            var b = a.createElement("div");
            var c = a.createElement("div");
            b.append(c);
            c.setStyleProperty("display", "flex");
            c.setStyleProperty("flexDirection", "row");
            c.setStyleProperty("flexWrap", "no-wrap");
            c.setStyleProperty("justify-content", "center");
            var d = ((function () { var e = _this.u(true, _this.v); _this.v = e.p1; return e.ret; })());
            var e = ((function () { var f = _this.u(false, _this.w); _this.w = f.p1; return f.ret; })());
            c.append(d);
            c.append(e);
            return b;
        };
        GridColumnMoveOptionsView.prototype.t = function () {
            var a = this.e.createElement("label");
            return a;
        };
        GridColumnMoveOptionsView.prototype.u = function (a, b) {
            var c = this.e;
            var d = this.n;
            var e = a ? GridColumnMoveOptionsView.x : GridColumnMoveOptionsView.y;
            var f;
            var g;
            var h;
            var i = ((function () { var j = GridColumnOptionsUtilities.g(c, e, 1, d.p, d.j, new igniteuiReactCore.Size(1, 18, 18), f, g, b, h, a, false); f = j.p6; g = j.p7; b = j.p8; h = j.p9; return j.ret; })());
            if (a) {
                this.o = f;
                f.clicked = igniteuiReactCore.delegateCombine(f.clicked, igniteuiReactCore.runOn(this, this.z));
            }
            else {
                this.p = f;
                f.clicked = igniteuiReactCore.delegateCombine(f.clicked, igniteuiReactCore.runOn(this, this.aa));
            }
            return {
                ret: i,
                p1: b
            };
        };
        GridColumnMoveOptionsView.prototype.k = function () {
            _super.prototype.k.call(this);
            if (null == this.g || null == this.e) {
                return;
            }
            this.r = this.t();
            this.q = this.s();
            var a = this.g;
            a.setStyleProperty("display", "flex");
            a.setStyleProperty("flex-direction", "row");
            a.setStyleProperty("flex-wrap", "no-wrap");
            a.setStyleProperty("justify-content", "space-between");
            a.setStyleProperty("align-items", "center");
            a.append(this.r);
            a.append(this.q);
        };
        GridColumnMoveOptionsView.prototype.ab = function () {
            var a = this.n.by();
            var b = this.n.bz();
            if (null != this.o) {
                this.o.disabled = !a;
            }
            if (null != this.p) {
                this.p.disabled = !b;
            }
        };
        GridColumnMoveOptionsView.prototype.m = function () {
            _super.prototype.m.call(this);
            var a = this.n;
            if (null != this.r) {
                this.r.setRawText(a.bs);
                var b = a.bq;
                if (a.bq) {
                    this.g.setStyleProperty("display", "flex");
                    this.r.setStyleProperty("display", "inline-block");
                }
                else {
                    this.g.setStyleProperty("display", "block");
                    this.r.setStyleProperty("display", "none");
                }
                this.r.setStyleProperty("font", a.aa.fontString);
            }
            if (null != this.v) {
                this.v.setRawText(this.n.b1);
            }
            if (null != this.w) {
                this.w.setRawText(this.n.b5);
            }
            a.bd(this.o);
            a.bd(this.p);
        };
        GridColumnMoveOptionsView.prototype.z = function (a, b) {
            this.n.b9();
        };
        GridColumnMoveOptionsView.prototype.aa = function (a, b) {
            this.n.cb();
        };
        GridColumnMoveOptionsView.$t = igniteuiReactCore.markType(GridColumnMoveOptionsView, 'GridColumnMoveOptionsView', GridColumnOptionsViewBase.$);
        GridColumnMoveOptionsView.x = "M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z";
        GridColumnMoveOptionsView.y = "M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z";
        return GridColumnMoveOptionsView;
    }(GridColumnOptionsViewBase));
    /**
     * @hidden
     */
    var GridColumnMoveOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnMoveOptions, _super);
        function GridColumnMoveOptions() {
            var _this = _super.call(this) || this;
            _this.b0 = "Left";
            _this.b4 = "Right";
            return _this;
        }
        GridColumnMoveOptions.prototype.f = function () {
            return new GridColumnMoveOptionsView();
        };
        GridColumnMoveOptions.prototype.get_bu = function () {
            return "Move";
        };
        Object.defineProperty(GridColumnMoveOptions.prototype, "bu", {
            get: function () {
                return this.get_bu();
            },
            enumerable: true,
            configurable: true
        });
        GridColumnMoveOptions.prototype.bo = function () {
            if (null == this.column) {
                return false;
            }
            var a = this.c;
            if (null == a) {
                return false;
            }
            switch (a.bg) {
                case 0: return true;
                case 1: return false;
                default: break;
            }
            return true;
        };
        GridColumnMoveOptions.prototype.a5 = function (a, b) {
            _super.prototype.a5.call(this, a, b);
            this.bw.ab();
        };
        GridColumnMoveOptions.prototype.a3 = function () {
            _super.prototype.a3.call(this);
            this.bw.ab();
        };
        GridColumnMoveOptions.prototype.a4 = function (a, b) {
            _super.prototype.a4.call(this, a, b);
            var c = this.column;
            if (null == c) {
                return;
            }
            switch (b.propertyName) {
                case "Pinned":
                    this.bw.ab();
                    break;
            }
        };
        GridColumnMoveOptions.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
            switch (a) {
                case "MoveLeftCaption":
                case "MoveRightCaption":
                    this.bw.m();
                    break;
            }
        };
        Object.defineProperty(GridColumnMoveOptions.prototype, "bw", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnMoveOptions.prototype, "b1", {
            get: function () {
                return this.b0;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.b0)) {
                    return;
                }
                var b = this.b0;
                this.b0 = a;
                this.a8("MoveLeftCaption", b, this.b0);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnMoveOptions.prototype, "b5", {
            get: function () {
                return this.b4;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.b4)) {
                    return;
                }
                var b = this.b4;
                this.b4 = a;
                this.a8("MoveRightCaption", b, this.b4);
            },
            enumerable: true,
            configurable: true
        });
        GridColumnMoveOptions.prototype.bx = function (a) {
            var b = this.column;
            if (null == b) {
                return false;
            }
            var c = b.grid;
            if (null == c) {
                return false;
            }
            var d = c.actualColumns;
            var e = d.indexOf(b);
            if (e < 0) {
                return false;
            }
            if (a) {
                return this.c.g6(e);
            }
            else {
                return this.c.g7(e);
            }
        };
        GridColumnMoveOptions.prototype.b8 = function (a) {
            var b = this.column;
            if (null == b) {
                return;
            }
            var c = this.c;
            if (null == c) {
                return;
            }
            if (!this.bx(a)) {
                return;
            }
            var d = c.actualColumns;
            var e = d.indexOf(b);
            if (a) {
                c.qg(e);
            }
            else {
                c.qh(e);
            }
        };
        GridColumnMoveOptions.prototype.by = function () {
            return this.bx(true);
        };
        GridColumnMoveOptions.prototype.bz = function () {
            return this.bx(false);
        };
        GridColumnMoveOptions.prototype.b9 = function () {
            this.b8(true);
        };
        GridColumnMoveOptions.prototype.cb = function () {
            this.b8(false);
        };
        GridColumnMoveOptions.prototype.ca = function (a, b) {
            this.b9();
        };
        GridColumnMoveOptions.prototype.cc = function (a, b) {
            this.cb();
        };
        GridColumnMoveOptions.$t = igniteuiReactCore.markType(GridColumnMoveOptions, 'GridColumnMoveOptions', GridColumnOptionsSimpleSectionBase.$);
        return GridColumnMoveOptions;
    }(GridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridColumnMoveOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnMoveOptions, _super);
        function IgrGridColumnMoveOptions(props) {
            var _this = _super.call(this, props) || this;
            _this._reactRenderer = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            if (document) {
                _this._mainDiv = document.createElement("div");
                _this._mainDiv.style.display = "block";
                _this._mainDiv.style.width = "100%";
                _this._mainDiv.style.height = "100%";
            }
            var ren = new igniteuiReactCore.ReactRenderer(_this._mainDiv, document, true, DataGridStylingDefaults);
            _this._reactRenderer = ren;
            var gridColumnMoveOptions = _this.i;
            gridColumnMoveOptions.provideRenderer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrGridColumnMoveOptions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrGridColumnMoveOptions.prototype.render = function () {
            var children = [];
            React.Children.forEach(this.props.children, function (ch) {
                children.push(ch);
            });
            var div = React.createElement("div", {
                className: "ig-grid-column-move-options igr-grid-column-move-options",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrGridColumnMoveOptions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrGridColumnMoveOptions.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrGridColumnMoveOptions.prototype.updateStyle = function () {
            this._styling(this._mainDiv, this);
        };
        IgrGridColumnMoveOptions.prototype.componentWillUnmount = function () {
            this.i.destroy();
            this._reactRenderer.destroy();
        };
        IgrGridColumnMoveOptions.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._mainDiv);
            this.initializeContent();
        };
        IgrGridColumnMoveOptions.prototype.initializeContent = function () {
            this._styling(this._mainDiv, this);
            this.updateStyle();
        };
        IgrGridColumnMoveOptions.prototype.createImplementation = function () {
            return new GridColumnMoveOptions();
        };
        Object.defineProperty(IgrGridColumnMoveOptions.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnMoveOptions.prototype, "moveLeftCaption", {
            get: function () {
                return this.i.b1;
            },
            set: function (v) {
                this.i.b1 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnMoveOptions.prototype, "moveRightCaption", {
            get: function () {
                return this.i.b5;
            },
            set: function (v) {
                this.i.b5 = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnMoveOptions;
    }(IgrGridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridColumnMoveOptionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnMoveOptionsModule() {
        }
        IgrGridColumnMoveOptionsModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnMoveOptions', IgrGridColumnMoveOptions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnMoveOptions', IgrGridColumnMoveOptions);
            igniteuiReactCore.TypeRegistrar.register('GridColumnMoveOptions', GridColumnMoveOptions.$type);
        };
        return IgrGridColumnMoveOptionsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnPinOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnPinOptionsView, _super);
        function GridColumnPinOptionsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.y = null;
            _this.z = null;
            _this.q = null;
            _this.v = null;
            _this.u = null;
            _this.o = null;
            _this.p = null;
            _this.r = null;
            _this.s = null;
            _this.t = false;
            return _this;
        }
        Object.defineProperty(GridColumnPinOptionsView.prototype, "n", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnPinOptionsView.prototype.w = function () {
            var _this = this;
            var a = this.e;
            var b = this.n;
            this.u = a.createElement("div");
            var c = new igniteuiReactCore.List$1(igniteuiReactCore.DomWrapper_$type, 0);
            var d = ((function () { var e = GridColumnOptionsUtilities.f(a, GridColumnPinOptionsView.aa, b.p, b.j, new igniteuiReactCore.Size(1, 18, 18), _this.o, _this.r, _this.y, true, true); _this.o = e.p5; _this.r = e.p6; _this.y = e.p7; return e.ret; })());
            var e = ((function () { var f = GridColumnOptionsUtilities.f(a, GridColumnPinOptionsView.ab, b.p, b.j, new igniteuiReactCore.Size(1, 18, 18), _this.p, _this.s, _this.z, false, true); _this.p = f.p5; _this.s = f.p6; _this.z = f.p7; return f.ret; })());
            c.add(d);
            c.add(e);
            var f = [this.o, this.p];
            var g = ((function () { var h = GridColumnOptionsUtilities.h(a, f, c, b.p, b.j, _this.q); _this.q = h.p5; return h.ret; })());
            var h = this.q;
            h.selectionChanged = igniteuiReactCore.delegateCombine(h.selectionChanged, igniteuiReactCore.runOn(this, this.ae));
            this.u.append(g);
            return this.u;
        };
        GridColumnPinOptionsView.prototype.x = function () {
            var a = this.e.createElement("label");
            return a;
        };
        GridColumnPinOptionsView.prototype.af = function () {
            if (null == this.r || null == this.s) {
                return;
            }
            var a = this.n.by;
            var t1 = a;
            L0: while (true) {
                switch (t1) {
                    case 0:
                        this.r.svgPath = GridColumnPinOptionsView.aa;
                        this.s.svgPath = GridColumnPinOptionsView.ab;
                        break;
                    case 1:
                        this.r.svgPath = GridColumnPinOptionsView.ac;
                        this.s.svgPath = GridColumnPinOptionsView.ab;
                        break;
                    case 2:
                        this.r.svgPath = GridColumnPinOptionsView.aa;
                        this.s.svgPath = GridColumnPinOptionsView.ad;
                        break;
                    default:
                        t1 = 0;
                        continue L0;
                }
                break;
            }
        };
        GridColumnPinOptionsView.prototype.ag = function () {
            if (null == this.q) {
                return;
            }
            this.t = true;
            try {
                var a = this.n.by;
                switch (a) {
                    case 0:
                        this.q.d = [];
                        break;
                    case 1:
                        this.q.d = [0];
                        break;
                    case 2:
                        this.q.d = [1];
                        break;
                }
            }
            finally {
                this.t = false;
            }
        };
        GridColumnPinOptionsView.prototype.k = function () {
            _super.prototype.k.call(this);
            if (null == this.g || null == this.e) {
                return;
            }
            this.v = this.x();
            var a = this.w();
            var b = this.e;
            var c = this.g;
            c.setStyleProperty("display", "flex");
            c.setStyleProperty("flex-direction", "row");
            c.setStyleProperty("flex-wrap", "no-wrap");
            c.setStyleProperty("justify-content", "space-between");
            c.setStyleProperty("align-items", "center");
            c.append(this.v);
            c.append(a);
        };
        GridColumnPinOptionsView.prototype.m = function () {
            _super.prototype.m.call(this);
            this.ag();
            this.af();
            var a = this.n;
            if (null != this.v) {
                this.v.setRawText(a.bs);
                if (a.bq) {
                    this.g.setStyleProperty("display", "flex");
                    this.v.setStyleProperty("display", "inline-block");
                }
                else {
                    this.g.setStyleProperty("display", "block");
                    this.v.setStyleProperty("display", "none");
                }
                this.v.setStyleProperty("font", a.aa.fontString);
            }
            if (null != this.y) {
                this.y.setRawText(this.n.b0);
            }
            if (null != this.z) {
                this.z.setRawText(this.n.b4);
            }
            a.bd(this.o);
            a.bd(this.p);
            a.bc(this.q);
        };
        GridColumnPinOptionsView.prototype.ae = function (a, b) {
            if (this.t) {
                return;
            }
            var c;
            if (null == this.q || null == this.q.d || 0 == this.q.d.length) {
                c = 0;
            }
            else {
                if (this.q.d.length > 1) {
                }
                var d = this.q.d[0];
                switch (d) {
                    case 0:
                        c = 1;
                        break;
                    case 1:
                        c = 2;
                        break;
                    default:
                        c = 0;
                        break;
                }
            }
            this.n.by = c;
            this.af();
        };
        GridColumnPinOptionsView.$t = igniteuiReactCore.markType(GridColumnPinOptionsView, 'GridColumnPinOptionsView', GridColumnOptionsViewBase.$);
        GridColumnPinOptionsView.aa = "M13.2,3.8l7.1,7.1l-2.8-0.1l-3.4,3.4l0.1,4.2l-3.5-3.5l-5.4,5.4l-1.4,0l0-1.4l5.4-5.4L5.7,9.8l4.2,0.1l3.4-3.4L13.2,3.8z";
        GridColumnPinOptionsView.ab = "M10.8,3.8l-7.1,7.1l2.8-0.1l3.4,3.4l-0.1,4.2l3.5-3.5l5.4,5.4l1.4,0l0-1.4l-5.4-5.4l3.5-3.5l-4.2,0.1l-3.4-3.4L10.8,3.8z";
        GridColumnPinOptionsView.ac = "M3,3.4l19,17.1l-1.3,1.2L12.1,14l-4.9,4.9l-1.4-0.1l-0.1-1.4l4.8-4.8l-8.9-8L3,3.4z M14.9,2.3l7.5,7.5l-2.8-0.1L16.1,13 l0,0.3l-5.4-4.8l0.9,0L15,5.1L14.9,2.3z";
        GridColumnPinOptionsView.ad = "M21,3.4L2,20.5l1.3,1.2l8.5-7.7l4.9,4.9l1.4-0.1l0.1-1.4l-4.8-4.8l8.9-8L21,3.4z M9.1,2.3L1.7,9.8l2.8-0.1L7.9,13l0,0.3 l5.4-4.8l-0.9,0L9,5.1L9.1,2.3z";
        return GridColumnPinOptionsView;
    }(GridColumnOptionsViewBase));
    /**
     * @hidden
     */
    var GridColumnPinOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnPinOptions, _super);
        function GridColumnPinOptions() {
            var _this = _super.call(this) || this;
            _this.bx = 0;
            _this.bz = "Left";
            _this.b3 = "Right";
            return _this;
        }
        GridColumnPinOptions.prototype.f = function () {
            return new GridColumnPinOptionsView();
        };
        GridColumnPinOptions.prototype.get_bu = function () {
            return "Pin";
        };
        Object.defineProperty(GridColumnPinOptions.prototype, "bu", {
            get: function () {
                return this.get_bu();
            },
            enumerable: true,
            configurable: true
        });
        GridColumnPinOptions.prototype.bo = function () {
            if (null == this.column) {
                return false;
            }
            return true;
        };
        GridColumnPinOptions.prototype.a3 = function () {
            var a = this.column;
            this.bx = a != null ? a.fk : 0;
            _super.prototype.a3.call(this);
        };
        GridColumnPinOptions.prototype.a4 = function (a, b) {
            _super.prototype.a4.call(this, a, b);
            var c = this.column;
            if (null == c) {
                return;
            }
            switch (b.propertyName) {
                case "Pinned":
                    this.bx = c != null ? c.fk : 0;
                    this.bw.m();
                    break;
            }
        };
        GridColumnPinOptions.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
            switch (a) {
                case "PinLeftCaption":
                case "PinRightCaption":
                    this.bw.m();
                    break;
            }
        };
        Object.defineProperty(GridColumnPinOptions.prototype, "by", {
            get: function () {
                var a = this.column;
                if (null != a) {
                    return a.fk;
                }
                return this.bx;
            },
            set: function (a) {
                this.bx = a;
                var b = this.c;
                var c = this.column;
                if (null != b && null != c) {
                    b.sd(c, this.bx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnPinOptions.prototype, "bw", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnPinOptions.prototype, "b0", {
            get: function () {
                return this.bz;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.bz)) {
                    return;
                }
                var b = this.bz;
                this.bz = a;
                this.a8("PinLeftCaption", b, this.bz);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnPinOptions.prototype, "b4", {
            get: function () {
                return this.b3;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.b3)) {
                    return;
                }
                var b = this.b3;
                this.b3 = a;
                this.a8("PinRightCaption", b, this.b3);
            },
            enumerable: true,
            configurable: true
        });
        GridColumnPinOptions.$t = igniteuiReactCore.markType(GridColumnPinOptions, 'GridColumnPinOptions', GridColumnOptionsSimpleSectionBase.$);
        return GridColumnPinOptions;
    }(GridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridColumnPinOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnPinOptions, _super);
        function IgrGridColumnPinOptions(props) {
            var _this = _super.call(this, props) || this;
            _this._reactRenderer = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            if (document) {
                _this._mainDiv = document.createElement("div");
                _this._mainDiv.style.display = "block";
                _this._mainDiv.style.width = "100%";
                _this._mainDiv.style.height = "100%";
            }
            var ren = new igniteuiReactCore.ReactRenderer(_this._mainDiv, document, true, DataGridStylingDefaults);
            _this._reactRenderer = ren;
            var gridColumnPinOptions = _this.i;
            gridColumnPinOptions.provideRenderer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrGridColumnPinOptions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrGridColumnPinOptions.prototype.render = function () {
            var children = [];
            React.Children.forEach(this.props.children, function (ch) {
                children.push(ch);
            });
            var div = React.createElement("div", {
                className: "ig-grid-column-pin-options igr-grid-column-pin-options",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrGridColumnPinOptions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrGridColumnPinOptions.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrGridColumnPinOptions.prototype.updateStyle = function () {
            this._styling(this._mainDiv, this);
        };
        IgrGridColumnPinOptions.prototype.componentWillUnmount = function () {
            this.i.destroy();
            this._reactRenderer.destroy();
        };
        IgrGridColumnPinOptions.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._mainDiv);
            this.initializeContent();
        };
        IgrGridColumnPinOptions.prototype.initializeContent = function () {
            this._styling(this._mainDiv, this);
            this.updateStyle();
        };
        IgrGridColumnPinOptions.prototype.createImplementation = function () {
            return new GridColumnPinOptions();
        };
        Object.defineProperty(IgrGridColumnPinOptions.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnPinOptions.prototype, "pinLeftCaption", {
            get: function () {
                return this.i.b0;
            },
            set: function (v) {
                this.i.b0 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnPinOptions.prototype, "pinRightCaption", {
            get: function () {
                return this.i.b4;
            },
            set: function (v) {
                this.i.b4 = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnPinOptions;
    }(IgrGridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridColumnPinOptionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnPinOptionsModule() {
        }
        IgrGridColumnPinOptionsModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnPinOptions', IgrGridColumnPinOptions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnPinOptions', IgrGridColumnPinOptions);
            igniteuiReactCore.TypeRegistrar.register('GridColumnPinOptions', GridColumnPinOptions.$type);
        };
        return IgrGridColumnPinOptionsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnHideOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnHideOptionsView, _super);
        function GridColumnHideOptionsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.s = null;
            _this.p = null;
            _this.r = null;
            _this.o = null;
            _this.t = null;
            _this.q = false;
            return _this;
        }
        Object.defineProperty(GridColumnHideOptionsView.prototype, "n", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnHideOptionsView.prototype.x = function () {
            if (null == this.p) {
                return;
            }
            this.q = true;
            try {
                var a = this.n.bx;
                if (a) {
                    this.p.svgPath = GridColumnHideOptionsView.v;
                }
                else {
                    this.p.svgPath = GridColumnHideOptionsView.u;
                }
            }
            finally {
                this.q = false;
            }
        };
        GridColumnHideOptionsView.prototype.k = function () {
            var _this = this;
            _super.prototype.k.call(this);
            if (null == this.g || null == this.e) {
                return;
            }
            var a = this.e;
            var b = this.n;
            var c = this.g;
            this.r = ((function () { var d = GridColumnOptionsUtilities.g(a, GridColumnHideOptionsView.u, 1, b.p, b.j, new igniteuiReactCore.Size(1, 24, 24), _this.o, _this.p, _this.s, _this.t, false, true, false); _this.o = d.p6; _this.p = d.p7; _this.s = d.p8; _this.t = d.p9; return d.ret; })());
            var d = this.o;
            d.clicked = igniteuiReactCore.delegateCombine(d.clicked, igniteuiReactCore.runOn(this, this.w));
            c.append(this.r);
        };
        GridColumnHideOptionsView.prototype.m = function () {
            _super.prototype.m.call(this);
            this.x();
            var a = this.n;
            if (null != this.s) {
                this.s.setRawText(this.n.bs);
                var b = this.n.bq;
                GridColumnOptionsUtilities.j(this.s, b, "inline-block");
                if (b) {
                    this.o.s = 1;
                    this.o.fv = "stretch";
                    this.t.setStyleProperty("justify-content", "space-between");
                }
                else {
                    this.o.s = 4;
                    this.o.fv = "center";
                    this.t.setStyleProperty("justify-content", "center");
                }
                this.s.setStyleProperty("font", a.aa.fontString);
            }
            a.bd(this.o);
        };
        GridColumnHideOptionsView.prototype.w = function (a, b) {
            if (this.q) {
                return;
            }
            this.n.bx = !this.n.bx;
        };
        GridColumnHideOptionsView.$t = igniteuiReactCore.markType(GridColumnHideOptionsView, 'GridColumnHideOptionsView', GridColumnOptionsViewBase.$);
        GridColumnHideOptionsView.v = "M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z";
        GridColumnHideOptionsView.u = "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z";
        return GridColumnHideOptionsView;
    }(GridColumnOptionsViewBase));
    /**
     * @hidden
     */
    var GridColumnHideOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnHideOptions, _super);
        function GridColumnHideOptions() {
            return _super.call(this) || this;
        }
        GridColumnHideOptions.prototype.f = function () {
            return new GridColumnHideOptionsView();
        };
        GridColumnHideOptions.prototype.get_bu = function () {
            return "Hide Column";
        };
        Object.defineProperty(GridColumnHideOptions.prototype, "bu", {
            get: function () {
                return this.get_bu();
            },
            enumerable: true,
            configurable: true
        });
        GridColumnHideOptions.prototype.bo = function () {
            if (null == this.column) {
                return false;
            }
            return true;
        };
        GridColumnHideOptions.prototype.a4 = function (a, b) {
            _super.prototype.a4.call(this, a, b);
            var c = this.column;
            if (null == c) {
                return;
            }
            switch (b.propertyName) {
                case "IsHidden":
                    this.bw.m();
                    break;
            }
        };
        GridColumnHideOptions.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
        };
        Object.defineProperty(GridColumnHideOptions.prototype, "bx", {
            get: function () {
                var a = this.column;
                if (null != a) {
                    return a.gd;
                }
                return false;
            },
            set: function (a) {
                var b = this.column;
                if (null != b) {
                    b.gd = a;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnHideOptions.prototype, "bw", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnHideOptions.$t = igniteuiReactCore.markType(GridColumnHideOptions, 'GridColumnHideOptions', GridColumnOptionsSimpleSectionBase.$);
        return GridColumnHideOptions;
    }(GridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridColumnHideOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnHideOptions, _super);
        function IgrGridColumnHideOptions(props) {
            var _this = _super.call(this, props) || this;
            _this._reactRenderer = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            if (document) {
                _this._mainDiv = document.createElement("div");
                _this._mainDiv.style.display = "block";
                _this._mainDiv.style.width = "100%";
                _this._mainDiv.style.height = "100%";
            }
            var ren = new igniteuiReactCore.ReactRenderer(_this._mainDiv, document, true, DataGridStylingDefaults);
            _this._reactRenderer = ren;
            var gridColumnHideOptions = _this.i;
            gridColumnHideOptions.provideRenderer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrGridColumnHideOptions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrGridColumnHideOptions.prototype.render = function () {
            var children = [];
            React.Children.forEach(this.props.children, function (ch) {
                children.push(ch);
            });
            var div = React.createElement("div", {
                className: "ig-grid-column-hide-options igr-grid-column-hide-options",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrGridColumnHideOptions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrGridColumnHideOptions.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrGridColumnHideOptions.prototype.updateStyle = function () {
            this._styling(this._mainDiv, this);
        };
        IgrGridColumnHideOptions.prototype.componentWillUnmount = function () {
            this.i.destroy();
            this._reactRenderer.destroy();
        };
        IgrGridColumnHideOptions.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._mainDiv);
            this.initializeContent();
        };
        IgrGridColumnHideOptions.prototype.initializeContent = function () {
            this._styling(this._mainDiv, this);
            this.updateStyle();
        };
        IgrGridColumnHideOptions.prototype.createImplementation = function () {
            return new GridColumnHideOptions();
        };
        Object.defineProperty(IgrGridColumnHideOptions.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnHideOptions;
    }(IgrGridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridColumnHideOptionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnHideOptionsModule() {
        }
        IgrGridColumnHideOptionsModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnHideOptions', IgrGridColumnHideOptions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnHideOptions', IgrGridColumnHideOptions);
            igniteuiReactCore.TypeRegistrar.register('GridColumnHideOptions', GridColumnHideOptions.$type);
        };
        return IgrGridColumnHideOptionsModule;
    }());

    var IgrGridColumnGroupOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnGroupOptions, _super);
        function IgrGridColumnGroupOptions(props) {
            var _this = _super.call(this, props) || this;
            _this._reactRenderer = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            if (document) {
                _this._mainDiv = document.createElement("div");
                _this._mainDiv.style.display = "block";
                _this._mainDiv.style.width = "100%";
                _this._mainDiv.style.height = "100%";
            }
            var ren = new igniteuiReactCore.ReactRenderer(_this._mainDiv, document, true, DataGridStylingDefaults);
            _this._reactRenderer = ren;
            var gridColumnGroupOptions = _this.i;
            gridColumnGroupOptions.provideRenderer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrGridColumnGroupOptions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrGridColumnGroupOptions.prototype.render = function () {
            var children = [];
            React.Children.forEach(this.props.children, function (ch) {
                children.push(ch);
            });
            var div = React.createElement("div", {
                className: "ig-grid-column-group-options igr-grid-column-group-options",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrGridColumnGroupOptions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrGridColumnGroupOptions.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrGridColumnGroupOptions.prototype.updateStyle = function () {
            this._styling(this._mainDiv, this);
        };
        IgrGridColumnGroupOptions.prototype.componentWillUnmount = function () {
            this.i.destroy();
            this._reactRenderer.destroy();
        };
        IgrGridColumnGroupOptions.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._mainDiv);
            this.initializeContent();
        };
        IgrGridColumnGroupOptions.prototype.initializeContent = function () {
            this._styling(this._mainDiv, this);
            this.updateStyle();
        };
        IgrGridColumnGroupOptions.prototype.createImplementation = function () {
            return new GridColumnGroupOptions();
        };
        Object.defineProperty(IgrGridColumnGroupOptions.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnGroupOptions;
    }(IgrGridColumnOptionsSimpleSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridColumnGroupOptionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnGroupOptionsModule() {
        }
        IgrGridColumnGroupOptionsModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnGroupOptions', IgrGridColumnGroupOptions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnGroupOptions', IgrGridColumnGroupOptions);
            igniteuiReactCore.TypeRegistrar.register('GridColumnGroupOptions', GridColumnGroupOptions.$type);
        };
        return IgrGridColumnGroupOptionsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FilterApplyButtonClickEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(FilterApplyButtonClickEventArgs, _super);
        function FilterApplyButtonClickEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FilterApplyButtonClickEventArgs.$t = igniteuiReactCore.markType(FilterApplyButtonClickEventArgs, 'FilterApplyButtonClickEventArgs', igniteuiReactCore.EventArgs.$);
        return FilterApplyButtonClickEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var FilterCancelButtonClickEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(FilterCancelButtonClickEventArgs, _super);
        function FilterCancelButtonClickEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FilterCancelButtonClickEventArgs.$t = igniteuiReactCore.markType(FilterCancelButtonClickEventArgs, 'FilterCancelButtonClickEventArgs', igniteuiReactCore.EventArgs.$);
        return FilterCancelButtonClickEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnFilterOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnFilterOptionsView, _super);
        function GridColumnFilterOptionsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.y = null;
            _this.z = null;
            _this.u = null;
            _this.x = null;
            _this.aa = null;
            _this.t = null;
            _this.v = null;
            _this.w = null;
            _this.q = null;
            _this.o = null;
            _this.p = null;
            _this.applyButtonClick = null;
            _this.cancelButtonClick = null;
            return _this;
        }
        GridColumnFilterOptionsView.prototype.m = function () {
            _super.prototype.m.call(this);
            var a = this.n;
            a.bd(this.q);
            a.bd(this.o);
            a.bd(this.p);
            if (null != this.w && null != this.x) {
                this.w.setStyleProperty("padding-bottom", "5px");
                this.w.setStyleProperty("margin", "0 -8px");
                switch (this.q.g) {
                    case 2:
                        this.x.setStyleProperty("margin", "0 -.25rem");
                        break;
                    case 1:
                    case 3:
                        this.x.setStyleProperty("margin", "0 -.5rem");
                        break;
                }
                this.x.setRawText(a.cb);
                this.x.setStyleProperty("font", a.aa.fontString);
            }
            if (null != this.aa) {
                this.aa.setRawText(a.ck);
                this.aa.setStyleProperty("font", a.aa.fontString);
                GridColumnOptionsUtilities.j(this.aa, false);
            }
            if (null != this.t) {
                this.t.setRawText(a.b3);
            }
            if (null != this.v) {
                this.v.setRawText(a.b7);
            }
        };
        Object.defineProperty(GridColumnFilterOptionsView.prototype, "n", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnFilterOptionsView.prototype.al = function (a) {
            this.o.disabled = !a;
        };
        GridColumnFilterOptionsView.prototype.am = function (a) {
            if (null != this.q) {
                this.q.disabled = !a;
            }
        };
        GridColumnFilterOptionsView.prototype.ah = function (a) {
            var _this = this;
            var b = this.e;
            var c = this.n;
            this.y = a;
            var d;
            var e;
            this.w = ((function () { var f = GridColumnOptionsUtilities.g(b, GridColumnFilterOptionsView.ab, 1, c.p, c.j, new igniteuiReactCore.Size(1, 24, 24), _this.q, d, _this.x, e, false, true); _this.q = f.p6; d = f.p7; _this.x = f.p8; e = f.p9; return f.ret; })());
            var f = this.q;
            f.clicked = igniteuiReactCore.delegateCombine(f.clicked, igniteuiReactCore.runOn(this, this.ae));
            this.y.append(this.w);
        };
        GridColumnFilterOptionsView.prototype.aj = function (a) {
            var b = this.e;
            this.z = a;
            this.aa = b.createElement("span");
            this.aa.setRawText(this.n.ck);
            this.z.append(this.aa);
        };
        GridColumnFilterOptionsView.prototype.ai = function (a) {
            var _this = this;
            var b = this.e;
            var c = this.n;
            this.u = a;
            var d = b.createElement("hr");
            d.setStyleProperty("margin", "3px -7px");
            d.setStyleProperty("border-top", "1px solid #dde2eb");
            d.setStyleProperty("border-left", "0px");
            d.setStyleProperty("border-right", "0px");
            d.setStyleProperty("border-bottom", "0px");
            this.u.append(d);
            var e;
            var f = ((function () { var g = GridColumnOptionsUtilities.f(b, null, c.p, c.j, igniteuiReactCore.Size.empty, _this.o, e, _this.t); _this.o = g.p5; e = g.p6; _this.t = g.p7; return g.ret; })());
            f.setStyleProperty("margin-left", "1rem");
            var g = this.o;
            g.clicked = igniteuiReactCore.delegateCombine(g.clicked, igniteuiReactCore.runOn(this, this.ac));
            this.o.hg = "1";
            var h;
            var i = ((function () { var j = GridColumnOptionsUtilities.f(b, null, c.p, c.j, igniteuiReactCore.Size.empty, _this.p, h, _this.v); _this.p = j.p5; h = j.p6; _this.v = j.p7; return j.ret; })());
            var j = this.p;
            j.clicked = igniteuiReactCore.delegateCombine(j.clicked, igniteuiReactCore.runOn(this, this.ad));
            this.p.hg = "1";
            this.p.s = 2;
            var k = b.createElement("div");
            k.setStyleProperty("display", "flex");
            k.setStyleProperty("justify-content", "space-between");
            k.append(i);
            k.append(f);
            this.u.append(k);
        };
        GridColumnFilterOptionsView.prototype.ak = function (a) {
            this.h(a);
        };
        GridColumnFilterOptionsView.prototype.af = function () {
            if (null != this.applyButtonClick) {
                this.applyButtonClick(this, igniteuiReactCore.EventArgs.empty);
            }
        };
        GridColumnFilterOptionsView.prototype.ag = function () {
            if (null != this.cancelButtonClick) {
                this.cancelButtonClick(this, igniteuiReactCore.EventArgs.empty);
            }
        };
        GridColumnFilterOptionsView.prototype.ac = function (a, b) {
            this.af();
        };
        GridColumnFilterOptionsView.prototype.ad = function (a, b) {
            this.ag();
        };
        GridColumnFilterOptionsView.prototype.ae = function (a, b) {
            this.n.cp();
        };
        GridColumnFilterOptionsView.$t = igniteuiReactCore.markType(GridColumnFilterOptionsView, 'GridColumnFilterOptionsView', GridColumnOptionsViewBase.$);
        GridColumnFilterOptionsView.ab = "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z";
        return GridColumnFilterOptionsView;
    }(GridColumnOptionsViewBase));
    /**
     * @hidden
     */
    var GridColumnFilterOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnFilterOptions, _super);
        function GridColumnFilterOptions() {
            var _this = _super.call(this) || this;
            _this.by = null;
            _this.b2 = "Apply";
            _this.b6 = "Cancel";
            _this.ca = "Clear column filters";
            _this.cf = "Search";
            _this.bu = 0;
            _this.bt = 0;
            _this.cj = "Text filter";
            _this.applyButtonClick = null;
            _this.cancelButtonClick = null;
            return _this;
        }
        GridColumnFilterOptions.prototype.f = function () {
            return new GridColumnFilterOptionsView();
        };
        GridColumnFilterOptions.prototype.bo = function () {
            if (null == this.column) {
                return false;
            }
            if (!this.column.gb) {
                return false;
            }
            if (this.c == null || this.c.actualDataSource == null || !this.c.actualDataSource.isGroupingSupported) {
                return false;
            }
            return true;
        };
        GridColumnFilterOptions.prototype.a3 = function () {
            _super.prototype.a3.call(this);
            this.cu();
            this.c0();
        };
        GridColumnFilterOptions.prototype.a4 = function (a, b) {
            _super.prototype.a4.call(this, a, b);
            switch (b.propertyName) {
                case "Filter":
                    this.c0();
                    break;
            }
        };
        GridColumnFilterOptions.prototype.onViewInitialized = function () {
            _super.prototype.onViewInitialized.call(this);
            var a = this.bs;
            a.applyButtonClick = igniteuiReactCore.delegateCombine(a.applyButtonClick, igniteuiReactCore.runOn(this, this.c4));
            var b = this.bs;
            b.cancelButtonClick = igniteuiReactCore.delegateCombine(b.cancelButtonClick, igniteuiReactCore.runOn(this, this.c5));
        };
        GridColumnFilterOptions.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
            switch (a) {
                case "ApplyButtonCaption":
                case "CancelButtonCaption":
                case "ClearColumnFiltersCaption":
                case "TextFilterCaption":
                    this.bs.m();
                    break;
                case "ActualBaseTheme":
                case "ActualDensity":
                case "ActualFilterListDensity":
                case "FilterListPlaceholderText":
                case "BackgroundColor":
                case "TextColor":
                    this.c2();
                    break;
                case "FilterListDensity":
                    this.bv = this.bx == 0 ? this.q : this.bx;
                    break;
            }
        };
        Object.defineProperty(GridColumnFilterOptions.prototype, "bs", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnFilterOptions.prototype, "b3", {
            get: function () {
                return this.b2;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.b2)) {
                    return;
                }
                var b = this.b2;
                this.b2 = a;
                this.a8("ApplyButtonCaption", b, this.b2);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnFilterOptions.prototype, "b7", {
            get: function () {
                return this.b6;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.b6)) {
                    return;
                }
                var b = this.b6;
                this.b6 = a;
                this.a8("CancelButtonCaption", b, this.b6);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnFilterOptions.prototype, "cb", {
            get: function () {
                return this.ca;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.ca)) {
                    return;
                }
                var b = this.ca;
                this.ca = a;
                this.a8("ClearColumnFiltersCaption", b, this.ca);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnFilterOptions.prototype, "cg", {
            get: function () {
                return this.cf;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.cf)) {
                    return;
                }
                var b = this.cf;
                this.cf = a;
                this.a8("FilterListPlaceholderText", b, this.cf);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnFilterOptions.prototype, "bx", {
            get: function () {
                return this.bu;
            },
            set: function (a) {
                var b = this.bu;
                this.bu = a;
                if (b != this.bu) {
                    this.a8("FilterListDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnFilterOptions.prototype, "bv", {
            get: function () {
                return this.bt;
            },
            set: function (a) {
                var b = this.bt;
                this.bt = a;
                if (b != this.bt) {
                    this.a8("ActualFilterListDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnFilterOptions.prototype, "ck", {
            get: function () {
                return this.cj;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.cj)) {
                    return;
                }
                var b = this.cj;
                this.cj = a;
                this.a8("TextFilterCaption", b, this.cj);
            },
            enumerable: true,
            configurable: true
        });
        GridColumnFilterOptions.prototype.c0 = function () {
            var a = this.by.ad();
            this.bs.al(!a);
            var b = this.bz();
            this.bs.am(b);
        };
        GridColumnFilterOptions.prototype.cn = function () {
            var e_1, _a;
            if (0 == this.by.g.count) {
                this.cp();
                return;
            }
            var a;
            var b;
            if (this.by.p == 0) {
                b = false;
                a = 10;
            }
            else {
                b = true;
                a = 5;
            }
            var c = new igniteuiReactCore.List$1(ColumnComparisonFilterCondition.$, 0);
            var d = this.by.g;
            for (var e = 0; e < d.count; e++) {
                var f = d._inner[e];
                var g = f.value[0];
                var h = GridColumnFilterOptions.bp(a, g);
                c.add(h);
            }
            if (c.count == 1) {
                this.column.eo = c._inner[0];
            }
            else {
                var i = new ColumnFilterConditionGroup();
                i.f = b;
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var j = _c.value;
                        i.h(j);
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.column.eo = i;
            }
        };
        GridColumnFilterOptions.prototype.provideClearFiltersSection = function (a) {
            this.bs.ah(a);
        };
        GridColumnFilterOptions.prototype.provideFilterSection = function (a) {
            this.bs.aj(a);
        };
        GridColumnFilterOptions.prototype.provideFilterCheckboxListSection = function (a) {
            this.by = a;
            this.c2();
            var b = this.by;
            b.selectAllCheckboxChanged = igniteuiReactCore.delegateCombine(b.selectAllCheckboxChanged, igniteuiReactCore.runOn(this, this.co));
            var c = this.by;
            c.checkedChanged = igniteuiReactCore.delegateCombine(c.checkedChanged, igniteuiReactCore.runOn(this, this.cr));
        };
        GridColumnFilterOptions.prototype.provideFilterButtonSection = function (a) {
            this.bs.ai(a);
        };
        GridColumnFilterOptions.prototype.provideMainDiv = function (a) {
            this.bs.ak(a);
        };
        GridColumnFilterOptions.prototype.cp = function () {
            this.column.eo = null;
            this.c1();
        };
        GridColumnFilterOptions.bp = function (a, b) {
            var c = new ColumnComparisonFilterCondition();
            c.e = a;
            c.j = b;
            return c;
        };
        GridColumnFilterOptions.prototype.bz = function () {
            var a = this.column;
            if (null == a) {
                return false;
            }
            return null != a.eo;
        };
        GridColumnFilterOptions.prototype.cu = function () {
            var a = this.column;
            var b = this.c;
            var c = (null != a) ? a.hy : null;
            var d = (null != b) ? b.actualDataSource.clone() : null;
            if (null != d) {
                this.c3(b.actualDataSource, d);
                d.summaryDescriptions.clear();
                d.groupDescriptions.clear();
                var e = new igniteuiReactCore.SortDescription();
                e.propertyName = c;
                e.direction = 0;
                d.groupDescriptions.add(e);
                var f = b.z(a);
                var g = d.filterExpressions;
                for (var h = g.j.count - 1; h >= 0; h--) {
                    var i = g.j.item(h);
                    if (i.isAutoGenerated) {
                        if (null != f) {
                            g.j.item(h, f);
                        }
                        else {
                            d.filterExpressions.removeAt(h);
                        }
                        break;
                    }
                }
                this.by.itemsSource = d;
                this.by.at = c;
                this.by.b = [c];
                d.isSectionHeaderNormalRow = true;
                d.isSectionExpandedDefault = false;
                d.isSectionCollapsable = true;
                d.isSectionContentVisible = false;
                this.c1();
            }
        };
        GridColumnFilterOptions.prototype.c3 = function (a, b) {
            if (a != null && a.actualSchema != null && b != null && b.actualSchema != null) {
                var c = b.actualSchema.propertyTypes;
                var d = a.actualSchema.propertyTypes;
                for (var e = 0; e < c.length; e++) {
                    if (c[e] != d[e]) {
                        c[e] = d[e];
                    }
                }
            }
        };
        GridColumnFilterOptions.prototype.c1 = function () {
            var e_2, _a;
            var a = this.column;
            var b = (null != a) ? a.hy : null;
            var c = true;
            var d = igniteuiReactCore.toNullable(ColumnComparisonConditionOperatorType_$type, null);
            var e = this.b0();
            for (var f = e.count - 1; f >= 0; f--) {
                var g = e._inner[f];
                switch (g.e) {
                    case 5:
                    case 10: break;
                    default:
                        e.removeAt(f);
                        continue;
                }
                if (igniteuiReactCore.nullableEquals(d, null)) {
                    d = igniteuiReactCore.toNullable(ColumnComparisonConditionOperatorType_$type, g.e);
                }
                else if (d.value != g.e) {
                    c = false;
                    break;
                }
            }
            if (e.count == 0 || !c) {
                this.by.b5();
                return;
            }
            switch (d.value) {
                case 5:
                    this.by.bh();
                    break;
                case 10:
                    this.by.b5();
                    break;
            }
            var h = this.by.g;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(e)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var i = _c.value;
                    h.add(new PrimaryKeyValue([b], [i.j]));
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            this.c0();
        };
        GridColumnFilterOptions.prototype.b0 = function () {
            var a = new igniteuiReactCore.List$1(ColumnComparisonFilterCondition.$, 0);
            var b = this.column;
            if (null == b) {
                return a;
            }
            if (null != b.eo) {
                var c = GridColumnFilterOptions.cq(b.eo, a);
                a = c.p1;
            }
            return a;
        };
        GridColumnFilterOptions.cq = function (a, b) {
            var c = igniteuiReactCore.typeCast(ColumnFilterConditionGroup.$, a);
            if (null != c) {
                for (var d = 0; d < c.g; d++) {
                    var e = c.item(d);
                    var f = GridColumnFilterOptions.cq(e, b);
                    b = f.p1;
                }
            }
            else if (null != a) {
                b.add1(a);
            }
            return {
                p1: b
            };
        };
        GridColumnFilterOptions.prototype.c2 = function () {
            if (null != this.by) {
                this.by.n = this.bv;
                this.by.ax = this.cg;
                this.by.cg = this.bk;
                this.by.cl = this.bn;
                this.by.l = this.i;
                this.by.updateHrMargin(new igniteuiReactCore.Thickness(1, -7, 3, -7, 3));
            }
        };
        GridColumnFilterOptions.prototype.co = function (a, b) {
            this.c0();
        };
        GridColumnFilterOptions.prototype.cr = function (a, b) {
            this.c0();
        };
        GridColumnFilterOptions.prototype.c4 = function (a, b) {
            this.cn();
            this.cs();
        };
        GridColumnFilterOptions.prototype.c5 = function (a, b) {
            this.ct();
        };
        GridColumnFilterOptions.prototype.cs = function () {
            if (null != this.applyButtonClick) {
                this.applyButtonClick(this, new FilterApplyButtonClickEventArgs());
            }
        };
        GridColumnFilterOptions.prototype.ct = function () {
            if (null != this.cancelButtonClick) {
                this.cancelButtonClick(this, new FilterCancelButtonClickEventArgs());
            }
        };
        GridColumnFilterOptions.$t = igniteuiReactCore.markType(GridColumnFilterOptions, 'GridColumnFilterOptions', GridColumnOptionsSectionBase.$);
        return GridColumnFilterOptions;
    }(GridColumnOptionsSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrFilterApplyButtonClickEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrFilterApplyButtonClickEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrFilterApplyButtonClickEventArgs.prototype.createImplementation = function () {
            return new FilterApplyButtonClickEventArgs();
        };
        Object.defineProperty(IgrFilterApplyButtonClickEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrFilterApplyButtonClickEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrFilterApplyButtonClickEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrFilterApplyButtonClickEventArgs;
    }());

    var IgrFilterCancelButtonClickEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrFilterCancelButtonClickEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrFilterCancelButtonClickEventArgs.prototype.createImplementation = function () {
            return new FilterCancelButtonClickEventArgs();
        };
        Object.defineProperty(IgrFilterCancelButtonClickEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrFilterCancelButtonClickEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrFilterCancelButtonClickEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrFilterCancelButtonClickEventArgs;
    }());

    var IgrGridColumnFilterOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnFilterOptions, _super);
        function IgrGridColumnFilterOptions(props) {
            var _this = _super.call(this, props) || this;
            _this._reactRenderer = null;
            _this._applyButtonClick = null;
            _this._applyButtonClick_wrapped = null;
            _this._cancelButtonClick = null;
            _this._cancelButtonClick_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._getClearFiltersSectionRef = _this._getClearFiltersSectionRef.bind(_this);
            _this._getFilterSectionRef = _this._getFilterSectionRef.bind(_this);
            _this._getFilterCheckboxListSectionRef = _this._getFilterCheckboxListSectionRef.bind(_this);
            _this._getFilterButtonsSectionRef = _this._getFilterButtonsSectionRef.bind(_this);
            if (document) {
                _this._mainDiv = document.createElement("div");
                _this._mainDiv.style.display = "block";
                _this._mainDiv.style.width = "100%";
                _this._mainDiv.style.height = "100%";
            }
            var ren = new igniteuiReactCore.ReactRenderer(_this._mainDiv, document, true, DataGridStylingDefaults);
            _this._reactRenderer = ren;
            var gridColumnFilterOptions = _this.i;
            gridColumnFilterOptions.provideRenderer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrGridColumnFilterOptions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnFilterOptions.prototype._getClearFiltersSectionRef = function (ref) {
            this._clearFiltersSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnFilterOptions.prototype._getFilterSectionRef = function (ref) {
            this._filterSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnFilterOptions.prototype._getFilterCheckboxListSectionRef = function (ref) {
            this._filterCheckboxListSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnFilterOptions.prototype._getFilterButtonsSectionRef = function (ref) {
            this._filterButtonsSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnFilterOptions.prototype.verifyReferences = function () {
            if (this._reactRenderer &&
                this._elRef &&
                this._clearFiltersSectionRef &&
                this._filterSectionRef &&
                this._filterCheckboxListSectionRef &&
                this._filterButtonsSectionRef) {
                var gridColumnFilterOptions = this.i;
                var mainRef = this._reactRenderer.getWrapper(this._elRef);
                gridColumnFilterOptions.provideMainDiv(mainRef);
                var clearFiltersSectionWrapper = this._reactRenderer.getWrapper(this._clearFiltersSectionRef);
                gridColumnFilterOptions.provideClearFiltersSection(clearFiltersSectionWrapper);
                var filtersSectionWrapper = this._reactRenderer.getWrapper(this._filterSectionRef);
                gridColumnFilterOptions.provideFilterSection(filtersSectionWrapper);
                gridColumnFilterOptions.provideFilterCheckboxListSection(this._filterCheckboxListSectionRef.i);
                var filterButtonsSectionWrapper = this._reactRenderer.getWrapper(this._filterButtonsSectionRef);
                gridColumnFilterOptions.provideFilterButtonSection(filterButtonsSectionWrapper);
            }
        };
        IgrGridColumnFilterOptions.prototype.render = function () {
            var divStyle = {
                height: "195px"
            };
            return (React.createElement("div", { className: "ig-grid-column-filter-options igr-grid-column-filter-options", ref: this._getMainRef }, React.createElement("div", { ref: this._getClearFiltersSectionRef, key: "clearFiltersSection" }), React.createElement("div", { ref: this._getFilterSectionRef, key: "filtersSection" }), React.createElement("div", { style: divStyle }, React.createElement(IgrCheckboxList, { height: "100%", ref: this._getFilterCheckboxListSectionRef, key: "filterCheckboxListSection" })), React.createElement("div", { ref: this._getFilterButtonsSectionRef, key: "filterButtonsSection" })));
        };
        IgrGridColumnFilterOptions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrGridColumnFilterOptions.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrGridColumnFilterOptions.prototype.updateStyle = function () {
            this._styling(this._mainDiv, this);
        };
        IgrGridColumnFilterOptions.prototype.componentWillUnmount = function () {
            this.i.destroy();
            this._reactRenderer.destroy();
        };
        IgrGridColumnFilterOptions.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._mainDiv);
            this.initializeContent();
        };
        IgrGridColumnFilterOptions.prototype.initializeContent = function () {
            this._styling(this._mainDiv, this);
            this.updateStyle();
        };
        IgrGridColumnFilterOptions.prototype.createImplementation = function () {
            return new GridColumnFilterOptions();
        };
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "applyButtonCaption", {
            get: function () {
                return this.i.b3;
            },
            set: function (v) {
                this.i.b3 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "cancelButtonCaption", {
            get: function () {
                return this.i.b7;
            },
            set: function (v) {
                this.i.b7 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "clearColumnFiltersCaption", {
            get: function () {
                return this.i.cb;
            },
            set: function (v) {
                this.i.cb = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "filterListPlaceholderText", {
            get: function () {
                return this.i.cg;
            },
            set: function (v) {
                this.i.cg = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "filterListDensity", {
            /**
             * Gets or sets the display Density to use for the buttons in the component.
            */
            get: function () {
                return this.i.bx;
            },
            set: function (v) {
                this.i.bx = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "actualFilterListDensity", {
            /**
             * Gets the actual display filterListDensity to use for the component.
            */
            get: function () {
                return this.i.bv;
            },
            set: function (v) {
                this.i.bv = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "textFilterCaption", {
            get: function () {
                return this.i.ck;
            },
            set: function (v) {
                this.i.ck = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "applyButtonClick", {
            get: function () {
                return this._applyButtonClick;
            },
            set: function (ev) {
                var _this = this;
                if (this._applyButtonClick_wrapped !== null) {
                    this.i.applyButtonClick = igniteuiReactCore.delegateRemove(this.i.applyButtonClick, this._applyButtonClick_wrapped);
                    this._applyButtonClick_wrapped = null;
                    this._applyButtonClick = null;
                }
                this._applyButtonClick = ev;
                this._applyButtonClick_wrapped = function (o, e) {
                    var outerArgs = new IgrFilterApplyButtonClickEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeApplyButtonClick) {
                        _this.beforeApplyButtonClick(_this, outerArgs);
                    }
                    if (_this._applyButtonClick) {
                        _this._applyButtonClick(_this, outerArgs);
                    }
                };
                this.i.applyButtonClick = igniteuiReactCore.delegateCombine(this.i.applyButtonClick, this._applyButtonClick_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnFilterOptions.prototype, "cancelButtonClick", {
            get: function () {
                return this._cancelButtonClick;
            },
            set: function (ev) {
                var _this = this;
                if (this._cancelButtonClick_wrapped !== null) {
                    this.i.cancelButtonClick = igniteuiReactCore.delegateRemove(this.i.cancelButtonClick, this._cancelButtonClick_wrapped);
                    this._cancelButtonClick_wrapped = null;
                    this._cancelButtonClick = null;
                }
                this._cancelButtonClick = ev;
                this._cancelButtonClick_wrapped = function (o, e) {
                    var outerArgs = new IgrFilterCancelButtonClickEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCancelButtonClick) {
                        _this.beforeCancelButtonClick(_this, outerArgs);
                    }
                    if (_this._cancelButtonClick) {
                        _this._cancelButtonClick(_this, outerArgs);
                    }
                };
                this.i.cancelButtonClick = igniteuiReactCore.delegateCombine(this.i.cancelButtonClick, this._cancelButtonClick_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnFilterOptions;
    }(IgrGridColumnOptionsSectionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridColumnFilterOptionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnFilterOptionsModule() {
        }
        IgrGridColumnFilterOptionsModule.register = function () {
            IgrCheckboxListModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnFilterOptions', IgrGridColumnFilterOptions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnFilterOptions', IgrGridColumnFilterOptions);
            igniteuiReactCore.TypeRegistrar.register('GridColumnFilterOptions', GridColumnFilterOptions.$type);
        };
        return IgrGridColumnFilterOptionsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridColumnOptionsView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnOptionsView, _super);
        function GridColumnOptionsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.u = null;
            _this.y = null;
            _this.w = null;
            _this.x = null;
            _this.p = null;
            _this.s = null;
            _this.r = null;
            _this.v = null;
            _this.q = null;
            _this.t = null;
            return _this;
        }
        Object.defineProperty(GridColumnOptionsView.prototype, "n", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        GridColumnOptionsView.prototype.o = function () {
            var a = this.e;
            var b = a.createElement("div");
            var c = a.createElement("header");
            b.append(c);
            var d = a.createElement("h4");
            c.append(d);
            c.setRawText(this.n.dh);
            return b;
        };
        GridColumnOptionsView.prototype.ab = function () {
            if (null != this.t) {
                var a = this.n;
                var b = a.dh;
                this.t.setRawText(b);
                if (null != a.b4) {
                    this.t.setStyleProperty("font", a.b4.fontString);
                }
            }
        };
        GridColumnOptionsView.prototype.j = function () {
            _super.prototype.j.call(this);
            this.m();
        };
        GridColumnOptionsView.prototype.m = function () {
            _super.prototype.m.call(this);
            if (null != this.g) {
                this.g.setStyleProperty("padding", this.n.dq());
                this.g.setStyleProperty("box-sizing", "border-box");
            }
            this.ab();
            var a;
            var b;
            if (null != this.u) {
                a = this.u;
                b = this.n.ce;
                GridColumnOptionsUtilities.j(a, b, "flex");
            }
            if (null != this.y) {
                a = this.y;
                b = this.n.cs;
                GridColumnOptionsUtilities.j(a, b);
            }
            if (null != this.w) {
                a = this.w;
                b = this.n.cm;
                GridColumnOptionsUtilities.j(a, b);
            }
            if (null != this.x) {
                a = this.x;
                b = this.n.cp;
                GridColumnOptionsUtilities.j(a, b);
            }
            if (null != this.v) {
                a = this.v;
                b = this.n.cj;
                GridColumnOptionsUtilities.j(a, b);
            }
            if (null != this.q) {
                a = this.q;
                b = this.n.cd;
                GridColumnOptionsUtilities.j(a, b);
            }
            if (null != this.p) {
                a = this.p;
                b = this.n.ca;
                GridColumnOptionsUtilities.j(a, b);
            }
        };
        GridColumnOptionsView.prototype.z = function () {
            var a = this.e;
            var b = a.createElement("header");
            this.u.append(b);
            var c = a.createElement("h4");
            c.setStyleProperty("margin-top", "0");
            c.setStyleProperty("margin-bottom", "0");
            b.append(c);
            this.t = c;
            this.s.append(b);
            this.ab();
        };
        GridColumnOptionsView.prototype.aa = function (a, b, c, d, e, f, g, h, i) {
            this.u = a;
            this.y = b;
            this.w = c;
            this.x = d;
            this.p = e;
            this.s = f;
            this.r = g;
            this.v = h;
            this.q = i;
            this.r.setStyleProperty("display", "flex");
            this.r.setStyleProperty("flex-direction", "row");
            this.r.setStyleProperty("flex-wrap", "no-wrap");
            this.r.setStyleProperty("align-items", "center");
            this.r.setStyleProperty("justify-content", "space-between");
            this.u.setStyleProperty("display", "flex");
            this.u.setStyleProperty("flex-direction", "row");
            this.u.setStyleProperty("flex-wrap", "no-wrap");
            this.u.setStyleProperty("align-items", "center");
            this.u.setStyleProperty("justify-content", "space-between");
            this.u.setStyleProperty("margin-bottom", "5px");
            this.z();
            this.y.setStyleProperty("margin-bottom", "8px");
            this.w.setStyleProperty("margin-bottom", "8px");
            this.x.setStyleProperty("margin-bottom", "8px");
        };
        GridColumnOptionsView.$t = igniteuiReactCore.markType(GridColumnOptionsView, 'GridColumnOptionsView', GridColumnOptionsViewBase.$);
        return GridColumnOptionsView;
    }(GridColumnOptionsViewBase));
    /**
     * @hidden
     */
    var GridColumnOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GridColumnOptions, _super);
        function GridColumnOptions() {
            var _this = _super.call(this) || this;
            _this.bw = null;
            _this.bt = null;
            _this.bv = null;
            _this.bs = null;
            _this.br = null;
            _this.bo = null;
            _this.b6 = null;
            _this.b3 = null;
            _this.b2 = null;
            _this.cv = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(8));
            _this.cx = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(4));
            _this.cw = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(8));
            _this.cu = igniteuiReactCore.truncate(igniteuiReactCore.DeviceUtils.g(8));
            _this.cf = true;
            _this.cq = true;
            _this.ck = true;
            _this.cn = true;
            _this.ch = true;
            _this.cb = true;
            _this.b8 = true;
            _this.eo = "Sort";
            _this.ei = "Asc";
            _this.el = "Desc";
            _this.du = "Move";
            _this.dx = "Left";
            _this.d1 = "Right";
            _this.d8 = "Pin";
            _this.eb = "Left";
            _this.ef = "Right";
            _this.c8 = "Apply";
            _this.db = "Cancel";
            _this.de = "Clear column filters";
            _this.by = 0;
            _this.bx = 0;
            _this.dk = "Search";
            _this.filterApplyButtonClick = null;
            _this.filterCancelButtonClick = null;
            return _this;
        }
        GridColumnOptions.prototype.f = function () {
            return new GridColumnOptionsView();
        };
        GridColumnOptions.prototype.a3 = function () {
            _super.prototype.a3.call(this);
            var a = this.column;
            if (null != this.bw) {
                this.bw.column = a;
            }
            if (null != this.bt) {
                this.bt.column = a;
            }
            if (null != this.bv) {
                this.bv.column = a;
            }
            if (null != this.bs) {
                this.bs.column = a;
            }
            if (null != this.br) {
                this.br.column = a;
            }
            if (null != this.bo) {
                this.bo.column = a;
            }
            this.e1();
        };
        GridColumnOptions.prototype.a7 = function (a, b) {
            _super.prototype.a7.call(this, a, b);
            switch (b.propertyName) {
                case "HeaderClickAction":
                case "ColumnMovingMode":
                    this.e1();
                    break;
            }
        };
        GridColumnOptions.prototype.ba = function (a, b, c) {
            _super.prototype.ba.call(this, a, b, c);
            switch (a) {
                case "HeaderVisible":
                case "SortOptionsVisible":
                case "MoveOptionsVisible":
                case "PinOptionsVisible":
                case "HideOptionsVisible":
                case "FilterOptionsVisible":
                case "PaddingTop":
                case "PaddingRight":
                case "PaddingBottom":
                case "PaddingLeft":
                    this.e1();
                    break;
                case "ActualLabelTextStyle":
                case "ActualBaseTheme":
                case "ActualButtonDensity":
                case "ActualButtonTextStyle":
                case "ActualDensity":
                case "ActualFilterListDensity":
                case "BackgroundColor":
                case "TextColor":
                    this.ez();
                    break;
                case "ColumnNameTextStyle":
                    this.e0();
                    break;
                case "ActualColumnNameTextStyle":
                    this.e1();
                    break;
                case "FilterListDensity":
                    this.bz = this.filterListDensity == 0 ? this.q : this.filterListDensity;
                    break;
            }
        };
        GridColumnOptions.prototype.e1 = function () {
            this.bu.m();
        };
        Object.defineProperty(GridColumnOptions.prototype, "dh", {
            get: function () {
                var a = this.column;
                return (null != a) ? a.hh : "(No column selected)";
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "b7", {
            get: function () {
                if (null == this.b6) {
                    this.b6 = new igniteuiReactCore.FontInfo();
                    this.b6.n = "'Segoe UI', Verdana";
                    this.b6.d = 16;
                }
                return this.b6;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "ce", {
            get: function () {
                return this.cg;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cs", {
            get: function () {
                return this.cr && this.bw.bo();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cm", {
            get: function () {
                return this.cl && this.bt.bo();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cp", {
            get: function () {
                return this.co && this.bv.bo();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cj", {
            get: function () {
                return this.ci && this.bs.bo();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cd", {
            get: function () {
                return this.cc && this.br.bo();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "ca", {
            get: function () {
                return this.b9 && this.bo.bo();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "bu", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "b5", {
            get: function () {
                return this.b3;
            },
            set: function (a) {
                var b = this.b3;
                this.b3 = a;
                if (b != this.b3) {
                    this.a8("ColumnNameTextStyle", b, this.b3);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "b4", {
            get: function () {
                return this.b2;
            },
            set: function (a) {
                var b = this.b2;
                this.b2 = a;
                if (this.b2 != b) {
                    this.a8("ActualColumnNameTextStyle", b, this.b2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "c3", {
            get: function () {
                return this.cv;
            },
            set: function (a) {
                var b = this.cv;
                this.cv = a;
                if (this.cv != b) {
                    this.a8("PaddingLeft", b, this.cv);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "c5", {
            get: function () {
                return this.cx;
            },
            set: function (a) {
                var b = this.cx;
                this.cx = a;
                if (this.cx != b) {
                    this.a8("PaddingTop", b, this.cx);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "c4", {
            get: function () {
                return this.cw;
            },
            set: function (a) {
                var b = this.cw;
                this.cw = a;
                if (this.cw != b) {
                    this.a8("PaddingRight", b, this.cw);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "c2", {
            get: function () {
                return this.cu;
            },
            set: function (a) {
                var b = this.cu;
                this.cu = a;
                if (this.cu != b) {
                    this.a8("PaddingBottom", b, this.cu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cg", {
            get: function () {
                return this.cf;
            },
            set: function (a) {
                if (a == this.cf) {
                    return;
                }
                var b = this.cf;
                this.cf = a;
                this.a8("HeaderVisible", b, this.cf);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cr", {
            get: function () {
                return this.cq;
            },
            set: function (a) {
                if (a == this.cq) {
                    return;
                }
                var b = this.cq;
                this.cq = a;
                this.a8("SortOptionsVisible", b, this.cq);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cl", {
            get: function () {
                return this.ck;
            },
            set: function (a) {
                if (a == this.ck) {
                    return;
                }
                var b = this.ck;
                this.ck = a;
                this.a8("MoveOptionsVisible", b, this.ck);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "co", {
            get: function () {
                return this.cn;
            },
            set: function (a) {
                if (a == this.cn) {
                    return;
                }
                var b = this.cn;
                this.cn = a;
                this.a8("PinOptionsVisible", b, this.cn);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "ci", {
            get: function () {
                return this.ch;
            },
            set: function (a) {
                if (a == this.ch) {
                    return;
                }
                var b = this.ch;
                this.ch = a;
                this.a8("HideOptionsVisible", b, this.ch);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "cc", {
            get: function () {
                return this.cb;
            },
            set: function (a) {
                if (a == this.cb) {
                    return;
                }
                var b = this.cb;
                this.cb = a;
                this.a8("GroupOptionsVisible", b, this.cb);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "b9", {
            get: function () {
                return this.b8;
            },
            set: function (a) {
                if (a == this.b8) {
                    return;
                }
                var b = this.b8;
                this.b8 = a;
                this.a8("FilterOptionsVisible", b, this.b8);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "ep", {
            get: function () {
                return null != this.bw ? this.bw.bs : this.eo;
            },
            set: function (a) {
                var b = this.ep;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.eo = a;
                if (null != this.bw) {
                    this.bw.bs = a;
                }
                this.a8("SortHeaderCaption", b, this.eo);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "ej", {
            get: function () {
                return null != this.bw ? this.bw.bz : this.ei;
            },
            set: function (a) {
                var b = this.ej;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.ei = a;
                if (null != this.bw) {
                    this.bw.bz = a;
                }
                this.a8("SortAscendingCaption", b, this.ei);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "em", {
            get: function () {
                return null != this.bw ? this.bw.b3 : this.el;
            },
            set: function (a) {
                var b = this.em;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.el = a;
                if (null != this.bw) {
                    this.bw.b3 = a;
                }
                this.a8("SortDescendingCaption", b, this.el);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "dv", {
            get: function () {
                return null != this.bt ? this.bt.bs : this.du;
            },
            set: function (a) {
                var b = this.dv;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.du = a;
                if (null != this.bt) {
                    this.bt.bs = a;
                }
                this.a8("MoveHeaderCaption", b, this.du);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "dy", {
            get: function () {
                return null != this.bt ? this.bt.b1 : this.dx;
            },
            set: function (a) {
                var b = this.dy;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.dx = a;
                if (null != this.bt) {
                    this.bt.b1 = a;
                }
                this.a8("MoveLeftCaption", b, this.dx);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "d2", {
            get: function () {
                return null != this.bt ? this.bt.b5 : this.d1;
            },
            set: function (a) {
                var b = this.d2;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.d1 = a;
                if (null != this.bt) {
                    this.bt.b5 = a;
                }
                this.a8("MoveRightCaption", b, this.d1);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "d9", {
            get: function () {
                return null != this.bv ? this.bv.bs : this.d8;
            },
            set: function (a) {
                var b = this.d9;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.d8 = a;
                if (null != this.bv) {
                    this.bv.bs = a;
                }
                this.a8("PinHeaderCaption", b, this.d8);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "ec", {
            get: function () {
                return null != this.bv ? this.bv.b0 : this.eb;
            },
            set: function (a) {
                var b = this.ec;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.eb = a;
                if (null != this.bv) {
                    this.bv.b0 = a;
                }
                this.a8("PinLeftCaption", b, this.eb);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "eg", {
            get: function () {
                return null != this.bv ? this.bv.b4 : this.ef;
            },
            set: function (a) {
                var b = this.eg;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.ef = a;
                if (null != this.bv) {
                    this.bv.b4 = a;
                }
                this.a8("PinRightCaption", b, this.ef);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "c9", {
            get: function () {
                return null != this.bo ? this.bo.b3 : this.c8;
            },
            set: function (a) {
                var b = this.c9;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.c8 = a;
                if (null != this.bo) {
                    this.bo.b3 = a;
                }
                this.a8("ApplyFiltersButtonCaption", b, this.c8);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "dc", {
            get: function () {
                return null != this.bo ? this.bo.b7 : this.db;
            },
            set: function (a) {
                var b = this.dc;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.db = a;
                if (null != this.bo) {
                    this.bo.b7 = a;
                }
                this.a8("CancelFiltersButtonCaption", b, this.db);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "df", {
            get: function () {
                return null != this.bo ? this.bo.cb : this.de;
            },
            set: function (a) {
                var b = this.df;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.de = a;
                if (null != this.bo) {
                    this.bo.cb = a;
                }
                this.a8("ClearColumnFiltersCaption", b, this.de);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "filterListDensity", {
            get: function () {
                return this.by;
            },
            set: function (a) {
                var b = this.by;
                this.by = a;
                if (b != this.by) {
                    this.a8("FilterListDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "bz", {
            get: function () {
                return this.bx;
            },
            set: function (a) {
                var b = this.bx;
                this.bx = a;
                if (b != this.bx) {
                    this.a8("ActualFilterListDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(GridColumnOptions.prototype, "dl", {
            get: function () {
                return this.dk;
            },
            set: function (a) {
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, this.dk)) {
                    return;
                }
                var b = this.dk;
                this.dk = a;
                if (null != this.bo) {
                    this.bo.cg = a;
                }
                this.a8("FilterListPlaceholderText", b, this.dk);
            },
            enumerable: true,
            configurable: true
        });
        GridColumnOptions.prototype.notifySizeChanged = function () {
            this.e.j();
        };
        GridColumnOptions.prototype.provideContent = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
            this.bu.aa(a, b, c, d, e, f, g, h, i);
            this.bw = j;
            this.bw.bz = this.ei;
            this.bw.b3 = this.el;
            this.bt = k;
            this.bt.b1 = this.dx;
            this.bt.b5 = this.d1;
            this.bv = l;
            this.bv.b0 = this.eb;
            this.bv.b4 = this.ef;
            this.bs = m;
            this.bs.bq = false;
            this.br = n;
            this.br.bq = false;
            this.bo = o;
            this.bo.b3 = this.c9;
            this.bo.cb = this.de;
            this.bo.cg = this.dl;
            var p = this.bw;
            p.propertyChanged = igniteuiReactCore.delegateCombine(p.propertyChanged, igniteuiReactCore.runOn(this, this.eu));
            var q = this.bt;
            q.propertyChanged = igniteuiReactCore.delegateCombine(q.propertyChanged, igniteuiReactCore.runOn(this, this.eu));
            var r = this.bv;
            r.propertyChanged = igniteuiReactCore.delegateCombine(r.propertyChanged, igniteuiReactCore.runOn(this, this.eu));
            var s = this.bs;
            s.propertyChanged = igniteuiReactCore.delegateCombine(s.propertyChanged, igniteuiReactCore.runOn(this, this.eu));
            var t = this.br;
            t.propertyChanged = igniteuiReactCore.delegateCombine(t.propertyChanged, igniteuiReactCore.runOn(this, this.eu));
            var u = this.bo;
            u.propertyChanged = igniteuiReactCore.delegateCombine(u.propertyChanged, igniteuiReactCore.runOn(this, this.eu));
            var v = this.bo;
            v.applyButtonClick = igniteuiReactCore.delegateCombine(v.applyButtonClick, igniteuiReactCore.runOn(this, this.es));
            var w = this.bo;
            w.cancelButtonClick = igniteuiReactCore.delegateCombine(w.cancelButtonClick, igniteuiReactCore.runOn(this, this.et));
            this.e0();
            this.bh();
            this.be();
            this.ez();
        };
        GridColumnOptions.prototype.dq = function () {
            return igniteuiReactCore.stringFormat1("{0}px {1}px {2}px {3}px", this.c5.toString(), this.c4.toString(), this.c2.toString(), this.c3.toString());
        };
        GridColumnOptions.prototype.e0 = function () {
            this.b4 = (null == this.b5) ? this.b7 : this.b5;
        };
        GridColumnOptions.prototype.ez = function () {
            var a = [this.bw, this.bt, this.bv, this.bs, this.br, this.bo];
            for (var c = 0; c < a.length; c++) {
                var b = a[c];
                if (null != b) {
                    b.bk = this.bk;
                    b.bn = this.bn;
                    b.density = this.q;
                    b.buttonDensity = this.p;
                    b.j = this.i;
                }
                var d = igniteuiReactCore.typeCast(GridColumnOptionsSimpleSectionBase.$, b);
                if (null != d) {
                    d.ag = this.aa;
                    d.ab = this.z;
                }
            }
            if (null != this.bo) {
                this.bo.bx = this.bz;
            }
        };
        GridColumnOptions.prototype.ew = function (a) {
            if (null != this.filterApplyButtonClick) {
                this.filterApplyButtonClick(this, a);
            }
        };
        GridColumnOptions.prototype.ex = function (a) {
            if (null != this.filterCancelButtonClick) {
                this.filterCancelButtonClick(this, a);
            }
        };
        GridColumnOptions.prototype.es = function (a, b) {
            this.ew(b);
        };
        GridColumnOptions.prototype.et = function (a, b) {
            this.ex(b);
        };
        GridColumnOptions.prototype.eu = function (a, b) {
            switch (b.propertyName) {
            }
        };
        GridColumnOptions.$t = igniteuiReactCore.markType(GridColumnOptions, 'GridColumnOptions', GridColumnOptionsBase.$);
        return GridColumnOptions;
    }(GridColumnOptionsBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridColumnOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridColumnOptions, _super);
        function IgrGridColumnOptions(props) {
            var _this = _super.call(this, props) || this;
            _this._reactRenderer = null;
            _this._filterApplyButtonClick = null;
            _this._filterApplyButtonClick_wrapped = null;
            _this._filterCancelButtonClick = null;
            _this._filterCancelButtonClick_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._getSortSectionRef = _this._getSortSectionRef.bind(_this);
            _this._getMoveSectionRef = _this._getMoveSectionRef.bind(_this);
            _this._getPinSectionRef = _this._getPinSectionRef.bind(_this);
            _this._getFilterSectionRef = _this._getFilterSectionRef.bind(_this);
            _this._getHeaderColumnNameSectionRef = _this._getHeaderColumnNameSectionRef.bind(_this);
            _this._getHeaderButtonsSectionRef = _this._getHeaderButtonsSectionRef.bind(_this);
            _this._getHideSectionRef = _this._getHideSectionRef.bind(_this);
            _this._getGroupSectionRef = _this._getGroupSectionRef.bind(_this);
            _this._getHeaderSectionRef = _this._getHeaderSectionRef.bind(_this);
            _this._getSortOptionsRef = _this._getSortOptionsRef.bind(_this);
            _this._getMoveOptionsRef = _this._getMoveOptionsRef.bind(_this);
            _this._getPinOptionsRef = _this._getPinOptionsRef.bind(_this);
            _this._getHideOptionsRef = _this._getHideOptionsRef.bind(_this);
            _this._getGroupOptionsRef = _this._getGroupOptionsRef.bind(_this);
            _this._getFilterOptionsRef = _this._getFilterOptionsRef.bind(_this);
            var columnOptions = _this.i;
            columnOptions.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrGridColumnOptions.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this.i.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this.i.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrGridColumnOptions.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            this.verifyReferences();
        };
        // These are the  main sections at the root level. 
        IgrGridColumnOptions.prototype._getHeaderSectionRef = function (ref) {
            this._headerSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getSortSectionRef = function (ref) {
            this._sortSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getMoveSectionRef = function (ref) {
            this._moveSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getPinSectionRef = function (ref) {
            this._pinSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getFilterSectionRef = function (ref) {
            this._filterSectionRef = ref;
            this.verifyReferences();
        };
        // Sub-sections
        IgrGridColumnOptions.prototype._getHeaderColumnNameSectionRef = function (ref) {
            this._headerColumnNameSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getHeaderButtonsSectionRef = function (ref) {
            this._headerButtonsSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getHideSectionRef = function (ref) {
            this._hideSectionRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getGroupSectionRef = function (ref) {
            this._groupSectionRef = ref;
            this.verifyReferences();
        };
        // The actual components
        IgrGridColumnOptions.prototype._getSortOptionsRef = function (ref) {
            this._sortOptionsRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getMoveOptionsRef = function (ref) {
            this._moveOptionsRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getPinOptionsRef = function (ref) {
            this._pinOptionsRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getHideOptionsRef = function (ref) {
            this._hideOptionsRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getGroupOptionsRef = function (ref) {
            this._groupOptionsRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype._getFilterOptionsRef = function (ref) {
            this._filterOptionsRef = ref;
            this.verifyReferences();
        };
        IgrGridColumnOptions.prototype.render = function () {
            return (React.createElement("div", { className: "ig-grid-column-options igr-grid-column-options", ref: this._getMainRef }, React.createElement("div", { ref: this._getHeaderSectionRef, key: "headerSection" }, React.createElement("div", { ref: this._getHeaderColumnNameSectionRef, key: "headerColumnNameSection" }), React.createElement("div", { ref: this._getHeaderButtonsSectionRef, key: "headerButtonsSection" }, React.createElement("div", { ref: this._getGroupSectionRef, key: "groupSection" }, React.createElement(IgrGridColumnGroupOptions, { ref: this._getGroupOptionsRef, key: "groupOptions" })), React.createElement("div", { ref: this._getHideSectionRef, key: "hideSection" }, React.createElement(IgrGridColumnHideOptions, { ref: this._getHideOptionsRef, key: "hideOptions" })))), React.createElement("div", { ref: this._getSortSectionRef, key: "sortSection" }, React.createElement(IgrGridColumnSortOptions, { ref: this._getSortOptionsRef, key: "sortOptions" })), React.createElement("div", { ref: this._getMoveSectionRef, key: "moveSection" }, React.createElement(IgrGridColumnMoveOptions, { ref: this._getMoveOptionsRef, key: "moveOptions" })), React.createElement("div", { ref: this._getPinSectionRef, key: "pinSection" }, React.createElement(IgrGridColumnPinOptions, { ref: this._getPinOptionsRef, key: "pinOptions" })), React.createElement("div", { ref: this._getFilterSectionRef, key: "filterSection" }, React.createElement(IgrGridColumnFilterOptions, { ref: this._getFilterOptionsRef, key: "filterOptions" }))));
        };
        IgrGridColumnOptions.prototype.verifyReferences = function () {
            var _this = this;
            if (this._elRef &&
                this._headerSectionRef &&
                this._sortSectionRef &&
                this._moveSectionRef &&
                this._pinSectionRef &&
                this._filterSectionRef &&
                this._headerColumnNameSectionRef &&
                this._headerButtonsSectionRef &&
                this._hideSectionRef &&
                this._groupSectionRef &&
                this._sortOptionsRef &&
                this._moveOptionsRef &&
                this._pinOptionsRef &&
                this._hideOptionsRef &&
                this._groupOptionsRef &&
                this._filterOptionsRef) {
                this._reactRenderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                if (document) {
                    this._elRef.style.display = "block";
                    this._elRef.style.width = "100%";
                    this._elRef.style.height = "100%";
                }
                this.i.provideRenderer(this._reactRenderer);
                var headerSectionWrapper = this._reactRenderer.getWrapper(this._headerSectionRef);
                var sortSectionWrapper = this._reactRenderer.getWrapper(this._sortSectionRef);
                var moveSectionWrapper = this._reactRenderer.getWrapper(this._moveSectionRef);
                var pinSectionWrapper = this._reactRenderer.getWrapper(this._pinSectionRef);
                var filterSectionWrapper = this._reactRenderer.getWrapper(this._filterSectionRef);
                var headerColumnNameSectionWrapper = this._reactRenderer.getWrapper(this._headerColumnNameSectionRef);
                var headerButtonsSectionWrapper = this._reactRenderer.getWrapper(this._headerButtonsSectionRef);
                var hideSectionWrapper = this._reactRenderer.getWrapper(this._hideSectionRef);
                var groupSectionWrapper = this._reactRenderer.getWrapper(this._groupSectionRef);
                this.i.provideContent(headerSectionWrapper, sortSectionWrapper, moveSectionWrapper, pinSectionWrapper, filterSectionWrapper, headerColumnNameSectionWrapper, headerButtonsSectionWrapper, hideSectionWrapper, groupSectionWrapper, this._sortOptionsRef.i, this._moveOptionsRef.i, this._pinOptionsRef.i, this._hideOptionsRef.i, this._groupOptionsRef.i, this._filterOptionsRef.i);
                this._reactRenderer.addSizeWatcher(function () {
                    _this.i.notifySizeChanged();
                });
            }
        };
        IgrGridColumnOptions.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrGridColumnOptions.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrGridColumnOptions.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrGridColumnOptions.prototype.componentWillUnmount = function () {
            this.i.destroy();
            if (this._reactRenderer)
                this._reactRenderer.destroy();
        };
        IgrGridColumnOptions.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this.i.notifySizeChanged();
            this.initializeContent();
        };
        IgrGridColumnOptions.prototype.initializeContent = function () {
            this._styling(this._elRef, this);
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrGridColumnOptions.prototype.createImplementation = function () {
            return new GridColumnOptions();
        };
        Object.defineProperty(IgrGridColumnOptions.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "headerOptionsVisibleResolved", {
            get: function () {
                return this.i.ce;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "sortOptionsVisibleResolved", {
            get: function () {
                return this.i.cs;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "moveOptionsVisibleResolved", {
            get: function () {
                return this.i.cm;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "pinOptionsVisibleResolved", {
            get: function () {
                return this.i.cp;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "hideOptionsVisibleResolved", {
            get: function () {
                return this.i.cj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "groupOptionsVisibleResolved", {
            get: function () {
                return this.i.cd;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "filterOptionsVisibleResolved", {
            get: function () {
                return this.i.ca;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "columnNameTextStyle", {
            /**
             * Gets or sets the font to use for columnNames.
            */
            get: function () {
                if (this.i.b5 == null) {
                    return null;
                }
                return this.i.b5.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.b5 = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "paddingLeft", {
            /**
             * Gets or sets the amount of left padding to use for the left edge of the component.
            */
            get: function () {
                return this.i.c3;
            },
            set: function (v) {
                this.i.c3 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "paddingTop", {
            /**
             * Gets or sets the amount of left padding to use for the top edge of the component.
            */
            get: function () {
                return this.i.c5;
            },
            set: function (v) {
                this.i.c5 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "paddingRight", {
            /**
             * Gets or sets the amount of left padding to use for the right edge of the component.
            */
            get: function () {
                return this.i.c4;
            },
            set: function (v) {
                this.i.c4 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "paddingBottom", {
            /**
             * Gets or sets the amount of left padding to use for the bottom edge of the component.
            */
            get: function () {
                return this.i.c2;
            },
            set: function (v) {
                this.i.c2 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "headerVisible", {
            get: function () {
                return this.i.cg;
            },
            set: function (v) {
                this.i.cg = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "sortOptionsVisible", {
            get: function () {
                return this.i.cr;
            },
            set: function (v) {
                this.i.cr = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "moveOptionsVisible", {
            get: function () {
                return this.i.cl;
            },
            set: function (v) {
                this.i.cl = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "pinOptionsVisible", {
            get: function () {
                return this.i.co;
            },
            set: function (v) {
                this.i.co = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "hideOptionsVisible", {
            get: function () {
                return this.i.ci;
            },
            set: function (v) {
                this.i.ci = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "groupOptionsVisible", {
            get: function () {
                return this.i.cc;
            },
            set: function (v) {
                this.i.cc = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "filterOptionsVisible", {
            get: function () {
                return this.i.b9;
            },
            set: function (v) {
                this.i.b9 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "sortHeaderCaption", {
            get: function () {
                return this.i.ep;
            },
            set: function (v) {
                this.i.ep = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "sortAscendingCaption", {
            get: function () {
                return this.i.ej;
            },
            set: function (v) {
                this.i.ej = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "sortDescendingCaption", {
            get: function () {
                return this.i.em;
            },
            set: function (v) {
                this.i.em = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "moveHeaderCaption", {
            get: function () {
                return this.i.dv;
            },
            set: function (v) {
                this.i.dv = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "moveLeftCaption", {
            get: function () {
                return this.i.dy;
            },
            set: function (v) {
                this.i.dy = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "moveRightCaption", {
            get: function () {
                return this.i.d2;
            },
            set: function (v) {
                this.i.d2 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "pinHeaderCaption", {
            get: function () {
                return this.i.d9;
            },
            set: function (v) {
                this.i.d9 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "pinLeftCaption", {
            get: function () {
                return this.i.ec;
            },
            set: function (v) {
                this.i.ec = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "pinRightCaption", {
            get: function () {
                return this.i.eg;
            },
            set: function (v) {
                this.i.eg = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "applyFiltersButtonCaption", {
            get: function () {
                return this.i.c9;
            },
            set: function (v) {
                this.i.c9 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "cancelFiltersButtonCaption", {
            get: function () {
                return this.i.dc;
            },
            set: function (v) {
                this.i.dc = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "clearColumnFiltersCaption", {
            get: function () {
                return this.i.df;
            },
            set: function (v) {
                this.i.df = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "filterListDensity", {
            /**
             * Gets or sets the display Density to use for the buttons in the component.
            */
            get: function () {
                return this.i.filterListDensity;
            },
            set: function (v) {
                this.i.filterListDensity = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "actualFilterListDensity", {
            /**
             * Gets the actual display filterListDensity to use for the component.
            */
            get: function () {
                return this.i.bz;
            },
            set: function (v) {
                this.i.bz = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "filterListPlaceholderText", {
            get: function () {
                return this.i.dl;
            },
            set: function (v) {
                this.i.dl = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "filterApplyButtonClick", {
            get: function () {
                return this._filterApplyButtonClick;
            },
            set: function (ev) {
                var _this = this;
                if (this._filterApplyButtonClick_wrapped !== null) {
                    this.i.filterApplyButtonClick = igniteuiReactCore.delegateRemove(this.i.filterApplyButtonClick, this._filterApplyButtonClick_wrapped);
                    this._filterApplyButtonClick_wrapped = null;
                    this._filterApplyButtonClick = null;
                }
                this._filterApplyButtonClick = ev;
                this._filterApplyButtonClick_wrapped = function (o, e) {
                    var outerArgs = new IgrFilterApplyButtonClickEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFilterApplyButtonClick) {
                        _this.beforeFilterApplyButtonClick(_this, outerArgs);
                    }
                    if (_this._filterApplyButtonClick) {
                        _this._filterApplyButtonClick(_this, outerArgs);
                    }
                };
                this.i.filterApplyButtonClick = igniteuiReactCore.delegateCombine(this.i.filterApplyButtonClick, this._filterApplyButtonClick_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridColumnOptions.prototype, "filterCancelButtonClick", {
            get: function () {
                return this._filterCancelButtonClick;
            },
            set: function (ev) {
                var _this = this;
                if (this._filterCancelButtonClick_wrapped !== null) {
                    this.i.filterCancelButtonClick = igniteuiReactCore.delegateRemove(this.i.filterCancelButtonClick, this._filterCancelButtonClick_wrapped);
                    this._filterCancelButtonClick_wrapped = null;
                    this._filterCancelButtonClick = null;
                }
                this._filterCancelButtonClick = ev;
                this._filterCancelButtonClick_wrapped = function (o, e) {
                    var outerArgs = new IgrFilterCancelButtonClickEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFilterCancelButtonClick) {
                        _this.beforeFilterCancelButtonClick(_this, outerArgs);
                    }
                    if (_this._filterCancelButtonClick) {
                        _this._filterCancelButtonClick(_this, outerArgs);
                    }
                };
                this.i.filterCancelButtonClick = igniteuiReactCore.delegateCombine(this.i.filterCancelButtonClick, this._filterCancelButtonClick_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridColumnOptions;
    }(IgrGridColumnOptionsBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrGridColumnOptionsModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridColumnOptionsModule() {
        }
        IgrGridColumnOptionsModule.register = function () {
            IgrGridColumnSortOptionsModule.register();
            IgrGridColumnMoveOptionsModule.register();
            IgrGridColumnPinOptionsModule.register();
            IgrGridColumnHideOptionsModule.register();
            IgrGridColumnGroupOptionsModule.register();
            IgrGridColumnFilterOptionsModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnOptions', IgrGridColumnOptions);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrGridColumnOptions', IgrGridColumnOptions);
            igniteuiReactCore.TypeRegistrar.register('GridColumnOptions', GridColumnOptions.$type);
        };
        return IgrGridColumnOptionsModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GotFocusEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(GotFocusEventArgs, _super);
        function GotFocusEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        GotFocusEventArgs.$t = igniteuiReactCore.markType(GotFocusEventArgs, 'GotFocusEventArgs', igniteuiReactCore.EventArgs.$);
        return GotFocusEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var LostFocusEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(LostFocusEventArgs, _super);
        function LostFocusEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        LostFocusEventArgs.$t = igniteuiReactCore.markType(LostFocusEventArgs, 'LostFocusEventArgs', igniteuiReactCore.EventArgs.$);
        return LostFocusEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MultiColumnComboBoxUtilities = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultiColumnComboBoxUtilities, _super);
        function MultiColumnComboBoxUtilities() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MultiColumnComboBoxUtilities.a = function (a, b, c, d, e, f, g, h) {
            var i = a.createElement("div");
            var j = a.getSubRenderer(i);
            g = new igniteuiReactInputs.Button();
            g.provideContainer(j);
            g.s = c;
            g.h = d;
            g.d = e;
            var k = a.createElement("div");
            k.setStyleProperty("display", "inline-block");
            h = new igniteuiReactInputs.Icon();
            var l = a.getSubRenderer(k);
            h.provideContainer(l);
            h.svgPath = b;
            k.setStyleProperty("width", igniteuiReactCore.stringFormat("{0}px", f.width.toString()));
            k.setStyleProperty("height", igniteuiReactCore.stringFormat("{0}px", f.height.toString()));
            var m = a.createElement("div");
            m.setStyleProperty("display", "flex");
            m.setStyleProperty("flex-direction", "row");
            m.setStyleProperty("flex-wrap", "no-wrap");
            m.setStyleProperty("align-items", "center");
            m.append(k);
            g.appendButtonContent(m);
            return {
                ret: i,
                p6: g,
                p7: h
            };
        };
        MultiColumnComboBoxUtilities.d = function (a) {
            var b = 0;
            if (a.altKey) {
                b |= 1;
            }
            if (a.shiftKey) {
                b |= 4;
            }
            if (a.ctrlKey) {
                b |= 2;
            }
            return b;
        };
        MultiColumnComboBoxUtilities.c = function (a, b, c) {
            if (c === void 0) {
                c = "block";
            }
            var d = b ? c : "none";
            a.setStyleProperty("display", d);
        };
        MultiColumnComboBoxUtilities.e = function (a, b, c) {
            if (null == MultiColumnComboBoxUtilities.b) {
                MultiColumnComboBoxUtilities.b = a.createElement("div");
                MultiColumnComboBoxUtilities.b.setStyleProperty("height", "auto");
                MultiColumnComboBoxUtilities.b.setStyleProperty("width", "auto");
                MultiColumnComboBoxUtilities.b.setStyleProperty("white-space", "nowrap");
                MultiColumnComboBoxUtilities.b.setStyleProperty("position", "absolute");
            }
            if (null != c) {
                MultiColumnComboBoxUtilities.b.setStyleProperty("font", c.fontString);
            }
            else {
                MultiColumnComboBoxUtilities.b.setStyleProperty("font", igniteuiReactCore.stringEmpty());
            }
            var d = MultiColumnComboBoxUtilities.b.getNativeElement();
            document.body.appendChild(d);
            MultiColumnComboBoxUtilities.b.setRawText(b);
            var e = MultiColumnComboBoxUtilities.b.outerWidth();
            var f = MultiColumnComboBoxUtilities.b.outerHeight();
            document.body.removeChild(d);
            return new igniteuiReactCore.Size(1, e, f);
        };
        MultiColumnComboBoxUtilities.$t = igniteuiReactCore.markType(MultiColumnComboBoxUtilities, 'MultiColumnComboBoxUtilities');
        MultiColumnComboBoxUtilities.b = null;
        return MultiColumnComboBoxUtilities;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates what should occur on a header click event.
     */
    var SortMode = /*@__PURE__*/ (function (SortMode) {
        /**
         * Sorting by one column is permitted and toggles between ascending and descending.
         */
        SortMode[SortMode["SortByOneColumnOnly"] = 0] = "SortByOneColumnOnly";
        /**
         * Sorting by multiple columns is permitted and each toggle between ascending and descending.
         */
        SortMode[SortMode["SortByMultipleColumns"] = 1] = "SortByMultipleColumns";
        /**
         * Sorting by one column is permitted and toggles between ascending, descending and unsorted.
         */
        SortMode[SortMode["SortByOneColumnOnlyTriState"] = 2] = "SortByOneColumnOnlyTriState";
        /**
         * Sorting by multiple columns is permitted and toggles between ascending, descending and unsorted.
         */
        SortMode[SortMode["SortByMultipleColumnsTriState"] = 3] = "SortByMultipleColumnsTriState";
        /**
         * No action is triggered.
         */
        SortMode[SortMode["None"] = 4] = "None";
        return SortMode;
    })({});
    /**
     * @hidden
     */
    var SortMode_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SortMode', 'SortByOneColumnOnly,0|SortByMultipleColumns,1|SortByOneColumnOnlyTriState,2|SortByMultipleColumnsTriState,3|None,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MultipleDataSourceNotifier = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultipleDataSourceNotifier, _super);
        function MultipleDataSourceNotifier(a) {
            var _rest = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                _rest[_i - 1] = arguments[_i];
            }
            var _this = _super.call(this) || this;
            _this.a = null;
            a = (a == void 0) ? 0 : a;
            switch (a) {
                case 0: break;
                case 1:
                    {
                        var c = _rest[0];
                        _this.b.o(c);
                    }
                    break;
            }
            return _this;
        }
        Object.defineProperty(MultipleDataSourceNotifier.prototype, "b", {
            get: function () {
                if (null == this.a) {
                    this.a = new igniteuiReactCore.List$1(igniteuiReactCore.IDataSourceUpdateNotifier_$type, 0);
                }
                return this.a;
            },
            enumerable: true,
            configurable: true
        });
        MultipleDataSourceNotifier.prototype.c = function (a) {
            this.b.add(a);
        };
        MultipleDataSourceNotifier.prototype.d = function (a) {
            for (var b = 0; b < this.b.count; b++) {
                a(this.b._inner[b]);
            }
        };
        MultipleDataSourceNotifier.prototype.notifyClearItems = function () {
            this.d(function (a) { return a.notifyClearItems(); });
        };
        MultipleDataSourceNotifier.prototype.notifyInsertItem = function (a, b) {
            this.d(function (c) { return c.notifyInsertItem(a, b); });
        };
        MultipleDataSourceNotifier.prototype.notifyRemoveItem = function (a, b) {
            this.d(function (c) { return c.notifyRemoveItem(a, b); });
        };
        MultipleDataSourceNotifier.prototype.notifySetItem = function (a, b, c) {
            this.d(function (d) { return d.notifySetItem(a, b, c); });
        };
        MultipleDataSourceNotifier.prototype.rangeActualized = function (a, b) {
            this.d(function (c) { return c.rangeActualized(a, b); });
        };
        MultipleDataSourceNotifier.$t = igniteuiReactCore.markType(MultipleDataSourceNotifier, 'MultipleDataSourceNotifier', igniteuiReactCore.Base.$, [igniteuiReactCore.IDataSourceUpdateNotifier_$type]);
        return MultipleDataSourceNotifier;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MultiColumnComboBoxTextChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultiColumnComboBoxTextChangedEventArgs, _super);
        function MultiColumnComboBoxTextChangedEventArgs(a, b) {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this.b = null;
            _this.d = a;
            _this.b = b;
            return _this;
        }
        Object.defineProperty(MultiColumnComboBoxTextChangedEventArgs.prototype, "oldText", {
            get: function () {
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBoxTextChangedEventArgs.prototype, "newText", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        MultiColumnComboBoxTextChangedEventArgs.$t = igniteuiReactCore.markType(MultiColumnComboBoxTextChangedEventArgs, 'MultiColumnComboBoxTextChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return MultiColumnComboBoxTextChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MultiColumnComboBoxValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultiColumnComboBoxValueChangedEventArgs, _super);
        function MultiColumnComboBoxValueChangedEventArgs(a, b) {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this.b = null;
            _this.d = a;
            _this.b = b;
            return _this;
        }
        Object.defineProperty(MultiColumnComboBoxValueChangedEventArgs.prototype, "oldValue", {
            get: function () {
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBoxValueChangedEventArgs.prototype, "newValue", {
            get: function () {
                return this.b;
            },
            enumerable: true,
            configurable: true
        });
        MultiColumnComboBoxValueChangedEventArgs.$t = igniteuiReactCore.markType(MultiColumnComboBoxValueChangedEventArgs, 'MultiColumnComboBoxValueChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return MultiColumnComboBoxValueChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MultiColumnComboVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultiColumnComboVisualModelExport, _super);
        function MultiColumnComboVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.j = 0;
            _this.b = null;
            _this.p = 0;
            _this._columnHeadersVisible = false;
            _this.au = null;
            _this.at = null;
            _this.k = 0;
            _this._dropDownButtonVisible = false;
            _this.q = 0;
            _this.aa = null;
            _this.c = null;
            _this.ad = null;
            _this.ae = null;
            _this.af = null;
            _this.v = 0;
            _this.ab = null;
            _this.ac = null;
            _this._actualLabelVisible = false;
            _this._actualNoMatchesFoundLabel = null;
            _this.d = null;
            _this.e = null;
            _this.ai = null;
            _this.aj = null;
            _this.ak = null;
            _this.w = 0;
            _this.ag = null;
            _this.ah = null;
            _this.al = null;
            _this._rowSeparatorsVisible = false;
            _this.f = null;
            _this.aq = null;
            _this.ar = null;
            _this.as = null;
            _this.x = 0;
            _this.ao = null;
            _this.ap = null;
            _this.g = null;
            _this.r = 0;
            _this.h = null;
            _this.s = 0;
            _this.t = 0;
            _this.u = 0;
            _this.an = null;
            _this.i = null;
            _this.y = null;
            return _this;
        }
        Object.defineProperty(MultiColumnComboVisualModelExport.prototype, "columnHeadersVisible", {
            get: function () {
                return this._columnHeadersVisible;
            },
            set: function (a) {
                this._columnHeadersVisible = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboVisualModelExport.prototype, "dropDownButtonVisible", {
            get: function () {
                return this._dropDownButtonVisible;
            },
            set: function (a) {
                this._dropDownButtonVisible = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboVisualModelExport.prototype, "actualLabelVisible", {
            get: function () {
                return this._actualLabelVisible;
            },
            set: function (a) {
                this._actualLabelVisible = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboVisualModelExport.prototype, "actualNoMatchesFoundLabel", {
            get: function () {
                return this._actualNoMatchesFoundLabel;
            },
            set: function (a) {
                this._actualNoMatchesFoundLabel = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboVisualModelExport.prototype, "rowSeparatorsVisible", {
            get: function () {
                return this._rowSeparatorsVisible;
            },
            set: function (a) {
                this._rowSeparatorsVisible = a;
            },
            enumerable: true,
            configurable: true
        });
        MultiColumnComboVisualModelExport.prototype.am = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("actualBackgroundColor : " + this.a.serialize() + ", ");
            a.l("actualBaseTheme : " + this.j + ", ");
            a.l("actualBorderColor : " + this.b.serialize() + ", ");
            a.l("actualBorderWidth : " + this.p + ", ");
            a.l("columnHeadersVisible : " + this.columnHeadersVisible + ", ");
            a.l("actualContentPadding : { left: " + this.au.c + ",top: " + this.au.e + ",right: " + this.au.d + ",bottom: " + this.au.b + "},");
            a.l("actualDensity : " + this.k + ", ");
            a.l("dropDownButtonVisible : " + this.dropDownButtonVisible + ", ");
            a.l("actualFocusUnderlineOpacity : " + this.q + ", ");
            a.l("label : \"" + this.aa + "\", ");
            a.l("actualLabelTextColor : " + this.c.serialize() + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ad)) {
                a.l("labelFontStyle : \"" + this.ad + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ae)) {
                a.l("labelFontVariant : \"" + this.ae + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.af)) {
                a.l("labelFontWeight : \"" + this.af + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ab)) {
                a.l("labelFontFamily : \"" + this.ab + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ac)) {
                a.l("labelFontStretch : \"" + this.ac + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.v)) {
                a.l("labelFontSize : " + this.v + ", ");
            }
            a.l("actualLabelVisible : " + this.actualLabelVisible + ", ");
            a.l("actualNoMatchesFoundLabel :\"" + this.actualNoMatchesFoundLabel + "\", ");
            a.l("actualNoMatchesFoundLabelBackgroundColor : " + this.d.serialize() + ", ");
            a.l("actualNoMatchesFoundLabelTextColor : " + this.e.serialize() + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ai)) {
                a.l("noMatchesFoundLabelFontStyle : \"" + this.ai + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.aj)) {
                a.l("noMatchesFoundLabelFontVariant : \"" + this.aj + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ak)) {
                a.l("noMatchesFoundLabelFontWeight : \"" + this.ak + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ag)) {
                a.l("noMatchesFoundLabelFontFamily : \"" + this.ag + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ah)) {
                a.l("noMatchesFoundLabelFontStretch : \"" + this.ah + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.w)) {
                a.l("noMatchesFoundLabelFontSize : " + this.w + ", ");
            }
            a.l("placeholder : \"" + this.al + "\", ");
            a.l("rowSeparatorsVisible : " + this.rowSeparatorsVisible + ", ");
            a.l("actualTextColor : " + this.f.serialize() + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.aq)) {
                a.l("textStyleFontStyle : \"" + this.aq + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ar)) {
                a.l("textStyleFontVariant : \"" + this.ar + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.as)) {
                a.l("textStyleFontWeight : \"" + this.as + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ao)) {
                a.l("textStyleFontFamily : \"" + this.ao + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ap)) {
                a.l("textStyleFontStretch : \"" + this.ap + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.x)) {
                a.l("textStyleFontSize : " + this.x + ", ");
            }
            a.l("actualUnderlineColor : " + this.g.serialize() + ", ");
            a.l("actualUnderlineOpacity : " + this.r + ", ");
            a.l("actualUnderlineRippleColor : " + this.h.serialize() + ", ");
            a.l("actualUnderlineRippleOpacity : " + this.s + ", ");
            a.l("actualUnderlineRippleWidth : " + this.t + ", ");
            a.l("actualUnderlineWidth : " + this.u + ", ");
            a.l("text : \"" + this.an + "\", ");
            if (this.y != null) {
                a.l("value : \"" + this.y.toString() + "\", ");
            }
            a.l("Grid : " + this.i.av());
            a.l("}");
            return a.toString();
        };
        MultiColumnComboVisualModelExport.$t = igniteuiReactCore.markType(MultiColumnComboVisualModelExport, 'MultiColumnComboVisualModelExport');
        return MultiColumnComboVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MultiColumnComboBoxView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultiColumnComboBoxView, _super);
        function MultiColumnComboBoxView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.ac = null;
            _this.ak = null;
            _this.f = null;
            _this.ai = null;
            _this.k = null;
            _this.ah = null;
            _this.j = null;
            _this.aj = null;
            _this.l = null;
            _this.h = null;
            _this.ae = null;
            _this.i = null;
            _this.af = null;
            _this.m = null;
            _this.ag = null;
            _this.d = null;
            _this.aq = null;
            _this.ab = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.au = null;
            _this.aa = true;
            _this.ap = 0;
            _this.x = false;
            _this.a = null;
            _this.c = 0;
            _this.w = false;
            _this.s = false;
            _this.r = false;
            _this.p = false;
            _this.an = null;
            _this.am = null;
            _this.v = false;
            _this.ao = -1;
            _this.z = false;
            _this.t = false;
            return _this;
        }
        Object.defineProperty(MultiColumnComboBoxView.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBoxView.prototype, "y", {
            get: function () {
                return this.ap == 46;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBoxView.prototype, "n", {
            get: function () {
                return this.m;
            },
            enumerable: true,
            configurable: true
        });
        MultiColumnComboBoxView.prototype.bf = function (a) {
            this.ak = a;
            this.b1();
        };
        MultiColumnComboBoxView.prototype.bg = function (a) {
            this.f = a;
        };
        MultiColumnComboBoxView.prototype.bp = function () {
        };
        MultiColumnComboBoxView.prototype.b1 = function () {
            this.ag = this.ac.createElement("div");
            this.cr();
            this.a1();
            this.a0();
            this.ak.append(this.ai);
            this.ck();
            this.cl();
            document.addEventListener("click", igniteuiReactCore.runOn(this, this.a2), false);
            window.addEventListener("resize", igniteuiReactCore.runOn(this, this.cx), false);
        };
        MultiColumnComboBoxView.prototype.aw = function (a) {
            var b = this.g.n();
            if (null == b) {
                return;
            }
            this.p = false;
            if (b.eo != a) {
                b.eo = a;
                this.p = true;
            }
            else {
                this.a3();
            }
        };
        MultiColumnComboBoxView.prototype.ay = function () {
            var a = this.e;
            a.cw = null;
        };
        MultiColumnComboBoxView.prototype.az = function () {
            var a = this.n;
            if (null != a) {
                a.an();
            }
            this.cl();
            var b = this.g.n();
            if (null != b) {
                var c = b.eo;
                if (null != c) {
                    b.eo = null;
                }
            }
        };
        MultiColumnComboBoxView.prototype.u = function (a) {
            if (null == a) {
                return false;
            }
            var b = this.ai.getNativeElement();
            var c = this.ag.getNativeElement();
            var d = this.am.getNativeElement();
            return b.contains(a) || c.contains(a) || d.contains(a);
        };
        MultiColumnComboBoxView.prototype.a0 = function () {
            var a = this.ad;
            var b = this.g;
            this.ai = a.createElement("div");
            this.ai.setStyleProperty("display", "flex");
            this.ai.setStyleProperty("height", "100%");
            this.ai.setAttribute("tabIndex", "0");
            this.ai.setAttribute("outline", "none !important");
            this.ai.listen("focusin", igniteuiReactCore.runOn(this, this.bm));
            this.ai.listen("focusout", igniteuiReactCore.runOn(this, this.bn));
            var c = a.getSubRenderer(this.ai);
            this.k = new igniteuiReactInputs.InputGroup();
            this.k.provideContainer(c);
            this.k.k = 2;
            this.aj = a.createElement("div");
            var d = a.getSubRenderer(this.aj);
            this.l = new igniteuiReactInputs.Label();
            this.l.provideContainer(d);
            if (this.f.actualLabelVisible) {
                this.cu();
            }
            this.ah = a.createElement("div");
            this.ah.addClass("ig-input");
            this.ah.setRawStyleProperty("flex-grow", "1");
            var e = a.getSubRenderer(this.ah);
            this.j = new igniteuiReactInputs.Input();
            this.j.provideContainer(e);
            a.getExternal(this.j, a.rootWrapper, a.getExternal(b, null, null));
            this.j.b0 = "text";
            this.j.cf = b.e5;
            var f = this.j;
            f.changing = igniteuiReactCore.delegateCombine(f.changing, igniteuiReactCore.runOn(this, this.bh));
            var g = this.j;
            g.compositionEnd = igniteuiReactCore.delegateCombine(g.compositionEnd, igniteuiReactCore.runOn(this, this.bi));
            var h = this.j;
            h.keyDown = igniteuiReactCore.delegateCombine(h.keyDown, igniteuiReactCore.runOn(this, this.bk));
            var i = this.j;
            i.gotFocus = igniteuiReactCore.delegateCombine(i.gotFocus, igniteuiReactCore.runOn(this, this.bj));
            var j = this.j;
            j.mouseDown = igniteuiReactCore.delegateCombine(j.mouseDown, igniteuiReactCore.runOn(this, this.bl));
            this.k.appendContentChild(this.ah);
            this.k.inputs.add(this.j);
            this.a5(this.g.a2);
            var k = a.createElement("div");
            var l = a.getSubRenderer(k);
            var m = new igniteuiReactInputs.Suffix();
            m.provideContainer(l);
            this.ae = a.createElement("div");
            this.h = new igniteuiReactInputs.Icon();
            var n = a.getSubRenderer(this.ae);
            this.h.provideContainer(n);
            this.h.svgPath = MultiColumnComboBoxView.ar;
            this.ae.setStyleProperty("height", "16px");
            this.ae.setStyleProperty("width", "16px");
            m.appendContentChild(this.ae);
            this.k.appendContentChild(k);
            this.k.inputs.add(m);
            this.ch();
            var o = a.createElement("div");
            var p = a.getSubRenderer(o);
            var q = new igniteuiReactInputs.Suffix();
            q.provideContainer(p);
            this.af = a.createElement("div");
            this.i = new igniteuiReactInputs.Icon();
            var r = a.getSubRenderer(this.af);
            this.i.provideContainer(r);
            this.i.svgPath = MultiColumnComboBoxView.at;
            q.appendContentChild(this.af);
            this.k.appendContentChild(o);
            this.k.inputs.add(q);
            this.ae.listen("click", igniteuiReactCore.runOn(this, this.ax));
            this.af.listen("click", igniteuiReactCore.runOn(this, this.a4));
        };
        MultiColumnComboBoxView.prototype.a1 = function () {
            var a = this.ac.createElement("div");
            var b = this.ac.getSubRenderer(a);
            this.m = new igniteuiReactLayouts.Popup();
            this.m.provideRenderer(b);
            this.am = this.ac.createElement("div");
            this.am.setStyleProperty("padding", "4px");
            this.am.setStyleProperty("white-space", "nowrap");
            this.an = this.ac.createElement("div");
            this.an.append(this.am);
            this.an.append(this.ag);
            this.m.appendPopupContent(this.an);
        };
        MultiColumnComboBoxView.prototype.bt = function (a, b) {
        };
        MultiColumnComboBoxView.prototype.bw = function (a, b, c) {
        };
        MultiColumnComboBoxView.prototype.bs = function () {
            switch (this.c) {
                case 2:
                case 1:
                    if (null == this.a) {
                        this.c = 0;
                    }
                    break;
            }
            var a = null;
            switch (this.c) {
                case 2:
                    {
                        var b = this.a.actualCount;
                        if (b == 0) {
                            this.g.cv = null;
                        }
                        else {
                            if (b > 1) {
                            }
                            a = this.a.getItemAtIndex(0);
                            var c = this.g.i();
                            var d = new igniteuiReactCore.List$1(igniteuiReactCore.Base.$, 0);
                            for (var f = 0; f < c.length; f++) {
                                var e = c[f];
                                var g = this.a.getItemProperty(a, e);
                                d.add1(g);
                            }
                            this.g.cv = d.count == 1 ? d._inner[0] : d.toArray();
                        }
                    }
                    break;
                case 1:
                    {
                        var h = this.a.actualCount;
                        if (h == 0) {
                            this.g.e5 = igniteuiReactCore.stringEmpty();
                        }
                        else {
                            if (h > 1) {
                            }
                            var i = this.g.ej();
                            a = this.a.getItemAtIndex(0);
                            var j = this.a.getItemProperty(a, i).toString();
                            this.g.e5 = j;
                        }
                        var k = this.b();
                        var l = k.indexOfItem(a);
                        this.cg(l);
                    }
                    break;
                case 0:
                default: return;
            }
            if (null != a) {
                var m = this.b();
                var n = m.indexOfItem(a);
                this.cg(n);
            }
            else {
                this.cg(-1);
            }
            if (this.a != null) {
                this.a.updateNotifier = null;
                this.a = null;
            }
            this.c = 0;
        };
        MultiColumnComboBoxView.prototype.bu = function (a, b) {
        };
        MultiColumnComboBoxView.prototype.bv = function (a, b) {
        };
        MultiColumnComboBoxView.prototype.bz = function (a, b) {
            var c = this.e;
            if (null != c) {
                var d = c.cw;
                if (null != d) {
                    if (d.b >= a && d.b <= b) {
                        this.ce(d.b);
                        this.cs();
                    }
                }
            }
        };
        MultiColumnComboBoxView.prototype.b4 = function (a, b, c) {
        };
        MultiColumnComboBoxView.prototype.br = function () {
            this.b7();
            if (this.w) {
                var a = this.b();
                var b = a.actualCount;
                if (this.aa && b > 0) {
                    this.b9();
                }
                else {
                    this.ca();
                }
            }
            else {
                this.cq();
            }
        };
        MultiColumnComboBoxView.prototype.b0 = function (a, b) {
        };
        MultiColumnComboBoxView.prototype.b2 = function (a, b) {
        };
        MultiColumnComboBoxView.prototype.o = function () {
            var a = document.activeElement;
            return this.u(a);
        };
        MultiColumnComboBoxView.prototype.a3 = function () {
            this.cv();
            this.bo();
            var a = this.n;
            if (a.t) {
                return;
            }
            var b = this.cy();
            a.q = !this.w;
            a.showRelativeToExclusionRect(b, 1, 1);
            this.cl();
        };
        MultiColumnComboBoxView.prototype.cy = function () {
            var a = this.ac.rootWrapper.getNativeElement();
            var b = (a.getBoundingClientRect());
            return new igniteuiReactCore.Rect(0, b.left + window.pageXOffset, b.top + window.pageYOffset, b.width, b.height);
        };
        MultiColumnComboBoxView.prototype.b = function () {
            var a = this.e;
            if (null != a) {
                return a.actualDataSource;
            }
            return null;
        };
        MultiColumnComboBoxView.prototype.q = function (a) {
            var b = this.d.ad;
            var c = b.count;
            if (0 == c) {
                a = null;
                return {
                    ret: true,
                    p0: a
                };
            }
            else if (1 == c) {
                a = b._inner[0];
            }
            else {
                a = b._inner[0];
            }
            return {
                ret: null != a,
                p0: a
            };
        };
        MultiColumnComboBoxView.prototype.a8 = function (a) {
            var b = null != a ? a.b : -1;
            this.ce(b);
        };
        MultiColumnComboBoxView.prototype.bc = function () {
            var _this = this;
            if (this.v) {
                return;
            }
            var a = this.g;
            var b;
            var c = ((function () { var d = _this.q(b); b = d.p0; return d.ret; })());
            if (!c) {
                return;
            }
            if (b == null) {
                return;
            }
            a.fr(b);
        };
        MultiColumnComboBoxView.prototype.bo = function () {
            this.n.aq();
        };
        MultiColumnComboBoxView.prototype.bq = function () {
            var a = this.n;
            if (a.t) {
                this.az();
                var b = this.j;
                b.ck();
                var c = b.cf;
                var d = null != c ? b.cf.length : 0;
                b.dd(d, d);
            }
        };
        MultiColumnComboBoxView.prototype.bx = function () {
            this.k.ah = true;
            this.j.db();
            var a = new GotFocusEventArgs();
            this.g.fo(a);
        };
        MultiColumnComboBoxView.prototype.by = function () {
            this.az();
            this.k.mj();
            var a = new LostFocusEventArgs();
            this.g.fp(a);
        };
        MultiColumnComboBoxView.prototype.b3 = function (a) {
            var e_1, _a;
            if (a == null) {
                this.ac = null;
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.ab)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.ab.clear();
                return;
            }
            this.ac = a;
            var c = a.rootWrapper;
            this.bf(c);
        };
        MultiColumnComboBoxView.prototype.b5 = function (a, b) {
            var c = this.b();
            if (null == c) {
                return;
            }
            if (null != this.a) {
                if (a != this.c) {
                }
                this.a.updateNotifier = null;
                this.a = null;
            }
            this.c = a;
            var d = new igniteuiReactCore.FilterFactory();
            var e = null;
            var f = null;
            switch (a) {
                case 2:
                    {
                        var g = this.g.ej();
                        if (igniteuiReactCore.stringIsNullOrEmpty(g)) {
                            return;
                        }
                        e = b.toString();
                        var h = d.property(g);
                        f = h.isEqualTo(e);
                    }
                    break;
                case 1:
                    {
                        var i = this.g.i();
                        if (i == null || i.length < 1) {
                            return;
                        }
                        var j = igniteuiReactCore.typeCast(igniteuiReactCore.Array_$type, b) !== null ? b : [b];
                        if (i.length != j.length) {
                            return;
                        }
                        for (var k = 0; k < i.length; k++) {
                            var l = i[k];
                            e = j[k];
                            var m = d.property(l);
                            var n = m.isEqualTo(e);
                            if (null == f) {
                                f = n;
                            }
                            else {
                                f.and(n);
                            }
                        }
                    }
                    break;
                case 0:
                default: return;
            }
            this.a = c.clone();
            this.a.filterExpressions.clear();
            this.a.updateNotifier = new MultiColumnComboBoxDataSourceNotificationHandler(this, true);
            this.a.filterExpressions.add(f);
            if (!this.a.isVirtual) {
                this.a.flushAutoRefresh();
            }
        };
        MultiColumnComboBoxView.prototype.b6 = function () {
            this.co();
            var a = this.f.e5;
            var b = this.au.length;
            var c = !igniteuiReactCore.stringIsNullOrEmpty(a) ? a.length : 0;
            if (this.x && !igniteuiReactCore.stringIsNullOrEmpty(this.au) && b > 0) {
                b--;
            }
            this.j.dd(b, c);
        };
        MultiColumnComboBoxView.prototype.b7 = function () {
            if (this.p) {
                this.p = false;
                this.a3();
            }
        };
        MultiColumnComboBoxView.prototype.b8 = function (a) {
            this.au = a;
            this.aa = !this.y;
            this.cb();
            this.ch();
        };
        MultiColumnComboBoxView.prototype.b9 = function () {
            if (igniteuiReactCore.stringIsNullOrEmpty(this.au)) {
                this.ay();
            }
            else {
                this.cg(0);
            }
            this.b6();
            this.w = false;
        };
        MultiColumnComboBoxView.prototype.ch = function () {
            if (this.ae != null && this.j != null) {
                if (this.g.a9 == false) {
                    this.ae.setStyleProperty("display", "none");
                }
                else if ((this.g.cv != null && this.g.cv != "") || (this.j.cf != null && this.j.cf != "")) {
                    this.ae.show();
                }
                else {
                    this.ae.setStyleProperty("display", "none");
                }
            }
        };
        MultiColumnComboBoxView.prototype.a5 = function (a) {
            if (this.j != null) {
                this.j.disabled = !a;
            }
        };
        MultiColumnComboBoxView.prototype.ca = function () {
            var a = this.d;
            a.selectedItemsChanged = igniteuiReactCore.delegateRemove(a.selectedItemsChanged, igniteuiReactCore.runOn(this, this.bd));
            this.v = true;
            try {
                this.g.fy(this.au);
            }
            finally {
                this.v = false;
                var b = this.d;
                b.selectedItemsChanged = igniteuiReactCore.delegateCombine(b.selectedItemsChanged, igniteuiReactCore.runOn(this, this.bd));
            }
            this.w = false;
        };
        MultiColumnComboBoxView.prototype.cb = function () {
            var a = this.g.n();
            if (null == a) {
                return;
            }
            this.w = true;
            if (igniteuiReactCore.stringIsNullOrEmpty(this.au)) {
                if (null != a.eo) {
                    this.aw(null);
                }
                else {
                    this.ca();
                }
            }
            else {
                var b = new ColumnComparisonFilterCondition();
                b.e = 11;
                b.j = this.au;
                b.g = false;
                this.aw(b);
            }
        };
        MultiColumnComboBoxView.prototype.cc = function () {
            this.ap = 0;
            this.x = false;
        };
        MultiColumnComboBoxView.prototype.ce = function (a) {
            var b = this.b();
            var c = b.isPlaceholderItem(a);
            if (c) {
            }
            else {
                var d = this.e;
                if (a < 0) {
                    this.s = false;
                    d.ad.clear();
                    if (!this.s) {
                        this.bc();
                    }
                    return;
                }
                d.selectedItemsChanged = igniteuiReactCore.delegateRemove(d.selectedItemsChanged, igniteuiReactCore.runOn(this, this.bd));
                try {
                    d.ad.clear();
                }
                finally {
                    d.selectedItemsChanged = igniteuiReactCore.delegateCombine(d.selectedItemsChanged, igniteuiReactCore.runOn(this, this.bd));
                }
                if (a >= 0) {
                    var e = b.getItemAtIndex(a);
                    this.s = false;
                    d.ad.add1(e);
                    if (!this.s) {
                        this.bc();
                    }
                }
            }
        };
        MultiColumnComboBoxView.prototype.cg = function (a) {
            var b = this.e;
            if (-1 == a) {
                b.cw = null;
                return;
            }
            var c = b.cw;
            var d = new GridCellPosition();
            var e;
            if (null != c) {
                e = c.d;
            }
            else {
                if (b.actualColumns.count == 0) {
                    this.ao = a;
                    return;
                }
                var f = this.g;
                var g = this.g.n();
                e = g.h0();
            }
            d.d = e;
            d.b = a;
            this.r = false;
            b.cw = d;
            if (!this.r) {
                this.a8(b.cw);
            }
            this.cs();
        };
        MultiColumnComboBoxView.prototype.cj = function (a) {
            this.b5(2, a);
        };
        MultiColumnComboBoxView.prototype.ci = function (a) {
            this.b5(1, a);
        };
        MultiColumnComboBoxView.prototype.ck = function () {
            var a = this.g;
            if (null != this.k) {
                this.k.h = a.density;
                this.k.d = a.z;
                this.k.oy = a.gt;
                this.k.oz = a.gu;
                this.k.cu = a.bu;
                this.k.tj = a.hs;
                this.k.m3 = a.f4;
                this.k.h = a.ae;
                this.k.sq = a.gv;
                this.k.hc = a.bv;
                this.k.sr = a.gw;
                this.k.hd = a.bw;
                this.k.he = a.bx;
                this.k.ss = a.gx;
                this.k.hf = a.by;
                this.k.hg = a.bz;
                this.k.s7 = a.g2;
                this.k.h1 = a.b0;
                this.k.s8 = a.g3;
                this.k.h2 = a.b1;
                this.k.h3 = a.b2;
                this.k.h4 = a.b3;
            }
            if (null != this.j) {
                this.j.dt = a.g1;
                this.j.ac = a.ap;
                this.j.b7 = a.ez;
            }
            if (null != this.l) {
                this.l.text = a.eo;
                this.l.dc = a.gy;
                this.l.y = a.an;
            }
            if (null != this.am) {
                igniteuiReactCore.NativeUI.n(this.am, a.g0);
                igniteuiReactCore.NativeUI.j(this.am, a.gz);
                if (null != a.ao) {
                    this.am.setStyleProperty("font", a.ao.fontString);
                }
                this.am.setRawText(a.actualNoMatchesFoundLabel);
                this.bo();
            }
            if (null != this.d) {
                this.d.fg = a.density;
                var b = a.columnHeadersVisible;
                this.d.k6 = b ? -1 : 0;
                this.d.lg = a.rowSeparatorsVisible ? 1 : 0;
            }
            if (null != this.af) {
                var c = a.dropDownButtonVisible;
                MultiColumnComboBoxUtilities.c(this.af, c);
            }
        };
        MultiColumnComboBoxView.prototype.co = function () {
            if (!this.v) {
                if (null != this.j) {
                    var a = this.f.e5;
                    this.j.cf = a;
                }
            }
        };
        MultiColumnComboBoxView.prototype.cl = function () {
            var a = this.n;
            var b = null != a ? a.t : false;
            this.i.svgPath = b ? MultiColumnComboBoxView.as : MultiColumnComboBoxView.at;
        };
        MultiColumnComboBoxView.prototype.cn = function () {
            var e_2, _a;
            var a = this.d.kk + 3;
            var b = this.d.kl + this.d.lg;
            var c = this.d.actualDataSource;
            var d = null != c ? c.actualCount : 0;
            if (d > 8) {
                d = 8;
            }
            var e = d * b;
            e += a;
            var f = igniteuiReactCore.stringFormat("{0}px", e);
            this.ag.setStyleProperty("height", f);
            var g = 0;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.d.actualColumns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var h = _c.value;
                    var i = h.width;
                    g += null != i ? i.f : 100;
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            g += 2;
            var j = igniteuiReactCore.stringFormat("{0}px", g);
            this.ag.setStyleProperty("width", j);
            if (null != this.am) {
                var k = this.g;
                var l = MultiColumnComboBoxUtilities.e(this.ad, k.actualNoMatchesFoundLabel, k.an);
                var m = l.width;
                var n = l.height;
                var o = igniteuiReactCore.stringFormat("{0}px", m);
                var p = igniteuiReactCore.stringFormat("{0}px", n);
                this.am.setStyleProperty("width", o);
                this.am.setStyleProperty("height", p);
            }
        };
        MultiColumnComboBoxView.prototype.cp = function () {
            if (this.w) {
                return;
            }
            this.au = null;
            var a = this.g.n();
            if (null != a) {
                var b = a.eo;
                if (null != b) {
                    a.eo = null;
                }
                else {
                    this.cq();
                }
            }
        };
        MultiColumnComboBoxView.prototype.cq = function () {
            var a = this.g;
            if (null != a.cv) {
                var b = this.g.cv;
                var c = igniteuiReactCore.typeCast(igniteuiReactCore.Array_$type, b) !== null ? b : [b];
                var d = this.b();
                var e = d.indexOfKey(c);
                if (-1 != e) {
                    this.cg(e);
                }
            }
        };
        MultiColumnComboBoxView.prototype.cr = function () {
            var _this = this;
            if (null == this.d) {
                this.ac.getPortal(this.ag, "DataGrid", function (a) {
                    _this.aq = a.componentRef;
                    _this.aq.height = '100%';
                    _this.aq.width = '100%';
                    _this.d = (_this.aq.i);
                    _this.ct();
                    _this.d.dt = 1;
                    _this.d.dr = 0;
                    _this.d.ch = 1;
                    _this.cm();
                    _this.d.cf = 0;
                    _this.d.hn = false;
                    _this.d.he = false;
                    _this.d.ts = new igniteuiReactCore.CornerRadius(0, 0);
                    _this.d.g1 = false;
                    var b = _this.d;
                    b.activeCellChanged = igniteuiReactCore.delegateCombine(b.activeCellChanged, igniteuiReactCore.runOn(_this, _this.a7));
                    var c = _this.d;
                    c.selectedItemsChanged = igniteuiReactCore.delegateCombine(c.selectedItemsChanged, igniteuiReactCore.runOn(_this, _this.bd));
                    var d = _this.d;
                    d.cellClicked = igniteuiReactCore.delegateCombine(d.cellClicked, igniteuiReactCore.runOn(_this, _this.ba));
                    var e = _this.d;
                    e.sizeChanged = igniteuiReactCore.delegateCombine(e.sizeChanged, igniteuiReactCore.runOn(_this, _this.be));
                    var f = _this.d;
                    f.actualColumnsChanged = igniteuiReactCore.delegateCombine(f.actualColumnsChanged, igniteuiReactCore.runOn(_this, _this.a9));
                    var g = _this.d;
                    g.columnWidthChanged = igniteuiReactCore.delegateCombine(g.columnWidthChanged, igniteuiReactCore.runOn(_this, _this.bb));
                    _this.ck();
                }, false);
            }
        };
        MultiColumnComboBoxView.prototype.cm = function () {
            if (this.d != null) {
                var a = 0;
                switch (this.f.v) {
                    case 0:
                        a = 0;
                        break;
                    case 1:
                        a = 1;
                        break;
                    case 2:
                        a = 2;
                        break;
                    case 3:
                        a = 3;
                        break;
                    case 4:
                        a = 4;
                        break;
                }
                this.d.d0 = a;
            }
        };
        MultiColumnComboBoxView.prototype.cs = function () {
            if (!this.t) {
                return;
            }
            var a = this.d;
            var b = a.cw;
            if (null != b) {
                var c = this.b();
                if (null != c) {
                    var d = c.getItemAtIndex(b.b);
                    if (null == d) {
                        return;
                    }
                    a.it(d);
                }
            }
            else {
                a.s2(0);
            }
        };
        MultiColumnComboBoxView.prototype.ct = function () {
            if (null != this.aq) {
                var a = this.g;
                var b = a.itemsSource;
                this.d.ad.clear();
                if (this.d.actualDataSource != null) {
                    var c = this.d.actualDataSource;
                    c.schemaChanged = igniteuiReactCore.delegateRemove(c.schemaChanged, igniteuiReactCore.runOn(this, this.av));
                }
                this.aq.dataSource = b;
                this.aq.autoGenerateDesiredProperties = a.g;
                this.d.l = a.i();
                this.ao = -1;
                var d = this.b();
                if (null != d) {
                    var e = d.updateNotifier;
                    var f = new MultiColumnComboBoxDataSourceNotificationHandler(this, false);
                    var g = new MultipleDataSourceNotifier(1, [e, f]);
                    d.updateNotifier = g;
                    d.propertiesRequested = a.f;
                    d.schemaChanged = igniteuiReactCore.delegateCombine(d.schemaChanged, igniteuiReactCore.runOn(this, this.av));
                    if (this.g.cv != null) {
                        this.b5(1, this.g.cv);
                    }
                }
                this.a = null;
            }
        };
        MultiColumnComboBoxView.prototype.av = function (a, b) {
            if (this.ao != -1) {
                this.cg(this.ao);
                this.ao = -1;
            }
        };
        MultiColumnComboBoxView.prototype.cu = function () {
            if (null != this.aj) {
                var a = this.f.actualLabelVisible;
                if (a) {
                    this.k.appendContentChild(this.aj);
                    this.k.inputs.add(this.l);
                }
                else {
                    this.k.mi(this.aj);
                    this.k.inputs.remove(this.l);
                }
            }
        };
        MultiColumnComboBoxView.prototype.cf = function (a) {
            if (this.j != null) {
                this.j.disabled = !a;
            }
            if (this.k != null) {
                this.k.disabled = !a;
            }
        };
        MultiColumnComboBoxView.prototype.cv = function () {
            this.cn();
            if (!this.w) {
                this.z = false;
            }
            else {
                var a = this.b();
                this.z = a.actualCount == 0;
            }
            MultiColumnComboBoxUtilities.c(this.am, this.z);
            MultiColumnComboBoxUtilities.c(this.ag, !this.z);
        };
        MultiColumnComboBoxView.prototype.a6 = function () {
            if (this.j != null) {
                this.j.ck();
            }
        };
        MultiColumnComboBoxView.prototype.cd = function () {
            if (this.j != null) {
                this.j.db();
            }
        };
        Object.defineProperty(MultiColumnComboBoxView.prototype, "al", {
            get: function () {
                return this.ak;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBoxView.prototype, "g", {
            get: function () {
                return this.f;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBoxView.prototype, "ad", {
            get: function () {
                return this.ac;
            },
            enumerable: true,
            configurable: true
        });
        MultiColumnComboBoxView.prototype.cw = function () {
            if (null != this.al) {
                this.al.setStyleProperty("box-sizing", "border-box");
            }
        };
        MultiColumnComboBoxView.prototype.a2 = function (a) {
            var b = a.target;
            if (!this.u(b)) {
                this.by();
            }
        };
        MultiColumnComboBoxView.prototype.ax = function (a) {
            this.d.ad.clear();
            this.j.cf = "";
            this.g.cv = "";
            this.g.e5 = "";
            this.b8("");
        };
        MultiColumnComboBoxView.prototype.a4 = function (a) {
            var b = this.n;
            if (b.t) {
                this.az();
            }
            else {
                this.aw(null);
            }
            if (null != this.j) {
                this.j.ck();
                this.j.db();
            }
        };
        MultiColumnComboBoxView.prototype.a7 = function (a, b) {
            var c = b.newActiveCell;
            this.a8(c);
            this.r = true;
        };
        MultiColumnComboBoxView.prototype.a9 = function (a, b) {
            var e_3, _a;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(b.columns)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    if (null == c.width || c.width.c) {
                        c.width = ((function () {
                            var $ret = new ColumnWidth();
                            $ret.f = 100;
                            return $ret;
                        })());
                    }
                }
            }
            catch (e_3_1) {
                e_3 = { error: e_3_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_3)
                        throw e_3.error;
                }
            }
            this.cp();
        };
        MultiColumnComboBoxView.prototype.ba = function (a, b) {
            if (igniteuiReactCore.typeCast(TextHeaderCellModel.$, b.cellInfo) !== null) {
                return;
            }
            this.bq();
        };
        MultiColumnComboBoxView.prototype.bb = function (a, b) {
            this.cn();
            this.bo();
        };
        MultiColumnComboBoxView.prototype.bd = function (a, b) {
            this.bc();
            this.s = true;
            this.ch();
        };
        MultiColumnComboBoxView.prototype.be = function (a, b) {
            this.t = b.b != 0 && b.a != 0;
            this.cs();
        };
        MultiColumnComboBoxView.prototype.bh = function (a, b) {
            if (b.isCompositionInProgress) {
                return;
            }
            var c = b.value;
            this.b8(c);
        };
        MultiColumnComboBoxView.prototype.bi = function (a, b) {
            var c = this.j.cf;
            this.b8(c);
        };
        MultiColumnComboBoxView.prototype.bj = function (a, b) {
            this.cc();
        };
        MultiColumnComboBoxView.prototype.bk = function (a, b) {
            var c = b.keyCode;
            this.ap = c;
            this.x = false;
            var d = b.modifiers;
            switch (c) {
                case 8:
                    var e = this.j.selectionStart;
                    if (0 == e) {
                        break;
                    }
                    var f = this.j.cf;
                    if (igniteuiReactCore.stringIsNullOrEmpty(f)) {
                        break;
                    }
                    var g = f.length;
                    var h = this.j.selectionEnd;
                    var i = h - e;
                    if (i > 0 && i < g && h == g) {
                        this.x = true;
                    }
                    break;
                case 40:
                    if (d == 1) {
                        this.a3();
                        this.cp();
                        b.preventDefault();
                    }
                    else {
                        var j = this.e;
                        if (null == j) {
                            return;
                        }
                        var k = this.e.cw;
                        if (null != j.cw) {
                            this.d.h8(false, false);
                            b.preventDefault();
                        }
                        else {
                            var l = this.b();
                            if (null != l) {
                                var m = l.actualCount;
                                if (m > 0) {
                                    this.cg(0);
                                    b.preventDefault();
                                }
                            }
                        }
                    }
                    break;
                case 38:
                    if (d == 1) {
                        this.az();
                        b.preventDefault();
                    }
                    else {
                        var n = this.e;
                        if (null == n) {
                            return;
                        }
                        var o = this.e.cw;
                        if (null != n.cw) {
                            this.d.ik(false, false);
                            b.preventDefault();
                        }
                        else {
                            var p = this.b();
                            if (null != p) {
                                var q = p.actualCount;
                                if (q > 0) {
                                    this.cg(q - 1);
                                    b.preventDefault();
                                }
                            }
                        }
                    }
                    break;
                case 13:
                    if (this.n.t) {
                        b.stopPropagation();
                    }
                    this.bq();
                    break;
                case 27:
                    this.az();
                    break;
            }
        };
        MultiColumnComboBoxView.prototype.bl = function (a, b) {
            if (false == this.o()) {
                this.j.db();
                b.handled = true;
            }
        };
        MultiColumnComboBoxView.prototype.bm = function (a) {
            this.j.ck();
            var b = (a.originalEvent.relatedTarget);
            if (!this.u(b)) {
                this.bx();
            }
        };
        MultiColumnComboBoxView.prototype.bn = function (a) {
            var b = (a.originalEvent.relatedTarget);
            if (!this.u(b)) {
                this.by();
            }
        };
        MultiColumnComboBoxView.prototype.cx = function (a) {
            var b = this.n;
            if (null == b || false == b.t) {
                return;
            }
            var c = this.cy();
            this.m.ar(c);
        };
        MultiColumnComboBoxView.$t = igniteuiReactCore.markType(MultiColumnComboBoxView, 'MultiColumnComboBoxView');
        MultiColumnComboBoxView.ar = "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z";
        MultiColumnComboBoxView.at = "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z";
        MultiColumnComboBoxView.as = "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z";
        return MultiColumnComboBoxView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var MultiColumnComboBoxDataSourceNotificationHandler = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultiColumnComboBoxDataSourceNotificationHandler, _super);
        function MultiColumnComboBoxDataSourceNotificationHandler(a, b) {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.b = false;
            _this.a = a;
            _this.b = b;
            return _this;
        }
        MultiColumnComboBoxDataSourceNotificationHandler.prototype.rangeActualized = function (a, b) {
            if (!this.b) {
                this.a.bz(a, b);
            }
            else {
                this.a.bt(a, b);
            }
        };
        MultiColumnComboBoxDataSourceNotificationHandler.prototype.notifySetItem = function (a, b, c) {
            if (!this.b) {
                this.a.b4(a, b, c);
            }
            else {
                this.a.bw(a, b, c);
            }
        };
        MultiColumnComboBoxDataSourceNotificationHandler.prototype.notifyClearItems = function () {
            if (!this.b) {
                this.a.br();
            }
            else {
                this.a.bs();
            }
        };
        MultiColumnComboBoxDataSourceNotificationHandler.prototype.notifyInsertItem = function (a, b) {
            if (!this.b) {
                this.a.b0(a, b);
            }
            else {
                this.a.bu(a, b);
            }
        };
        MultiColumnComboBoxDataSourceNotificationHandler.prototype.notifyRemoveItem = function (a, b) {
            if (!this.b) {
                this.a.b2(a, b);
            }
            else {
                this.a.bv(a, b);
            }
        };
        MultiColumnComboBoxDataSourceNotificationHandler.$t = igniteuiReactCore.markType(MultiColumnComboBoxDataSourceNotificationHandler, 'MultiColumnComboBoxDataSourceNotificationHandler', igniteuiReactCore.Base.$, [igniteuiReactCore.IDataSourceUpdateNotifier_$type]);
        return MultiColumnComboBoxDataSourceNotificationHandler;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var MultiColumnComboBox = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MultiColumnComboBox, _super);
        function MultiColumnComboBox() {
            var _this = _super.call(this) || this;
            _this.g9 = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.r6, igniteuiReactInputs.InputGroup.qq);
            _this.ha = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.r7, igniteuiReactInputs.InputGroup.qr);
            _this.b6 = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gk, igniteuiReactInputs.InputGroup.er);
            _this.hu = igniteuiReactInputs.ThemeResolver.f(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.tx, igniteuiReactInputs.InputGroup.tr);
            _this.f6 = igniteuiReactInputs.ThemeResolver.d(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.nh, igniteuiReactInputs.InputGroup.nb);
            _this.hb = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.r8, igniteuiReactInputs.InputGroup.qs);
            _this.b7 = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gl, igniteuiReactInputs.InputGroup.es);
            _this.hc = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.sa, igniteuiReactInputs.InputGroup.qu);
            _this.b8 = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gm, igniteuiReactInputs.InputGroup.et);
            _this.b9 = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gn, igniteuiReactInputs.InputGroup.eu);
            _this.hd = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.sb, igniteuiReactInputs.InputGroup.qv);
            _this.ca = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.go, igniteuiReactInputs.InputGroup.ev);
            _this.cb = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gp, igniteuiReactInputs.InputGroup.ew);
            _this.he = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.sc, igniteuiReactInputs.InputGroup.qw);
            _this.cc = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gq, igniteuiReactInputs.InputGroup.ex);
            _this.hf = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.sd, igniteuiReactInputs.InputGroup.qx);
            _this.cd = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gr, igniteuiReactInputs.InputGroup.ey);
            _this.ce = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gs, igniteuiReactInputs.InputGroup.ez);
            _this.cf = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gt, igniteuiReactInputs.InputGroup.e0);
            _this.as = null;
            _this.t = null;
            _this.az = true;
            _this.c = null;
            _this.gi = null;
            _this.f7 = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.rc, igniteuiReactInputs.InputGroup.pw);
            _this.x = 0;
            _this.w = 1;
            _this.gj = null;
            _this.f8 = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.rd, igniteuiReactInputs.InputGroup.px);
            _this.bk = NaN;
            _this.ba = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.fu, igniteuiReactInputs.InputGroup.d1);
            _this.a3 = true;
            _this.hr = new igniteuiReactCore.Thickness(1, NaN, NaN, NaN, NaN);
            _this.hq = igniteuiReactInputs.ThemeResolver.f(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.tv, igniteuiReactInputs.InputGroup.tp);
            _this.f3 = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.f2 = igniteuiReactInputs.ThemeResolver.d(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.nf, igniteuiReactInputs.InputGroup.m9);
            _this.b = null;
            _this.ad = 0;
            _this.ac = 0;
            _this.a5 = true;
            _this.gk = null;
            _this.f9 = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.ru, igniteuiReactInputs.InputGroup.qe);
            _this.bl = NaN;
            _this.bb = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.f5, igniteuiReactInputs.InputGroup.ec);
            _this.gl = null;
            _this.ga = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.rw, igniteuiReactInputs.InputGroup.qg);
            _this.bm = NaN;
            _this.bc = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.f6, igniteuiReactInputs.InputGroup.ed);
            _this.bn = NaN;
            _this.bd = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.f7, igniteuiReactInputs.InputGroup.ee);
            _this.gm = null;
            _this.gb = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.rx, igniteuiReactInputs.InputGroup.qh);
            _this.bo = NaN;
            _this.be = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.f8, igniteuiReactInputs.InputGroup.ef);
            _this.bp = NaN;
            _this.bf = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.f9, igniteuiReactInputs.InputGroup.eg);
            _this.cp = null;
            _this.eq = null;
            _this.gn = null;
            _this.gc = MultiColumnComboBox.g6;
            _this.ak = null;
            _this.ah = null;
            _this.a0 = false;
            _this.et = null;
            _this.dh = "No Matches Found";
            _this.go = null;
            _this.gd = MultiColumnComboBox.g7;
            _this.gp = null;
            _this.ge = MultiColumnComboBox.g8;
            _this.al = null;
            _this.ai = null;
            _this.e0 = "";
            _this.ay = true;
            _this.gq = MultiColumnComboBox.hg;
            _this.gf = MultiColumnComboBox.hg;
            _this.am = null;
            _this.aj = null;
            _this.gr = null;
            _this.gg = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.se, igniteuiReactInputs.InputGroup.qy);
            _this.bq = NaN;
            _this.bg = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gu, igniteuiReactInputs.InputGroup.e1);
            _this.gs = null;
            _this.gh = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.sf, igniteuiReactInputs.InputGroup.qz);
            _this.br = NaN;
            _this.bh = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gv, igniteuiReactInputs.InputGroup.e2);
            _this.bs = NaN;
            _this.bi = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gw, igniteuiReactInputs.InputGroup.e3);
            _this.bt = NaN;
            _this.bj = igniteuiReactInputs.ThemeResolver.b(MultiColumnComboBox.y, igniteuiReactInputs.InputGroup.gx, igniteuiReactInputs.InputGroup.e4);
            _this.ax = true;
            _this.u = 0;
            _this.cx = null;
            _this.cw = null;
            _this.d = null;
            _this.a = null;
            _this.cq = null;
            _this.a7 = false;
            _this.gotFocus = null;
            _this.lostFocus = null;
            _this.textChanged = null;
            _this.valueChanged = null;
            _this.propertyChanged = null;
            var a = _this.s();
            _this.t = a;
            a.bg(_this);
            return _this;
        }
        MultiColumnComboBox.prototype.s = function () {
            return new MultiColumnComboBoxView();
        };
        MultiColumnComboBox.prototype.fv = function (a, b, c) {
            switch (a) {
                case "BackgroundColor":
                    this.gt = this.g4 != null ? this.g4 : this.g9;
                    break;
                case "BorderColor":
                    this.gu = this.g5 != null ? this.g5 : this.ha;
                    break;
                case "BorderWidth":
                    this.bu = !igniteuiReactCore.isNaN_(this.b4) ? this.b4 : this.b6;
                    break;
                case "ContentPadding":
                    this.hs = igniteuiReactInputs.InputGroup.ti(this.ht, this.hu);
                    break;
                case "CornerRadius":
                    this.f4 = igniteuiReactInputs.InputGroup.m2(this.f5, this.f6);
                    break;
                case "FocusBorderColor":
                    this.gv = this.hh != null ? this.hh : this.hb;
                    break;
                case "FocusBorderWidth":
                    this.bv = !igniteuiReactCore.isNaN_(this.cg) ? this.cg : this.b7;
                    break;
                case "FocusUnderlineColor":
                    this.gw = this.hi != null ? this.hi : this.hc;
                    break;
                case "FocusUnderlineOpacity":
                    this.bw = !igniteuiReactCore.isNaN_(this.ch) ? this.ch : this.b8;
                    break;
                case "FocusUnderlineRippleOpacity":
                    this.bx = !igniteuiReactCore.isNaN_(this.ci) ? this.ci : this.b9;
                    break;
                case "HoverUnderlineColor":
                    this.gx = this.hj != null ? this.hj : this.hd;
                    break;
                case "HoverUnderlineOpacity":
                    this.by = !igniteuiReactCore.isNaN_(this.cj) ? this.cj : this.ca;
                    break;
                case "HoverUnderlineWidth":
                    this.bz = !igniteuiReactCore.isNaN_(this.ck) ? this.ck : this.cb;
                    break;
                case "ItemsSource":
                case "ValueField":
                case "DataSourceDesiredProperties":
                case "Fields":
                    this.t.ct();
                    break;
                case "LabelTextColor":
                    this.gy = this.hk != null ? this.hk : MultiColumnComboBox.g6;
                    break;
                case "LabelTextStyle":
                    this.an = this.au != null ? this.au : MultiColumnComboBox.aq;
                    break;
                case "NoMatchesFoundLabelTextColor":
                    this.g0 = this.hm != null ? this.hm : MultiColumnComboBox.g8;
                    break;
                case "NoMatchesFoundLabelBackgroundColor":
                    this.gz = this.hl != null ? this.hl : MultiColumnComboBox.g7;
                    break;
                case "NoMatchesFoundLabelTextStyle":
                    this.ao = this.av != null ? this.av : MultiColumnComboBox.ar;
                    break;
                case "UnderlineColor":
                    this.g2 = this.ho != null ? this.ho : this.he;
                    break;
                case "UnderlineOpacity":
                    this.b0 = !igniteuiReactCore.isNaN_(this.cl) ? this.cl : this.cc;
                    break;
                case "UnderlineRippleColor":
                    this.g3 = this.hp != null ? this.hp : this.hf;
                    break;
                case "UnderlineRippleOpacity":
                    this.b1 = !igniteuiReactCore.isNaN_(this.cm) ? this.cm : this.cd;
                    break;
                case "UnderlineRippleWidth":
                    this.b2 = !igniteuiReactCore.isNaN_(this.cn) ? this.cn : this.ce;
                    break;
                case "UnderlineWidth":
                    this.b3 = !igniteuiReactCore.isNaN_(this.co) ? this.co : this.cf;
                    break;
                case "BaseTheme":
                    this.z = this.aa == 0 ? 1 : this.aa;
                    break;
                case "Density":
                    this.ae = this.density == 0 ? 0 : this.density;
                    break;
                case "TextColor":
                    this.g1 = this.hn != null ? this.hn : MultiColumnComboBox.hg;
                    break;
                case "TextStyle":
                    this.ap = this.aw != null ? this.aw : null;
                    break;
                case "ActualDensity":
                case "ActualBaseTheme":
                case "ActualTextColor":
                case "ActualTextStyle":
                case "ActualBackgroundColor":
                case "ActualBorderColor":
                case "ActualBorderWidth":
                case "ActualContentPadding":
                case "ActualCornerRadius":
                case "ActualFocusBorderColor":
                case "ActualFocusBorderWidth":
                case "ActualFocusUnderlineColor":
                case "ActualFocusUnderlineOpacity":
                case "ActualFocusUnderlineRippleOpacity":
                case "ActualHoverUnderlineColor":
                case "ActualHoverUnderlineOpacity":
                case "ActualHoverUnderlineWidth":
                case "ActualLabelTextColor":
                case "ActualLabelTextStyle":
                case "ActualUnderlineColor":
                case "ActualUnderlineOpacity":
                case "ActualUnderlineRippleColor":
                case "ActualUnderlineRippleOpacity":
                case "ActualUnderlineRippleWidth":
                case "ActualUnderlineWidth":
                case "DropDownButtonVisible":
                case "ColumnHeadersVisible":
                case "RowSeparatorsVisible":
                case "ActualNoMatchesFoundLabel":
                case "ActualNoMatchesFoundLabelTextColor":
                case "ActualNoMatchesFoundLabelTextStyle":
                case MultiColumnComboBox.dj:
                    this.t.ck();
                    break;
                case "NoMatchesFoundLabel":
                    this.actualNoMatchesFoundLabel = igniteuiReactCore.stringIsNullOrEmpty(this.eu) ? "No Matches Found" : this.eu;
                    break;
                case "ActualLabelVisible":
                    this.t.cu();
                    break;
                case "Label":
                case "PlaceholderText":
                    this.t.ck();
                    this.actualLabelVisible = !igniteuiReactCore.stringIsNullOrEmpty(this.eq);
                    break;
                case "Text":
                    this.t.co();
                    var d = b != null ? b.toString() : null;
                    var e = c != null ? c.toString() : null;
                    this.fs(new MultiColumnComboBoxTextChangedEventArgs(d, e));
                    this.fu(1, e);
                    break;
                case "Value":
                    this.ft(new MultiColumnComboBoxValueChangedEventArgs(b, c));
                    this.fu(0, c);
                    break;
                case "ShowClearButton":
                    this.t.ch();
                    break;
                case "AllowFilter":
                    this.t.a5(this.a2);
                    break;
                case "SortMode":
                    this.t.cm();
                    break;
            }
        };
        MultiColumnComboBox.prototype.f1 = function () {
            this.t.cw();
        };
        Object.defineProperty(MultiColumnComboBox.prototype, "at", {
            get: function () {
                if (null == this.as) {
                    this.as = new igniteuiReactCore.FontInfo();
                    this.as.n = "'Segoe UI', Verdana";
                    this.as.d = 16;
                }
                return this.as;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "a9", {
            get: function () {
                return this.az;
            },
            set: function (a) {
                var b = this.az;
                this.az = a;
                if (b != this.az) {
                    this.fq("ShowClearButton", b, this.az);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "g", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.fq("Fields", b, this.c);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "g4", {
            get: function () {
                return this.gi;
            },
            set: function (a) {
                var b = this.gi;
                this.gi = a;
                if (b != this.gi) {
                    this.fq("BackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "gt", {
            get: function () {
                return this.f7;
            },
            set: function (a) {
                var b = this.f7;
                this.f7 = a;
                if (b != this.f7) {
                    this.fq("ActualBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "aa", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                var b = this.x;
                this.x = a;
                if (b != this.x) {
                    this.fq("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "z", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (b != this.w) {
                    this.fq("ActualBaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "g5", {
            get: function () {
                return this.gj;
            },
            set: function (a) {
                var b = this.gj;
                this.gj = a;
                if (b != this.gj) {
                    this.fq("BorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "gu", {
            get: function () {
                return this.f8;
            },
            set: function (a) {
                var b = this.f8;
                this.f8 = a;
                if (b != this.f8) {
                    this.fq("ActualBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "b4", {
            get: function () {
                return this.bk;
            },
            set: function (a) {
                var b = this.bk;
                this.bk = a;
                if (b != this.bk) {
                    this.fq("BorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "bu", {
            get: function () {
                return this.ba;
            },
            set: function (a) {
                var b = this.ba;
                this.ba = a;
                if (b != this.ba) {
                    this.fq("ActualBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "columnHeadersVisible", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                var b = this.a3;
                this.a3 = a;
                if (b != this.a3) {
                    this.fq("ColumnHeadersVisible", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ht", {
            get: function () {
                return this.hr;
            },
            set: function (a) {
                var b = this.hr;
                this.hr = a;
                if (b != this.hr) {
                    this.fq("ContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hs", {
            get: function () {
                return this.hq;
            },
            set: function (a) {
                var b = this.hq;
                this.hq = a;
                if (b != this.hq) {
                    this.fq("ActualContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "f5", {
            get: function () {
                return this.f3;
            },
            set: function (a) {
                var b = this.f3;
                this.f3 = a;
                if (b != this.f3) {
                    this.fq("CornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "f4", {
            get: function () {
                return this.f2;
            },
            set: function (a) {
                var b = this.f2;
                this.f2 = a;
                if (b != this.f2) {
                    this.fq("ActualCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "f", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (b != this.b) {
                    this.fq("DataSourceDesiredProperties", b, this.b);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "density", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                var b = this.ad;
                this.ad = a;
                if (b != this.ad) {
                    this.fq("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ae", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (b != this.ac) {
                    this.fq("ActualDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "dropDownButtonVisible", {
            get: function () {
                return this.a5;
            },
            set: function (a) {
                var b = this.a5;
                this.a5 = a;
                if (b != this.a5) {
                    this.fq("DropDownButtonVisible", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hh", {
            get: function () {
                return this.gk;
            },
            set: function (a) {
                var b = this.gk;
                this.gk = a;
                if (b != this.gk) {
                    this.fq("FocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "gv", {
            get: function () {
                return this.f9;
            },
            set: function (a) {
                var b = this.f9;
                this.f9 = a;
                if (b != this.f9) {
                    this.fq("ActualFocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "cg", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (b != this.bl) {
                    this.fq("FocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "bv", {
            get: function () {
                return this.bb;
            },
            set: function (a) {
                var b = this.bb;
                this.bb = a;
                if (b != this.bb) {
                    this.fq("ActualFocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hi", {
            get: function () {
                return this.gl;
            },
            set: function (a) {
                var b = this.gl;
                this.gl = a;
                if (b != this.gl) {
                    this.fq("FocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "gw", {
            get: function () {
                return this.ga;
            },
            set: function (a) {
                var b = this.ga;
                this.gl = a;
                if (b != this.ga) {
                    this.fq("ActualFocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ch", {
            get: function () {
                return this.bm;
            },
            set: function (a) {
                var b = this.bm;
                this.bm = a;
                if (b != this.bm) {
                    this.fq("FocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "bw", {
            get: function () {
                return this.bc;
            },
            set: function (a) {
                var b = this.bc;
                this.bc = a;
                if (b != this.bc) {
                    this.fq("ActualFocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ci", {
            get: function () {
                return this.bn;
            },
            set: function (a) {
                var b = this.bn;
                this.bn = a;
                if (b != this.bn) {
                    this.fq("FocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "bx", {
            get: function () {
                return this.bd;
            },
            set: function (a) {
                var b = this.bd;
                this.bd = a;
                if (b != this.bd) {
                    this.fq("ActualFocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hj", {
            get: function () {
                return this.gm;
            },
            set: function (a) {
                var b = this.gm;
                this.gm = a;
                if (b != this.gm) {
                    this.fq("HoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "gx", {
            get: function () {
                return this.gb;
            },
            set: function (a) {
                var b = this.gb;
                this.gb = a;
                if (b != this.gb) {
                    this.fq("ActualHoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "cj", {
            get: function () {
                return this.bo;
            },
            set: function (a) {
                var b = this.bo;
                this.bo = a;
                if (b != this.bo) {
                    this.fq("HoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "by", {
            get: function () {
                return this.be;
            },
            set: function (a) {
                var b = this.be;
                this.be = a;
                if (b != this.be) {
                    this.fq("ActualHoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ck", {
            get: function () {
                return this.bp;
            },
            set: function (a) {
                var b = this.bp;
                this.bp = a;
                if (b != this.bp) {
                    this.fq("HoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "bz", {
            get: function () {
                return this.bf;
            },
            set: function (a) {
                var b = this.bf;
                this.bf = a;
                if (b != this.bf) {
                    this.fq("ActualHoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "itemsSource", {
            get: function () {
                return this.cp;
            },
            set: function (a) {
                var b = this.cp;
                this.cp = a;
                if (b != this.cp) {
                    this.fq("ItemsSource", b, this.cp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "actualDataSource", {
            get: function () {
                return this.t.b();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "eo", {
            get: function () {
                return this.eq;
            },
            set: function (a) {
                var b = this.eo;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.eq = a;
                this.fq("Label", b, this.eq);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hk", {
            get: function () {
                return this.gn;
            },
            set: function (a) {
                var b = this.gn;
                this.gn = a;
                if (b != this.gn) {
                    this.fq("LabelTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "gy", {
            get: function () {
                return this.gc;
            },
            set: function (a) {
                var b = this.gc;
                this.gc = a;
                if (b != this.gc) {
                    this.fq("ActualLabelTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "au", {
            get: function () {
                return this.ak;
            },
            set: function (a) {
                var b = this.ak;
                this.ak = a;
                if (b != this.ak) {
                    this.fq("LabelTextStyle", b, this.ak);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "an", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (this.ah != b) {
                    this.fq("ActualLabelTextStyle", b, this.ah);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "actualLabelVisible", {
            get: function () {
                return this.a0;
            },
            set: function (a) {
                var b = this.a0;
                this.a0 = a;
                if (b != this.a0) {
                    this.fq("ActualLabelVisible", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "eu", {
            get: function () {
                return this.et;
            },
            set: function (a) {
                var b = this.et;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.et = a;
                this.fq("NoMatchesFoundLabel", b, this.et);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "actualNoMatchesFoundLabel", {
            get: function () {
                return this.dh;
            },
            set: function (a) {
                var b = this.dh;
                this.dh = a;
                if (b != this.dh) {
                    this.fq("ActualNoMatchesFoundLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hl", {
            get: function () {
                return this.go;
            },
            set: function (a) {
                var b = this.go;
                this.go = a;
                if (b != this.go) {
                    this.fq("NoMatchesFoundLabelBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "gz", {
            get: function () {
                return this.gd;
            },
            set: function (a) {
                var b = this.gd;
                this.gd = a;
                if (b != this.gd) {
                    this.fq(MultiColumnComboBox.dj, b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hm", {
            get: function () {
                return this.gp;
            },
            set: function (a) {
                var b = this.gp;
                this.gp = a;
                if (b != this.gp) {
                    this.fq("NoMatchesFoundLabelTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "g0", {
            get: function () {
                return this.ge;
            },
            set: function (a) {
                var b = this.ge;
                this.ge = a;
                if (b != this.ge) {
                    this.fq("ActualNoMatchesFoundLabelTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "av", {
            get: function () {
                return this.al;
            },
            set: function (a) {
                var b = this.al;
                this.al = a;
                if (b != this.al) {
                    this.fq("NoMatchesFoundLabelTextStyle", b, this.al);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ao", {
            get: function () {
                return this.ai;
            },
            set: function (a) {
                var b = this.ai;
                this.ai = a;
                if (this.ai != b) {
                    this.fq("ActualNoMatchesFoundLabelTextStyle", b, this.ai);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ez", {
            get: function () {
                return this.e0;
            },
            set: function (a) {
                var b = this.ez;
                if (0 == igniteuiReactCore.StringComparer.b.compare(a, b)) {
                    return;
                }
                this.e0 = a;
                this.fq("PlaceholderText", b, this.e0);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "rowSeparatorsVisible", {
            get: function () {
                return this.ay;
            },
            set: function (a) {
                var b = this.ay;
                this.ay = a;
                if (b != this.ay) {
                    this.fq("RowSeparatorsVisible", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hn", {
            get: function () {
                return this.gq;
            },
            set: function (a) {
                var b = this.gq;
                this.gq = a;
                if (b != this.gq) {
                    this.fq("TextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "g1", {
            get: function () {
                return this.gf;
            },
            set: function (a) {
                var b = this.gf;
                this.gf = a;
                if (b != this.gf) {
                    this.fq("ActualTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "aw", {
            get: function () {
                return this.am;
            },
            set: function (a) {
                var b = this.am;
                this.am = a;
                if (b != this.am) {
                    this.fq("TextStyle", b, this.am);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ap", {
            get: function () {
                return this.aj;
            },
            set: function (a) {
                var b = this.aj;
                this.aj = a;
                if (this.aj != b) {
                    this.fq("ActualTextStyle", b, this.aj);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "ho", {
            get: function () {
                return this.gr;
            },
            set: function (a) {
                var b = this.gr;
                this.gr = a;
                if (b != this.gr) {
                    this.fq("UnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "g2", {
            get: function () {
                return this.gg;
            },
            set: function (a) {
                var b = this.gg;
                this.gg = a;
                if (b != this.gg) {
                    this.fq("ActualUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "cl", {
            get: function () {
                return this.bq;
            },
            set: function (a) {
                var b = this.bq;
                this.bq = a;
                if (b != this.bq) {
                    this.fq("UnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "b0", {
            get: function () {
                return this.bg;
            },
            set: function (a) {
                var b = this.bg;
                this.bg = a;
                if (b != this.bg) {
                    this.fq("ActualUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "hp", {
            get: function () {
                return this.gs;
            },
            set: function (a) {
                var b = this.gs;
                this.gs = a;
                if (b != this.gs) {
                    this.fq("UnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "g3", {
            get: function () {
                return this.gh;
            },
            set: function (a) {
                var b = this.gh;
                this.gh = a;
                if (b != this.gh) {
                    this.fq("ActualUnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "cm", {
            get: function () {
                return this.br;
            },
            set: function (a) {
                var b = this.br;
                this.br = a;
                if (b != this.br) {
                    this.fq("UnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "b1", {
            get: function () {
                return this.bh;
            },
            set: function (a) {
                var b = this.bh;
                this.bh = a;
                if (b != this.bh) {
                    this.fq("ActualUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "cn", {
            get: function () {
                return this.bs;
            },
            set: function (a) {
                var b = this.bs;
                this.bs = a;
                if (b != this.bs) {
                    this.fq("UnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "b2", {
            get: function () {
                return this.bi;
            },
            set: function (a) {
                var b = this.bi;
                this.bi = a;
                if (b != this.bi) {
                    this.fq("ActualUnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "co", {
            get: function () {
                return this.bt;
            },
            set: function (a) {
                var b = this.bt;
                this.bt = a;
                if (b != this.bt) {
                    this.fq("UnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "b3", {
            get: function () {
                return this.bj;
            },
            set: function (a) {
                var b = this.bj;
                this.bj = a;
                if (b != this.bj) {
                    this.fq("ActualUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "a2", {
            get: function () {
                return this.ax;
            },
            set: function (a) {
                var b = this.ax;
                this.ax = a;
                if (b != this.ax) {
                    this.fq("AllowFilter", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "v", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (b != this.u) {
                    this.fq("SortMode", igniteuiReactCore.enumGetBox(SortMode_$type, b), igniteuiReactCore.enumGetBox(SortMode_$type, this.u));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "e7", {
            get: function () {
                return this.cx;
            },
            set: function (a) {
                var b = this.cx;
                this.cx = a;
                if (b != this.cx) {
                    this.fq("TextField", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "e5", {
            get: function () {
                return this.cw;
            },
            set: function (a) {
                var b = this.cw;
                this.cw = a;
                if (b != this.cw) {
                    this.fq("Text", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "j", {
            get: function () {
                return this.d;
            },
            set: function (a) {
                var b = this.d;
                this.d = a;
                if (b != this.d) {
                    this.fq("ValueField", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "e", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.fq("ActualValueField", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MultiColumnComboBox.prototype, "cv", {
            get: function () {
                return this.cq;
            },
            set: function (a) {
                var b = this.cq;
                this.cq = a;
                if (b != this.cq) {
                    this.fq("Value", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        MultiColumnComboBox.prototype.cs = function (a, b) {
            var c = new igniteuiReactCore.FastReflectionHelper(false, b);
            return c.getPropertyValue(a);
        };
        MultiColumnComboBox.prototype.n = function () {
            var a = this.ej();
            return this.m(a);
        };
        MultiColumnComboBox.prototype.ej = function () {
            return this.ei(this.e7);
        };
        MultiColumnComboBox.prototype.ct = function (a) {
            var b = this.i();
            if (null == b || b.length == 0) {
                return null;
            }
            var c = new igniteuiReactCore.List$1(igniteuiReactCore.Base.$, 0);
            for (var e = 0; e < b.length; e++) {
                var d = b[e];
                var f = this.cs(a, d);
                c.add1(f);
            }
            if (c.count == 1) {
                return c._inner[0];
            }
            return c.toArray();
        };
        MultiColumnComboBox.prototype.eh = function (a) {
            var b = this.ej();
            var c;
            if (null != b) {
                var d = this.cs(a, b);
                c = null != d ? d.toString() : null;
            }
            else {
                c = null;
            }
            return c;
        };
        MultiColumnComboBox.prototype.m = function (a) {
            var e_4, _a;
            var b = this.t.e;
            if (null == b) {
                return null;
            }
            var c = b.actualColumns;
            if (null == c || 0 == c.count) {
                return null;
            }
            if (igniteuiReactCore.stringIsNullOrEmpty(a)) {
                return c._inner[0];
            }
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(c)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var d = _c.value;
                    if (0 == igniteuiReactCore.StringComparer.b.compare(d.hy, a)) {
                        return d;
                    }
                }
            }
            catch (e_4_1) {
                e_4 = { error: e_4_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_4)
                        throw e_4.error;
                }
            }
            return null;
        };
        MultiColumnComboBox.prototype.ei = function (a) {
            if (igniteuiReactCore.stringIsNullOrEmpty(a)) {
                var b = this.actualDataSource;
                if (null == b) {
                    return null;
                }
                var c = b.actualSchema;
                if (null == c) {
                    return null;
                }
                var d = c.propertyNames;
                if (0 == d.length) {
                    return null;
                }
                return d[0];
            }
            return a;
        };
        MultiColumnComboBox.prototype.h = function (a) {
            var b = new igniteuiReactCore.List$1(igniteuiReactCore.String_$type, 0);
            if (null == a || a.length == 0) {
                var c = this.ei(null);
                if (igniteuiReactCore.stringIsNullOrEmpty(c)) {
                    return null;
                }
                b.add(c);
                return b.toArray();
            }
            for (var e = 0; e < a.length; e++) {
                var d = a[e];
                var f = this.ei(d);
                if (null != f) {
                    b.add(f);
                }
            }
            if (b.count > 0) {
                return b.toArray();
            }
            return null;
        };
        MultiColumnComboBox.prototype.i = function () {
            var a = this.j;
            return this.h(a);
        };
        MultiColumnComboBox.prototype.fr = function (a) {
            this.fu(2, a);
        };
        MultiColumnComboBox.prototype.fu = function (a, b) {
            if (this.a7) {
                return;
            }
            this.a7 = true;
            try {
                switch (a) {
                    case 2:
                        {
                            var c = b;
                            var d = void 0;
                            var e = void 0;
                            if (null != c) {
                                d = this.eh(c);
                                e = this.ct(c);
                            }
                            else {
                                d = igniteuiReactCore.stringEmpty();
                                e = null;
                            }
                            if (this.e5 != d) {
                                this.e5 = d;
                            }
                            if (this.cv != e) {
                                this.cv = e;
                            }
                        }
                        break;
                    case 1:
                        this.t.cj(b.toString());
                        break;
                    case 0:
                        this.t.ci(b);
                        break;
                }
            }
            finally {
                this.a7 = false;
            }
            this.t.ch();
        };
        MultiColumnComboBox.prototype.fy = function (a) {
            this.e5 = a;
        };
        MultiColumnComboBox.prototype.f0 = function () {
            this.ap = (null == this.aw) ? this.at : this.aw;
        };
        MultiColumnComboBox.prototype.fz = function () {
        };
        MultiColumnComboBox.prototype.closeUp = function () {
            this.t.az();
        };
        MultiColumnComboBox.prototype.destroy = function () {
            this.provideRenderer(null);
        };
        MultiColumnComboBox.prototype.dropDown = function () {
            this.t.a3();
        };
        MultiColumnComboBox.prototype.focus = function () {
            this.t.a6();
        };
        MultiColumnComboBox.prototype.select = function () {
            this.t.cd();
        };
        MultiColumnComboBox.prototype.notifySizeChanged = function () {
            this.t.bp();
        };
        MultiColumnComboBox.prototype.provideRenderer = function (a) {
            this.t.b3(a);
        };
        MultiColumnComboBox.prototype.cr = function () {
            return this.l();
        };
        MultiColumnComboBox.prototype.ea = function () {
            var a = this.l();
            return a.am();
        };
        MultiColumnComboBox.prototype.l = function () {
            var a = new MultiColumnComboVisualModelExport();
            a.a = igniteuiReactCore.AppearanceHelper.a(this.gt);
            a.j = this.z;
            a.b = igniteuiReactCore.AppearanceHelper.a(this.gu);
            a.p = this.bu;
            a.columnHeadersVisible = this.columnHeadersVisible;
            a.au = this.hs;
            a.at = this.f4;
            a.k = this.ae;
            a.dropDownButtonVisible = this.dropDownButtonVisible;
            a.q = this.bw;
            a.aa = this.eo;
            a.c = igniteuiReactCore.AppearanceHelper.a(this.gy);
            a.actualLabelVisible = this.actualLabelVisible;
            a.actualNoMatchesFoundLabel = this.actualNoMatchesFoundLabel;
            a.d = igniteuiReactCore.AppearanceHelper.a(this.gz);
            a.e = igniteuiReactCore.AppearanceHelper.a(this.g0);
            a.al = this.ez;
            a.rowSeparatorsVisible = this.rowSeparatorsVisible;
            a.f = igniteuiReactCore.AppearanceHelper.a(this.g1);
            a.g = igniteuiReactCore.AppearanceHelper.a(this.g2);
            a.r = this.b0;
            a.h = igniteuiReactCore.AppearanceHelper.a(this.g3);
            a.s = this.b1;
            a.t = this.b2;
            a.u = this.b3;
            a.an = this.e5;
            a.y = this.cv;
            a.i = this.t.e.lp();
            if (this.an != null) {
                var b = this.an;
                if (this.t != null && b.n == null) {
                    var c = this.t.ad;
                    var d = igniteuiReactCore.FontUtil.getFontInfoFromString(c, b.fontString);
                    b.n = d.n;
                    b.d = d.d;
                    b.o = d.o;
                    b.q = d.q;
                    b.r = d.r;
                    b.s = d.s;
                }
                if (b.n != null) {
                    a.ab = b.n;
                }
                if (!igniteuiReactCore.isNaN_(b.d)) {
                    a.v = b.d;
                }
                if (b.s != null) {
                    a.af = b.s;
                }
                if (b.q != null) {
                    a.ad = b.q;
                }
                if (b.o != null) {
                    a.ac = b.q;
                }
            }
            if (this.ao != null) {
                var e = this.ao;
                if (this.t != null && e.n == null) {
                    var f = this.t.ad;
                    var g = igniteuiReactCore.FontUtil.getFontInfoFromString(f, e.fontString);
                    e.n = g.n;
                    e.d = g.d;
                    e.o = g.o;
                    e.q = g.q;
                    e.r = g.r;
                    e.s = g.s;
                }
                if (e.n != null) {
                    a.ag = e.n;
                }
                if (!igniteuiReactCore.isNaN_(e.d)) {
                    a.w = e.d;
                }
                if (e.s != null) {
                    a.ak = e.s;
                }
                if (e.q != null) {
                    a.ai = e.q;
                }
                if (e.o != null) {
                    a.ah = e.q;
                }
            }
            if (this.ap != null) {
                var h = this.ap;
                if (this.t != null && h.n == null) {
                    var i = this.t.ad;
                    var j = igniteuiReactCore.FontUtil.getFontInfoFromString(i, h.fontString);
                    h.n = j.n;
                    h.d = j.d;
                    h.o = j.o;
                    h.q = j.q;
                    h.r = j.r;
                    h.s = j.s;
                }
                if (h.n != null) {
                    a.ao = h.n;
                }
                if (!igniteuiReactCore.isNaN_(h.d)) {
                    a.x = h.d;
                }
                if (h.s != null) {
                    a.as = h.s;
                }
                if (h.q != null) {
                    a.aq = h.q;
                }
                if (h.o != null) {
                    a.ap = h.q;
                }
            }
            return a;
        };
        MultiColumnComboBox.prototype.fo = function (a) {
            if (null != this.gotFocus) {
                this.gotFocus(this, a);
            }
        };
        MultiColumnComboBox.prototype.fp = function (a) {
            if (null != this.lostFocus) {
                this.lostFocus(this, a);
            }
        };
        MultiColumnComboBox.prototype.fs = function (a) {
            if (null != this.textChanged) {
                this.textChanged(this, a);
            }
        };
        MultiColumnComboBox.prototype.ft = function (a) {
            if (null != this.valueChanged) {
                this.valueChanged(this, a);
            }
        };
        MultiColumnComboBox.prototype.fq = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.fv(a, b, c);
        };
        MultiColumnComboBox.$t = igniteuiReactCore.markType(MultiColumnComboBox, 'MultiColumnComboBox', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        MultiColumnComboBox.y = 1;
        MultiColumnComboBox.g6 = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.Label.c7, igniteuiReactInputs.Label.c0);
        MultiColumnComboBox.g8 = igniteuiReactInputs.ThemeResolver.e(MultiColumnComboBox.y, igniteuiReactInputs.Label.c7, igniteuiReactInputs.Label.c0);
        MultiColumnComboBox.g7 = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        MultiColumnComboBox.aq = null;
        MultiColumnComboBox.dj = "ActualNoMatchesFoundLabelBackgroundColor";
        MultiColumnComboBox.ar = null;
        MultiColumnComboBox.hg = igniteuiReactCore.BrushUtil.g(221, 0, 0, 0);
        return MultiColumnComboBox;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrMultiColumnComboBoxTextChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrMultiColumnComboBoxTextChangedEventArgs() {
        }
        Object.defineProperty(IgrMultiColumnComboBoxTextChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBoxTextChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrMultiColumnComboBoxTextChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrMultiColumnComboBoxTextChangedEventArgs.prototype, "oldText", {
            get: function () {
                return this.i.oldText;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBoxTextChangedEventArgs.prototype, "newText", {
            get: function () {
                return this.i.newText;
            },
            enumerable: true,
            configurable: true
        });
        return IgrMultiColumnComboBoxTextChangedEventArgs;
    }());

    var IgrMultiColumnComboBoxValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrMultiColumnComboBoxValueChangedEventArgs() {
        }
        Object.defineProperty(IgrMultiColumnComboBoxValueChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBoxValueChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrMultiColumnComboBoxValueChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrMultiColumnComboBoxValueChangedEventArgs.prototype, "oldValue", {
            get: function () {
                return this.i.oldValue;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBoxValueChangedEventArgs.prototype, "newValue", {
            get: function () {
                return this.i.newValue;
            },
            enumerable: true,
            configurable: true
        });
        return IgrMultiColumnComboBoxValueChangedEventArgs;
    }());

    var IgrGotFocusEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGotFocusEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGotFocusEventArgs.prototype.createImplementation = function () {
            return new GotFocusEventArgs();
        };
        Object.defineProperty(IgrGotFocusEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGotFocusEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGotFocusEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrGotFocusEventArgs;
    }());

    var IgrLostFocusEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrLostFocusEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrLostFocusEventArgs.prototype.createImplementation = function () {
            return new LostFocusEventArgs();
        };
        Object.defineProperty(IgrLostFocusEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrLostFocusEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrLostFocusEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrLostFocusEventArgs;
    }());

    var IgrMultiColumnComboBox = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrMultiColumnComboBox, _super);
        function IgrMultiColumnComboBox(props) {
            var _this = _super.call(this, props) || this;
            _this._implementation = null;
            _this._reactRenderer = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._gotFocus = null;
            _this._gotFocus_wrapped = null;
            _this._lostFocus = null;
            _this._lostFocus_wrapped = null;
            _this._textChanged = null;
            _this._textChanged_wrapped = null;
            _this._valueChanged = null;
            _this._valueChanged_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._getMainRef = _this._getMainRef.bind(_this);
            var multiColumnComboBox = _this.i;
            multiColumnComboBox.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            _this._initialized = true;
            return _this;
        }
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this.i.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this.i.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBox.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            this.verifyReferences();
        };
        IgrMultiColumnComboBox.prototype.render = function () {
            var children = [];
            // We don't actually want to support child content. 
            //let propChildren = this.props.children;        
            //React.Children.forEach(
            //    propChildren, (ch: any) => {
            //        children.push(React.cloneElement(ch));
            //    });
            if (this._portalManager)
                this._portalManager.onRender(children);
            var div = React.createElement("div", {
                ref: this._getMainRef,
                className: "ig-multi-column-combo-box igr-multi-column-combo-box",
                children: children
            });
            return div;
        };
        IgrMultiColumnComboBox.prototype.verifyReferences = function () {
            var _this = this;
            if (this._elRef) {
                this.requestRender = this.requestRender.bind(this);
                this._portalManager = new igniteuiReactCore.PortalManager("popupContent", this.requestRender);
                this._reactRenderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, true, {}, this._portalManager);
                if (document) {
                    this._elRef.style.display = "block";
                    this._elRef.style.width = "100%";
                    this._elRef.style.height = "100%";
                }
                // render needs to fire again after the portalManager is created. 
                this.requestRender();
                this.i.provideRenderer(this._reactRenderer);
                this._reactRenderer.addSizeWatcher(function () {
                    _this.i.notifySizeChanged();
                });
            }
        };
        IgrMultiColumnComboBox.prototype.requestRender = function () {
            if (this._initialized)
                this.setState({});
        };
        IgrMultiColumnComboBox.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrMultiColumnComboBox.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrMultiColumnComboBox.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrMultiColumnComboBox.prototype.componentWillUnmount = function () {
            this.i.destroy();
            if (this._reactRenderer)
                this._reactRenderer.destroy();
        };
        IgrMultiColumnComboBox.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this.i.notifySizeChanged();
            this.initializeContent();
        };
        IgrMultiColumnComboBox.prototype.initializeContent = function () {
            this._styling(this._elRef, this);
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrMultiColumnComboBox.prototype.createImplementation = function () {
            return new MultiColumnComboBox();
        };
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "showClearButton", {
            /**
         * Gets or sets the ShowClearButton property to detirmine if the clear button is shown
        */
            get: function () {
                return this.i.a9;
            },
            set: function (v) {
                this.i.a9 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "fields", {
            /**
             * Gets or sets the desired properties for the data source to load. If specified the data source may decide to constrain the properties it fetches to these properties and must make sure that at least those properties are loaded, rather than the default behavior for that data source.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "backgroundColor", {
            /**
             * Gets or sets the background color to use for the input group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.g4);
            },
            set: function (v) {
                this.i.g4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualBackgroundColor", {
            /**
             * Gets the actual opacity to use for the underline ripple element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.gt);
            },
            set: function (v) {
                this.i.gt = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "baseTheme", {
            /**
             * Gets or sets the base built in theme to use for the component.
            */
            get: function () {
                return this.i.aa;
            },
            set: function (v) {
                this.i.aa = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualBaseTheme", {
            /**
             * Gets the actual display baseTheme to use for the component.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "borderColor", {
            /**
             * Gets or sets the color to use the border of the input group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.g5);
            },
            set: function (v) {
                this.i.g5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualBorderColor", {
            /**
             * Gets the actual item background color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.gu);
            },
            set: function (v) {
                this.i.gu = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "borderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group.
            */
            get: function () {
                return this.i.b4;
            },
            set: function (v) {
                this.i.b4 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualBorderWidth", {
            /**
             * Gets the actual item border width.
            */
            get: function () {
                return this.i.bu;
            },
            set: function (v) {
                this.i.bu = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "columnHeadersVisible", {
            /**
             * Gets or sets the visibility of the drop down button.
            */
            get: function () {
                return this.i.columnHeadersVisible;
            },
            set: function (v) {
                this.i.columnHeadersVisible = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "contentPaddingBottom", {
            get: function () {
                return this.i.ht ? this.i.ht.b : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.ht.b = +v;
                this.i.ht = this.i.ht;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "contentPaddingLeft", {
            get: function () {
                return this.i.ht ? this.i.ht.c : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.ht.c = +v;
                this.i.ht = this.i.ht;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "contentPaddingRight", {
            get: function () {
                return this.i.ht ? this.i.ht.d : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.ht.d = +v;
                this.i.ht = this.i.ht;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "contentPaddingTop", {
            get: function () {
                return this.i.ht ? this.i.ht.e : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.ht.e = +v;
                this.i.ht = this.i.ht;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBox.prototype.ensureContentPadding = function () {
            if (this.i.ht) {
                return;
            }
            this.i.ht = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualContentPaddingBottom", {
            get: function () {
                return this.i.hs ? this.i.hs.b : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.hs.b = +v;
                this.i.hs = this.i.hs;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualContentPaddingLeft", {
            get: function () {
                return this.i.hs ? this.i.hs.c : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.hs.c = +v;
                this.i.hs = this.i.hs;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualContentPaddingRight", {
            get: function () {
                return this.i.hs ? this.i.hs.d : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.hs.d = +v;
                this.i.hs = this.i.hs;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualContentPaddingTop", {
            get: function () {
                return this.i.hs ? this.i.hs.e : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.hs.e = +v;
                this.i.hs = this.i.hs;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBox.prototype.ensureActualContentPadding = function () {
            if (this.i.hs) {
                return;
            }
            this.i.hs = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "cornerRadiusBottomRight", {
            get: function () {
                return this.i.f5 ? this.i.f5.b : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.f5.b = +v;
                this.i.f5 = this.i.f5;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "cornerRadiusBottomLeft", {
            get: function () {
                return this.i.f5 ? this.i.f5.a : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.f5.a = +v;
                this.i.f5 = this.i.f5;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "cornerRadiusTopLeft", {
            get: function () {
                return this.i.f5 ? this.i.f5.c : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.f5.c = +v;
                this.i.f5 = this.i.f5;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "cornerRadiusTopRight", {
            get: function () {
                return this.i.f5 ? this.i.f5.d : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.f5.d = +v;
                this.i.f5 = this.i.f5;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBox.prototype.ensureCornerRadius = function () {
            if (this.i.f5) {
                return;
            }
            this.i.f5 = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualCornerRadiusBottomRight", {
            get: function () {
                return this.i.f4 ? this.i.f4.b : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.f4.b = +v;
                this.i.f4 = this.i.f4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualCornerRadiusBottomLeft", {
            get: function () {
                return this.i.f4 ? this.i.f4.a : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.f4.a = +v;
                this.i.f4 = this.i.f4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualCornerRadiusTopLeft", {
            get: function () {
                return this.i.f4 ? this.i.f4.c : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.f4.c = +v;
                this.i.f4 = this.i.f4;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualCornerRadiusTopRight", {
            get: function () {
                return this.i.f4 ? this.i.f4.d : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.f4.d = +v;
                this.i.f4 = this.i.f4;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBox.prototype.ensureActualCornerRadius = function () {
            if (this.i.f4) {
                return;
            }
            this.i.f4 = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "dataSourceDesiredProperties", {
            /**
             * Gets or sets the desired properties for the data source to load. If specified the data source may decide to constrain the properties it fetches to these properties and must make sure that at least those properties are loaded, rather than the default behavior for that data source.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "density", {
            /**
             * Gets or sets the display Density to use for the buttons and dropdown grid.
            */
            get: function () {
                return this.i.density;
            },
            set: function (v) {
                this.i.density = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualDensity", {
            /**
             * Gets the actual display Density to use for the component.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "dropDownButtonVisible", {
            /**
             * Gets or sets the visibility of the drop down button.
            */
            get: function () {
                return this.i.dropDownButtonVisible;
            },
            set: function (v) {
                this.i.dropDownButtonVisible = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "focusBorderColor", {
            /**
             * Gets or sets the color to use the hovered background of the inputs in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hh);
            },
            set: function (v) {
                this.i.hh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualFocusBorderColor", {
            /**
             * Gets the actual item border color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.gv);
            },
            set: function (v) {
                this.i.gv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "focusBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when focused.
            */
            get: function () {
                return this.i.cg;
            },
            set: function (v) {
                this.i.cg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualFocusBorderWidth", {
            /**
             * Gets the actual item border width.
            */
            get: function () {
                return this.i.bv;
            },
            set: function (v) {
                this.i.bv = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "focusUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hi);
            },
            set: function (v) {
                this.i.hi = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualFocusUnderlineColor", {
            /**
             * Gets the actual color to use for the underline element when focused.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.gw);
            },
            set: function (v) {
                this.i.gw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "focusUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return this.i.ch;
            },
            set: function (v) {
                this.i.ch = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualFocusUnderlineOpacity", {
            /**
             * Gets the actual opacity to use for the underline element when focused.
            */
            get: function () {
                return this.i.bw;
            },
            set: function (v) {
                this.i.bw = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "focusUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when focused.
            */
            get: function () {
                return this.i.ci;
            },
            set: function (v) {
                this.i.ci = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualFocusUnderlineRippleOpacity", {
            /**
             * Gets the actual opacity to use for the underline ripple element when focused.
            */
            get: function () {
                return this.i.bx;
            },
            set: function (v) {
                this.i.bx = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "hoverUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hj);
            },
            set: function (v) {
                this.i.hj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualHoverUnderlineColor", {
            /**
             * Gets the actual color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.gx);
            },
            set: function (v) {
                this.i.gx = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "hoverUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return this.i.cj;
            },
            set: function (v) {
                this.i.cj = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualHoverUnderlineOpacity", {
            /**
             * Gets the actual opacity to use for the underline element when hovered.
            */
            get: function () {
                return this.i.by;
            },
            set: function (v) {
                this.i.by = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "hoverUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when hovered.
            */
            get: function () {
                return this.i.ck;
            },
            set: function (v) {
                this.i.ck = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualHoverUnderlineWidth", {
            /**
             * Gets the width to use for the underline element when hovered.
            */
            get: function () {
                return this.i.bz;
            },
            set: function (v) {
                this.i.bz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "dataSource", {
            /**
             * Gets or sets the data to which to bind the combo box list. This can be some type of array or list, or it can
             * be an IDataSource instance.
            */
            get: function () {
                return this.i.itemsSource;
            },
            set: function (v) {
                this.i.itemsSource = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualDataSource", {
            /**
             * Gets the actual data source that is being used by the combo box list. If a collection was provided for the combo box data, an implicit LocalDataSource has been created, and this is available via this property.
            */
            get: function () {
                return this.i.actualDataSource;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "label", {
            /**
             * The text displayed in the label portion of the control.
            */
            get: function () {
                return this.i.eo;
            },
            set: function (v) {
                this.i.eo = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "labelTextColor", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hk);
            },
            set: function (v) {
                this.i.hk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualLabelTextColor", {
            /**
             * Gets the actual color to use for the text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.gy);
            },
            set: function (v) {
                this.i.gy = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "labelTextStyle", {
            /**
             * Gets or sets the font to use for the combobox.
            */
            get: function () {
                if (this.i.au == null) {
                    return null;
                }
                return this.i.au.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.au = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualLabelVisible", {
            /**
             * Gets or sets the visibility of the label.
            */
            get: function () {
                return this.i.actualLabelVisible;
            },
            set: function (v) {
                this.i.actualLabelVisible = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "noMatchesFoundLabel", {
            /**
             * Gets or sets the text to display on the list when no suggested matches are found.
            */
            get: function () {
                return this.i.eu;
            },
            set: function (v) {
                this.i.eu = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualNoMatchesFoundLabel", {
            /**
             * Gets the actual text to display on the list when no suggested matches are found.
            */
            get: function () {
                return this.i.actualNoMatchesFoundLabel;
            },
            set: function (v) {
                this.i.actualNoMatchesFoundLabel = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "noMatchesFoundLabelBackgroundColor", {
            /**
             * Gets or sets the color to use for the "no matches found" label.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hl);
            },
            set: function (v) {
                this.i.hl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualNoMatchesFoundLabelBackgroundColor", {
            /**
             * Gets the actual color to use for the "no matches found" label.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.gz);
            },
            set: function (v) {
                this.i.gz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "noMatchesFoundLabelTextColor", {
            /**
             * Gets or sets the color to use for the "no matches found" label.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hm);
            },
            set: function (v) {
                this.i.hm = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualNoMatchesFoundLabelTextColor", {
            /**
             * Gets the actual color to use for the "no matches found" label.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.g0);
            },
            set: function (v) {
                this.i.g0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "noMatchesFoundLabelTextStyle", {
            /**
             * Gets or sets the font to use for the combobox.
            */
            get: function () {
                if (this.i.av == null) {
                    return null;
                }
                return this.i.av.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.av = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "placeholder", {
            /**
             * Placeholder text which gives the user a hint about what kind of text is expected.
            */
            get: function () {
                return this.i.ez;
            },
            set: function (v) {
                this.i.ez = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "rowSeparatorsVisible", {
            /**
             * Gets or sets the visibility of the row separators in the drop down.
            */
            get: function () {
                return this.i.rowSeparatorsVisible;
            },
            set: function (v) {
                this.i.rowSeparatorsVisible = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "textColor", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hn);
            },
            set: function (v) {
                this.i.hn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualTextColor", {
            /**
             * Gets the actual color to use for the text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.g1);
            },
            set: function (v) {
                this.i.g1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "textStyle", {
            /**
             * Gets or sets the font to use for the combobox.
            */
            get: function () {
                if (this.i.aw == null) {
                    return null;
                }
                return this.i.aw.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.aw = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "underlineColor", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ho);
            },
            set: function (v) {
                this.i.ho = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualUnderlineColor", {
            /**
             * Gets the actual color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.g2);
            },
            set: function (v) {
                this.i.g2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "underlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return this.i.cl;
            },
            set: function (v) {
                this.i.cl = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualUnderlineOpacity", {
            /**
             * Gets the actual opacity to use for the underline element.
            */
            get: function () {
                return this.i.b0;
            },
            set: function (v) {
                this.i.b0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "underlineRippleColor", {
            /**
             * Gets or sets the color to use for the underline ripple element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hp);
            },
            set: function (v) {
                this.i.hp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualUnderlineRippleColor", {
            /**
             * Gets the actual color to use for the underline ripple element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.g3);
            },
            set: function (v) {
                this.i.g3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "underlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element.
            */
            get: function () {
                return this.i.cm;
            },
            set: function (v) {
                this.i.cm = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualUnderlineRippleOpacity", {
            /**
             * Gets the actual opacity to use for the underline ripple element.
            */
            get: function () {
                return this.i.b1;
            },
            set: function (v) {
                this.i.b1 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "underlineRippleWidth", {
            /**
             * Gets or sets the width to use for the underline element.
            */
            get: function () {
                return this.i.cn;
            },
            set: function (v) {
                this.i.cn = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualUnderlineRippleWidth", {
            /**
             * Gets the actual width to use for the underline element.
            */
            get: function () {
                return this.i.b2;
            },
            set: function (v) {
                this.i.b2 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "underlineWidth", {
            /**
             * Gets or sets the width to use for the underline element.
            */
            get: function () {
                return this.i.co;
            },
            set: function (v) {
                this.i.co = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualUnderlineWidth", {
            /**
             * Gets the actual width to use for the underline element.
            */
            get: function () {
                return this.i.b3;
            },
            set: function (v) {
                this.i.b3 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "allowFilter", {
            /**
             * Whether to allow filtering of the combo
            */
            get: function () {
                return this.i.a2;
            },
            set: function (v) {
                this.i.a2 = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "sortMode", {
            /**
             * Returns/sets the action to take when a column header is clicked.
            */
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = igniteuiReactCore.ensureEnum(SortMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "textField", {
            /**
             * Determines the name of the field in the data source will be used as the Text of the MultiColumnComboBox.
            */
            get: function () {
                return this.i.e7;
            },
            set: function (v) {
                this.i.e7 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "text", {
            /**
             * The text displayed in the edit portion of the control.
            */
            get: function () {
                return this.i.e5;
            },
            set: function (v) {
                this.i.e5 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "valueField", {
            /**
             * Sets or gets the user provided primary key to assume for the data. Certain functionality of the combo (such as the the current Value) requires
             * a way to uniquely identify items in order to work correctly.
             * If a primary key cannot be inferred from the data source, you may need to provide one here.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "actualValueField", {
            /**
             * Gets the actual name of the field in the data source will be used as the Value of the MultiColumnComboBox.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "value", {
            /**
             * Gets or sets the Value of the combo.
             * When the user selects an item from, the value is set based on the specified ValueField field. If not ValueField is specified, then the first field in the data source is used.
             * When the user enters text into the combo, the list is searched based on the TextField field. If a matching string is found, the Value of the combo is the value of the ValueField field in the same row.
             * If the text entered in the combo does not match any item on the list, then the value will return null.
            */
            get: function () {
                return this.i.cv;
            },
            set: function (v) {
                this.i.cv = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBox.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrMultiColumnComboBox.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrMultiColumnComboBox.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("MultiColumnComboBox");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        /**
     * Programmatically closes the list.

    */
        IgrMultiColumnComboBox.prototype.closeUp = function () {
            this.i.closeUp();
        };
        /**
         * Programmatically drops down the list.
        
        */
        IgrMultiColumnComboBox.prototype.dropDown = function () {
            this.i.dropDown();
        };
        /**
         * Programmatically focus the combo input area.
        
        */
        IgrMultiColumnComboBox.prototype.focus = function () {
            this.i.focus();
        };
        /**
         * Selects all the text in the combo input area.
        
        */
        IgrMultiColumnComboBox.prototype.select = function () {
            this.i.select();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrMultiColumnComboBox.prototype.exportVisualModel = function () {
            var iv = this.i.cr();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrMultiColumnComboBox.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.ea();
            return (iv);
        };
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "gotFocus", {
            get: function () {
                return this._gotFocus;
            },
            set: function (ev) {
                var _this = this;
                if (this._gotFocus_wrapped !== null) {
                    this.i.gotFocus = igniteuiReactCore.delegateRemove(this.i.gotFocus, this._gotFocus_wrapped);
                    this._gotFocus_wrapped = null;
                    this._gotFocus = null;
                }
                this._gotFocus = ev;
                this._gotFocus_wrapped = function (o, e) {
                    var outerArgs = new IgrGotFocusEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeGotFocus) {
                        _this.beforeGotFocus(_this, outerArgs);
                    }
                    if (_this._gotFocus) {
                        _this._gotFocus(_this, outerArgs);
                    }
                };
                this.i.gotFocus = igniteuiReactCore.delegateCombine(this.i.gotFocus, this._gotFocus_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "lostFocus", {
            get: function () {
                return this._lostFocus;
            },
            set: function (ev) {
                var _this = this;
                if (this._lostFocus_wrapped !== null) {
                    this.i.lostFocus = igniteuiReactCore.delegateRemove(this.i.lostFocus, this._lostFocus_wrapped);
                    this._lostFocus_wrapped = null;
                    this._lostFocus = null;
                }
                this._lostFocus = ev;
                this._lostFocus_wrapped = function (o, e) {
                    var outerArgs = new IgrLostFocusEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeLostFocus) {
                        _this.beforeLostFocus(_this, outerArgs);
                    }
                    if (_this._lostFocus) {
                        _this._lostFocus(_this, outerArgs);
                    }
                };
                this.i.lostFocus = igniteuiReactCore.delegateCombine(this.i.lostFocus, this._lostFocus_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "textChanged", {
            get: function () {
                return this._textChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._textChanged_wrapped !== null) {
                    this.i.textChanged = igniteuiReactCore.delegateRemove(this.i.textChanged, this._textChanged_wrapped);
                    this._textChanged_wrapped = null;
                    this._textChanged = null;
                }
                this._textChanged = ev;
                this._textChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrMultiColumnComboBoxTextChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeTextChanged) {
                        _this.beforeTextChanged(_this, outerArgs);
                    }
                    if (_this._textChanged) {
                        _this._textChanged(_this, outerArgs);
                    }
                };
                this.i.textChanged = igniteuiReactCore.delegateCombine(this.i.textChanged, this._textChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrMultiColumnComboBox.prototype, "valueChanged", {
            get: function () {
                return this._valueChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._valueChanged_wrapped !== null) {
                    this.i.valueChanged = igniteuiReactCore.delegateRemove(this.i.valueChanged, this._valueChanged_wrapped);
                    this._valueChanged_wrapped = null;
                    this._valueChanged = null;
                }
                this._valueChanged = ev;
                this._valueChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrMultiColumnComboBoxValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeValueChanged) {
                        _this.beforeValueChanged(_this, outerArgs);
                    }
                    if (_this._valueChanged) {
                        _this._valueChanged(_this, outerArgs);
                    }
                };
                this.i.valueChanged = igniteuiReactCore.delegateCombine(this.i.valueChanged, this._valueChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrMultiColumnComboBox;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrMultiColumnComboBoxModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrMultiColumnComboBoxModule() {
        }
        IgrMultiColumnComboBoxModule.register = function () {
            igniteuiReactInputs.IgrInputGroupModule.register();
            IgrDataGridCoreModule.register();
            IgrNumericColumnModule.register();
            IgrDateTimeColumnModule.register();
            IgrImageColumnModule.register();
            IgrTextColumnModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrMultiColumnComboBox', IgrMultiColumnComboBox);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrMultiColumnComboBox', IgrMultiColumnComboBox);
            igniteuiReactCore.TypeRegistrar.register('MultiColumnComboBox', MultiColumnComboBox.$type);
        };
        return IgrMultiColumnComboBoxModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDataGridModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDataGridModule() {
        }
        IgrDataGridModule.register = function () {
            IgrDataGridAllColumnsModule.register();
            IgrGridColumnOptionsModule.register();
            IgrComboBoxColumnModule.register();
            igniteuiReactInputs.IgrInputGroupModule.register();
            IgrMultiColumnComboBoxModule.register();
        };
        return IgrDataGridModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateSectionHeaderCellUpdatingEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateSectionHeaderCellUpdatingEventArgs, _super);
        function TemplateSectionHeaderCellUpdatingEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._cellInfo = null;
            _this._content = null;
            return _this;
        }
        Object.defineProperty(TemplateSectionHeaderCellUpdatingEventArgs.prototype, "cellInfo", {
            get: function () {
                return this._cellInfo;
            },
            set: function (a) {
                this._cellInfo = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(TemplateSectionHeaderCellUpdatingEventArgs.prototype, "content", {
            get: function () {
                return this._content;
            },
            set: function (a) {
                this._content = a;
            },
            enumerable: true,
            configurable: true
        });
        TemplateSectionHeaderCellUpdatingEventArgs.$t = igniteuiReactCore.markType(TemplateSectionHeaderCellUpdatingEventArgs, 'TemplateSectionHeaderCellUpdatingEventArgs', igniteuiReactCore.EventArgs.$);
        return TemplateSectionHeaderCellUpdatingEventArgs;
    }(igniteuiReactCore.EventArgs));

    /**
     * Information about the cell that has content which is being created or updated.
    */
    var IgrTemplateSectionHeaderCellUpdatingEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrTemplateSectionHeaderCellUpdatingEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrTemplateSectionHeaderCellUpdatingEventArgs.prototype.createImplementation = function () {
            return new TemplateSectionHeaderCellUpdatingEventArgs();
        };
        Object.defineProperty(IgrTemplateSectionHeaderCellUpdatingEventArgs.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrTemplateSectionHeaderCellUpdatingEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrTemplateSectionHeaderCellUpdatingEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrTemplateSectionHeaderCellUpdatingEventArgs.prototype, "content", {
            /**
             * The host in which to add or update content.
            */
            get: function () {
                return this.i.content.element.getNativeElement();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateSectionHeaderCellUpdatingEventArgs.prototype, "cellInfo", {
            /**
             * The backing information for the current cell.
            */
            get: function () {
                if (this.i.cellInfo == null) {
                    return null;
                }
                if (!this.i.cellInfo.externalObject) {
                    var ext = null;
                    switch (this.i.cellInfo.$type.name) {
                        case "DateTimeCellModel":
                            ext = new IgrDateTimeCellInfo();
                            break;
                        case "ImageCellModel":
                            ext = new IgrImageCellInfo();
                            break;
                        case "NumericCellModel":
                            ext = new IgrNumericCellInfo();
                            break;
                        case "RowSeparatorModel":
                            ext = new IgrRowSeparatorInfo();
                            break;
                        case "SectionHeaderCellModel":
                            ext = new IgrSectionHeaderCellInfo();
                            break;
                        case "TemplateCellModel":
                            ext = new IgrTemplateCellInfo();
                            break;
                        case "TemplateHeaderCellModel":
                            ext = new IgrTemplateHeaderCellInfo();
                            break;
                        case "TemplateSectionHeaderCellModel":
                            ext = new IgrTemplateSectionHeaderCellInfo();
                            break;
                        case "TextCellModel":
                            ext = new IgrTextCellInfo();
                            break;
                        case "TextHeaderCellModel":
                            ext = new IgrTextHeaderCellInfo();
                            break;
                    }
                    ext._implementation = this.i.cellInfo;
                    this.i.cellInfo.externalObject = ext;
                }
                return this.i.cellInfo.externalObject;
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateSectionHeaderCellUpdatingEventArgs;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var EditorCell_ComboExternal_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'EditorCell_ComboExternal');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var BrowserExecutionContext = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(BrowserExecutionContext, _super);
        function BrowserExecutionContext(a) {
            var _this = _super.call(this) || this;
            _this.b = new Date();
            _this._requestAnimationFrame = null;
            _this.requestAnimationFrame = a.getRequestAnimationFrame();
            _this.b = igniteuiReactCore.dateNow();
            return _this;
        }
        Object.defineProperty(BrowserExecutionContext.prototype, "requestAnimationFrame", {
            get: function () {
                return this._requestAnimationFrame;
            },
            set: function (a) {
                this._requestAnimationFrame = a;
            },
            enumerable: true,
            configurable: true
        });
        BrowserExecutionContext.prototype.enqueueAction = function (a) {
            window.setTimeout(function () { return a(); }, 0);
        };
        BrowserExecutionContext.prototype.enqueueAnimationAction = function (a) {
            this.requestAnimationFrame(function () { return a(); });
        };
        BrowserExecutionContext.prototype.execute = function (a) {
            window.setTimeout(function () { return a(); }, 0);
        };
        BrowserExecutionContext.prototype.executeDelayed = function (a, b) {
            window.setTimeout(function () { return a(); }, b);
        };
        BrowserExecutionContext.prototype.getCurrentRelativeTime = function () {
            var a = igniteuiReactCore.dateNow();
            return igniteuiReactCore.truncate(igniteuiReactCore.timeSpanTotalMilliseconds((+a - +(this.b))));
        };
        BrowserExecutionContext.$t = igniteuiReactCore.markType(BrowserExecutionContext, 'BrowserExecutionContext', igniteuiReactCore.Base.$, [igniteuiReactCore.IExecutionContext_$type]);
        return BrowserExecutionContext;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * This class is used to group the settings to define an animation phase.
    */
    var IgrGridAnimationPhaseSettings = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridAnimationPhaseSettings() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridAnimationPhaseSettings.prototype.createImplementation = function () {
            return new GridAnimationPhaseSettings();
        };
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridAnimationPhaseSettings.prototype.onImplementationCreated = function () {
        };
        IgrGridAnimationPhaseSettings.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "durationMilliseconds", {
            /**
             * The duration of an animation, in milliseconds
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "holdInitialMilliseconds", {
            /**
             * The amount of time to delay an animation, in milliseconds.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "perItemDelayMilliseconds", {
            /**
             * The amount of time to delay each item animating, in milliseconds
            */
            get: function () {
                return this.i.n;
            },
            set: function (v) {
                this.i.n = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "subItemDurationMilliseconds", {
            /**
             * The amount of time each item animating should take, in milliseconds
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "desiredSubItemDurationMilliseconds", {
            /**
             * The desired amount of time each item animating should take, in milliseconds
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "shouldItemsFinishSimultaneously", {
            /**
             * Configures whether all items animating should finish simultaneously
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridAnimationPhaseSettings.prototype, "easingFunctionType", {
            /**
             * Configures the Easing function used to animate the individual items
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = igniteuiReactCore.ensureEnum(GridEasingFunctionType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        IgrGridAnimationPhaseSettings.prototype.findByName = function (name) {
            return null;
        };
        return IgrGridAnimationPhaseSettings;
    }());

    /**
     * Represents info about the current cell.
    */
    var IgrEditorCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrEditorCellInfo, _super);
        function IgrEditorCellInfo() {
            return _super.call(this) || this;
        }
        IgrEditorCellInfo.prototype.createImplementation = function () {
            return new EditorCellModel();
        };
        Object.defineProperty(IgrEditorCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "isHidden", {
            /**
             * Gets or sets whether the editor cell is hidden or not.
            */
            get: function () {
                return this.i.kz;
            },
            set: function (v) {
                this.i.kz = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "editTarget", {
            /**
             * Gets or sets the edit target for this cell.
            */
            get: function () {
                if (this.i.kv == null) {
                    return null;
                }
                return this.i.kv.externalObject;
            },
            set: function (v) {
                v == null ? this.i.kv = null : this.i.kv = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "dataType", {
            /**
             * Gets or sets the data type associated with the cell being edited.
            */
            get: function () {
                return this.i.kt;
            },
            set: function (v) {
                this.i.kt = igniteuiReactCore.ensureEnum(igniteuiReactCore.DataSourceSchemaPropertyType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "errorMessage", {
            /**
             * Gets or sets the error message to display in the editor cell.
            */
            get: function () {
                return this.i.lp;
            },
            set: function (v) {
                this.i.lp = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "editValue", {
            /**
             * Gets or sets the user selected value.
            */
            get: function () {
                return this.i.le;
            },
            set: function (v) {
                this.i.le = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "editorType", {
            /**
             * Gets or sets the type of editor to use while cell editing.
            */
            get: function () {
                return this.i.kx;
            },
            set: function (v) {
                this.i.kx = igniteuiReactCore.ensureEnum(EditorType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "editorDataSource", {
            /**
             * Gets or sets the data source to use for the editor where it makes sense.
            */
            get: function () {
                return this.i.ld;
            },
            set: function (v) {
                this.i.ld = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "editorTextField", {
            /**
             * Gets or sets the editors display member.
            */
            get: function () {
                return this.i.lj;
            },
            set: function (v) {
                this.i.lj = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorCellInfo.prototype, "editorValueField", {
            /**
             * Gets or sets the editors value member.
            */
            get: function () {
                return this.i.kr;
            },
            set: function (v) {
                this.i.kr = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrEditorCellInfo.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.editTarget && this.editTarget.name && this.editTarget.name == name) {
                return this.editTarget;
            }
            return null;
        };
        return IgrEditorCellInfo;
    }(IgrCellInfo));

    /**
     * Represents info about the current cell.
    */
    var IgrEditorRowCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrEditorRowCellInfo, _super);
        function IgrEditorRowCellInfo() {
            return _super.call(this) || this;
        }
        IgrEditorRowCellInfo.prototype.createImplementation = function () {
            return new EditorRowCellModel();
        };
        Object.defineProperty(IgrEditorRowCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrEditorRowCellInfo.prototype, "editTarget", {
            /**
             * Gets or sets the edit target for this cell.
            */
            get: function () {
                if (this.i.kr == null) {
                    return null;
                }
                return this.i.kr.externalObject;
            },
            set: function (v) {
                v == null ? this.i.kr = null : this.i.kr = v.i;
            },
            enumerable: true,
            configurable: true
        });
        IgrEditorRowCellInfo.prototype.findByName = function (name) {
            var baseResult = _super.prototype.findByName.call(this, name);
            if (baseResult) {
                return baseResult;
            }
            if (this.editTarget && this.editTarget.name && this.editTarget.name == name) {
                return this.editTarget;
            }
            return null;
        };
        return IgrEditorRowCellInfo;
    }(IgrCellInfo));

    /**
     * Backing information for a section header cell in the grid.
    */
    var IgrSummaryCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSummaryCellInfo, _super);
        function IgrSummaryCellInfo() {
            return _super.call(this) || this;
        }
        IgrSummaryCellInfo.prototype.createImplementation = function () {
            return new SummaryCellModel();
        };
        Object.defineProperty(IgrSummaryCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryCellInfo.prototype, "resolvedSummaryLabel", {
            /**
             * Sets or gets the resolved summary label for the summary cell.
            */
            get: function () {
                return this.i.ky;
            },
            set: function (v) {
                this.i.ky = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryCellInfo.prototype, "resolvedSummaryValue", {
            /**
             * Sets or gets the resolved summary value for the sumamry cell.
            */
            get: function () {
                return this.i.k0;
            },
            set: function (v) {
                this.i.k0 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryCellInfo.prototype, "summaryLabelTextColor", {
            /**
             * Gets or sets the color of the text for the summary label in the cell.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.k5);
            },
            set: function (v) {
                this.i.k5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryCellInfo.prototype, "font", {
            get: function () {
                if (this.i.kr == null) {
                    return null;
                }
                return this.i.kr.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.kr = fi;
            },
            enumerable: true,
            configurable: true
        });
        return IgrSummaryCellInfo;
    }(IgrCellInfo));

    /**
     * Represents backing information for vertical separators.
    */
    var IgrVerticalSeparatorCellInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrVerticalSeparatorCellInfo, _super);
        function IgrVerticalSeparatorCellInfo() {
            return _super.call(this) || this;
        }
        IgrVerticalSeparatorCellInfo.prototype.createImplementation = function () {
            return new VerticalSeparatorCellModel();
        };
        Object.defineProperty(IgrVerticalSeparatorCellInfo.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrVerticalSeparatorCellInfo.prototype, "isHitTestVisible", {
            /**
             * Gets or sets whether the vertical separator is hit test visible.
            */
            get: function () {
                return this.i.kr;
            },
            set: function (v) {
                this.i.kr = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrVerticalSeparatorCellInfo;
    }(IgrCellInfo));

    /**
     * Object used to store group information for group headers.
    */
    var IgrGroupData = /** @class */ /*@__PURE__*/ (function () {
        function IgrGroupData() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGroupData.prototype.createImplementation = function () {
            return new GroupData();
        };
        Object.defineProperty(IgrGroupData.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGroupData.prototype.onImplementationCreated = function () {
        };
        IgrGroupData.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGroupData.prototype, "groupName", {
            /**
             * The grouping key.
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGroupData.prototype, "groupValue", {
            /**
             * The group value.
            */
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGroupData.prototype, "formattedText", {
            /**
             * The value as formatted text.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrGroupData.prototype.findByName = function (name) {
            return null;
        };
        return IgrGroupData;
    }());

    /**
     * Object used to store summary information for group headers.
    */
    var IgrSummaryData = /** @class */ /*@__PURE__*/ (function () {
        function IgrSummaryData() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrSummaryData.prototype.createImplementation = function () {
            return new SummaryData();
        };
        Object.defineProperty(IgrSummaryData.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrSummaryData.prototype.onImplementationCreated = function () {
        };
        IgrSummaryData.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrSummaryData.prototype, "summaryName", {
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryData.prototype, "summaryValue", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryData.prototype, "summaryOperand", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(igniteuiReactCore.SummaryOperand_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryData.prototype, "formattedText", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSummaryData.prototype, "formattedValue", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrSummaryData.prototype.findByName = function (name) {
            return null;
        };
        return IgrSummaryData;
    }());

    var IgrGridFilterDialogOpeningEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridFilterDialogOpeningEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridFilterDialogOpeningEventArgs.prototype.createImplementation = function () {
            return new GridFilterDialogOpeningEventArgs();
        };
        Object.defineProperty(IgrGridFilterDialogOpeningEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogOpeningEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridFilterDialogOpeningEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridFilterDialogOpeningEventArgs.prototype, "column", {
            get: function () {
                if (this.i.a == null) {
                    return null;
                }
                if (!this.i.a.externalObject) {
                    var e = IgrColumn._createFromInternal(this.i.a);
                    if (e) {
                        e._implementation = this.i.a;
                    }
                    this.i.a.externalObject = e;
                }
                return this.i.a.externalObject;
            },
            set: function (v) {
                v == null ? this.i.a = null : this.i.a = v.i;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridFilterDialogOpeningEventArgs;
    }());

    var IgrGridFilterDialogFilterChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridFilterDialogFilterChangeEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridFilterDialogFilterChangeEventArgs.prototype.createImplementation = function () {
            return new GridFilterDialogFilterChangeEventArgs();
        };
        Object.defineProperty(IgrGridFilterDialogFilterChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogFilterChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrGridFilterDialogFilterChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridFilterDialogFilterChangeEventArgs.prototype, "filter", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrGridFilterDialogFilterChangeEventArgs;
    }());

    var IgrFilterDialogRenderCompletedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrFilterDialogRenderCompletedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrFilterDialogRenderCompletedEventArgs.prototype.createImplementation = function () {
            return new FilterDialogRenderCompletedEventArgs();
        };
        Object.defineProperty(IgrFilterDialogRenderCompletedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrFilterDialogRenderCompletedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrFilterDialogRenderCompletedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrFilterDialogRenderCompletedEventArgs;
    }());

    /**
     * An advanced grid for displaying data.
    */
    var IgrDataGridFilterDialog = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDataGridFilterDialog, _super);
        function IgrDataGridFilterDialog(props) {
            var _this = _super.call(this, props) || this;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._dialogOpening = null;
            _this._dialogOpening_wrapped = null;
            _this._filterChanging = null;
            _this._filterChanging_wrapped = null;
            _this._filterChanged = null;
            _this._filterChanged_wrapped = null;
            _this._renderCompleted = null;
            _this._renderCompleted_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            return _this;
        }
        IgrDataGridFilterDialog.prototype.createImplementation = function () {
            return new GridFilterDialog();
        };
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: true,
            configurable: true
        });
        IgrDataGridFilterDialog._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDataGridFilterDialog.prototype.onImplementationCreated = function () {
        };
        IgrDataGridFilterDialog.prototype.componentDidMount = function () {
            var e_1, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDataGridFilterDialog.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDataGridFilterDialog.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "isAnimationEnabled", {
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "pixelScalingRatio", {
            /**
             * Gets or sets the scaling value used to affect the pixel density of the control.
             * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
             * to appear blurry.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "actualPixelScalingRatio", {
            /**
             * Gets the actual pixel scaling ratio used to affect the pixel density of the control.
             * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
             * to appear blurry.
            */
            get: function () {
                return this.i.ad;
            },
            set: function (v) {
                this.i.ad = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "iconColor", {
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bp);
            },
            set: function (v) {
                this.i.bp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "viewSize", {
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "isOpen", {
            get: function () {
                return this.i.y;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridFilterDialog.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridFilterDialog.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDataGridFilterDialog.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DataGridFilterDialog");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDataGridFilterDialog.prototype.notifySizeChanged = function (width, height) {
            this.i.a8(width, height);
        };
        IgrDataGridFilterDialog.prototype.notifyCellSizeChanged = function () {
            this.i.a7();
        };
        IgrDataGridFilterDialog.prototype.showIcon = function () {
            this.i.bk();
        };
        IgrDataGridFilterDialog.prototype.hideIcon = function () {
            this.i.a5();
        };
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "dialogOpening", {
            get: function () {
                return this._dialogOpening;
            },
            set: function (ev) {
                var _this = this;
                if (this._dialogOpening_wrapped !== null) {
                    this.i.dialogOpening = igniteuiReactCore.delegateRemove(this.i.dialogOpening, this._dialogOpening_wrapped);
                    this._dialogOpening_wrapped = null;
                    this._dialogOpening = null;
                }
                this._dialogOpening = ev;
                this._dialogOpening_wrapped = function (o, e) {
                    var outerArgs = new IgrGridFilterDialogOpeningEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeDialogOpening) {
                        _this.beforeDialogOpening(_this, outerArgs);
                    }
                    if (_this._dialogOpening) {
                        _this._dialogOpening(_this, outerArgs);
                    }
                };
                this.i.dialogOpening = igniteuiReactCore.delegateCombine(this.i.dialogOpening, this._dialogOpening_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "filterChanging", {
            get: function () {
                return this._filterChanging;
            },
            set: function (ev) {
                var _this = this;
                if (this._filterChanging_wrapped !== null) {
                    this.i.filterChanging = igniteuiReactCore.delegateRemove(this.i.filterChanging, this._filterChanging_wrapped);
                    this._filterChanging_wrapped = null;
                    this._filterChanging = null;
                }
                this._filterChanging = ev;
                this._filterChanging_wrapped = function (o, e) {
                    var outerArgs = new IgrGridFilterDialogFilterChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFilterChanging) {
                        _this.beforeFilterChanging(_this, outerArgs);
                    }
                    if (_this._filterChanging) {
                        _this._filterChanging(_this, outerArgs);
                    }
                };
                this.i.filterChanging = igniteuiReactCore.delegateCombine(this.i.filterChanging, this._filterChanging_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "filterChanged", {
            get: function () {
                return this._filterChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._filterChanged_wrapped !== null) {
                    this.i.filterChanged = igniteuiReactCore.delegateRemove(this.i.filterChanged, this._filterChanged_wrapped);
                    this._filterChanged_wrapped = null;
                    this._filterChanged = null;
                }
                this._filterChanged = ev;
                this._filterChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrGridFilterDialogFilterChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeFilterChanged) {
                        _this.beforeFilterChanged(_this, outerArgs);
                    }
                    if (_this._filterChanged) {
                        _this._filterChanged(_this, outerArgs);
                    }
                };
                this.i.filterChanged = igniteuiReactCore.delegateCombine(this.i.filterChanged, this._filterChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridFilterDialog.prototype, "renderCompleted", {
            get: function () {
                return this._renderCompleted;
            },
            set: function (ev) {
                var _this = this;
                if (this._renderCompleted_wrapped !== null) {
                    this.i.renderCompleted = igniteuiReactCore.delegateRemove(this.i.renderCompleted, this._renderCompleted_wrapped);
                    this._renderCompleted_wrapped = null;
                    this._renderCompleted = null;
                }
                this._renderCompleted = ev;
                this._renderCompleted_wrapped = function (o, e) {
                    var outerArgs = new IgrFilterDialogRenderCompletedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeRenderCompleted) {
                        _this.beforeRenderCompleted(_this, outerArgs);
                    }
                    if (_this._renderCompleted) {
                        _this._renderCompleted(_this, outerArgs);
                    }
                };
                this.i.renderCompleted = igniteuiReactCore.delegateCombine(this.i.renderCompleted, this._renderCompleted_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrDataGridFilterDialog;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridFilterDialogViewModelGrouping = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridFilterDialogViewModelGrouping() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridFilterDialogViewModelGrouping.prototype.createImplementation = function () {
            return new GridFilterDialogViewModelGrouping();
        };
        Object.defineProperty(IgrGridFilterDialogViewModelGrouping.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogViewModelGrouping.prototype.onImplementationCreated = function () {
        };
        IgrGridFilterDialogViewModelGrouping.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridFilterDialogViewModelGrouping.prototype, "startIndex", {
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModelGrouping.prototype, "endIndex", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModelGrouping.prototype, "isOrGrouping", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogViewModelGrouping.prototype.findByName = function (name) {
            return null;
        };
        return IgrGridFilterDialogViewModelGrouping;
    }());

    var IgrGridFilterDialogViewModelGroupingLevel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridFilterDialogViewModelGroupingLevel, _super);
        function IgrGridFilterDialogViewModelGroupingLevel(list) {
            var _this = _super.call(this) || this;
            if (!IgrGridFilterDialogViewModelGrouping.$type) {
                IgrGridFilterDialogViewModelGrouping.$type = igniteuiReactCore.markType(IgrGridFilterDialogViewModelGrouping, "IgrGridFilterDialogViewModelGrouping");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridFilterDialogViewModelGroupingLevel.prototype._createInnerColl = function () {
            if (!IgrGridFilterDialogViewModelGrouping.$type) {
                IgrGridFilterDialogViewModelGrouping.$type = igniteuiReactCore.markType(IgrGridFilterDialogViewModelGrouping, "IgrGridFilterDialogViewModelGrouping");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrGridFilterDialogViewModelGrouping.$type, GridFilterDialogViewModelGrouping.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrGridFilterDialogViewModelGrouping();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrGridFilterDialogViewModelGroupingLevel;
    }(igniteuiReactCore.IgCollection));

    var IgrGridFilterDialogViewModelGroupingLevelCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridFilterDialogViewModelGroupingLevelCollection, _super);
        function IgrGridFilterDialogViewModelGroupingLevelCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrGridFilterDialogViewModelGroupingLevel.$type) {
                IgrGridFilterDialogViewModelGroupingLevel.$type = igniteuiReactCore.markType(IgrGridFilterDialogViewModelGroupingLevel, "IgrGridFilterDialogViewModelGroupingLevel");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridFilterDialogViewModelGroupingLevelCollection.prototype._createInnerColl = function () {
            if (!IgrGridFilterDialogViewModelGroupingLevel.$type) {
                IgrGridFilterDialogViewModelGroupingLevel.$type = igniteuiReactCore.markType(IgrGridFilterDialogViewModelGroupingLevel, "IgrGridFilterDialogViewModelGroupingLevel");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrGridFilterDialogViewModelGroupingLevel.$type, GridFilterDialogViewModelGroupingLevel.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrGridFilterDialogViewModelGroupingLevel();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrGridFilterDialogViewModelGroupingLevelCollection;
    }(igniteuiReactCore.IgCollection));

    var IgrGridFilterDialogViewModelRow = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridFilterDialogViewModelRow() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridFilterDialogViewModelRow.prototype.createImplementation = function () {
            return new GridFilterDialogViewModelRow();
        };
        Object.defineProperty(IgrGridFilterDialogViewModelRow.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogViewModelRow.prototype.onImplementationCreated = function () {
        };
        IgrGridFilterDialogViewModelRow.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridFilterDialogViewModelRow.prototype, "operatorTypes", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModelRow.prototype, "operators", {
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModelRow.prototype, "currentOperator", {
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModelRow.prototype, "operandNumber", {
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModelRow.prototype, "operand1", {
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModelRow.prototype, "operand2", {
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogViewModelRow.prototype.findByName = function (name) {
            return null;
        };
        return IgrGridFilterDialogViewModelRow;
    }());

    var IgrGridFilterDialogViewModelRowCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrGridFilterDialogViewModelRowCollection, _super);
        function IgrGridFilterDialogViewModelRowCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrGridFilterDialogViewModelRow.$type) {
                IgrGridFilterDialogViewModelRow.$type = igniteuiReactCore.markType(IgrGridFilterDialogViewModelRow, "IgrGridFilterDialogViewModelRow");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrGridFilterDialogViewModelRowCollection.prototype._createInnerColl = function () {
            if (!IgrGridFilterDialogViewModelRow.$type) {
                IgrGridFilterDialogViewModelRow.$type = igniteuiReactCore.markType(IgrGridFilterDialogViewModelRow, "IgrGridFilterDialogViewModelRow");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrGridFilterDialogViewModelRow.$type, GridFilterDialogViewModelRow.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrGridFilterDialogViewModelRow();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrGridFilterDialogViewModelRowCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrGridFilterDialogViewModel = /** @class */ /*@__PURE__*/ (function () {
        function IgrGridFilterDialogViewModel() {
            this._groupingLevels = null;
            this._rows = null;
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrGridFilterDialogViewModel.prototype.createImplementation = function () {
            return new GridFilterDialogViewModel();
        };
        Object.defineProperty(IgrGridFilterDialogViewModel.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogViewModel.prototype.onImplementationCreated = function () {
        };
        IgrGridFilterDialogViewModel.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrGridFilterDialogViewModel.prototype, "propertyType", {
            get: function () {
                return this.i.a;
            },
            set: function (v) {
                this.i.a = igniteuiReactCore.ensureEnum(igniteuiReactCore.DataSourceSchemaPropertyType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModel.prototype, "groupingLevels", {
            get: function () {
                if (this._groupingLevels === null) {
                    var coll = new IgrGridFilterDialogViewModelGroupingLevelCollection();
                    var innerColl = this.i.e;
                    if (!innerColl) {
                        innerColl = new GridFilterDialogViewModelGroupingLevelCollection();
                    }
                    this._groupingLevels = coll._fromInner(innerColl);
                    this.i.e = innerColl;
                }
                return this._groupingLevels;
            },
            set: function (v) {
                if (this._groupingLevels !== null) {
                    this._groupingLevels._setSyncTarget(null);
                    this._groupingLevels = null;
                }
                var coll = new IgrGridFilterDialogViewModelGroupingLevelCollection();
                this._groupingLevels = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(GridFilterDialogViewModelGroupingLevel.$type);
                var innerColl = this.i.e;
                if (!innerColl) {
                    innerColl = new GridFilterDialogViewModelGroupingLevelCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._groupingLevels._setSyncTarget(syncColl);
                this.i.e = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModel.prototype, "isTopLevelOr", {
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModel.prototype, "maxGroupingLevels", {
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrGridFilterDialogViewModel.prototype, "rows", {
            get: function () {
                if (this._rows === null) {
                    var coll = new IgrGridFilterDialogViewModelRowCollection();
                    var innerColl = this.i.f;
                    if (!innerColl) {
                        innerColl = new GridFilterDialogViewModelRowCollection();
                    }
                    this._rows = coll._fromInner(innerColl);
                    this.i.f = innerColl;
                }
                return this._rows;
            },
            set: function (v) {
                if (this._rows !== null) {
                    this._rows._setSyncTarget(null);
                    this._rows = null;
                }
                var coll = new IgrGridFilterDialogViewModelRowCollection();
                this._rows = coll._fromOuter(v);
                var syncColl = new igniteuiReactCore.SyncableObservableCollection$1(GridFilterDialogViewModelRow.$type);
                var innerColl = this.i.f;
                if (!innerColl) {
                    innerColl = new GridFilterDialogViewModelRowCollection();
                }
                syncColl._inner = innerColl;
                syncColl.clear();
                this._rows._setSyncTarget(syncColl);
                this.i.f = innerColl;
            },
            enumerable: true,
            configurable: true
        });
        IgrGridFilterDialogViewModel.prototype.findByName = function (name) {
            if (this.rows != null && this.rows.findByName && this.rows.findByName(name)) {
                return this.rows.findByName(name);
            }
            return null;
        };
        IgrGridFilterDialogViewModel.prototype.addNewRow = function () {
            this.i.n();
        };
        IgrGridFilterDialogViewModel.prototype.canGroupRange = function (startIndex, endIndex) {
            var iv = this.i.h(startIndex, endIndex);
            return (iv);
        };
        IgrGridFilterDialogViewModel.prototype.ungroupRange = function (startIndex, endIndex) {
            this.i.aa(startIndex, endIndex);
        };
        IgrGridFilterDialogViewModel.prototype.targetingRange = function (startIndex, endIndex) {
            var iv = this.i.l(startIndex, endIndex);
            return (iv);
        };
        IgrGridFilterDialogViewModel.prototype.toggleRange = function (startIndex, endIndex) {
            this.i.z(startIndex, endIndex);
        };
        IgrGridFilterDialogViewModel.prototype.groupRange = function (startIndex, endIndex, isOrGrouping) {
            this.i.o(startIndex, endIndex, isOrGrouping);
        };
        return IgrGridFilterDialogViewModel;
    }());

    var IgrDataGridExpansionIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDataGridExpansionIndicator, _super);
        function IgrDataGridExpansionIndicator(props) {
            var _this = _super.call(this, props) || this;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            return _this;
        }
        IgrDataGridExpansionIndicator.prototype.createImplementation = function () {
            return new GridExpansionIndicator();
        };
        Object.defineProperty(IgrDataGridExpansionIndicator.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: true,
            configurable: true
        });
        IgrDataGridExpansionIndicator._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDataGridExpansionIndicator.prototype.onImplementationCreated = function () {
        };
        IgrDataGridExpansionIndicator.prototype.componentDidMount = function () {
            var e_1, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDataGridExpansionIndicator.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDataGridExpansionIndicator.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrDataGridExpansionIndicator.prototype, "isExpanded", {
            /**
             * Gets or sets the expansion state of the indicator.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridExpansionIndicator.prototype, "iconColor", {
            /**
             * Gets or sets the color of the indicator.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ae);
            },
            set: function (v) {
                this.i.ae = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridExpansionIndicator.prototype, "isAnimationEnabled", {
            /**
             * Gets or sets whether animations are enabled.
            */
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridExpansionIndicator.prototype, "pixelScalingRatio", {
            /**
             * Gets or sets the scaling value used to affect the pixel density of the control.
             * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
             * to appear blurry.
            */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridExpansionIndicator.prototype, "actualPixelScalingRatio", {
            /**
             * Gets the actual pixel scaling ratio used to affect the pixel density of the control.
             * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
             * to appear blurry.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridExpansionIndicator.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrDataGridExpansionIndicator.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridExpansionIndicator.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDataGridExpansionIndicator.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DataGridExpansionIndicator");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDataGridExpansionIndicator.prototype.notifySizeChanged = function (width, height) {
            this.i.y(width, height);
        };
        return IgrDataGridExpansionIndicator;
    }(React.Component));

    var IgrSortIndicatorRenderCompletedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrSortIndicatorRenderCompletedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrSortIndicatorRenderCompletedEventArgs.prototype.createImplementation = function () {
            return new SortIndicatorRenderCompletedEventArgs();
        };
        Object.defineProperty(IgrSortIndicatorRenderCompletedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrSortIndicatorRenderCompletedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrSortIndicatorRenderCompletedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrSortIndicatorRenderCompletedEventArgs;
    }());

    /**
     * An advanced grid for displaying data.
    */
    var IgrDataGridSortIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDataGridSortIndicator, _super);
        function IgrDataGridSortIndicator(props) {
            var _this = _super.call(this, props) || this;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._renderCompleted = null;
            _this._renderCompleted_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            return _this;
        }
        IgrDataGridSortIndicator.prototype.createImplementation = function () {
            return new GridSortIndicator();
        };
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: true,
            configurable: true
        });
        IgrDataGridSortIndicator._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrDataGridSortIndicator.prototype.onImplementationCreated = function () {
        };
        IgrDataGridSortIndicator.prototype.componentDidMount = function () {
            var e_1, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrDataGridSortIndicator.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrDataGridSortIndicator.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "sortDirection", {
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(ColumnSortDirection_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "iconColor", {
            get: function () {
                return igniteuiReactCore.brushToString(this.i.a0);
            },
            set: function (v) {
                this.i.a0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "isAnimationEnabled", {
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "pixelScalingRatio", {
            /**
             * Gets or sets the scaling value used to affect the pixel density of the control.
             * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
             * to appear blurry.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "actualPixelScalingRatio", {
            /**
             * Gets the actual pixel scaling ratio used to affect the pixel density of the control.
             * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control
             * to appear blurry.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "sortIndicatorStyle", {
            get: function () {
                return this.i.f;
            },
            set: function (v) {
                this.i.f = igniteuiReactCore.ensureEnum(SortIndicatorStyle_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridSortIndicator.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridSortIndicator.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDataGridSortIndicator.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DataGridSortIndicator");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrDataGridSortIndicator.prototype.getDesiredScale = function () {
            var iv = this.i.v();
            return (iv);
        };
        IgrDataGridSortIndicator.prototype.notifySizeChanged = function (width, height) {
            this.i.ar(width, height);
        };
        IgrDataGridSortIndicator.prototype.notifyCellSizeChanged = function () {
            this.i.aq();
        };
        Object.defineProperty(IgrDataGridSortIndicator.prototype, "renderCompleted", {
            get: function () {
                return this._renderCompleted;
            },
            set: function (ev) {
                var _this = this;
                if (this._renderCompleted_wrapped !== null) {
                    this.i.renderCompleted = igniteuiReactCore.delegateRemove(this.i.renderCompleted, this._renderCompleted_wrapped);
                    this._renderCompleted_wrapped = null;
                    this._renderCompleted = null;
                }
                this._renderCompleted = ev;
                this._renderCompleted_wrapped = function (o, e) {
                    var outerArgs = new IgrSortIndicatorRenderCompletedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeRenderCompleted) {
                        _this.beforeRenderCompleted(_this, outerArgs);
                    }
                    if (_this._renderCompleted) {
                        _this._renderCompleted(_this, outerArgs);
                    }
                };
                this.i.renderCompleted = igniteuiReactCore.delegateCombine(this.i.renderCompleted, this._renderCompleted_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrDataGridSortIndicator;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DragType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('DragType', 'RangeSelect,0|HeaderResize,1|ColumnMove,2|None,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IExternalTemplateSectionHeader_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IExternalTemplateSectionHeader');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IExternalTemplateColumn_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IExternalTemplateColumn');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IExternalTemplateHeaderColumn_$type = /*@__PURE__*/ new igniteuiReactCore.Type(null, 'IExternalTemplateHeaderColumn');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrPinnedAreaSeparatorModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrPinnedAreaSeparatorModule() {
        }
        IgrPinnedAreaSeparatorModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrPinnedAreaSeparator", IgrPinnedAreaSeparator);
            igniteuiReactCore.TypeRegistrar.register("PinnedAreaSeparator", PinnedAreaSeparator.$type);
        };
        return IgrPinnedAreaSeparatorModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Used to configure the appearance of the section footer cells.
    */
    var IgrSectionFooter = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSectionFooter, _super);
        function IgrSectionFooter(props) {
            return _super.call(this, props) || this;
        }
        IgrSectionFooter.prototype.createImplementation = function () {
            return new SectionFooter();
        };
        Object.defineProperty(IgrSectionFooter.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        return IgrSectionFooter;
    }(IgrDefinitionBase));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrSectionFooterModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrSectionFooterModule() {
        }
        IgrSectionFooterModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrSectionFooter", IgrSectionFooter);
            igniteuiReactCore.TypeRegistrar.register("SectionFooter", SectionFooter.$type);
        };
        return IgrSectionFooterModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrHeaderRowSeparatorModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrHeaderRowSeparatorModule() {
        }
        IgrHeaderRowSeparatorModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrHeaderRowSeparator", IgrHeaderRowSeparator);
            igniteuiReactCore.TypeRegistrar.register("HeaderRowSeparator", HeaderRowSeparator.$type);
        };
        return IgrHeaderRowSeparatorModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateSectionHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateSectionHeader, _super);
        function TemplateSectionHeader() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.cellUpdating = null;
            return _this;
        }
        TemplateSectionHeader.prototype.cm = function (a, b, c) {
            return "templateSectionHeader";
        };
        TemplateSectionHeader.prototype.l = function (a) {
            return new TemplateSectionHeaderCellModel();
        };
        TemplateSectionHeader.prototype.fg = function (a, b) {
            if (this.cellUpdating != null) {
                this.cellUpdating(this, ((function () {
                    var $ret = new TemplateSectionHeaderCellUpdatingEventArgs();
                    $ret.cellInfo = a;
                    $ret.content = b;
                    return $ret;
                })()));
            }
        };
        TemplateSectionHeader.$t = igniteuiReactCore.markType(TemplateSectionHeader, 'TemplateSectionHeader', SectionHeader.$);
        return TemplateSectionHeader;
    }(SectionHeader));

    /**
     * Used to configure the appearance of the section header cells.
    */
    var IgrTemplateSectionHeader = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrTemplateSectionHeader, _super);
        function IgrTemplateSectionHeader(props) {
            var _this = _super.call(this, props) || this;
            _this._cellUpdating = null;
            _this._cellUpdating_wrapped = null;
            return _this;
        }
        IgrTemplateSectionHeader.prototype.createImplementation = function () {
            return new TemplateSectionHeader();
        };
        Object.defineProperty(IgrTemplateSectionHeader.prototype, "i", {
            /**
                                         * @hidden
                                         */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrTemplateSectionHeader.prototype, "cellUpdating", {
            /**
             * Called when the cell content is being created or updated.
            */
            get: function () {
                return this._cellUpdating;
            },
            set: function (ev) {
                var _this = this;
                if (this._cellUpdating_wrapped !== null) {
                    this.i.cellUpdating = igniteuiReactCore.delegateRemove(this.i.cellUpdating, this._cellUpdating_wrapped);
                    this._cellUpdating_wrapped = null;
                    this._cellUpdating = null;
                }
                this._cellUpdating = ev;
                this._cellUpdating_wrapped = function (o, e) {
                    var outerArgs = new IgrTemplateSectionHeaderCellUpdatingEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeCellUpdating) {
                        _this.beforeCellUpdating(_this, outerArgs);
                    }
                    if (_this._cellUpdating) {
                        _this._cellUpdating(_this, outerArgs);
                    }
                };
                this.i.cellUpdating = igniteuiReactCore.delegateCombine(this.i.cellUpdating, this._cellUpdating_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrTemplateSectionHeader;
    }(IgrSectionHeader));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrTemplateSectionHeaderModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrTemplateSectionHeaderModule() {
        }
        IgrTemplateSectionHeaderModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons("IgrTemplateSectionHeader", IgrTemplateSectionHeader);
            igniteuiReactCore.TypeRegistrar.register("TemplateSectionHeader", TemplateSectionHeader.$type);
        };
        return IgrTemplateSectionHeaderModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridEffectMainIntent_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GridEffectMainIntent', 'Default,0|Position,1|Opacity,2|Virtualization,3|Dimensions,4|Selection,5|DataChange,6|ColumnPropertyChange,7|Activation,8');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var GridEffectSubIntent_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('GridEffectSubIntent', 'Default,0|Move,1|Show,2|Hide,3|Exchange,4|HeaderPropertyChange,5|HeaderSeparatorPropertyChange,6');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Indicates a column that should be exchanged with another.
    */
    var IgrColumnExchanger = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnExchanger() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnExchanger.prototype.createImplementation = function () {
            return new ColumnExchanger(0);
        };
        Object.defineProperty(IgrColumnExchanger.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnExchanger.prototype.onImplementationCreated = function () {
        };
        IgrColumnExchanger.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrColumnExchanger.prototype, "targetIndex", {
            /**
             * The desired location of the new column
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnExchanger.prototype.findByName = function (name) {
            return null;
        };
        return IgrColumnExchanger;
    }());

    var IgrColumnExchangersCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumnExchangersCollection, _super);
        function IgrColumnExchangersCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrColumnExchanger.$type) {
                IgrColumnExchanger.$type = igniteuiReactCore.markType(IgrColumnExchanger, "IgrColumnExchanger");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrColumnExchangersCollection.prototype._createInnerColl = function () {
            if (!IgrColumnExchanger.$type) {
                IgrColumnExchanger.$type = igniteuiReactCore.markType(IgrColumnExchanger, "IgrColumnExchanger");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrColumnExchanger.$type, ColumnExchanger.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrColumnExchanger();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrColumnExchangersCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Indicates that a specified column should have a specified property set to a value.
    */
    var IgrColumnPropertySetter = /** @class */ /*@__PURE__*/ (function () {
        function IgrColumnPropertySetter() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrColumnPropertySetter.prototype.createImplementation = function () {
            return new ColumnPropertySetter(0);
        };
        Object.defineProperty(IgrColumnPropertySetter.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnPropertySetter.prototype.onImplementationCreated = function () {
        };
        IgrColumnPropertySetter.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrColumnPropertySetter.prototype, "columnName", {
            /**
             * The name or key of the column to change the property of
            */
            get: function () {
                return this.i.c;
            },
            set: function (v) {
                this.i.c = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPropertySetter.prototype, "propertyName", {
            /**
             * The name of the property to change
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrColumnPropertySetter.prototype, "value", {
            /**
             * The new value of the property
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrColumnPropertySetter.prototype.findByName = function (name) {
            return null;
        };
        return IgrColumnPropertySetter;
    }());

    var IgrColumnPropertySettersCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrColumnPropertySettersCollection, _super);
        function IgrColumnPropertySettersCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrColumnPropertySetter.$type) {
                IgrColumnPropertySetter.$type = igniteuiReactCore.markType(IgrColumnPropertySetter, "IgrColumnPropertySetter");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrColumnPropertySettersCollection.prototype._createInnerColl = function () {
            if (!IgrColumnPropertySetter.$type) {
                IgrColumnPropertySetter.$type = igniteuiReactCore.markType(IgrColumnPropertySetter, "IgrColumnPropertySetter");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrColumnPropertySetter.$type, ColumnPropertySetter.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrColumnPropertySetter();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrColumnPropertySettersCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /**
     * Describes one phase of a responsive state to apply to the grid.
    */
    var IgrResponsivePhase = /** @class */ /*@__PURE__*/ (function () {
        function IgrResponsivePhase() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrResponsivePhase.prototype.createImplementation = function () {
            return new ResponsivePhase();
        };
        Object.defineProperty(IgrResponsivePhase.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrResponsivePhase.prototype.onImplementationCreated = function () {
        };
        IgrResponsivePhase.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrResponsivePhase.prototype, "name", {
            /**
             * The name of this responsive phase
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrResponsivePhase.prototype, "delayMilliseconds", {
            /**
             * The amount of time to delay the responsive phase from starting, in milliseconds
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrResponsivePhase.prototype.findByName = function (name) {
            return null;
        };
        /**
         * Adds a column property setter to the phase.
        
        * @param setter  * The setter to add.
        */
        IgrResponsivePhase.prototype.addColumnPropertySetter = function (setter) {
            var iv = this.i.g((setter == null ? null : setter.i));
            return (iv == null ? null : iv.externalObject);
        };
        /**
         * Adds a column property setter to the phase, and returns it.
        
        */
        IgrResponsivePhase.prototype.columnPropertySetter = function () {
            var iv = this.i.c();
            return (iv == null ? null : iv.externalObject);
        };
        /**
         * Adds a column exchanger the the phase.
        
        * @param exchanger  * The exchanger to add.
        */
        IgrResponsivePhase.prototype.addColumnExchanger = function (exchanger) {
            var iv = this.i.f((exchanger == null ? null : exchanger.i));
            return (iv == null ? null : iv.externalObject);
        };
        /**
         * Adds a column exchanger to the phase and returns it.
        
        */
        IgrResponsivePhase.prototype.columnExchanger = function () {
            var iv = this.i.h();
            return (iv == null ? null : iv.externalObject);
        };
        return IgrResponsivePhase;
    }());

    var IgrResponsivePhasesCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrResponsivePhasesCollection, _super);
        function IgrResponsivePhasesCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrResponsivePhase.$type) {
                IgrResponsivePhase.$type = igniteuiReactCore.markType(IgrResponsivePhase, "IgrResponsivePhase");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrResponsivePhasesCollection.prototype._createInnerColl = function () {
            if (!IgrResponsivePhase.$type) {
                IgrResponsivePhase.$type = igniteuiReactCore.markType(IgrResponsivePhase, "IgrResponsivePhase");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrResponsivePhase.$type, ResponsivePhase.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = new IgrResponsivePhase();
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrResponsivePhasesCollection;
    }(igniteuiReactCore.IgCollection));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var TemplateSectionHeaderCellModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(TemplateSectionHeaderCellModelExport, _super);
        function TemplateSectionHeaderCellModelExport() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TemplateSectionHeaderCellModelExport.prototype.get_ac = function () {
            return "TemplatSectionHeaderCell";
        };
        TemplateSectionHeaderCellModelExport.prototype.ad = function (a) {
            _super.prototype.ad.call(this, a);
        };
        TemplateSectionHeaderCellModelExport.$t = igniteuiReactCore.markType(TemplateSectionHeaderCellModelExport, 'TemplateSectionHeaderCellModelExport', SectionHeaderCellModelExport.$);
        return TemplateSectionHeaderCellModelExport;
    }(SectionHeaderCellModelExport));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates the current operation underway for the cloned data source.
     */
    var CloneDataSourceFilterOperation = /*@__PURE__*/ (function (CloneDataSourceFilterOperation) {
        CloneDataSourceFilterOperation[CloneDataSourceFilterOperation["None"] = 0] = "None";
        CloneDataSourceFilterOperation[CloneDataSourceFilterOperation["ValueToText"] = 1] = "ValueToText";
        CloneDataSourceFilterOperation[CloneDataSourceFilterOperation["TextToValue"] = 2] = "TextToValue";
        return CloneDataSourceFilterOperation;
    })({});
    /**
     * @hidden
     */
    var CloneDataSourceFilterOperation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CloneDataSourceFilterOperation', 'None,0|ValueToText,1|TextToValue,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * Indicates what type of operation is taking place when the selected row, value, or text in the combo box changes.
     */
    var MultiColumnComboBoxSelectedItemChangeType = /*@__PURE__*/ (function (MultiColumnComboBoxSelectedItemChangeType) {
        MultiColumnComboBoxSelectedItemChangeType[MultiColumnComboBoxSelectedItemChangeType["Value"] = 0] = "Value";
        MultiColumnComboBoxSelectedItemChangeType[MultiColumnComboBoxSelectedItemChangeType["Text"] = 1] = "Text";
        MultiColumnComboBoxSelectedItemChangeType[MultiColumnComboBoxSelectedItemChangeType["Row"] = 2] = "Row";
        return MultiColumnComboBoxSelectedItemChangeType;
    })({});
    /**
     * @hidden
     */
    var MultiColumnComboBoxSelectedItemChangeType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('MultiColumnComboBoxSelectedItemChangeType', 'Value,0|Text,1|Row,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DataGridToolbarView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridToolbarView, _super);
        function DataGridToolbarView() {
            var _this = _super.call(this) || this;
            _this.k = null;
            _this.f = null;
            _this.d = null;
            _this.e = null;
            _this.h = null;
            _this.i = null;
            _this.j = null;
            _this.g = null;
            _this.a = null;
            _this.c = null;
            _this.b = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            return _this;
        }
        DataGridToolbarView.prototype.s = function () {
        };
        DataGridToolbarView.prototype.p = function (a) {
            if (a == null) {
                this.c = null;
                return;
            }
            this.c = a;
            var b = Math.round(a.rootWrapper.width());
            var c = Math.round(a.rootWrapper.height());
            this.c.rootWrapper.setStyleProperty("position", "relative");
            this.c.rootWrapper.setStyleProperty("display", "flex");
            this.c.rootWrapper.setStyleProperty("justify-content", "space-between");
            this.c.rootWrapper.setStyleProperty("align-items", "center");
            this.c.rootWrapper.setStyleProperty("padding", "4px 16px 4px 16px");
            if (this.a.bb != null) {
                this.c.rootWrapper.setStyleProperty("background-color", this.a.bb._fill);
            }
            this.c.rootWrapper.setStyleProperty("border-width", "1px 1px 0px 1px");
            this.c.rootWrapper.setStyleProperty("border-style", "solid");
            this.c.rootWrapper.setStyleProperty("box-sizing", "border-box");
            this.c.rootWrapper.setStyleProperty("border-color", "rgba(0, 0, 0, 0.2)");
            this.c.rootWrapper.setStyleProperty("border-radius", "3px 3px 0px 0px");
            this.ac();
            this.k = this.c.rootWrapper.getChildAt(0);
            this.y();
            var d = this.c.rootWrapper.getChildAt(1);
            d.setStyleProperty("justify-content", "space-around");
            this.v();
            this.x();
        };
        DataGridToolbarView.prototype.ac = function () {
            if (this.c != null) {
                switch (this.a.i) {
                    case 1:
                        this.c.rootWrapper.setStyleProperty("height", "52px");
                        break;
                    case 2:
                        this.c.rootWrapper.setStyleProperty("height", "46px");
                        break;
                    case 3:
                        this.c.rootWrapper.setStyleProperty("height", "44px");
                        break;
                    case 0:
                        this.c.rootWrapper.setStyleProperty("height", "46px");
                        break;
                }
            }
        };
        DataGridToolbarView.prototype.z = function () {
            if (this.c != null) {
                if (this.a.bb != null) {
                    this.c.rootWrapper.setStyleProperty("background-color", this.a.bb._fill);
                }
            }
        };
        DataGridToolbarView.prototype.y = function () {
            if (this.k != null && this.a.ap != null) {
                this.k.setText(this.a.ap);
                this.k.setStyleProperty("font", "16px \"Segoe UI\", Verdana");
            }
            this.ag();
            this.ah();
        };
        DataGridToolbarView.prototype.ag = function () {
            if (this.k != null && this.a.bd != null) {
                this.k.setStyleProperty("color", this.a.bd._fill);
            }
        };
        DataGridToolbarView.prototype.ah = function () {
            if (this.k != null && this.a.m != null) {
                this.k.setStyleProperty("font", this.a.m.fontString);
            }
        };
        DataGridToolbarView.prototype.v = function () {
            if (this.c != null) {
                var a = this.c.rootWrapper.getChildAt(1);
                this.f = a.getChildAt(0);
                this.f.setProperty("id", "hideBtn");
                this.e = this.c.rootWrapper.getChildAt(2);
                this.w(this.e);
                this.e.setStyleProperty("height", "400px");
                this.e.setStyleProperty("width", "250px");
                var b = this.e.getChildAt(0);
                b.setStyleProperty("height", "calc(100% - 16px)");
                b.setStyleProperty("padding", "4px 16px 4px 16px");
                b.setStyleProperty("box-sizing", "border-box");
                if (this.a.p == true) {
                    if (this.a.j == null) {
                        this.d = this.c.createElement("div");
                        this.a.a2(this.c, this.f, this.d, "Hiding");
                        this.f.listen("click", igniteuiReactCore.runOn(this, this.n));
                    }
                    else {
                        this.f.show();
                    }
                }
                else {
                    this.f.hide();
                }
            }
        };
        DataGridToolbarView.prototype.ad = function () {
            if (this.d != null) {
                var a = this.d.getChildAt(1);
                a.setText(this.a.r.toString());
            }
        };
        DataGridToolbarView.prototype.aa = function () {
            if (this.d != null) {
                if (this.d.getChildCount() > 2) {
                    var a = this.d.getChildAt(2);
                    a.setText(this.a.ab.toString());
                }
                else {
                    var b = this.c.createElement("span");
                    b.setStyleProperty("display", "inline-block");
                    b.setStyleProperty("font-size", "14px");
                    b.setStyleProperty("font-weight", "600");
                    b.setText(this.a.ab);
                    this.d.append(b);
                }
            }
        };
        DataGridToolbarView.prototype.n = function (a) {
            if (this.e != null) {
                if (this.g == null || this.g != this.e) {
                    this.l();
                    var b = this.f.getOffset();
                    this.e.setOffset(b.left - this.e.width() + this.f.width(), b.top + this.f.height());
                    this.g = this.e;
                    this.t();
                }
                else {
                    this.l();
                }
            }
            a.stopPropagation();
        };
        DataGridToolbarView.prototype.x = function () {
            if (this.c != null) {
                var a = this.c.rootWrapper.getChildAt(1);
                this.h = a.getChildAt(1);
                this.h.setProperty("id", "pinBtn");
                this.j = this.c.rootWrapper.getChildAt(3);
                this.w(this.j);
                this.j.setStyleProperty("height", "400px");
                this.j.setStyleProperty("width", "250px");
                var b = this.j.getChildAt(0);
                b.setStyleProperty("height", "calc(100% - 16px)");
                b.setStyleProperty("padding", "8px 16px 8px 16px");
                b.setStyleProperty("box-sizing", "border-box");
                if (this.a.q == true) {
                    if (this.a.k == null) {
                        this.i = this.c.createElement("div");
                        this.a.a2(this.c, this.h, this.i, "Pinning");
                        this.h.listen("click", igniteuiReactCore.runOn(this, this.u));
                    }
                    else {
                        this.h.show();
                    }
                }
                else {
                    this.h.hide();
                }
            }
        };
        DataGridToolbarView.prototype.ae = function () {
            if (this.i != null) {
                var a = this.i.getChildAt(1);
                a.setText(this.a.s.toString());
            }
        };
        DataGridToolbarView.prototype.af = function () {
            if (this.i != null) {
                if (this.i.getChildCount() > 2) {
                    var a = this.i.getChildAt(2);
                    a.setText(this.a.ag);
                }
                else {
                    var b = this.c.createElement("span");
                    b.setStyleProperty("display", "inline-block");
                    b.setStyleProperty("font-size", "14px");
                    b.setStyleProperty("font-weight", "600");
                    b.setText(this.a.ag);
                    this.i.append(b);
                }
            }
        };
        DataGridToolbarView.prototype.u = function (a) {
            if (this.j != null) {
                if (this.g == null || this.g != this.j) {
                    this.l();
                    var b = this.h.getOffset();
                    this.j.setOffset(b.left - this.j.width() + this.h.width(), b.top + this.h.height());
                    this.g = this.j;
                    this.t();
                }
                else {
                    this.l();
                }
            }
            a.stopPropagation();
        };
        DataGridToolbarView.prototype.w = function (a) {
            var b = igniteuiReactInputs.ElevationHelper.e(12, igniteuiReactCore.BrushUtil.g(66, 0, 0, 0), igniteuiReactCore.BrushUtil.g(30, 0, 0, 0), igniteuiReactCore.BrushUtil.g(20, 0, 0, 0), 1);
            a.setStyleProperty("boxShadow", b);
            a.setStyleProperty("background-color", this.a.bc._fill);
            a.setStyleProperty("position", "absolute");
            a.setStyleProperty("z-index", "12000");
            a.setStyleProperty("display", "none");
        };
        DataGridToolbarView.prototype.ab = function () {
            if (this.j != null) {
                this.j.setStyleProperty("background-color", this.a.bc._fill);
            }
            if (this.e != null) {
                this.e.setStyleProperty("background-color", this.a.bc._fill);
            }
        };
        DataGridToolbarView.prototype.t = function () {
            if (this.g != null) {
                this.b.add(this.c.globalListen("document", "keydown", igniteuiReactCore.runOn(this, this.q)));
                this.b.add(this.c.globalListen("document", "click", igniteuiReactCore.runOn(this, this.r)));
                this.g.show();
                this.g.listen("click", igniteuiReactCore.runOn(this, this.m));
            }
        };
        DataGridToolbarView.prototype.l = function () {
            if (this.g != null) {
                for (var a = 0; a < this.b.count; a++) {
                    this.b._inner[a]();
                }
                this.b.clear();
                this.g.unlistenAll();
                this.g.hide();
                this.g = null;
            }
        };
        DataGridToolbarView.prototype.m = function (a) {
            a.stopPropagation();
        };
        DataGridToolbarView.prototype.q = function (a) {
            if (igniteuiReactCore.BaseDOMEventProxy.cu(a) == 8) {
                this.a.at();
            }
        };
        DataGridToolbarView.prototype.r = function (a) {
            this.a.at();
        };
        DataGridToolbarView.prototype.o = function () {
        };
        DataGridToolbarView.$t = igniteuiReactCore.markType(DataGridToolbarView, 'DataGridToolbarView');
        return DataGridToolbarView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var DataGridToolbar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DataGridToolbar, _super);
        function DataGridToolbar() {
            var _this = _super.call(this) || this;
            _this.e = null;
            _this.c = null;
            _this.d = null;
            _this.r = 0;
            _this.s = 0;
            _this.j = null;
            _this.k = null;
            _this.propertyChanged = null;
            _this.a = null;
            _this.x = null;
            _this.l = null;
            _this.ba = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
            _this.a8 = igniteuiReactCore.BrushUtil.g(255, 248, 248, 248);
            _this.a9 = igniteuiReactCore.BrushUtil.g(255, 248, 248, 248);
            _this.n = false;
            _this.t = null;
            _this.u = null;
            _this.o = false;
            _this.v = null;
            _this.w = null;
            _this.h = 2;
            _this.f = 1;
            _this.r = 0;
            _this.s = 0;
            var a = new DataGridToolbarView();
            a.a = _this;
            _this.e = a;
            _this.e.s();
            return _this;
        }
        DataGridToolbar.prototype.notifySizeChanged = function () {
            this.e.o();
        };
        DataGridToolbar.prototype.destroy = function () {
            this.provideContainer(null, null, null);
            if (this.b != null) {
                var a = this.b;
                a.columnHiddenChanged = igniteuiReactCore.delegateRemove(a.columnHiddenChanged, igniteuiReactCore.runOn(this, this.a6));
                var b = this.b;
                b.columnPinnedChanged = igniteuiReactCore.delegateRemove(b.columnPinnedChanged, igniteuiReactCore.runOn(this, this.a7));
            }
        };
        DataGridToolbar.prototype.provideContainer = function (a, b, c) {
            this.c = b;
            this.d = c;
            this.a3();
            this.a4();
            this.e.p(a);
        };
        Object.defineProperty(DataGridToolbar.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.ax("TargetGrid", b, this.a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "ap", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                var b = this.x;
                this.x = a;
                if (b != this.x) {
                    this.ax("ToolbarTitle", b, this.x);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "m", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                if (b != this.l) {
                    this.ax("ToolbarTitleStyle", b, this.l);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "bd", {
            get: function () {
                return this.ba;
            },
            set: function (a) {
                var b = this.ba;
                this.ba = a;
                if (b != this.ba) {
                    this.ax("ToolbarTitleColor", b, this.ba);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "bb", {
            get: function () {
                return this.a8;
            },
            set: function (a) {
                var b = this.a8;
                this.a8 = a;
                if (b != this.a8) {
                    this.ax("BackgroundColor", b, this.a8);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "bc", {
            get: function () {
                return this.a9;
            },
            set: function (a) {
                var b = this.a9;
                this.a9 = a;
                if (b != this.a9) {
                    this.ax("DialogBackgroundColor", b, this.a9);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "p", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.ax("ColumnChooser", b, this.n);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "ab", {
            get: function () {
                return this.t;
            },
            set: function (a) {
                var b = this.t;
                this.t = a;
                if (b != this.t) {
                    this.ax("ColumnChooserText", b, this.t);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "ad", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (b != this.u) {
                    this.ax("ColumnChooserTitle", b, this.u);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "q", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                var b = this.o;
                this.o = a;
                if (b != this.o) {
                    this.ax("ColumnPinning", b, this.o);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "ag", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                var b = this.v;
                this.v = a;
                if (b != this.v) {
                    this.ax("ColumnPinningText", b, this.v);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "ai", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (b != this.w) {
                    this.ax("ColumnPinningTitle", b, this.w);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "i", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                var b = this.h;
                this.h = a;
                if (b != this.h) {
                    this.ax("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.h));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataGridToolbar.prototype, "g", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.ax("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, this.f));
                }
            },
            enumerable: true,
            configurable: true
        });
        DataGridToolbar.prototype.ax = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.ay(a, b, c);
        };
        DataGridToolbar.prototype.ay = function (a, b, c) {
            switch (a) {
                case "TargetGrid":
                    this.a3();
                    this.a4();
                    this.a5();
                    this.e.ac();
                    break;
                case "ToolbarTitle":
                    this.e.y();
                    break;
                case "ToolbarTitleStyle":
                    this.e.ah();
                    break;
                case "ToolbarTitleColor":
                    this.e.ag();
                    break;
                case "BackgroundColor":
                    this.e.z();
                    break;
                case "DialogBackgroundColor":
                    this.e.ab();
                    if (this.c != null) {
                        this.c.ao = this.bc;
                    }
                    if (this.d != null) {
                        this.d.al = this.bc;
                    }
                    break;
                case "ColumnChooser":
                    this.a3();
                    this.e.v();
                    break;
                case "ColumnChooserText":
                    this.e.aa();
                    break;
                case "ColumnChooserTitle":
                    if (this.c != null) {
                        this.c.t = this.ad;
                    }
                    break;
                case "ColumnPinning":
                    this.a4();
                    this.e.x();
                    break;
                case "ColumnPinningText":
                    this.e.af();
                    break;
                case "ColumnPinningTitle":
                    if (this.d != null) {
                        this.d.t = this.ai;
                    }
                    break;
                case "Density":
                    this.a0();
                    break;
                case "BaseTheme":
                    this.a1();
                    break;
            }
        };
        DataGridToolbar.prototype.a1 = function () {
            if (this.c != null) {
                this.c.e = this.g;
            }
            if (this.d != null) {
                this.d.e = this.g;
            }
            if (this.j != null) {
                this.j.d = this.g;
            }
            if (this.k != null) {
                this.k.d = this.g;
            }
        };
        DataGridToolbar.prototype.a0 = function () {
            if (this.i == 0) {
                if (this.b != null) {
                    this.i = this.b.fg;
                }
            }
            if (this.j != null) {
                this.j.h = this.i;
            }
            if (this.k != null) {
                this.k.h = this.i;
            }
            if (this.c != null) {
                this.c.g = this.i;
            }
            if (this.d != null) {
                this.d.g = this.i;
            }
            this.e.ac();
        };
        DataGridToolbar.prototype.a2 = function (a, b, c, d) {
            var e = new igniteuiReactInputs.Button();
            var f = a.getSubRenderer(b);
            e.provideContainer(f);
            e.d = this.g;
            e.h = this.i;
            var g = null;
            var h = null;
            var i = null;
            switch (d) {
                case "Hiding":
                    this.j = e;
                    g = DataGridToolbar.am;
                    h = this.r.toString();
                    if (this.ab != null) {
                        i = this.ab;
                    }
                    break;
                case "Pinning":
                    this.k = e;
                    g = DataGridToolbar.an;
                    h = this.s.toString();
                    if (this.ag != null) {
                        i = this.ag;
                    }
                    break;
            }
            e.s = 2;
            b.setStyleProperty("display", "inline-block");
            b.setStyleProperty("margin-left", "10px");
            c.setStyleProperty("display", "flex");
            c.setStyleProperty("flexDirection", "row");
            c.setStyleProperty("flexWrap", "no-wrap");
            c.setStyleProperty("align-items", "center");
            var j = a.createElement("div");
            j.setStyleProperty("display", "inline-block");
            j.setStyleProperty("margin-right", "5px");
            var k = a.getSubRenderer(j);
            var l = new igniteuiReactInputs.Icon();
            l.provideContainer(k);
            l.svgPath = g;
            c.append(j);
            var m = a.createElement("span");
            m.setStyleProperty("display", "inline-block");
            m.setStyleProperty("font-size", "12px");
            m.setStyleProperty("font-weight", "600");
            m.setStyleProperty("margin-right", "5px");
            m.setText(h);
            c.append(m);
            if (i != null) {
                var n = a.createElement("span");
                n.setStyleProperty("display", "inline-block");
                n.setStyleProperty("font-size", "12px");
                n.setStyleProperty("font-weight", "600");
                n.setText(i);
                c.append(n);
            }
            e.appendButtonContent(c);
        };
        DataGridToolbar.prototype.at = function () {
            this.e.l();
        };
        DataGridToolbar.prototype.a3 = function () {
            if (this.p && this.c != null && this.b != null) {
                if (this.ad != null) {
                    this.c.t = this.ad;
                }
                this.c.b = this.b;
                this.c.e = this.g;
                this.c.ao = this.bc;
                this.c.al(new igniteuiReactCore.Thickness(1, -16, 3, -16, 3));
            }
        };
        DataGridToolbar.prototype.a4 = function () {
            if (this.q && this.d != null && this.b != null) {
                if (this.ai != null) {
                    this.d.t = this.ai;
                }
                this.d.b = this.b;
                this.d.e = this.g;
                this.d.al = this.bc;
                this.d.ai(new igniteuiReactCore.Thickness(1, -16, 3, -16, 3));
            }
        };
        DataGridToolbar.prototype.a5 = function () {
            if (this.b != null) {
                var a = this.b;
                a.columnHiddenChanged = igniteuiReactCore.delegateCombine(a.columnHiddenChanged, igniteuiReactCore.runOn(this, this.a6));
                var b = this.b;
                b.columnPinnedChanged = igniteuiReactCore.delegateCombine(b.columnPinnedChanged, igniteuiReactCore.runOn(this, this.a7));
                this.av();
            }
        };
        DataGridToolbar.prototype.av = function () {
            if (this.b != null) {
                var a = this.b.actualColumns.count;
                this.r = 0;
                this.s = 0;
                for (var b = 0; b < a; b++) {
                    if (this.b.actualColumns._inner[b].gd == true) {
                        this.r++;
                    }
                    if (this.b.actualColumns._inner[b].fk == 1) {
                        this.s++;
                    }
                }
            }
            this.e.ad();
            this.e.ae();
        };
        DataGridToolbar.prototype.a6 = function (a, b) {
            this.av();
        };
        DataGridToolbar.prototype.a7 = function (a, b) {
            this.av();
        };
        DataGridToolbar.$t = igniteuiReactCore.markType(DataGridToolbar, 'DataGridToolbar', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        DataGridToolbar.am = "M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z";
        DataGridToolbar.an = "M13.2,3.8l7.1,7.1l-2.8-0.1l-3.4,3.4l0.1,4.2l-3.5-3.5l-5.4,5.4l-1.4,0l0-1.4l5.4-5.4L5.7,9.8l4.2,0.1l3.4-3.4L13.2,3.8z";
        return DataGridToolbar;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrDataGridToolbar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDataGridToolbar, _super);
        function IgrDataGridToolbar(props) {
            var _this = _super.call(this, props) || this;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._getColumnChooserRef = _this._getColumnChooserRef.bind(_this);
            _this._getColumnPinningRef = _this._getColumnPinningRef.bind(_this);
            _this._implementation = _this.createImplementation();
            var toolbar = _this.i;
            _this._toolbar = toolbar;
            toolbar.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrDataGridToolbar.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._toolbar.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._toolbar.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridToolbar.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            if (this._elRef != null && this._columnChooserRef != null && this._columnPinningRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._toolbar.provideContainer(this._renderer, this._columnChooserRef.i, this._columnPinningRef.i);
            }
        };
        IgrDataGridToolbar.prototype._getColumnChooserRef = function (ref) {
            this._columnChooserRef = ref;
            if (this._elRef != null && this._columnChooserRef != null && this._columnPinningRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._toolbar.provideContainer(this._renderer, this._columnChooserRef.i, this._columnPinningRef.i);
            }
        };
        IgrDataGridToolbar.prototype._getColumnPinningRef = function (ref) {
            this._columnPinningRef = ref;
            if (this._elRef != null && this._columnChooserRef != null && this._columnPinningRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._toolbar.provideContainer(this._renderer, this._columnChooserRef.i, this._columnPinningRef.i);
            }
        };
        IgrDataGridToolbar.prototype.render = function () {
            var children = [];
            var title = React.createElement("span", {
                key: "titleSpan"
            });
            children.push(title);
            var buttons = [];
            var hideBtnContainer = React.createElement("div", {
                key: "hideBtnContainer"
            });
            buttons.push(hideBtnContainer);
            var pinBtnContainer = React.createElement("div", {
                key: "pinBtnContainer"
            });
            buttons.push(pinBtnContainer);
            /*let exportInput = React.createElement("input", {
                key: "exportInput",
                type: "Button"
            });
            buttons.push(exportInput);*/
            var buttonsContainer = React.createElement("div", {
                key: "buttonsContainer",
                children: buttons
            });
            children.push(buttonsContainer);
            var chooserDialogChildren = [];
            var chooserDialog = React.createElement("div", {
                key: "chooserDialog",
                children: chooserDialogChildren
            });
            children.push(chooserDialog);
            var columnChooser = React.createElement(IgrColumnChooser, {
                ref: this._getColumnChooserRef,
                key: "columnChooser"
            });
            chooserDialogChildren.push(columnChooser);
            var pinningChildren = [];
            var pinningDialog = React.createElement("div", {
                key: "pinningDialog",
                children: pinningChildren,
            });
            children.push(pinningDialog);
            var columnPinning = React.createElement(IgrColumnPinning, {
                ref: this._getColumnPinningRef,
                key: "columnPinning"
            });
            pinningChildren.push(columnPinning);
            /*let exportChildren: any[] = [];
            let exportDialog = React.createElement("div", {
                key: "exportDialog",
                children: exportChildren,
                style: {
                    background: "white",
                    display: "none",
                    position: "absolute",
                    zIndex: 12000,
                    borderWidth: "1px",
                    borderStyle: "solid"
                }
            });
            children.push(exportDialog);

            let exportExcel = React.createElement("input", {
                key: "exportExcel",
                type: "Button"
            });
            exportChildren.push(exportExcel);

            let exportCsv = React.createElement("input", {
                key: "exportCsv",
                type: "Button"
            });
            exportChildren.push(exportCsv);*/
            var div = React.createElement("div", {
                className: "ig-data-grid-toolbar igr-data-grid-toolbar",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrDataGridToolbar.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrDataGridToolbar.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrDataGridToolbar.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrDataGridToolbar.prototype.componentWillUnmount = function () {
            this._toolbar.destroy();
            if (this._renderer) {
                this._renderer.destroy();
            }
        };
        IgrDataGridToolbar.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this._toolbar.notifySizeChanged();
            this.initializeContent();
        };
        IgrDataGridToolbar.prototype.initializeContent = function () {
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrDataGridToolbar.prototype.createImplementation = function () {
            return new DataGridToolbar();
        };
        Object.defineProperty(IgrDataGridToolbar.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "targetGrid", {
            /**
         * Gets or Sets the property name that contains the values.
        */
            get: function () {
                if (this.i.b == null) {
                    return null;
                }
                return this.i.b.externalObject;
            },
            set: function (v) {
                if (v != null && this._stylingContainer && v._styling)
                    v._styling(this._stylingContainer, this, this);
                v == null ? this.i.b = null : this.i.b = v.i;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "toolbarTitle", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.ap;
            },
            set: function (v) {
                this.i.ap = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "toolbarTitleStyle", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                if (this.i.m == null) {
                    return null;
                }
                return this.i.m.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.m = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "toolbarTitleColor", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bd);
            },
            set: function (v) {
                this.i.bd = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "backgroundColor", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bb);
            },
            set: function (v) {
                this.i.bb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "dialogBackgroundColor", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bc);
            },
            set: function (v) {
                this.i.bc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "columnChooser", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "columnChooserText", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.ab;
            },
            set: function (v) {
                this.i.ab = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "columnChooserTitle", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.ad;
            },
            set: function (v) {
                this.i.ad = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "columnPinning", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "columnPinningText", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "columnPinningTitle", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "density", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDataGridToolbar.prototype, "baseTheme", {
            /**
             * Gets or Sets the property name that contains the values.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridToolbar.prototype.findByName = function (name) {
            if (this.targetGrid && this.targetGrid.name && this.targetGrid.name == name) {
                return this.targetGrid;
            }
            return null;
        };
        Object.defineProperty(IgrDataGridToolbar.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrDataGridToolbar.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDataGridToolbar.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DataGridToolbar");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this.targetGrid && this.targetGrid._styling) {
                this.targetGrid._styling(container, component, this);
            }
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        return IgrDataGridToolbar;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDataGridToolbarModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDataGridToolbarModule() {
        }
        IgrDataGridToolbarModule.register = function () {
            IgrColumnChooserModule.register();
            IgrColumnPinningModule.register();
            igniteuiReactInputs.IgrButtonModule.register();
            igniteuiReactInputs.IgrIconModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDataGridToolbar', IgrDataGridToolbar);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDataGridToolbar', IgrDataGridToolbar);
            igniteuiReactCore.TypeRegistrar.register('DataGridToolbar', DataGridToolbar.$type);
        };
        return IgrDataGridToolbarModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    exports.AccessibilityRow = AccessibilityRow;
    exports.ActivationManager = ActivationManager;
    exports.BrowserExecutionContext = BrowserExecutionContext;
    exports.BrowserPixelConverter = BrowserPixelConverter;
    exports.BrowserTickProvider = BrowserTickProvider;
    exports.CalculationParameters = CalculationParameters;
    exports.CanvasCellPresenterBase = CanvasCellPresenterBase;
    exports.CanvasContentCellModelHelper = CanvasContentCellModelHelper;
    exports.CanvasDateTimeCell = CanvasDateTimeCell;
    exports.CanvasDateTimeCellPresenter = CanvasDateTimeCellPresenter;
    exports.CanvasGridCellBase = CanvasGridCellBase;
    exports.CanvasImageCell = CanvasImageCell;
    exports.CanvasImageCellPresenter = CanvasImageCellPresenter;
    exports.CanvasNumericCell = CanvasNumericCell;
    exports.CanvasNumericCellPresenter = CanvasNumericCellPresenter;
    exports.CanvasPlaceholderView = CanvasPlaceholderView;
    exports.CanvasRowSeparatorCell = CanvasRowSeparatorCell;
    exports.CanvasRowSeparatorCellPresenter = CanvasRowSeparatorCellPresenter;
    exports.CanvasSectionHeaderCell = CanvasSectionHeaderCell;
    exports.CanvasSectionHeaderCellPresenter = CanvasSectionHeaderCellPresenter;
    exports.CanvasSummaryCell = CanvasSummaryCell;
    exports.CanvasSummaryCellPresenter = CanvasSummaryCellPresenter;
    exports.CanvasTemplateCell = CanvasTemplateCell;
    exports.CanvasTemplateCellContainer = CanvasTemplateCellContainer;
    exports.CanvasTemplateCellPresenter = CanvasTemplateCellPresenter;
    exports.CanvasTemplateHeaderCell = CanvasTemplateHeaderCell;
    exports.CanvasTemplateHeaderCellPresenter = CanvasTemplateHeaderCellPresenter;
    exports.CanvasTextCell = CanvasTextCell;
    exports.CanvasTextCellPresenter = CanvasTextCellPresenter;
    exports.CanvasTextHeaderCell = CanvasTextHeaderCell;
    exports.CanvasTextHeaderCellPresenter = CanvasTextHeaderCellPresenter;
    exports.CanvasVerticalSeparatorCell = CanvasVerticalSeparatorCell;
    exports.CanvasVerticalSeparatorCellPresenter = CanvasVerticalSeparatorCellPresenter;
    exports.CellContentHorizontalAlignment = CellContentHorizontalAlignment;
    exports.CellContentHorizontalAlignment_$type = CellContentHorizontalAlignment_$type;
    exports.CellContentVerticalAlignment = CellContentVerticalAlignment;
    exports.CellContentVerticalAlignment_$type = CellContentVerticalAlignment_$type;
    exports.CellDataLoadedAnimationMode = CellDataLoadedAnimationMode;
    exports.CellDataLoadedAnimationMode_$type = CellDataLoadedAnimationMode_$type;
    exports.CellEffect = CellEffect;
    exports.CellKey = CellKey;
    exports.CellModel = CellModel;
    exports.CellModelExport = CellModelExport;
    exports.CellPath = CellPath;
    exports.CellPositionEffect = CellPositionEffect;
    exports.CellPresenterBase = CellPresenterBase;
    exports.CellPropertyAnimationType = CellPropertyAnimationType;
    exports.CellPropertyAnimationType_$type = CellPropertyAnimationType_$type;
    exports.CellRange = CellRange;
    exports.CellSelectionAnimationMode = CellSelectionAnimationMode;
    exports.CellSelectionAnimationMode_$type = CellSelectionAnimationMode_$type;
    exports.CellStyleRequestedEventArgs = CellStyleRequestedEventArgs;
    exports.CheckboxList = CheckboxList;
    exports.CheckboxListIndexType = CheckboxListIndexType;
    exports.CheckboxListIndexType_$type = CheckboxListIndexType_$type;
    exports.CheckboxListView = CheckboxListView;
    exports.CheckedChangedEventArgs = CheckedChangedEventArgs;
    exports.CloneDataSourceFilterOperation = CloneDataSourceFilterOperation;
    exports.CloneDataSourceFilterOperation_$type = CloneDataSourceFilterOperation_$type;
    exports.Column = Column;
    exports.ColumnCellsEffect = ColumnCellsEffect;
    exports.ColumnChooser = ColumnChooser;
    exports.ColumnChooserInfo = ColumnChooserInfo;
    exports.ColumnChooserView = ColumnChooserView;
    exports.ColumnComparisonConditionOperatorType = ColumnComparisonConditionOperatorType;
    exports.ColumnComparisonConditionOperatorType_$type = ColumnComparisonConditionOperatorType_$type;
    exports.ColumnComparisonFilterCondition = ColumnComparisonFilterCondition;
    exports.ColumnController = ColumnController;
    exports.ColumnEffect = ColumnEffect;
    exports.ColumnExchanger = ColumnExchanger;
    exports.ColumnExchangersCollection = ColumnExchangersCollection;
    exports.ColumnExchangingAnimationMode = ColumnExchangingAnimationMode;
    exports.ColumnExchangingAnimationMode_$type = ColumnExchangingAnimationMode_$type;
    exports.ColumnFilterCondition = ColumnFilterCondition;
    exports.ColumnFilterConditionCollection = ColumnFilterConditionCollection;
    exports.ColumnFilterConditionGroup = ColumnFilterConditionGroup;
    exports.ColumnGroupDescription = ColumnGroupDescription;
    exports.ColumnGroupDescriptionCollection = ColumnGroupDescriptionCollection;
    exports.ColumnHiddenChangedEventArgs = ColumnHiddenChangedEventArgs;
    exports.ColumnHidingAnimationMode = ColumnHidingAnimationMode;
    exports.ColumnHidingAnimationMode_$type = ColumnHidingAnimationMode_$type;
    exports.ColumnInfo = ColumnInfo;
    exports.ColumnMovingAnimationMode = ColumnMovingAnimationMode;
    exports.ColumnMovingAnimationMode_$type = ColumnMovingAnimationMode_$type;
    exports.ColumnMovingMode = ColumnMovingMode;
    exports.ColumnMovingMode_$type = ColumnMovingMode_$type;
    exports.ColumnMovingSeparator = ColumnMovingSeparator;
    exports.ColumnOptionsIconAlignment = ColumnOptionsIconAlignment;
    exports.ColumnOptionsIconAlignment_$type = ColumnOptionsIconAlignment_$type;
    exports.ColumnOptionsIconBehavior = ColumnOptionsIconBehavior;
    exports.ColumnOptionsIconBehavior_$type = ColumnOptionsIconBehavior_$type;
    exports.ColumnPinnedChangedEventArgs = ColumnPinnedChangedEventArgs;
    exports.ColumnPinning = ColumnPinning;
    exports.ColumnPinningInfo = ColumnPinningInfo;
    exports.ColumnPinningView = ColumnPinningView;
    exports.ColumnPropertySetter = ColumnPropertySetter;
    exports.ColumnPropertySettersCollection = ColumnPropertySettersCollection;
    exports.ColumnPropertyUpdatingAnimationMode = ColumnPropertyUpdatingAnimationMode;
    exports.ColumnPropertyUpdatingAnimationMode_$type = ColumnPropertyUpdatingAnimationMode_$type;
    exports.ColumnResizingAnimationMode = ColumnResizingAnimationMode;
    exports.ColumnResizingAnimationMode_$type = ColumnResizingAnimationMode_$type;
    exports.ColumnResizingMode = ColumnResizingMode;
    exports.ColumnResizingMode_$type = ColumnResizingMode_$type;
    exports.ColumnResizingSeparator = ColumnResizingSeparator;
    exports.ColumnShowingAnimationMode = ColumnShowingAnimationMode;
    exports.ColumnShowingAnimationMode_$type = ColumnShowingAnimationMode_$type;
    exports.ColumnSortDescription = ColumnSortDescription;
    exports.ColumnSortDescriptionCollection = ColumnSortDescriptionCollection;
    exports.ColumnSortDirection = ColumnSortDirection;
    exports.ColumnSortDirection_$type = ColumnSortDirection_$type;
    exports.ColumnStates_$type = ColumnStates_$type;
    exports.ColumnSummaryDescription = ColumnSummaryDescription;
    exports.ColumnSummaryDescriptionCollection = ColumnSummaryDescriptionCollection;
    exports.ColumnWidth = ColumnWidth;
    exports.ComboBoxColumn = ComboBoxColumn;
    exports.ContentCellModelHelper = ContentCellModelHelper;
    exports.CurrentRendererSettings = CurrentRendererSettings;
    exports.DataAdapter = DataAdapter;
    exports.DataBindingEventArgs = DataBindingEventArgs;
    exports.DataGridAccessibilityLayoutPanel = DataGridAccessibilityLayoutPanel;
    exports.DataGridCellLayoutPanel = DataGridCellLayoutPanel;
    exports.DataGridDelayedExecutionManager = DataGridDelayedExecutionManager;
    exports.DataGridPresenterManager = DataGridPresenterManager;
    exports.DataGridPropertySetter = DataGridPropertySetter;
    exports.DataGridScrollerKeyboardListener = DataGridScrollerKeyboardListener;
    exports.DataGridStylingDefaults = DataGridStylingDefaults;
    exports.DataGridToolbar = DataGridToolbar;
    exports.DataGridToolbarView = DataGridToolbarView;
    exports.DataGridViewportManager = DataGridViewportManager;
    exports.DataSourceNotificationBridge = DataSourceNotificationBridge;
    exports.DateTimeCell = DateTimeCell;
    exports.DateTimeCellModel = DateTimeCellModel;
    exports.DateTimeCellModelExport = DateTimeCellModelExport;
    exports.DateTimeCellPresenter = DateTimeCellPresenter;
    exports.DateTimeColumn = DateTimeColumn;
    exports.DateTimeColumnValueFormatter = DateTimeColumnValueFormatter;
    exports.DateTimeFormats = DateTimeFormats;
    exports.DateTimeFormats_$type = DateTimeFormats_$type;
    exports.DefaultCellActionManager = DefaultCellActionManager;
    exports.DefaultGridInfoRequestor = DefaultGridInfoRequestor;
    exports.DefaultPlatformPixelConverter = DefaultPlatformPixelConverter;
    exports.DefinitionBase = DefinitionBase;
    exports.DefinitionPropertyUpdatedEventArgs = DefinitionPropertyUpdatedEventArgs;
    exports.DragSelectEventArgs = DragSelectEventArgs;
    exports.DragType_$type = DragType_$type;
    exports.Dragger = Dragger;
    exports.DraggerView = DraggerView;
    exports.EditModeClickAction = EditModeClickAction;
    exports.EditModeClickAction_$type = EditModeClickAction_$type;
    exports.EditModeType = EditModeType;
    exports.EditModeType_$type = EditModeType_$type;
    exports.EditingManager = EditingManager;
    exports.EditorCell = EditorCell;
    exports.EditorCellModel = EditorCellModel;
    exports.EditorCellModelExport = EditorCellModelExport;
    exports.EditorCellPresenter = EditorCellPresenter;
    exports.EditorCell_ComboExternal_$type = EditorCell_ComboExternal_$type;
    exports.EditorRowCell = EditorRowCell;
    exports.EditorRowCellModel = EditorRowCellModel;
    exports.EditorRowCellPresenter = EditorRowCellPresenter;
    exports.EditorType = EditorType;
    exports.EditorType_$type = EditorType_$type;
    exports.FilterApplyButtonClickEventArgs = FilterApplyButtonClickEventArgs;
    exports.FilterCancelButtonClickEventArgs = FilterCancelButtonClickEventArgs;
    exports.FilterDialogRenderCompletedEventArgs = FilterDialogRenderCompletedEventArgs;
    exports.FixedCellPositions_$type = FixedCellPositions_$type;
    exports.FormatGroupTextEventArgs = FormatGroupTextEventArgs;
    exports.FormatSummaryTextEventArgs = FormatSummaryTextEventArgs;
    exports.GotFocusEventArgs = GotFocusEventArgs;
    exports.Grid = Grid;
    exports.GridActivationMode = GridActivationMode;
    exports.GridActivationMode_$type = GridActivationMode_$type;
    exports.GridActiveCellChangedEventArgs = GridActiveCellChangedEventArgs;
    exports.GridAnimationManager = GridAnimationManager;
    exports.GridAnimationManagerAnimationCanceledEventArgs = GridAnimationManagerAnimationCanceledEventArgs;
    exports.GridAnimationManagerAnimationCompletedEventArgs = GridAnimationManagerAnimationCompletedEventArgs;
    exports.GridAnimationManagerAnimationCreatedEventArgs = GridAnimationManagerAnimationCreatedEventArgs;
    exports.GridAnimationPhaseSettings = GridAnimationPhaseSettings;
    exports.GridAnimationSettings = GridAnimationSettings;
    exports.GridCellBase = GridCellBase;
    exports.GridCellEditEndedEventArgs = GridCellEditEndedEventArgs;
    exports.GridCellEditStartedEventArgs = GridCellEditStartedEventArgs;
    exports.GridCellEventArgs = GridCellEventArgs;
    exports.GridCellPosition = GridCellPosition;
    exports.GridCellValueChangingEventArgs = GridCellValueChangingEventArgs;
    exports.GridColumnAnimationSettings = GridColumnAnimationSettings;
    exports.GridColumnCollection = GridColumnCollection;
    exports.GridColumnFilterOptions = GridColumnFilterOptions;
    exports.GridColumnFilterOptionsView = GridColumnFilterOptionsView;
    exports.GridColumnGroupOptions = GridColumnGroupOptions;
    exports.GridColumnGroupOptionsView = GridColumnGroupOptionsView;
    exports.GridColumnHideOptions = GridColumnHideOptions;
    exports.GridColumnHideOptionsView = GridColumnHideOptionsView;
    exports.GridColumnMoveOptions = GridColumnMoveOptions;
    exports.GridColumnMoveOptionsView = GridColumnMoveOptionsView;
    exports.GridColumnOptions = GridColumnOptions;
    exports.GridColumnOptionsBase = GridColumnOptionsBase;
    exports.GridColumnOptionsSectionBase = GridColumnOptionsSectionBase;
    exports.GridColumnOptionsSimpleSectionBase = GridColumnOptionsSimpleSectionBase;
    exports.GridColumnOptionsUtilities = GridColumnOptionsUtilities;
    exports.GridColumnOptionsView = GridColumnOptionsView;
    exports.GridColumnOptionsViewBase = GridColumnOptionsViewBase;
    exports.GridColumnPinOptions = GridColumnPinOptions;
    exports.GridColumnPinOptionsView = GridColumnPinOptionsView;
    exports.GridColumnSortOptions = GridColumnSortOptions;
    exports.GridColumnSortOptionsView = GridColumnSortOptionsView;
    exports.GridColumnSpacer = GridColumnSpacer;
    exports.GridColumnSpacerCollection = GridColumnSpacerCollection;
    exports.GridColumnWidthChangedEventArgs = GridColumnWidthChangedEventArgs;
    exports.GridColumnsAutoGeneratedEventArgs = GridColumnsAutoGeneratedEventArgs;
    exports.GridColumnsChangedEventArgs = GridColumnsChangedEventArgs;
    exports.GridDataCommittedEventArgs = GridDataCommittedEventArgs;
    exports.GridDataCommittingEventArgs = GridDataCommittingEventArgs;
    exports.GridEasingFunctionType = GridEasingFunctionType;
    exports.GridEasingFunctionType_$type = GridEasingFunctionType_$type;
    exports.GridEffect = GridEffect;
    exports.GridEffectGroup = GridEffectGroup;
    exports.GridEffectMainIntent_$type = GridEffectMainIntent_$type;
    exports.GridEffectManager = GridEffectManager;
    exports.GridEffectSubIntent_$type = GridEffectSubIntent_$type;
    exports.GridExpansionIndicator = GridExpansionIndicator;
    exports.GridExpansionIndicatorView = GridExpansionIndicatorView;
    exports.GridExternalWrapper = GridExternalWrapper;
    exports.GridFilterDialog = GridFilterDialog;
    exports.GridFilterDialogFilterChangeEventArgs = GridFilterDialogFilterChangeEventArgs;
    exports.GridFilterDialogOpeningEventArgs = GridFilterDialogOpeningEventArgs;
    exports.GridFilterDialogPanel = GridFilterDialogPanel;
    exports.GridFilterDialogView = GridFilterDialogView;
    exports.GridFilterDialogViewModel = GridFilterDialogViewModel;
    exports.GridFilterDialogViewModelGrouping = GridFilterDialogViewModelGrouping;
    exports.GridFilterDialogViewModelGroupingLevel = GridFilterDialogViewModelGroupingLevel;
    exports.GridFilterDialogViewModelGroupingLevelCollection = GridFilterDialogViewModelGroupingLevelCollection;
    exports.GridFilterDialogViewModelRow = GridFilterDialogViewModelRow;
    exports.GridFilterDialogViewModelRowCollection = GridFilterDialogViewModelRowCollection;
    exports.GridFilterExpressionsEventArgs = GridFilterExpressionsEventArgs;
    exports.GridGroupDescriptionsChangedEventArgs = GridGroupDescriptionsChangedEventArgs;
    exports.GridLayer = GridLayer;
    exports.GridLayerController = GridLayerController;
    exports.GridLayerExport = GridLayerExport;
    exports.GridRowEditEndedEventArgs = GridRowEditEndedEventArgs;
    exports.GridRowEditStartedEventArgs = GridRowEditStartedEventArgs;
    exports.GridSelectedCellRangesChangedEventArgs = GridSelectedCellRangesChangedEventArgs;
    exports.GridSelectedCellRangesCollection = GridSelectedCellRangesCollection;
    exports.GridSelectedCellsChangedEventArgs = GridSelectedCellsChangedEventArgs;
    exports.GridSelectedCellsCollection = GridSelectedCellsCollection;
    exports.GridSelectedItemsChangedEventArgs = GridSelectedItemsChangedEventArgs;
    exports.GridSelectedItemsCollection = GridSelectedItemsCollection;
    exports.GridSelectedKeysChangedEventArgs = GridSelectedKeysChangedEventArgs;
    exports.GridSelectedKeysCollection = GridSelectedKeysCollection;
    exports.GridSelectionBehavior = GridSelectionBehavior;
    exports.GridSelectionBehavior_$type = GridSelectionBehavior_$type;
    exports.GridSelectionMode = GridSelectionMode;
    exports.GridSelectionMode_$type = GridSelectionMode_$type;
    exports.GridSizeChangedEventArgs = GridSizeChangedEventArgs;
    exports.GridSortDescriptionsChangedEventArgs = GridSortDescriptionsChangedEventArgs;
    exports.GridSortIndicator = GridSortIndicator;
    exports.GridSortIndicatorView = GridSortIndicatorView;
    exports.GridStyleRepository = GridStyleRepository;
    exports.GridViewportChangedEventArgs = GridViewportChangedEventArgs;
    exports.GroupData = GroupData;
    exports.GroupSummaryDisplayMode = GroupSummaryDisplayMode;
    exports.GroupSummaryDisplayMode_$type = GroupSummaryDisplayMode_$type;
    exports.Header = Header;
    exports.HeaderClickAction = HeaderClickAction;
    exports.HeaderClickAction_$type = HeaderClickAction_$type;
    exports.HeaderRowSeparator = HeaderRowSeparator;
    exports.HeaderSeparator = HeaderSeparator;
    exports.HoverManager = HoverManager;
    exports.ICellActionManager_$type = ICellActionManager_$type;
    exports.ICellPresenter_$type = ICellPresenter_$type;
    exports.ICellRenderingEngine_$type = ICellRenderingEngine_$type;
    exports.IDataAdapter_$type = IDataAdapter_$type;
    exports.IDelayedExecutionManager_$type = IDelayedExecutionManager_$type;
    exports.IDraggerView_$type = IDraggerView_$type;
    exports.IDragger_$type = IDragger_$type;
    exports.IExternalDefinitionBase_$type = IExternalDefinitionBase_$type;
    exports.IExternalGrid_$type = IExternalGrid_$type;
    exports.IExternalTemplateColumn_$type = IExternalTemplateColumn_$type;
    exports.IExternalTemplateHeaderColumn_$type = IExternalTemplateHeaderColumn_$type;
    exports.IExternalTemplateSectionHeader_$type = IExternalTemplateSectionHeader_$type;
    exports.IGridInfoRequestor_$type = IGridInfoRequestor_$type;
    exports.INativeCell_$type = INativeCell_$type;
    exports.IPlatformPixelConverter_$type = IPlatformPixelConverter_$type;
    exports.IPropertySetter_$type = IPropertySetter_$type;
    exports.IViewportManager_$type = IViewportManager_$type;
    exports.IgrCellInfo = IgrCellInfo;
    exports.IgrCellKey = IgrCellKey;
    exports.IgrCellKeyModule = IgrCellKeyModule;
    exports.IgrCellRange = IgrCellRange;
    exports.IgrCellRangeModule = IgrCellRangeModule;
    exports.IgrCellStyleRequestedEventArgs = IgrCellStyleRequestedEventArgs;
    exports.IgrCheckboxList = IgrCheckboxList;
    exports.IgrCheckboxListModule = IgrCheckboxListModule;
    exports.IgrCheckedChangedEventArgs = IgrCheckedChangedEventArgs;
    exports.IgrColumn = IgrColumn;
    exports.IgrColumnChooser = IgrColumnChooser;
    exports.IgrColumnChooserModule = IgrColumnChooserModule;
    exports.IgrColumnExchanger = IgrColumnExchanger;
    exports.IgrColumnExchangersCollection = IgrColumnExchangersCollection;
    exports.IgrColumnGroupDescription = IgrColumnGroupDescription;
    exports.IgrColumnGroupDescriptionCollection = IgrColumnGroupDescriptionCollection;
    exports.IgrColumnGroupDescriptionModule = IgrColumnGroupDescriptionModule;
    exports.IgrColumnHiddenChangedEventArgs = IgrColumnHiddenChangedEventArgs;
    exports.IgrColumnMovingSeparator = IgrColumnMovingSeparator;
    exports.IgrColumnMovingSeparatorModule = IgrColumnMovingSeparatorModule;
    exports.IgrColumnPinnedChangedEventArgs = IgrColumnPinnedChangedEventArgs;
    exports.IgrColumnPinning = IgrColumnPinning;
    exports.IgrColumnPinningModule = IgrColumnPinningModule;
    exports.IgrColumnPropertySetter = IgrColumnPropertySetter;
    exports.IgrColumnPropertySettersCollection = IgrColumnPropertySettersCollection;
    exports.IgrColumnResizingSeparator = IgrColumnResizingSeparator;
    exports.IgrColumnResizingSeparatorModule = IgrColumnResizingSeparatorModule;
    exports.IgrColumnSortDescription = IgrColumnSortDescription;
    exports.IgrColumnSortDescriptionCollection = IgrColumnSortDescriptionCollection;
    exports.IgrColumnSortDescriptionModule = IgrColumnSortDescriptionModule;
    exports.IgrColumnSummaryDescription = IgrColumnSummaryDescription;
    exports.IgrColumnSummaryDescriptionCollection = IgrColumnSummaryDescriptionCollection;
    exports.IgrColumnSummaryDescriptionModule = IgrColumnSummaryDescriptionModule;
    exports.IgrColumnWidth = IgrColumnWidth;
    exports.IgrColumnWidthModule = IgrColumnWidthModule;
    exports.IgrComboBoxColumn = IgrComboBoxColumn;
    exports.IgrComboBoxColumnModule = IgrComboBoxColumnModule;
    exports.IgrDataBindingEventArgs = IgrDataBindingEventArgs;
    exports.IgrDataGrid = IgrDataGrid;
    exports.IgrDataGridAllColumnsModule = IgrDataGridAllColumnsModule;
    exports.IgrDataGridCoreModule = IgrDataGridCoreModule;
    exports.IgrDataGridExpansionIndicator = IgrDataGridExpansionIndicator;
    exports.IgrDataGridFilterDialog = IgrDataGridFilterDialog;
    exports.IgrDataGridModule = IgrDataGridModule;
    exports.IgrDataGridSortIndicator = IgrDataGridSortIndicator;
    exports.IgrDataGridToolbar = IgrDataGridToolbar;
    exports.IgrDataGridToolbarModule = IgrDataGridToolbarModule;
    exports.IgrDateTimeCellInfo = IgrDateTimeCellInfo;
    exports.IgrDateTimeColumn = IgrDateTimeColumn;
    exports.IgrDateTimeColumnModule = IgrDateTimeColumnModule;
    exports.IgrDefinitionBase = IgrDefinitionBase;
    exports.IgrEditorCellInfo = IgrEditorCellInfo;
    exports.IgrEditorRowCellInfo = IgrEditorRowCellInfo;
    exports.IgrFilterApplyButtonClickEventArgs = IgrFilterApplyButtonClickEventArgs;
    exports.IgrFilterCancelButtonClickEventArgs = IgrFilterCancelButtonClickEventArgs;
    exports.IgrFilterDialogRenderCompletedEventArgs = IgrFilterDialogRenderCompletedEventArgs;
    exports.IgrFormatGroupTextEventArgs = IgrFormatGroupTextEventArgs;
    exports.IgrFormatSummaryTextEventArgs = IgrFormatSummaryTextEventArgs;
    exports.IgrGotFocusEventArgs = IgrGotFocusEventArgs;
    exports.IgrGridActiveCellChangedEventArgs = IgrGridActiveCellChangedEventArgs;
    exports.IgrGridAnimationPhaseSettings = IgrGridAnimationPhaseSettings;
    exports.IgrGridAnimationSettings = IgrGridAnimationSettings;
    exports.IgrGridCellEditEndedEventArgs = IgrGridCellEditEndedEventArgs;
    exports.IgrGridCellEditStartedEventArgs = IgrGridCellEditStartedEventArgs;
    exports.IgrGridCellEventArgs = IgrGridCellEventArgs;
    exports.IgrGridCellPosition = IgrGridCellPosition;
    exports.IgrGridCellPositionModule = IgrGridCellPositionModule;
    exports.IgrGridCellValueChangingEventArgs = IgrGridCellValueChangingEventArgs;
    exports.IgrGridColumnAnimationSettings = IgrGridColumnAnimationSettings;
    exports.IgrGridColumnCollection = IgrGridColumnCollection;
    exports.IgrGridColumnFilterOptions = IgrGridColumnFilterOptions;
    exports.IgrGridColumnFilterOptionsModule = IgrGridColumnFilterOptionsModule;
    exports.IgrGridColumnGroupOptions = IgrGridColumnGroupOptions;
    exports.IgrGridColumnGroupOptionsModule = IgrGridColumnGroupOptionsModule;
    exports.IgrGridColumnHideOptions = IgrGridColumnHideOptions;
    exports.IgrGridColumnHideOptionsModule = IgrGridColumnHideOptionsModule;
    exports.IgrGridColumnMoveOptions = IgrGridColumnMoveOptions;
    exports.IgrGridColumnMoveOptionsModule = IgrGridColumnMoveOptionsModule;
    exports.IgrGridColumnOptions = IgrGridColumnOptions;
    exports.IgrGridColumnOptionsBase = IgrGridColumnOptionsBase;
    exports.IgrGridColumnOptionsModule = IgrGridColumnOptionsModule;
    exports.IgrGridColumnOptionsSectionBase = IgrGridColumnOptionsSectionBase;
    exports.IgrGridColumnOptionsSimpleSectionBase = IgrGridColumnOptionsSimpleSectionBase;
    exports.IgrGridColumnPinOptions = IgrGridColumnPinOptions;
    exports.IgrGridColumnPinOptionsModule = IgrGridColumnPinOptionsModule;
    exports.IgrGridColumnSortOptions = IgrGridColumnSortOptions;
    exports.IgrGridColumnSortOptionsModule = IgrGridColumnSortOptionsModule;
    exports.IgrGridColumnWidthChangedEventArgs = IgrGridColumnWidthChangedEventArgs;
    exports.IgrGridColumnsAutoGeneratedEventArgs = IgrGridColumnsAutoGeneratedEventArgs;
    exports.IgrGridColumnsChangedEventArgs = IgrGridColumnsChangedEventArgs;
    exports.IgrGridDataCommittedEventArgs = IgrGridDataCommittedEventArgs;
    exports.IgrGridDataCommittingEventArgs = IgrGridDataCommittingEventArgs;
    exports.IgrGridFilterDialogFilterChangeEventArgs = IgrGridFilterDialogFilterChangeEventArgs;
    exports.IgrGridFilterDialogOpeningEventArgs = IgrGridFilterDialogOpeningEventArgs;
    exports.IgrGridFilterDialogViewModel = IgrGridFilterDialogViewModel;
    exports.IgrGridFilterDialogViewModelGrouping = IgrGridFilterDialogViewModelGrouping;
    exports.IgrGridFilterDialogViewModelGroupingLevel = IgrGridFilterDialogViewModelGroupingLevel;
    exports.IgrGridFilterDialogViewModelGroupingLevelCollection = IgrGridFilterDialogViewModelGroupingLevelCollection;
    exports.IgrGridFilterDialogViewModelRow = IgrGridFilterDialogViewModelRow;
    exports.IgrGridFilterDialogViewModelRowCollection = IgrGridFilterDialogViewModelRowCollection;
    exports.IgrGridFilterExpressionsEventArgs = IgrGridFilterExpressionsEventArgs;
    exports.IgrGridGroupDescriptionsChangedEventArgs = IgrGridGroupDescriptionsChangedEventArgs;
    exports.IgrGridRowEditEndedEventArgs = IgrGridRowEditEndedEventArgs;
    exports.IgrGridRowEditStartedEventArgs = IgrGridRowEditStartedEventArgs;
    exports.IgrGridSelectedCellRangesChangedEventArgs = IgrGridSelectedCellRangesChangedEventArgs;
    exports.IgrGridSelectedCellRangesCollection = IgrGridSelectedCellRangesCollection;
    exports.IgrGridSelectedCellsChangedEventArgs = IgrGridSelectedCellsChangedEventArgs;
    exports.IgrGridSelectedCellsCollection = IgrGridSelectedCellsCollection;
    exports.IgrGridSelectedItemsChangedEventArgs = IgrGridSelectedItemsChangedEventArgs;
    exports.IgrGridSelectedItemsCollection = IgrGridSelectedItemsCollection;
    exports.IgrGridSelectedKeysChangedEventArgs = IgrGridSelectedKeysChangedEventArgs;
    exports.IgrGridSelectedKeysCollection = IgrGridSelectedKeysCollection;
    exports.IgrGridSizeChangedEventArgs = IgrGridSizeChangedEventArgs;
    exports.IgrGridSortDescriptionsChangedEventArgs = IgrGridSortDescriptionsChangedEventArgs;
    exports.IgrGroupData = IgrGroupData;
    exports.IgrHeader = IgrHeader;
    exports.IgrHeaderRowSeparator = IgrHeaderRowSeparator;
    exports.IgrHeaderRowSeparatorModule = IgrHeaderRowSeparatorModule;
    exports.IgrHeaderSeparator = IgrHeaderSeparator;
    exports.IgrHeaderSeparatorModule = IgrHeaderSeparatorModule;
    exports.IgrImageCellInfo = IgrImageCellInfo;
    exports.IgrImageColumn = IgrImageColumn;
    exports.IgrImageColumnModule = IgrImageColumnModule;
    exports.IgrLostFocusEventArgs = IgrLostFocusEventArgs;
    exports.IgrMultiColumnComboBox = IgrMultiColumnComboBox;
    exports.IgrMultiColumnComboBoxModule = IgrMultiColumnComboBoxModule;
    exports.IgrMultiColumnComboBoxTextChangedEventArgs = IgrMultiColumnComboBoxTextChangedEventArgs;
    exports.IgrMultiColumnComboBoxValueChangedEventArgs = IgrMultiColumnComboBoxValueChangedEventArgs;
    exports.IgrNumericCellInfo = IgrNumericCellInfo;
    exports.IgrNumericColumn = IgrNumericColumn;
    exports.IgrNumericColumnModule = IgrNumericColumnModule;
    exports.IgrPinnedAreaSeparator = IgrPinnedAreaSeparator;
    exports.IgrPinnedAreaSeparatorModule = IgrPinnedAreaSeparatorModule;
    exports.IgrPrimaryKeyValue = IgrPrimaryKeyValue;
    exports.IgrPrimaryKeyValueModule = IgrPrimaryKeyValueModule;
    exports.IgrResponsivePhase = IgrResponsivePhase;
    exports.IgrResponsivePhasesCollection = IgrResponsivePhasesCollection;
    exports.IgrResponsiveState = IgrResponsiveState;
    exports.IgrResponsiveStateEnteredEventArgs = IgrResponsiveStateEnteredEventArgs;
    exports.IgrResponsiveStateEnteringEventArgs = IgrResponsiveStateEnteringEventArgs;
    exports.IgrResponsiveStateExitedEventArgs = IgrResponsiveStateExitedEventArgs;
    exports.IgrResponsiveStatesCollection = IgrResponsiveStatesCollection;
    exports.IgrRowSeparator = IgrRowSeparator;
    exports.IgrRowSeparatorInfo = IgrRowSeparatorInfo;
    exports.IgrRowSeparatorModule = IgrRowSeparatorModule;
    exports.IgrSectionFooter = IgrSectionFooter;
    exports.IgrSectionFooterModule = IgrSectionFooterModule;
    exports.IgrSectionHeader = IgrSectionHeader;
    exports.IgrSectionHeaderCellInfo = IgrSectionHeaderCellInfo;
    exports.IgrSectionHeaderModule = IgrSectionHeaderModule;
    exports.IgrSelectAllCheckboxChangedEventArgs = IgrSelectAllCheckboxChangedEventArgs;
    exports.IgrSortIndicatorRenderCompletedEventArgs = IgrSortIndicatorRenderCompletedEventArgs;
    exports.IgrSummaryCellInfo = IgrSummaryCellInfo;
    exports.IgrSummaryData = IgrSummaryData;
    exports.IgrSummaryRow = IgrSummaryRow;
    exports.IgrSummaryRowRoot = IgrSummaryRowRoot;
    exports.IgrSummaryRowRootModule = IgrSummaryRowRootModule;
    exports.IgrSummaryRowSection = IgrSummaryRowSection;
    exports.IgrSummaryRowSectionModule = IgrSummaryRowSectionModule;
    exports.IgrTemplateCellInfo = IgrTemplateCellInfo;
    exports.IgrTemplateCellUpdatingEventArgs = IgrTemplateCellUpdatingEventArgs;
    exports.IgrTemplateColumn = IgrTemplateColumn;
    exports.IgrTemplateColumnModule = IgrTemplateColumnModule;
    exports.IgrTemplateHeader = IgrTemplateHeader;
    exports.IgrTemplateHeaderCellInfo = IgrTemplateHeaderCellInfo;
    exports.IgrTemplateHeaderCellUpdatingEventArgs = IgrTemplateHeaderCellUpdatingEventArgs;
    exports.IgrTemplateHeaderModule = IgrTemplateHeaderModule;
    exports.IgrTemplateSectionHeader = IgrTemplateSectionHeader;
    exports.IgrTemplateSectionHeaderCellInfo = IgrTemplateSectionHeaderCellInfo;
    exports.IgrTemplateSectionHeaderCellUpdatingEventArgs = IgrTemplateSectionHeaderCellUpdatingEventArgs;
    exports.IgrTemplateSectionHeaderModule = IgrTemplateSectionHeaderModule;
    exports.IgrTextCellInfo = IgrTextCellInfo;
    exports.IgrTextColumn = IgrTextColumn;
    exports.IgrTextColumnModule = IgrTextColumnModule;
    exports.IgrTextHeader = IgrTextHeader;
    exports.IgrTextHeaderCellInfo = IgrTextHeaderCellInfo;
    exports.IgrTextHeaderModule = IgrTextHeaderModule;
    exports.IgrVerticalSeparatorCellInfo = IgrVerticalSeparatorCellInfo;
    exports.ImageCell = ImageCell;
    exports.ImageCellModel = ImageCellModel;
    exports.ImageCellModelExport = ImageCellModelExport;
    exports.ImageCellPresenter = ImageCellPresenter;
    exports.ImageColumn = ImageColumn;
    exports.ImageResourceType = ImageResourceType;
    exports.ImageResourceType_$type = ImageResourceType_$type;
    exports.ImageStretchOptions = ImageStretchOptions;
    exports.ImageStretchOptions_$type = ImageStretchOptions_$type;
    exports.LostFocusEventArgs = LostFocusEventArgs;
    exports.ModelStates_$type = ModelStates_$type;
    exports.ModelTypes_$type = ModelTypes_$type;
    exports.MultiColumnComboBox = MultiColumnComboBox;
    exports.MultiColumnComboBoxDataSourceNotificationHandler = MultiColumnComboBoxDataSourceNotificationHandler;
    exports.MultiColumnComboBoxSelectedItemChangeType = MultiColumnComboBoxSelectedItemChangeType;
    exports.MultiColumnComboBoxSelectedItemChangeType_$type = MultiColumnComboBoxSelectedItemChangeType_$type;
    exports.MultiColumnComboBoxTextChangedEventArgs = MultiColumnComboBoxTextChangedEventArgs;
    exports.MultiColumnComboBoxUtilities = MultiColumnComboBoxUtilities;
    exports.MultiColumnComboBoxValueChangedEventArgs = MultiColumnComboBoxValueChangedEventArgs;
    exports.MultiColumnComboBoxView = MultiColumnComboBoxView;
    exports.MultiColumnComboVisualModelExport = MultiColumnComboVisualModelExport;
    exports.MultipleDataSourceNotifier = MultipleDataSourceNotifier;
    exports.NumericCell = NumericCell;
    exports.NumericCellFormatter = NumericCellFormatter;
    exports.NumericCellModel = NumericCellModel;
    exports.NumericCellModelExport = NumericCellModelExport;
    exports.NumericCellPresenter = NumericCellPresenter;
    exports.NumericColumn = NumericColumn;
    exports.PinnedAreaSeparator = PinnedAreaSeparator;
    exports.PinnedPositions = PinnedPositions;
    exports.PinnedPositions_$type = PinnedPositions_$type;
    exports.PinnedRowInfo = PinnedRowInfo;
    exports.PlaceholderView = PlaceholderView;
    exports.PrimaryKeyValue = PrimaryKeyValue;
    exports.PushRowResult = PushRowResult;
    exports.PushRowSettings = PushRowSettings;
    exports.RecyclingManager = RecyclingManager;
    exports.ResponsiveEngine = ResponsiveEngine;
    exports.ResponsivePhase = ResponsivePhase;
    exports.ResponsivePhasesCollection = ResponsivePhasesCollection;
    exports.ResponsiveState = ResponsiveState;
    exports.ResponsiveStateEnteredEventArgs = ResponsiveStateEnteredEventArgs;
    exports.ResponsiveStateEnteringEventArgs = ResponsiveStateEnteringEventArgs;
    exports.ResponsiveStateExitedEventArgs = ResponsiveStateExitedEventArgs;
    exports.ResponsiveStatesCollection = ResponsiveStatesCollection;
    exports.RowCellsEffect = RowCellsEffect;
    exports.RowEffect = RowEffect;
    exports.RowHoverAnimationMode = RowHoverAnimationMode;
    exports.RowHoverAnimationMode_$type = RowHoverAnimationMode_$type;
    exports.RowPath = RowPath;
    exports.RowSelectionAnimationMode = RowSelectionAnimationMode;
    exports.RowSelectionAnimationMode_$type = RowSelectionAnimationMode_$type;
    exports.RowSeparator = RowSeparator;
    exports.RowSeparatorCell = RowSeparatorCell;
    exports.RowSeparatorCellPresenter = RowSeparatorCellPresenter;
    exports.RowSeparatorModel = RowSeparatorModel;
    exports.RowSeparatorModelExport = RowSeparatorModelExport;
    exports.SectionFooter = SectionFooter;
    exports.SectionHeader = SectionHeader;
    exports.SectionHeaderCell = SectionHeaderCell;
    exports.SectionHeaderCellModel = SectionHeaderCellModel;
    exports.SectionHeaderCellModelExport = SectionHeaderCellModelExport;
    exports.SectionHeaderCellPresenter = SectionHeaderCellPresenter;
    exports.SectionInfo = SectionInfo;
    exports.SelectAllCheckboxChangedEventArgs = SelectAllCheckboxChangedEventArgs;
    exports.SelectionManager = SelectionManager;
    exports.SortIndicatorRenderCompletedEventArgs = SortIndicatorRenderCompletedEventArgs;
    exports.SortIndicatorStyle = SortIndicatorStyle;
    exports.SortIndicatorStyle_$type = SortIndicatorStyle_$type;
    exports.SortManager = SortManager;
    exports.SortMode = SortMode;
    exports.SortMode_$type = SortMode_$type;
    exports.SpacerEffect = SpacerEffect;
    exports.SpatialEngine = SpatialEngine;
    exports.SummaryCell = SummaryCell;
    exports.SummaryCellModel = SummaryCellModel;
    exports.SummaryCellModelExport = SummaryCellModelExport;
    exports.SummaryCellPresenter = SummaryCellPresenter;
    exports.SummaryData = SummaryData;
    exports.SummaryRow = SummaryRow;
    exports.SummaryRowRoot = SummaryRowRoot;
    exports.SummaryRowSection = SummaryRowSection;
    exports.TemplateCell = TemplateCell;
    exports.TemplateCellContainer = TemplateCellContainer;
    exports.TemplateCellModel = TemplateCellModel;
    exports.TemplateCellModelExport = TemplateCellModelExport;
    exports.TemplateCellPresenter = TemplateCellPresenter;
    exports.TemplateCellUpdatingEventArgs = TemplateCellUpdatingEventArgs;
    exports.TemplateColumn = TemplateColumn;
    exports.TemplateHeader = TemplateHeader;
    exports.TemplateHeaderCell = TemplateHeaderCell;
    exports.TemplateHeaderCellModel = TemplateHeaderCellModel;
    exports.TemplateHeaderCellModelExport = TemplateHeaderCellModelExport;
    exports.TemplateHeaderCellPresenter = TemplateHeaderCellPresenter;
    exports.TemplateHeaderCellUpdatingEventArgs = TemplateHeaderCellUpdatingEventArgs;
    exports.TemplateSectionHeader = TemplateSectionHeader;
    exports.TemplateSectionHeaderCellModel = TemplateSectionHeaderCellModel;
    exports.TemplateSectionHeaderCellModelExport = TemplateSectionHeaderCellModelExport;
    exports.TemplateSectionHeaderCellUpdatingEventArgs = TemplateSectionHeaderCellUpdatingEventArgs;
    exports.TextCell = TextCell;
    exports.TextCellLineBreakMode = TextCellLineBreakMode;
    exports.TextCellLineBreakMode_$type = TextCellLineBreakMode_$type;
    exports.TextCellModel = TextCellModel;
    exports.TextCellModelExport = TextCellModelExport;
    exports.TextCellPresenter = TextCellPresenter;
    exports.TextColumn = TextColumn;
    exports.TextHeader = TextHeader;
    exports.TextHeaderCell = TextHeaderCell;
    exports.TextHeaderCellModel = TextHeaderCellModel;
    exports.TextHeaderCellModelExport = TextHeaderCellModelExport;
    exports.TextHeaderCellPresenter = TextHeaderCellPresenter;
    exports.VerticalSeparatorCell = VerticalSeparatorCell;
    exports.VerticalSeparatorCellModel = VerticalSeparatorCellModel;
    exports.VerticalSeparatorCellPresenter = VerticalSeparatorCellPresenter;
    exports.VisibilityEngine = VisibilityEngine;
    exports.VisualModel = VisualModel;
    exports.VisualModelExport = VisualModelExport;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=igniteui-react-grids.umd.js.map
