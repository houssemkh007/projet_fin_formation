/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
export let CheckboxVisualModelExport = /*@__PURE__*/ (() => {
    class CheckboxVisualModelExport extends Base {
        constructor() {
            super(...arguments);
            this.f = 0;
            this.d = null;
            this.c = null;
            this.e = null;
            this.b = null;
            this.o = 0;
            this.l = 0;
            this.p = 0;
            this.q = 0;
            this.n = 0;
            this.m = 0;
            this.a = null;
            this.r = null;
            this.j = false;
            this.g = false;
            this.h = false;
            this.k = false;
            this.i = false;
        }
        s() {
            let a = new StringBuilder(0);
            a.l("{");
            a.l("baseTheme : " + this.f + ", ");
            a.l("actualUncheckedBackgroundColor : " + this.d.serialize() + ", ");
            a.l("actualTickColor : " + this.c + ", ");
            a.l("actualUncheckedBorderColor : " + this.e.serialize() + ", ");
            a.l("actualCheckedBorderColor : " + this.b.serialize() + ", ");
            a.l("borderWidth : " + this.o + ", ");
            a.l("actualBorderWidth : " + this.l + ", ");
            a.l("tickStrokeWidth : " + this.q + ", ");
            a.l("actualTickStrokeWidth : " + this.n + ", ");
            a.l("actualCheckedBackgroundColor : " + this.a.serialize() + ", ");
            if (this.r != null) {
                a.l("value : \"" + this.r.toString() + "\", ");
            }
            a.l("isFocused : " + this.j + ", ");
            a.l("disableRipple : " + this.g + ", ");
            a.l("isChecked : " + this.h + ", ");
            a.l("isIndeterminate : " + this.k + ", ");
            a.l("isDisabled : " + this.i + ", ");
            a.l("}");
            return a.toString();
        }
    }
    CheckboxVisualModelExport.$t = /*@__PURE__*/ markType(CheckboxVisualModelExport, 'CheckboxVisualModelExport');
    return CheckboxVisualModelExport;
})();
//# sourceMappingURL=CheckboxVisualModelExport.js.map
