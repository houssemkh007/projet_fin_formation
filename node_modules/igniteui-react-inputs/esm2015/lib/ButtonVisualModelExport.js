/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let ButtonVisualModelExport = /*@__PURE__*/ (() => {
    class ButtonVisualModelExport extends Base {
        constructor() {
            super(...arguments);
            this.s = 0;
            this.q = 0;
            this.p = 0;
            this.t = 0;
            this.h = 0;
            this.i = 0;
            this.c = null;
            this.g = null;
            this.d = null;
            this.a = null;
            this.u = 0;
            this.e = null;
            this.ah = null;
            this.b = null;
            this.j = 0;
            this.f = null;
            this.o = 0;
            this.ae = null;
            this.af = null;
            this.ag = null;
            this.r = 0;
            this.ac = null;
            this.ad = null;
            this.x = null;
            this.y = null;
            this.z = null;
            this.w = null;
            this.v = null;
            this.aa = null;
            this.m = false;
            this.k = false;
            this.n = false;
            this.l = false;
        }
        ab() {
            let a = new StringBuilder(0);
            a.l("{");
            a.l("top : " + this.s + ", ");
            a.l("left : " + this.q + ", ");
            a.l("top : " + this.p + ", ");
            a.l("left : " + this.t + ", ");
            a.l("baseTheme : " + this.h + ", ");
            a.l("actualDensity : " + this.i + ", ");
            a.l("actualBorderColor : " + this.c.serialize() + ", ");
            a.l("actualUmbraShadowColor : " + this.g.serialize() + ", ");
            a.l("actualPenumbraShadowColor : " + this.d.serialize() + ", ");
            a.l("actualAmbientShadowColor : " + this.a.serialize() + ", ");
            a.l("actualRestingElevation : " + this.u + ", ");
            if (this.e != null) {
                a.l("actualRippleColor : " + this.e.serialize() + ", ");
            }
            a.l("actualBackgroundColor : " + this.b.serialize() + ", ");
            a.l("actualElevationMode : " + this.j + ", ");
            a.l("actualTextColor : " + this.f.serialize() + ", ");
            a.l("actualBorderWidth : " + this.o + ", ");
            if (!stringIsNullOrEmpty(this.ae)) {
                a.l("textStyleFontStyle : \"" + this.ae + "\", ");
            }
            if (!stringIsNullOrEmpty(this.af)) {
                a.l("textStyleFontVariant : \"" + this.af + "\", ");
            }
            if (!stringIsNullOrEmpty(this.ag)) {
                a.l("textStyleFontWeight : \"" + this.ag + "\", ");
            }
            if (!stringIsNullOrEmpty(this.ac)) {
                a.l("textStyleFontFamily : \"" + this.ac + "\", ");
            }
            if (!stringIsNullOrEmpty(this.ad)) {
                a.l("textStyleFontStretch : \"" + this.ad + "\", ");
            }
            if (!isNaN_(this.r)) {
                a.l("textStyleFontSize : " + this.r + ", ");
            }
            a.l("display : \"" + this.x + "\", ");
            a.l("flexDirection : \"" + this.y + "\", ");
            a.l("flexGrow : \"" + this.z + "\", ");
            a.l("alignItems : \"" + this.w + "\", ");
            if (this.v != null) {
                a.l("value : \"" + this.v.toString() + "\", ");
            }
            a.l("name : \"" + this.aa + "\", ");
            a.l("isFocused : " + this.m + ", ");
            a.l("actualDisableRipple : " + this.k + ", ");
            a.l("isHover : " + this.n + ", ");
            a.l("isDisabled : " + this.l + ", ");
            a.l("}");
            return a.toString();
        }
    }
    ButtonVisualModelExport.$t = /*@__PURE__*/ markType(ButtonVisualModelExport, 'ButtonVisualModelExport');
    return ButtonVisualModelExport;
})();
//# sourceMappingURL=ButtonVisualModelExport.js.map
