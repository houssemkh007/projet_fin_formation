/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let InputVisualModelExport = /*@__PURE__*/ (() => {
    class InputVisualModelExport extends Base {
        constructor() {
            super(...arguments);
            this.h = 0;
            this.f = 0;
            this.c = 0;
            this.b = 0;
            this.j = null;
            this.m = null;
            this.d = false;
            this.a = null;
            this.q = null;
            this.r = null;
            this.s = null;
            this.g = 0;
            this.o = null;
            this.p = null;
            this.i = null;
            this.l = null;
            this.e = false;
            this.t = null;
            this.k = null;
        }
        n() {
            let a = new StringBuilder(0);
            a.l("{");
            a.l("top : " + this.h + ", ");
            a.l("left : " + this.f + ", ");
            a.l("shiftType : " + this.c + ", ");
            a.l("actualDensity : " + this.b + ", ");
            a.l("mask : \"" + this.j + "\", ");
            a.l("promptChar : \"" + this.m + "\", ");
            a.l("includeLiterals : " + this.d + ", ");
            a.l("actualTextColor : " + this.a.serialize() + ", ");
            if (!stringIsNullOrEmpty(this.q)) {
                a.l("textStyleFontStyle : \"" + this.q + "\", ");
            }
            if (!stringIsNullOrEmpty(this.r)) {
                a.l("textStyleFontVariant : \"" + this.r + "\", ");
            }
            if (!stringIsNullOrEmpty(this.s)) {
                a.l("textStyleFontWeight : \"" + this.s + "\", ");
            }
            if (!stringIsNullOrEmpty(this.o)) {
                a.l("textStyleFontFamily : \"" + this.o + "\", ");
            }
            if (!stringIsNullOrEmpty(this.p)) {
                a.l("textStyleFontStretch : \"" + this.p + "\", ");
            }
            if (!isNaN_(this.g)) {
                a.l("textStyleFontSize : " + this.g + ", ");
            }
            a.l("inputType : \"" + this.i + "\", ");
            a.l("placeholder : \"" + this.l + "\", ");
            a.l("isHover : " + this.e + ", ");
            a.l("value : \"" + this.t + "\", ");
            a.l("name : \"" + this.k + "\", ");
            a.l("}");
            return a.toString();
        }
    }
    InputVisualModelExport.$t = /*@__PURE__*/ markType(InputVisualModelExport, 'InputVisualModelExport');
    return InputVisualModelExport;
})();
//# sourceMappingURL=InputVisualModelExport.js.map
