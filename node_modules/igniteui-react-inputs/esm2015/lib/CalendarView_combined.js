/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, runOn, markType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, toNullable, Date_$type, enumGetBox } from "igniteui-react-core";
import { DomWrapper_$type } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { BaseControlTheme_$type } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { ObservableCollection$1 } from "igniteui-react-core";
import { DayInfo } from "./DayInfo";
import { Button } from "./Button";
import { ValueChangedEventArgs } from "./ValueChangedEventArgs";
import { CornerRadius } from "igniteui-react-core";
import { Icon } from "./Icon";
import { CalendarVisualModelExport } from "./CalendarVisualModelExport";
import { AppearanceHelper } from "igniteui-react-core";
import { ButtonVisualModelExport } from "./ButtonVisualModelExport";
import { FontUtil } from "igniteui-react-core";
import { nullableNotEquals, unwrapNullable } from "igniteui-react-core";
import { dateNow, dateAddYears, dateFromValues, dateAddDays, dateGetMonth, dateAddMonths } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let CalendarView = /*@__PURE__*/ (() => {
    class CalendarView extends Base {
        constructor() {
            super();
            this.g = null;
            this.i = null;
            this.j = null;
            this.c = new List$1(DomWrapper_$type, 0);
            this.b = new List$1(DomWrapper_$type, 0);
            this.d = new List$1(DomWrapper_$type, 0);
            this.e = new List$1(DomWrapper_$type, 0);
            this.h = null;
            this.l = null;
            this.a = null;
            this.f = null;
            this.l = "day";
            this.h = null;
        }
        y() {
        }
        x(a) {
            if (a == null) {
                this.f = null;
                return;
            }
            this.f = a;
            this.f.rootWrapper.setStyleProperty("background-color", "rgb(255, 255, 255)");
            let b = Math.round(a.rootWrapper.width());
            let c = Math.round(a.rootWrapper.height());
            this.p();
            this.ai();
            this.aj();
            this.ah();
            let d = this.f.rootWrapper;
            d.listen("keydown", runOn(this, this.o));
            d.listen("focus", runOn(this, this.n));
        }
        m() {
            return this.l;
        }
        p() {
            if (this.f != null) {
                this.g = this.f.createElement("div");
                this.g.setStyleProperty("height", "100%");
                this.f.append(this.g);
                for (let a = 0; a < 42; a++) {
                    let b = this.f.createElement("div");
                    this.b.add(b);
                }
                this.a.at(this.f, this.g, this.b);
                this.i = this.f.createElement("div");
                this.i.setStyleProperty("height", "100%");
                this.f.append(this.i);
                for (let c = 0; c < 12; c++) {
                    let d = this.f.createElement("div");
                    this.d.add(d);
                }
                this.a.av(this.f, this.i, this.d);
                for (let e = 0; e < 12; e++) {
                    let f = this.i.getChildAt(e);
                    f.listen("click", runOn(this, this.s));
                }
                this.i.hide();
                this.j = this.f.createElement("div");
                this.j.setStyleProperty("height", "100%");
                this.f.append(this.j);
                for (let g = 0; g < 7; g++) {
                    let h = this.f.createElement("div");
                    this.e.add(h);
                }
                this.a.aw(this.f, this.j, this.e);
                for (let i = 0; i < 7; i++) {
                    let j = this.j.getChildAt(i);
                    j.listen("click", runOn(this, this.an));
                }
                this.j.listen("wheel", runOn(this, this.ao));
                this.j.hide();
            }
        }
        ai() {
            if (this.f != null) {
                let a = this.g.getChildAt(0);
                for (let b = 0; b < 4; b++) {
                    let c = this.f.createElement("div");
                    this.c.add(c);
                }
                this.a.be(this.f, a, this.c);
                let d = a.getChildAt(0);
                let e = a.getChildAt(3);
                d.listen("click", runOn(this, this.z));
                e.listen("click", runOn(this, this.u));
                let f = a.getChildAt(1);
                let g = a.getChildAt(2);
                f.listen("click", runOn(this, this.t));
                g.listen("click", runOn(this, this.ap));
            }
        }
        aj() {
            if (this.f != null) {
                let a = this.g.getChildAt(1);
                this.a.bg(a);
            }
        }
        ah() {
            if (this.f != null) {
                this.a.bd(this.b);
                for (let a = 2; a < 8; a++) {
                    let b = this.g.getChildAt(a);
                    for (let c = 0; c < 7; c++) {
                        let d = b.getChildAt(c);
                        d.listen("click", runOn(this, this.q));
                    }
                }
            }
        }
        ag() {
            if (this.f != null) {
                this.a.bb(this.c._inner[1]);
                this.a.bj(this.c._inner[2]);
            }
        }
        ac(a = false) {
            if (this.f != null) {
                this.a.bd(this.b, a);
            }
        }
        af() {
            if (this.d.count != 0) {
                this.a.bf(this.d);
            }
        }
        ak() {
            if (this.e.count != 0) {
                this.a.bi(this.e);
            }
        }
        ab() {
            this.ac();
            this.ag();
            this.l = "day";
            this.g.show();
            this.i.hide();
            this.j.hide();
            this.r();
        }
        ad() {
            this.ae(this.c._inner[0]);
        }
        ae(a) {
            this.h = a;
        }
        r() {
            if (this.h != null) {
                this.h.parent().parent().focus(false);
            }
        }
        aa(a = true) {
            this.a.ap(-1);
            this.ac(a);
            this.ag();
        }
        v(a = true) {
            this.a.ap(1);
            this.ac(a);
            this.ag();
        }
        al() {
            this.g.hide();
            this.i.show();
            this.i.setStyleProperty("display", "flex");
            this.j.hide();
            this.l = "month";
            this.af();
            this.r();
        }
        am() {
            this.g.hide();
            this.i.hide();
            this.j.show();
            this.l = "year";
            this.ak();
            this.r();
        }
        n(a) {
        }
        o(a) {
            let b = a.which;
            if (this.l == "day") {
                let c = this.h.getAttribute("data-section").toString();
                let d = parseInt(this.h.getAttribute("data-index").toString());
                if (c == "header") {
                    if (b == 37) {
                        if (d > 0) {
                            let e = this.c._inner[d - 1];
                            this.ae(e);
                            this.r();
                        }
                        else {
                            this.aa(false);
                        }
                    }
                    else if (b == 39) {
                        if (d < 3) {
                            let f = this.c._inner[d + 1];
                            this.ae(f);
                            this.r();
                        }
                        else {
                            this.v(false);
                        }
                    }
                    else if (b == 9) {
                        if (a.shiftKey) {
                            this.a.a2();
                        }
                        else {
                            a.preventDefault();
                            this.ac(true);
                            this.r();
                        }
                    }
                    else if (b == 13) {
                        a.preventDefault();
                        if (d == 0) {
                            this.aa(false);
                        }
                        else if (d == 1) {
                            this.al();
                        }
                        else if (d == 2) {
                            this.am();
                        }
                        else if (d == 3) {
                            this.v(false);
                        }
                    }
                }
                else if (c == "days") {
                    let g = this.h.getAttribute("data-day").toString();
                    let h = this.h.getAttribute("data-month").toString();
                    if (b == 37) {
                        if (d == 0) {
                            this.aa();
                            this.r();
                        }
                        else {
                            let i = this.b._inner[d - 1];
                            let j = i.getAttribute("data-day").toString();
                            let k = i.getAttribute("data-month").toString();
                            if (h == k) {
                                this.ae(i);
                                this.r();
                            }
                            else {
                                this.aa();
                                let l = this.k(j, k);
                                this.ae(l);
                                this.r();
                            }
                        }
                    }
                    else if (b == 39) {
                        if (d == 41) {
                            this.v();
                            this.r();
                        }
                        else {
                            let m = this.b._inner[d + 1];
                            let n = m.getAttribute("data-day").toString();
                            let o = m.getAttribute("data-month").toString();
                            if (h == o) {
                                this.ae(m);
                                this.r();
                            }
                            else {
                                this.v();
                                let p = this.k(n, o);
                                this.ae(p);
                                this.r();
                            }
                        }
                    }
                    else if (b == 40) {
                        if (d >= 35) {
                            this.v();
                            let q = this.k(g, h);
                            let r = parseInt(q.getAttribute("data-index").toString());
                            let s = this.b._inner[r + 7];
                            let t = s.getAttribute("data-day").toString();
                            let u = s.getAttribute("data-month").toString();
                            let v = this.k(t, u);
                            this.ae(v);
                            this.r();
                        }
                        else {
                            let w = this.b._inner[d + 7];
                            let x = w.getAttribute("data-day").toString();
                            let y = w.getAttribute("data-month").toString();
                            if (h == y) {
                                this.ae(w);
                                this.r();
                            }
                            else {
                                this.v();
                                let z = this.k(x, y);
                                this.ae(z);
                                this.r();
                            }
                        }
                    }
                    else if (b == 38) {
                        if (d <= 6) {
                            this.aa();
                            let aa = this.k(g, h);
                            let ab = parseInt(aa.getAttribute("data-index").toString());
                            let ac = this.b._inner[ab - 7];
                            let ad = ac.getAttribute("data-day").toString();
                            let ae = ac.getAttribute("data-month").toString();
                            let af = this.k(ad, ae);
                            this.ae(af);
                            this.r();
                        }
                        else {
                            let ag = this.b._inner[d - 7];
                            let ah = ag.getAttribute("data-day").toString();
                            let ai = ag.getAttribute("data-month").toString();
                            if (h == ai) {
                                this.ae(ag);
                                this.r();
                            }
                            else {
                                this.aa();
                                let aj = this.k(ah, ai);
                                this.ae(aj);
                                this.r();
                            }
                        }
                    }
                    else if (b == 34) {
                        this.v();
                        this.r();
                    }
                    else if (b == 33) {
                        this.aa();
                        this.r();
                    }
                    else if (b == 9) {
                        if (a.shiftKey) {
                            a.preventDefault();
                            let ak = this.c._inner[1];
                            this.ae(ak);
                            this.r();
                        }
                        else {
                            this.a.a2();
                        }
                    }
                }
            }
            else if (this.l == "month") {
                let al = parseInt(this.h.getAttribute("data-index").toString());
                if (b == 37) {
                    if (al == 0) {
                        let am = this.d._inner[11];
                        this.ae(am);
                        this.r();
                    }
                    else {
                        let an = this.d._inner[al - 1];
                        this.ae(an);
                        this.r();
                    }
                }
                else if (b == 39) {
                    if (al == 11) {
                        let ao = this.d._inner[0];
                        this.ae(ao);
                        this.r();
                    }
                    else {
                        let ap = this.d._inner[al + 1];
                        this.ae(ap);
                        this.r();
                    }
                }
                else if (b == 40) {
                    if (al >= 9) {
                        let aq = this.d._inner[al - 9];
                        this.ae(aq);
                        this.r();
                    }
                    else {
                        let ar = this.d._inner[al + 3];
                        this.ae(ar);
                        this.r();
                    }
                }
                else if (b == 38) {
                    if (al <= 2) {
                        let as = this.d._inner[al + 9];
                        this.ae(as);
                        this.r();
                    }
                    else {
                        let at = this.d._inner[al - 3];
                        this.ae(at);
                        this.r();
                    }
                }
                else if (b == 13) {
                    this.ae(this.c._inner[1]);
                    this.r();
                }
            }
            else if (this.l == "year") {
                let au = parseInt(this.h.getAttribute("data-index").toString());
                if (b == 40) {
                    this.a.a9(this.e, 1);
                }
                else if (b == 38) {
                    this.a.a9(this.e, -1);
                }
                else if (b == 13) {
                    this.ae(this.c._inner[2]);
                    this.r();
                }
            }
            if (b == 27) {
                this.ab();
                this.a.a2();
            }
        }
        k(a, b) {
            let c = null;
            for (let d = 0; d < 42; d++) {
                let e = this.b._inner[d];
                let f = e.getAttribute("data-day").toString();
                let g = e.getAttribute("data-month").toString();
                if (b == g && a == f) {
                    c = e;
                    break;
                }
            }
            return c;
        }
        z(a) {
            this.aa();
        }
        u(a) {
            this.v();
        }
        t(a) {
            this.al();
        }
        ap(a) {
            this.am();
        }
        q(e_) {
            let a = (e_.originalEvent.currentTarget);
            let b = a.innerText;
            let c = a.lastChild.lastChild.lastChild;
            let d = c.getAttribute("data-month").toString();
            let e = c.getAttribute("data-year").toString();
            if (b != "") {
                this.a.ay(b, d, e);
            }
        }
        s(e_) {
            let a = (e_.originalEvent.currentTarget);
            let b = a.getAttribute("data-month").toString();
            if (b != "") {
                this.a.aq(parseInt(b));
                this.ab();
            }
        }
        an(e_) {
            let a = (e_.originalEvent.currentTarget);
            let b = a.innerText;
            if (b != "") {
                this.a.ar(parseInt(b));
                this.ab();
            }
        }
        ao(e_) {
            let a = (e_.originalEvent.deltaY);
            this.a.a9(this.e, a);
        }
        w() {
        }
    }
    CalendarView.$t = /*@__PURE__*/ markType(CalendarView, 'CalendarView');
    return CalendarView;
})();
/**
 * @hidden
 */
export let Calendar = /*@__PURE__*/ (() => {
    class Calendar extends Base {
        constructor() {
            super();
            this.h = null;
            this.s = dateNow();
            this.t = dateNow();
            this.r = new Date();
            this.n = null;
            this.o = null;
            this.m = null;
            this.p = null;
            this.q = null;
            this.propertyChanged = null;
            this.close = null;
            this.valueChanged = null;
            this.w = toNullable(Date_$type, null);
            this.c = 3;
            this.a = 1;
            this.bm = BrushUtil.g(0, 255, 255, 255);
            this.br = BrushUtil.g(255, 33, 150, 243);
            this.bt = BrushUtil.g(255, 21, 112, 184);
            this.bo = BrushUtil.g(76, 33, 150, 243);
            this.bq = BrushUtil.g(50, 186, 191, 199);
            this.bu = BrushUtil.g(255, 24, 29, 31);
            this.bs = BrushUtil.g(255, 255, 255, 255);
            this.bp = BrushUtil.g(255, 24, 29, 31);
            this.bn = BrushUtil.g(255, 33, 150, 243);
            this.k = null;
            this.r = dateAddYears(this.r, -200);
            this.n = new ObservableCollection$1(DayInfo.$, 0);
            this.o = new ObservableCollection$1(Button.$, 0);
            this.m = new ObservableCollection$1(Button.$, 0);
            this.p = new ObservableCollection$1(Button.$, 0);
            this.q = new ObservableCollection$1(Button.$, 0);
            let a = new CalendarView();
            a.a = this;
            this.h = a;
            this.h.y();
        }
        a2() {
            if (this.close != null) {
                this.close(this);
            }
        }
        a4(a) {
            let b = this.w;
            this.w = toNullable(Date_$type, a);
            if (this.valueChanged != null) {
                this.valueChanged(this, ((() => {
                    let $ret = new ValueChangedEventArgs();
                    $ret.oldValue = b.value;
                    $ret.newValue = a;
                    return $ret;
                })()));
            }
            if (nullableNotEquals(this.w, null)) {
                this.s = this.w.value;
            }
            this.a7();
        }
        ay(a, b, c) {
            let d = dateFromValues(parseInt(c), parseInt(b), parseInt(a), 0, 0, 0, 0);
            this.a4(d);
        }
        notifySizeChanged() {
            this.h.w();
        }
        destroy() {
            this.provideContainer(null);
        }
        provideContainer(a) {
            this.h.x(a);
        }
        get u() {
            return this.w.value;
        }
        set u(a) {
            let b = this.w;
            this.w = toNullable(Date_$type, a);
            if (nullableNotEquals(b, this.w)) {
                this.a3("Value", unwrapNullable(b), unwrapNullable(this.w));
            }
        }
        get d() {
            return this.c;
        }
        set d(a) {
            let b = this.c;
            this.c = a;
            if (b != this.c) {
                this.a3("Density", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, this.c));
            }
        }
        get b() {
            return this.a;
        }
        set b(a) {
            let b = this.a;
            this.a = a;
            if (b != this.a) {
                this.a3("BaseTheme", enumGetBox(BaseControlTheme_$type, b), enumGetBox(BaseControlTheme_$type, this.a));
            }
        }
        get bv() {
            return this.bm;
        }
        set bv(a) {
            let b = this.bm;
            this.bm = a;
            if (b != this.bm) {
                this.a3("BackgroundColor", b, this.bm);
            }
        }
        get b0() {
            return this.br;
        }
        set b0(a) {
            let b = this.br;
            this.br = a;
            if (b != this.br) {
                this.a3("SelectedDateBackgroundColor", b, this.br);
            }
        }
        get b2() {
            return this.bt;
        }
        set b2(a) {
            let b = this.bt;
            this.bt = a;
            if (b != this.bt) {
                this.a3("SelectedFocusDateBackgroundColor", b, this.bt);
            }
        }
        get bx() {
            return this.bo;
        }
        set bx(a) {
            let b = this.bo;
            this.bo = a;
            if (b != this.bo) {
                this.a3("FocusDateBackgroundColor", b, this.bo);
            }
        }
        get bz() {
            return this.bq;
        }
        set bz(a) {
            let b = this.bq;
            this.bq = a;
            if (b != this.bq) {
                this.a3("HoverBackgroundColor", b, this.bq);
            }
        }
        get b3() {
            return this.bu;
        }
        set b3(a) {
            let b = this.bu;
            this.bu = a;
            if (b != this.bu) {
                this.a3("TextColor", b, this.bu);
            }
        }
        get b1() {
            return this.bs;
        }
        set b1(a) {
            let b = this.bs;
            this.bs = a;
            if (b != this.bs) {
                this.a3("SelectedDateTextColor", b, this.bs);
            }
        }
        get by() {
            return this.bp;
        }
        set by(a) {
            let b = this.bp;
            this.bp = a;
            if (b != this.bp) {
                this.a3("FocusDateTextColor", b, this.bp);
            }
        }
        get bw() {
            return this.bn;
        }
        set bw(a) {
            let b = this.bn;
            this.bn = a;
            if (b != this.bn) {
                this.a3("CurrentDateTextColor", b, this.bn);
            }
        }
        get l() {
            return this.k;
        }
        set l(a) {
            let b = this.k;
            this.k = a;
            if (b != this.k) {
                this.a3("TextStyle", b, this.k);
            }
        }
        a3(a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new PropertyChangedEventArgs(a));
            }
            this.a5(a, b, c);
        }
        a5(a, b, c) {
            switch (a) {
                case "Density":
                    this.ba();
                    break;
                case "BaseTheme":
                    this.bc();
                    break;
                case "Value":
                    if (nullableNotEquals(this.w, null)) {
                        this.s = this.w.value;
                    }
                    this.a7();
                    break;
                case "TextColor":
                case "SelectedDateTextColor":
                case "FocusDateTextColor":
                case "CurrentDateTextColor":
                case "BackgroundColor":
                case "FocusDateBackgroundColor":
                case "SelectedFocusDateBackgroundColor":
                case "SelectedDateBackgroundColor":
                case "HoverBackgroundColor":
                    this.bk();
                    break;
                case "TextStyle":
                    this.bl();
                    break;
            }
        }
        bk() {
            for (let a = 0; a < this.o.count; a++) {
                if (this.b3 != null) {
                    this.o._inner[a].s4 = this.b3;
                }
                if (this.by != null) {
                    this.o._inner[a].s0 = this.by;
                }
                if (this.bv != null) {
                    this.o._inner[a].su = this.bv;
                }
                if (this.bx != null) {
                    this.o._inner[a].sz = this.bx;
                }
                if (this.bz != null) {
                    this.o._inner[a].s1 = this.bz;
                }
            }
            for (let b = 0; b < this.m.count; b++) {
                if (this.b3 != null) {
                    this.m._inner[b].s4 = this.b3;
                }
                if (this.by != null) {
                    this.m._inner[b].s0 = this.by;
                }
                if (this.bv != null) {
                    this.m._inner[b].su = this.bv;
                }
                if (this.bx != null) {
                    this.m._inner[b].sz = this.bx;
                }
                if (this.bz != null) {
                    this.m._inner[b].s1 = this.bz;
                }
            }
            for (let c = 0; c < this.p.count; c++) {
                if (this.b3 != null) {
                    this.p._inner[c].s4 = this.b3;
                }
                if (this.by != null) {
                    this.p._inner[c].s0 = this.by;
                }
                if (this.bv != null) {
                    this.p._inner[c].su = this.bv;
                }
                if (this.bx != null) {
                    this.p._inner[c].sz = this.bx;
                }
                if (this.bz != null) {
                    this.p._inner[c].s1 = this.bz;
                }
            }
            for (let d = 0; d < this.q.count; d++) {
                if (this.b3 != null) {
                    this.q._inner[d].s4 = this.b3;
                }
                if (this.by != null) {
                    this.q._inner[d].s0 = this.by;
                }
                if (this.bv != null) {
                    this.q._inner[d].su = this.bv;
                }
                if (this.bx != null) {
                    this.q._inner[d].sz = this.bx;
                }
                if (this.bz != null) {
                    this.q._inner[d].s1 = this.bz;
                }
            }
        }
        bl() {
            for (let a = 0; a < this.o.count; a++) {
                if (this.k != null) {
                    this.o._inner[a].v = this.k;
                }
            }
            for (let b = 0; b < this.m.count; b++) {
                if (this.k != null) {
                    this.m._inner[b].v = this.k;
                }
            }
            for (let c = 0; c < this.p.count; c++) {
                if (this.k != null) {
                    this.p._inner[c].v = this.k;
                }
            }
            for (let d = 0; d < this.q.count; d++) {
                if (this.k != null) {
                    this.q._inner[d].v = this.k;
                }
            }
        }
        a0() {
            this.h.ad();
            this.h.r();
        }
        bc() {
        }
        ba() {
        }
        as() {
        }
        ax() {
            this.w = toNullable(Date_$type, null);
            this.h.ac();
        }
        a7() {
            this.au();
            this.h.ag();
            this.h.ak();
            this.h.ac();
        }
        at(a, b, c) {
            let d = a.createElement("div");
            d.setStyleProperty("height", "14%");
            d.setStyleProperty("display", "flex");
            d.setStyleProperty("justify-content", "space-evenly");
            let e = a.createElement("div");
            e.setStyleProperty("width", "15%");
            let f = a.createElement("div");
            f.setStyleProperty("width", "20%");
            let g = a.createElement("div");
            g.setStyleProperty("width", "20%");
            let h = a.createElement("div");
            h.setStyleProperty("width", "15%");
            d.append(e);
            d.append(f);
            d.append(g);
            d.append(h);
            b.append(d);
            let i = 0;
            for (let j = 0; j < 7; j++) {
                let k = a.createElement("div");
                k.setStyleProperty("display", "flex");
                k.setStyleProperty("justify-content", "space-evenly");
                if (j == 0) {
                    k.setStyleProperty("height", "10%");
                    for (let l = 0; l < 7; l++) {
                        let m = a.createElement("div");
                        m.setStyleProperty("text-align", "center");
                        m.setStyleProperty("vertical-align", "middle");
                        m.setStyleProperty("width", "12%");
                        let n = a.createElement("span");
                        n.setStyleProperty("font", "16px \"Segoe UI\", Verdana");
                        n.setStyleProperty("color", "rgb(24, 29, 31)");
                        m.append(n);
                        k.append(m);
                    }
                }
                else {
                    k.setStyleProperty("height", "12%");
                    for (let o = 0; o < 7; o++) {
                        let p = a.createElement("div");
                        p.setStyleProperty("justify-content", "center");
                        let q = c._inner[i];
                        let r = this.g(a, p, q);
                        r.bh = 30;
                        r.bg = 30;
                        this.m.add(r);
                        r.ig = "btnDays" + o.toString();
                        p.setStyleProperty("width", "12%");
                        p.setStyleProperty("height", "100%");
                        k.append(p);
                        i++;
                    }
                }
                b.append(k);
            }
            this.au();
        }
        av(a, b, c) {
            b.setStyleProperty("display", "flex");
            b.setStyleProperty("flex-direction", "row");
            b.setStyleProperty("flex-wrap", "wrap");
            b.setStyleProperty("margin", "2px");
            b.setStyleProperty("justify-content", "center");
            for (let d = 0; d < 12; d++) {
                let e = a.createElement("div");
                e.setStyleProperty("margin", "5px");
                e.setAttribute("data-month", (d + 1).toString());
                let f = c._inner[d];
                let g = this.g(a, e, f);
                g.bh = 40;
                this.p.add(g);
                e.setStyleProperty("width", "28%");
                let h = e.getChildAt(0);
                h.setStyleProperty("width", "100%");
                let i = f.getChildAt(0);
                let j = "";
                let k = d + 1;
                switch (k) {
                    case 1:
                        j = "Jan";
                        break;
                    case 2:
                        j = "Feb";
                        break;
                    case 3:
                        j = "Mar";
                        break;
                    case 4:
                        j = "Apr";
                        break;
                    case 5:
                        j = "May";
                        break;
                    case 6:
                        j = "Jun";
                        break;
                    case 7:
                        j = "Jul";
                        break;
                    case 8:
                        j = "Aug";
                        break;
                    case 9:
                        j = "Sep";
                        break;
                    case 10:
                        j = "Oct";
                        break;
                    case 11:
                        j = "Nov";
                        break;
                    case 12:
                        j = "Dec";
                        break;
                }
                g.ig = "btnMonth" + j;
                i.setText(j);
                f.setAttribute("data-index", d.toString());
                f.append(i);
                b.append(e);
            }
        }
        aw(a, b, c) {
            let d = this.s.getFullYear() - 3;
            b.setStyleProperty("padding", "5px");
            for (let e = 0; e < 7; e++) {
                let f = a.createElement("div");
                let g = c._inner[e];
                let h = this.g(a, f, g);
                this.q.add(h);
                f.setStyleProperty("width", "100%");
                f.setStyleProperty("height", "14%");
                f.setStyleProperty("justify-content", "center");
                let i = f.getChildAt(0);
                i.setStyleProperty("width", "98%");
                let j = g.getChildAt(0);
                h.ig = "btnYear" + e.toString();
                j.setText(d.toString());
                d++;
                g.setAttribute("data-index", e.toString());
                g.append(j);
                b.append(f);
            }
        }
        au() {
            this.n.clear();
            let a = dateAddDays(this.s, -(this.s.getDate() - 1));
            let b = a.getDay();
            a = dateAddDays(a, -b);
            while (this.n.count < 42) {
                let c = new DayInfo();
                c.b = a.getDate();
                c.c = dateGetMonth(a);
                c.d = a.getFullYear();
                c.a = a.getDay();
                this.n.add(c);
                a = dateAddDays(a, 1);
            }
        }
        be(a, b, c) {
            let d = b.getChildAt(0);
            let e = c._inner[0];
            let f = this.f(a, d, e, Calendar.y);
            f.bh = 28;
            f.bg = 28;
            f.ig = "btnPrev";
            this.o.add(f);
            e.setAttribute("data-section", "header");
            e.setAttribute("data-index", "0");
            let g = b.getChildAt(1);
            let h = c._inner[1];
            let i = this.g(a, g, h);
            i.bh = 40;
            i.ig = "btnMonth";
            this.o.add(i);
            h.setAttribute("data-section", "header");
            h.setAttribute("data-index", "1");
            this.bb(h);
            let j = b.getChildAt(2);
            let k = c._inner[2];
            let l = this.g(a, j, k);
            l.bh = 40;
            l.ig = "btnYear";
            this.o.add(l);
            k.setAttribute("data-section", "header");
            k.setAttribute("data-index", "2");
            this.bj(k);
            let m = b.getChildAt(3);
            let n = c._inner[3];
            let o = this.f(a, m, n, Calendar.z);
            o.bh = 28;
            o.bg = 28;
            o.ig = "btnNext";
            this.o.add(o);
            n.setAttribute("data-section", "header");
            n.setAttribute("data-index", "3");
        }
        bb(a) {
            let b = a.getChildAt(0);
            let c = dateGetMonth(this.s);
            let d = "";
            switch (c) {
                case 1:
                    d = "Jan";
                    break;
                case 2:
                    d = "Feb";
                    break;
                case 3:
                    d = "Mar";
                    break;
                case 4:
                    d = "Apr";
                    break;
                case 5:
                    d = "May";
                    break;
                case 6:
                    d = "Jun";
                    break;
                case 7:
                    d = "Jul";
                    break;
                case 8:
                    d = "Aug";
                    break;
                case 9:
                    d = "Sep";
                    break;
                case 10:
                    d = "Oct";
                    break;
                case 11:
                    d = "Nov";
                    break;
                case 12:
                    d = "Dec";
                    break;
            }
            b.setText(d);
        }
        bj(a) {
            let b = a.getChildAt(0);
            let c = this.s.getFullYear().toString();
            b.setText(c);
        }
        bg(a) {
            let b = a.getChildAt(0);
            let c = b.getChildAt(0);
            c.setText("S");
            b.append(c);
            let d = a.getChildAt(1);
            let e = d.getChildAt(0);
            e.setText("M");
            d.append(e);
            let f = a.getChildAt(2);
            let g = f.getChildAt(0);
            g.setText("T");
            f.append(g);
            let h = a.getChildAt(3);
            let i = h.getChildAt(0);
            i.setText("W");
            h.append(i);
            let j = a.getChildAt(4);
            let k = j.getChildAt(0);
            k.setText("T");
            j.append(k);
            let l = a.getChildAt(5);
            let m = l.getChildAt(0);
            m.setText("F");
            l.append(m);
            let n = a.getChildAt(6);
            let o = n.getChildAt(0);
            o.setText("S");
            n.append(o);
        }
        bd(a, b = false) {
            let c = null;
            let d = null;
            let e = null;
            for (let f = 0; f < 42; f++) {
                let g = a._inner[f];
                let h = g.getChildAt(0);
                let i = this.n._inner[f];
                let j = this.m._inner[f];
                if (i != null) {
                    g.setAttribute("data-section", "days");
                    g.setAttribute("data-index", f.toString());
                    g.setAttribute("data-day", i.b.toString());
                    g.setAttribute("data-month", i.c.toString());
                    g.setAttribute("data-year", i.d.toString());
                    h.setText(i.b.toString());
                    if (nullableNotEquals(this.w, null) && i.b == this.w.value.getDate() && i.c == dateGetMonth(this.w.value) && i.d == this.w.value.getFullYear()) {
                        j.s4 = this.b1;
                        j.s0 = this.b1;
                        j.su = this.b0;
                        j.sz = this.b2;
                        j.sv = this.bv;
                        c = g;
                    }
                    else if (i.b == this.t.getDate() && i.c == dateGetMonth(this.t) && i.d == this.t.getFullYear()) {
                        j.s4 = this.bw;
                        ;
                        j.s0 = this.by;
                        j.su = this.bv;
                        j.sz = this.bx;
                        j.sv = this.bw;
                        j.be = 1;
                        d = g;
                    }
                    else if (i.a != 0 && i.a != 6 && i.c == dateGetMonth(this.s)) {
                        j.s4 = this.b3;
                        j.s0 = this.by;
                        j.su = this.bv;
                        j.sz = this.bx;
                        j.sv = this.bv;
                    }
                    else {
                        j.s4 = this.b3;
                        j.s0 = this.by;
                        j.su = this.bv;
                        j.sz = this.bx;
                        j.sv = this.bv;
                    }
                    if (i.b == 1 && i.c == dateGetMonth(this.s)) {
                        e = g;
                    }
                }
            }
            if (b == true) {
                if (c != null && nullableNotEquals(this.w, null) && this.w.value.getFullYear() == this.s.getFullYear() && dateGetMonth(this.w.value) == dateGetMonth(this.s)) {
                    this.h.ae(c);
                }
                else if (d != null && this.t.getFullYear() == this.s.getFullYear() && dateGetMonth(this.t) == dateGetMonth(this.s)) {
                    this.h.ae(d);
                }
                else if (e != null) {
                    this.h.ae(e);
                }
            }
        }
        bf(a) {
            let b = null;
            let c = null;
            for (let d = 0; d < 12; d++) {
                let e = a._inner[d];
                e.setAttribute("data-section", "months");
                if (nullableNotEquals(this.w, null) && dateGetMonth(this.w.value) == d + 1) {
                    c = e;
                }
                if (dateGetMonth(this.t) == d + 1) {
                    b = e;
                }
            }
            if (c != null) {
                this.h.ae(c);
            }
            else if (b != null) {
                this.h.ae(b);
            }
            else {
                this.h.ae(a._inner[0]);
            }
        }
        bi(a) {
            this.bh(a, this.s.getFullYear(), true);
        }
        bh(a, b, c = false) {
            let d = b - 3;
            for (let e = 0; e < 7; e++) {
                let f = a._inner[e];
                f.setAttribute("data-section", "years");
                let g = f.getChildAt(0);
                g.setText(d.toString());
                if (d == b && c) {
                    this.h.ae(f);
                }
                d++;
            }
        }
        g(a, b, c) {
            let d = a.getSubRenderer(b);
            let e = new Button();
            e.provideContainer(d);
            e.d = this.b;
            e.h = this.d;
            e.v = this.k;
            e.eu = -1;
            e.s = 1;
            if (this.k != null) {
                e.v = this.k;
            }
            let f = a.createElement("span");
            let g = new CornerRadius(0, 2);
            e.kd = g;
            e.ku = g;
            e.ec = 0;
            c.append(f);
            e.appendButtonContent(c);
            e.s4 = this.b3;
            e.s0 = this.by;
            e.su = this.bv;
            e.sz = this.bx;
            e.s1 = this.bz;
            return e;
        }
        f(a, b, c, d) {
            let e = a.getSubRenderer(b);
            let f = new Button();
            f.provideContainer(e);
            f.d = this.b;
            f.h = this.d;
            f.v = this.k;
            f.eu = -1;
            f.s = 1;
            let g = new CornerRadius(0, 2);
            f.kd = g;
            f.ku = g;
            f.ec = 0;
            let h = a.createElement("div");
            let i = a.getSubRenderer(h);
            let j = new Icon();
            j.provideContainer(i);
            j.svgPath = d;
            c.append(h);
            f.appendButtonContent(c);
            f.s4 = this.b3;
            f.s0 = this.by;
            f.su = this.bv;
            f.sz = this.bx;
            f.s1 = this.bz;
            return f;
        }
        ap(a) {
            this.s = dateAddMonths(this.s, a);
            this.au();
        }
        aq(a) {
            this.s = dateFromValues(this.s.getFullYear(), a, this.s.getDate(), 0, 0, 0, 0);
            this.au();
        }
        ar(a) {
            this.s = dateFromValues(a, dateGetMonth(this.s), this.s.getDate(), 0, 0, 0, 0);
            this.au();
        }
        a9(a, b) {
            let c = parseInt(a._inner[3].getChildAt(0).getText());
            if (b < 0) {
                c--;
            }
            else {
                c++;
            }
            this.bh(a, c);
        }
        a8() {
            this.h.ab();
        }
        x() {
            return this.e();
        }
        af() {
            let a = this.e();
            return a.l();
        }
        e() {
            let a = new CalendarVisualModelExport();
            a.h = this.d;
            a.g = this.b;
            a.d = AppearanceHelper.a(this.b0);
            a.f = AppearanceHelper.a(this.b2);
            a.b = AppearanceHelper.a(this.bx);
            a.e = AppearanceHelper.a(this.b1);
            a.c = AppearanceHelper.a(this.by);
            a.a = AppearanceHelper.a(this.bw);
            a.i = new List$1(ButtonVisualModelExport.$, 0);
            let b = this.h.m();
            a.k = b;
            if (b == "day") {
                for (let c = 0; c < this.o.count; c++) {
                    if (this.o._inner[c].ig == null) {
                        this.o._inner[c].ig = "header" + c.toString();
                    }
                    a.i.add1(this.o._inner[c].ey());
                }
                for (let d = 0; d < this.m.count; d++) {
                    if (this.m._inner[d].ig == null) {
                        this.m._inner[d].ig = "days" + d.toString();
                    }
                    a.i.add1(this.m._inner[d].ey());
                }
            }
            else if (b == "month") {
                for (let e = 0; e < this.p.count; e++) {
                    if (this.p._inner[e].ig == null) {
                        this.p._inner[e].ig = "months" + e.toString();
                    }
                    a.i.add1(this.p._inner[e].ey());
                }
            }
            else if (b == "year") {
                for (let f = 0; f < this.q.count; f++) {
                    if (this.q._inner[f].ig == null) {
                        this.q._inner[f].ig = "years" + f.toString();
                    }
                    a.i.add1(this.q._inner[f].ey());
                }
            }
            if (this.l != null) {
                let g = this.l;
                if (this.h != null && g.n == null) {
                    let h = this.h.f;
                    let i = FontUtil.getFontInfoFromString(h, g.fontString);
                    g.n = i.n;
                    g.d = i.d;
                    g.o = i.o;
                    g.q = i.q;
                    g.r = i.r;
                    g.s = i.s;
                }
                if (g.n != null) {
                    a.m = g.n;
                }
                if (!isNaN_(g.d)) {
                    a.j = g.d;
                }
                if (g.s != null) {
                    a.q = g.s;
                }
                if (g.q != null) {
                    a.o = g.q;
                }
                if (g.o != null) {
                    a.n = g.q;
                }
            }
            return a;
        }
    }
    Calendar.$t = /*@__PURE__*/ markType(Calendar, 'Calendar', Base.$, [INotifyPropertyChanged_$type]);
    Calendar.y = "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z";
    Calendar.z = "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z";
    return Calendar;
})();
//# sourceMappingURL=CalendarView_combined.js.map
