/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, enumGetBox, markType } from "igniteui-react-core";
import { BaseControlTheme_$type } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
export let ButtonGroupVisualModelExport = /*@__PURE__*/ (() => {
    class ButtonGroupVisualModelExport extends Base {
        constructor() {
            super(...arguments);
            this.e = 0;
            this.f = 0;
            this.a = null;
            this.k = 0;
            this.b = null;
            this.d = null;
            this.c = null;
            this.j = 0;
            this.g = false;
            this.h = false;
            this.i = null;
        }
        l() {
            let a = new StringBuilder(0);
            a.l("{");
            a.l("baseTheme : " + enumGetBox(BaseControlTheme_$type, this.e) + ", ");
            a.l("actualDensity : " + enumGetBox(ControlDisplayDensity_$type, this.f) + ", ");
            a.l("selectedIndices : " + this.a + ", ");
            a.l("actualItemBackgroundColor : " + this.b.serialize() + ", ");
            a.l("actualItemTextColor : " + this.d.serialize() + ", ");
            a.l("actualItemBorderColor : " + this.c.serialize() + ", ");
            a.l("actualItemBorderWidth : " + this.j + ", ");
            a.l("isDisabled : " + this.g + ", ");
            a.l("isMultiSelect : " + this.h + ", ");
            a.l("buttonModels: [");
            for (let b = 0; b < this.i.count; b++) {
                if (b != 0) {
                    a.l(",");
                }
                a.l(this.i._inner[b].ab());
            }
            a.l("]");
            a.l("}");
            return a.toString();
        }
    }
    ButtonGroupVisualModelExport.$t = /*@__PURE__*/ markType(ButtonGroupVisualModelExport, 'ButtonGroupVisualModelExport');
    return ButtonGroupVisualModelExport;
})();
//# sourceMappingURL=ButtonGroupVisualModelExport.js.map
