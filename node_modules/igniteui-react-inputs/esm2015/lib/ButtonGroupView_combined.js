/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, Delegate_$type, fromEnum, runOn, markType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, delegateCombine, enumGetBox, delegateRemove, fromEn } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { ButtonGroupOrientation_$type } from "./ButtonGroupOrientation";
import { ButtonGroupDisplayStyle_$type } from "./ButtonGroupDisplayStyle";
import { BaseControlTheme_$type } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { ButtonGroupButtonCollection } from "./ButtonGroupButtonCollection";
import { ThemeResolver } from "./ThemeResolver";
import { ButtonGroupSelectionChangedEventArgs } from "./ButtonGroupSelectionChangedEventArgs";
import { CornerRadius } from "igniteui-react-core";
import { ButtonGroupVisualModelExport } from "./ButtonGroupVisualModelExport";
import { AppearanceHelper } from "igniteui-react-core";
import { ButtonVisualModelExport } from "./ButtonVisualModelExport";
import { BrushUtil } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let ButtonGroupView = /*@__PURE__*/ (() => {
    class ButtonGroupView extends Base {
        constructor() {
            super();
            this.a = null;
            this.g = null;
            this.b = null;
            this.f = new List$1(Delegate_$type, 0);
            this.m = null;
            this.c = true;
            this.h = null;
            this.i = null;
            this.j = null;
            this.k = null;
        }
        s() {
        }
        d() {
            return true;
        }
        get l() {
            return this.h;
        }
        get y() {
            return null;
        }
        get e() {
            return true;
        }
        q(a) {
            if (a == null) {
                for (let b of fromEnum(this.f)) {
                    b();
                }
                this.f.clear();
            }
            this.g = a;
            a.rootWrapper.setStyleProperty("position", "relative");
            let c = this.g.createElement("div");
            c.addClass("ig-button-content");
            c.setStyleProperty("position", "relative");
            c.setStyleProperty("display", "flex");
            c.setStyleProperty("flex-direction", "row");
            c.setStyleProperty("flex-wrap", "no-wrap");
            c.setStyleProperty("align-items", "center");
            this.j = c;
            this.f.add(c.listen("click", runOn(this, this.n)));
            this.g.append(c);
            this.g.getPortal(c, "ChildContent", (d) => {
                let comp_ = d.componentRef;
                this.k = comp_;
                if (this.a.r == 0) {
                    this.j.setStyleProperty("flex-direction", "row");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'row';
                }
                else {
                    this.j.setStyleProperty("flex-direction", "column");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'column';
                }
            }, true);
            this.a.db();
        }
        w(a) {
            if (this.m != a) {
                this.m = a;
                if (this.i != null) {
                    this.i.setAttribute("d", this.m);
                }
            }
        }
        v() {
            let comp_ = this.k;
            if (comp_ != null) {
                if (this.a.r == 0) {
                    this.j.setStyleProperty("flex-direction", "row");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'row';
                }
                else {
                    this.j.setStyleProperty("flex-direction", "column");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'column';
                }
            }
        }
        n(a) {
        }
        t() {
            if (this.d()) {
            }
        }
        p() {
            this.c = true;
        }
        r() {
            this.c = false;
            for (let a of fromEnum(this.f)) {
                a();
            }
            this.f.clear();
        }
        x(a) {
            if (a != null) {
                this.g.rootWrapper.setStyleProperty("font", a.fontString);
            }
        }
        u(a) {
            if (this.a.r == 0) {
                a.gb = "flex";
                a.he = "row";
                a.fv = "center";
            }
            else {
                a.gb = "flex";
                a.he = "column";
                a.fv = "stretch";
            }
        }
        o(a) {
            this.j.append(a);
        }
    }
    ButtonGroupView.$t = /*@__PURE__*/ markType(ButtonGroupView, 'ButtonGroupView');
    return ButtonGroupView;
})();
/**
 * @hidden
 */
export let ButtonGroup = /*@__PURE__*/ (() => {
    class ButtonGroup extends Base {
        constructor() {
            super();
            this.o = 1;
            this.e = 0;
            this.i = 1;
            this.h = 1;
            this.a = new Array(0);
            this.u = false;
            this._view = null;
            this.ax = ThemeResolver.b(ButtonGroup.f, ButtonGroup.av, ButtonGroup.ap);
            this.gz = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gn, ButtonGroup.fn);
            this.g1 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gp, ButtonGroup.fp);
            this.g0 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.go, ButtonGroup.fo);
            this.g2 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gq, ButtonGroup.fq);
            this.aw = ThemeResolver.b(ButtonGroup.f, ButtonGroup.au, ButtonGroup.ao);
            this.g6 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gu, ButtonGroup.fu);
            this.g3 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gr, ButtonGroup.fr);
            this.g7 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gv, ButtonGroup.fv);
            this.ha = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gy, ButtonGroup.fy);
            this.g4 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gs, ButtonGroup.fs);
            this.g5 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gt, ButtonGroup.ft);
            this.g8 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gw, ButtonGroup.fw);
            this.g9 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gx, ButtonGroup.fx);
            this.ar = ThemeResolver.b(ButtonGroup.f, ButtonGroup.at, ButtonGroup.an);
            this.fz = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gb, ButtonGroup.fb);
            this.f1 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gd, ButtonGroup.fd);
            this.f0 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gc, ButtonGroup.fc);
            this.f2 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.ge, ButtonGroup.fe);
            this.aq = ThemeResolver.b(ButtonGroup.f, ButtonGroup.as, ButtonGroup.am);
            this.f6 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gi, ButtonGroup.fi);
            this.f3 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gf, ButtonGroup.ff);
            this.f7 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gj, ButtonGroup.fj);
            this.ga = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gm, ButtonGroup.fm);
            this.f4 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gg, ButtonGroup.fg);
            this.f5 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gh, ButtonGroup.fh);
            this.f8 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gk, ButtonGroup.fk);
            this.f9 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gl, ButtonGroup.fl);
            this.ad = ThemeResolver.b(ButtonGroup.f, ButtonGroup.av, ButtonGroup.ap);
            this.dm = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gn, ButtonGroup.fn);
            this.dp = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gp, ButtonGroup.fp);
            this.du = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gu, ButtonGroup.fu);
            this.dr = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gr, ButtonGroup.fr);
            this.dn = ThemeResolver.e(ButtonGroup.f, ButtonGroup.go, ButtonGroup.fo);
            this.dq = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gq, ButtonGroup.fq);
            this.ac = ThemeResolver.b(ButtonGroup.f, ButtonGroup.au, ButtonGroup.ao);
            this.dv = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gv, ButtonGroup.fv);
            this.dy = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gy, ButtonGroup.fy);
            this.ds = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gs, ButtonGroup.fs);
            this.dt = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gt, ButtonGroup.ft);
            this.dw = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gw, ButtonGroup.fw);
            this.dx = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gx, ButtonGroup.fx);
            this.ah = NaN;
            this.d7 = null;
            this.d9 = null;
            this.ee = null;
            this.eb = null;
            this.ec = null;
            this.d8 = null;
            this.ea = null;
            this.ag = NaN;
            this.ed = null;
            this.ev = null;
            this.ey = null;
            this.ew = null;
            this.ex = null;
            this.aj = NaN;
            this.ef = null;
            this.eh = null;
            this.em = null;
            this.ej = null;
            this.ek = null;
            this.eg = null;
            this.ei = null;
            this.ai = NaN;
            this.el = null;
            this.er = null;
            this.eu = null;
            this.es = null;
            this.et = null;
            this.af = NaN;
            this.dz = null;
            this.d1 = null;
            this.d6 = null;
            this.d3 = null;
            this.d4 = null;
            this.d0 = null;
            this.d2 = null;
            this.ae = NaN;
            this.d5 = null;
            this.en = null;
            this.eq = null;
            this.eo = null;
            this.ep = null;
            this.q = 0;
            this.a6 = "ig-buttongroup-" + ButtonGroup.a4++;
            this.w = false;
            this.v = false;
            this.x = false;
            this.propertyChanged = null;
            this.m = new ButtonGroupButtonCollection();
            this.selectionChanged = null;
            let a = new ButtonGroupView();
            a.a = this;
            this.view = a;
            this.view.s();
            let b = this.m;
            b.collectionChanged = delegateCombine(b.collectionChanged, runOn(this, this.c3));
            let c = this.m;
            c.collectionResetting = delegateCombine(c.collectionResetting, runOn(this, this.c4));
        }
        get p() {
            return this.o;
        }
        set p(a) {
            let b = this.o;
            this.o = a;
            if (b != this.o) {
                this.da("DisplayType", enumGetBox(ButtonGroupDisplayStyle_$type, b), enumGetBox(ButtonGroupDisplayStyle_$type, a));
            }
        }
        get g() {
            return this.e;
        }
        set g(a) {
            let b = this.e;
            this.e = a;
            if (b != this.e) {
                this.da("BaseTheme", enumGetBox(BaseControlTheme_$type, b), enumGetBox(BaseControlTheme_$type, a));
            }
        }
        c4(a, b) {
            for (let c of fromEnum(this.buttons)) {
                c.clicked = delegateRemove(c.clicked, runOn(this, this.c6));
            }
            this.df();
        }
        appendContentChild(a) {
            this.view.o(a);
        }
        c3(a, b) {
            if (b.oldItems != null) {
                for (let c of fromEn(b.oldItems)) {
                    let d = c;
                    if (d != null) {
                        d.clicked = delegateRemove(d.clicked, runOn(this, this.c6));
                    }
                }
            }
            if (b.newItems != null) {
                for (let e of fromEn(b.newItems)) {
                    let f = e;
                    if (f != null) {
                        f.clicked = delegateCombine(f.clicked, runOn(this, this.c6));
                    }
                }
            }
            this.df();
        }
        c6(a, b) {
            let c = a;
            let d = this.buttons.indexOf(c);
            this.de(c, d);
        }
        get k() {
            return this.i;
        }
        set k(a) {
            let b = this.i;
            this.i = a;
            if (b != this.i) {
                this.da("Density", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, a));
            }
        }
        get j() {
            return this.h;
        }
        set j(a) {
            let b = this.h;
            this.h = a;
            if (b != this.h) {
                this.da("ActualDensity", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, a));
            }
        }
        get d() {
            return this.a;
        }
        set d(a) {
            let b = this.a;
            this.a = a;
            if (b != this.a) {
                this.da("SelectedIndices", b, a);
            }
        }
        de(a, b) {
            this.u = true;
            if (this.aa(a)) {
                this.d = this.b(this.d, a, b);
            }
            else {
                if (!this.z) {
                    this.d = new Array(0);
                }
                this.d = this.c(this.d, a, b);
            }
            this.df();
            if (this.selectionChanged != null) {
                this.selectionChanged(this, new ButtonGroupSelectionChangedEventArgs());
            }
            this.u = false;
        }
        c(a, b, c) {
            let d = new Array(Math.max(0, this.a.length + 1));
            let e = 0;
            for (let f = 0; f < this.a.length; f++) {
                if (this.a[f] != c) {
                    d[e] = this.a[f];
                    e++;
                }
            }
            d[e] = c;
            return d;
        }
        b(a, b, c) {
            let d = new Array(Math.max(0, this.a.length - 1));
            let e = 0;
            for (let f = 0; f < this.a.length; f++) {
                if (this.a[f] != c) {
                    d[e] = this.a[f];
                    e++;
                }
            }
            return d;
        }
        get view() {
            return this._view;
        }
        set view(a) {
            this._view = a;
        }
        destroy() {
            this.provideContainer(null);
        }
        da(a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new PropertyChangedEventArgs(a));
            }
            this.dc(a, b, c);
        }
        dc(a, b, c) {
            switch (a) {
                case "BaseTheme":
                    this.dh(this.g);
                    this.dg();
                    break;
                case "DisplayType":
                case "ItemBorderColor":
                case "ItemDisabledBorderColor":
                case "ItemBackgroundColor":
                case "ItemDisabledBackgroundColor":
                case "SelectedItemBackgroundColor":
                case "ItemTextColor":
                case "ItemDisabledTextColor":
                case "SelectedItemTextColor":
                case "ItemHoverBackgroundColor":
                case "SelectedItemHoverBackgroundColor":
                case "ItemHoverTextColor":
                case "SelectedItemHoverTextColor":
                case "OutlinedItemBorderColor":
                case "OutlinedItemDisabledBorderColor":
                case "OutlinedItemBackgroundColor":
                case "OutlinedItemDisabledBackgroundColor":
                case "OutlinedSelectedItemBackgroundColor":
                case "OutlinedItemTextColor":
                case "OutlinedItemDisabledTextColor":
                case "OutlinedSelectedItemTextColor":
                case "OutlinedItemHoverBackgroundColor":
                case ButtonGroup.cv:
                case "OutlinedItemHoverTextColor":
                case "OutlinedSelectedItemHoverTextColor":
                case "FlatItemBorderColor":
                case "FlatItemDisabledBorderColor":
                case "FlatItemBackgroundColor":
                case "FlatItemDisabledBackgroundColor":
                case "FlatSelectedItemBackgroundColor":
                case "FlatItemTextColor":
                case "FlatItemDisabledTextColor":
                case "FlatSelectedItemTextColor":
                case "FlatItemHoverBackgroundColor":
                case "FlatSelectedItemHoverBackgroundColor":
                case "FlatItemHoverTextColor":
                case "FlatSelectedItemHoverTextColor":
                    this.dg();
                    break;
                case "ActualItemBorderColor":
                case "ActualItemDisabledBorderColor":
                case "ActualItemDisabledBackgroundColor":
                case "ActualItemBackgroundColor":
                case "ActualItemTextColor":
                case "ActualItemDisabledTextColor":
                case "ActualSelectedItemTextColor":
                case "ActualSelectedItemBackgroundColor":
                    this.df();
                    break;
                case "Orientation":
                    this.view.v();
                    this.df();
                    break;
                case "Density":
                    this.j = this.k == 0 ? 1 : this.k;
                    break;
                case "ActualDensity":
                    for (let d = 0; d < this.buttons.count; d++) {
                        this.buttons._inner[d].h = this.j;
                    }
                    break;
                case "IsDisabled":
                    for (let e = 0; e < this.buttons.count; e++) {
                        this.buttons._inner[e].disabled = this.disabled;
                    }
                    break;
                case "SelectedIndices":
                    if (!this.u) {
                        this.df();
                    }
                    break;
            }
        }
        dl(a, b) {
            return new CornerRadius(1, !isNaN_(a.c) ? a.c : b.c, !isNaN_(a.d) ? a.d : b.d, !isNaN_(a.b) ? a.b : b.b, !isNaN_(a.a) ? a.a : b.a);
        }
        dg() {
            switch (this.p) {
                case 1:
                    this.al = !isNaN_(this.a1) ? this.a1 : this.ax;
                    this.ez = this.hn != null ? this.hn : this.gz;
                    this.e1 = this.hp != null ? this.hp : this.g1;
                    this.e6 = this.hu != null ? this.hu : this.g6;
                    this.e3 = this.hr != null ? this.hr : this.g3;
                    this.e0 = this.ho != null ? this.ho : this.g0;
                    this.e2 = this.hq != null ? this.hq : this.g2;
                    this.ak = !isNaN_(this.a0) ? this.a0 : this.aw;
                    this.e7 = this.h7 != null ? this.h7 : this.g7;
                    this.fa = this.ia != null ? this.ia : this.ha;
                    this.e4 = this.hs != null ? this.hs : this.g4;
                    this.e5 = this.ht != null ? this.ht : this.g5;
                    this.e8 = this.h8 != null ? this.h8 : this.g8;
                    this.e9 = this.h9 != null ? this.h9 : this.g9;
                    break;
                case 0:
                    this.al = !isNaN_(this.a1) ? this.a1 : this.ar;
                    this.ez = this.hn != null ? this.hn : this.fz;
                    this.e1 = this.hp != null ? this.hp : this.f1;
                    this.e6 = this.hu != null ? this.hu : this.f6;
                    this.e3 = this.hr != null ? this.hr : this.f3;
                    this.e0 = this.ho != null ? this.ho : this.f0;
                    this.e2 = this.hq != null ? this.hq : this.f2;
                    this.ak = !isNaN_(this.a0) ? this.a0 : this.aq;
                    this.e7 = this.h7 != null ? this.h7 : this.f7;
                    this.fa = this.ia != null ? this.ia : this.ga;
                    this.e4 = this.hs != null ? this.hs : this.f4;
                    this.e5 = this.ht != null ? this.ht : this.f5;
                    this.e8 = this.h8 != null ? this.h8 : this.f8;
                    this.e9 = this.h9 != null ? this.h9 : this.f9;
                    break;
            }
        }
        df() {
            for (let a = 0; a < this.buttons.count; a++) {
                let b = this.buttons._inner[a];
                b.h = this.j;
                if (a == 0) {
                    this.di(b);
                }
                else if (a == this.buttons.count - 1) {
                    this.dj(b);
                }
                else {
                    this.dk(b);
                }
                b.s = 1;
                b.ak = false;
                if (this.v) {
                    b.disabled = this.disabled;
                }
                b.nl = this.e0;
                b.ax = this.ak;
                b.sh = this.e2;
                b.sg = this.e1;
                b.si = this.e3;
                this.view.u(b);
                if (this.aa(b)) {
                    b.nk = this.e7;
                    b.t7 = this.fa;
                    b.s7 = this.e8;
                    b.s8 = this.e9;
                }
                else {
                    b.nk = this.ez;
                    b.t7 = this.e6;
                    b.s7 = this.e4;
                    b.s8 = this.e5;
                }
            }
        }
        aa(a) {
            let b = this.buttons.indexOf(a);
            for (let c = 0; c < this.d.length; c++) {
                if (this.d[c] == b) {
                    return true;
                }
            }
            return false;
        }
        dk(a) {
            a.kd = new CornerRadius(1, 0, 0, 0, 0);
        }
        dj(a) {
            if (this.r == 1) {
                a.kd = new CornerRadius(1, 0, 0, this.al, this.al);
            }
            else {
                a.kd = new CornerRadius(1, 0, this.al, this.al, 0);
            }
        }
        di(a) {
            if (this.r == 1) {
                a.kd = new CornerRadius(1, this.al, this.al, 0, 0);
            }
            else {
                a.kd = new CornerRadius(1, this.al, 0, 0, this.al);
            }
        }
        dh(a) {
            this.ax = ThemeResolver.b(a, ButtonGroup.av, ButtonGroup.ap);
            this.gz = ThemeResolver.e(a, ButtonGroup.gn, ButtonGroup.fn);
            this.g1 = ThemeResolver.e(a, ButtonGroup.gp, ButtonGroup.fp);
            this.g0 = ThemeResolver.e(a, ButtonGroup.go, ButtonGroup.fo);
            this.g2 = ThemeResolver.e(a, ButtonGroup.gq, ButtonGroup.fq);
            this.aw = ThemeResolver.b(a, ButtonGroup.au, ButtonGroup.ao);
            this.g6 = ThemeResolver.e(a, ButtonGroup.gu, ButtonGroup.fu);
            this.g3 = ThemeResolver.e(a, ButtonGroup.gr, ButtonGroup.fr);
            this.g7 = ThemeResolver.e(a, ButtonGroup.gv, ButtonGroup.fv);
            this.ha = ThemeResolver.e(a, ButtonGroup.gy, ButtonGroup.fy);
            this.g4 = ThemeResolver.e(a, ButtonGroup.gs, ButtonGroup.fs);
            this.g5 = ThemeResolver.e(a, ButtonGroup.gt, ButtonGroup.ft);
            this.g8 = ThemeResolver.e(a, ButtonGroup.gw, ButtonGroup.fw);
            this.g9 = ThemeResolver.e(a, ButtonGroup.gx, ButtonGroup.fx);
            this.ar = ThemeResolver.b(a, ButtonGroup.at, ButtonGroup.an);
            this.fz = ThemeResolver.e(a, ButtonGroup.gb, ButtonGroup.fb);
            this.f1 = ThemeResolver.e(a, ButtonGroup.gd, ButtonGroup.fd);
            this.f0 = ThemeResolver.e(a, ButtonGroup.gc, ButtonGroup.fc);
            this.f2 = ThemeResolver.e(a, ButtonGroup.ge, ButtonGroup.fe);
            this.aq = ThemeResolver.b(a, ButtonGroup.as, ButtonGroup.am);
            this.f6 = ThemeResolver.e(a, ButtonGroup.gi, ButtonGroup.fi);
            this.f3 = ThemeResolver.e(a, ButtonGroup.gf, ButtonGroup.ff);
            this.f7 = ThemeResolver.e(a, ButtonGroup.gj, ButtonGroup.fj);
            this.ga = ThemeResolver.e(a, ButtonGroup.gm, ButtonGroup.fm);
            this.f4 = ThemeResolver.e(a, ButtonGroup.gg, ButtonGroup.fg);
            this.f5 = ThemeResolver.e(a, ButtonGroup.gh, ButtonGroup.fh);
            this.f8 = ThemeResolver.e(a, ButtonGroup.gk, ButtonGroup.fk);
            this.f9 = ThemeResolver.e(a, ButtonGroup.gl, ButtonGroup.fl);
        }
        get al() {
            return this.ad;
        }
        set al(a) {
            let b = this.ad;
            this.ad = a;
            if (b != this.ad) {
                this.da("ActualItemCornerRadius", b, a);
            }
        }
        get ez() {
            return this.dm;
        }
        set ez(a) {
            let b = this.dm;
            this.dm = a;
            if (b != this.dm) {
                this.da("ActualItemBackgroundColor", b, a);
            }
        }
        get e1() {
            return this.dp;
        }
        set e1(a) {
            let b = this.dp;
            this.dp = a;
            if (b != this.dp) {
                this.da("ActualItemDisabledBackgroundColor", b, a);
            }
        }
        get e6() {
            return this.du;
        }
        set e6(a) {
            let b = this.du;
            this.du = a;
            if (b != this.du) {
                this.da("ActualItemTextColor", b, a);
            }
        }
        get e3() {
            return this.dr;
        }
        set e3(a) {
            let b = this.dr;
            this.dr = a;
            if (b != this.dr) {
                this.da("ActualItemDisabledTextColor", b, a);
            }
        }
        get e0() {
            return this.dn;
        }
        set e0(a) {
            let b = this.dn;
            this.dn = a;
            if (b != this.dn) {
                this.da("ActualItemBorderColor", b, a);
            }
        }
        get e2() {
            return this.dq;
        }
        set e2(a) {
            let b = this.dq;
            this.dq = a;
            if (b != this.dq) {
                this.da("ActualItemDisabledBorderColor", b, a);
            }
        }
        get ak() {
            return this.ac;
        }
        set ak(a) {
            let b = this.ac;
            this.ac = a;
            if (b != this.ac) {
                this.da("ActualItemBorderWidth", b, a);
            }
        }
        get e7() {
            return this.dv;
        }
        set e7(a) {
            let b = this.dv;
            this.dv = a;
            if (b != this.dv) {
                this.da("ActualSelectedItemBackgroundColor", b, a);
            }
        }
        get fa() {
            return this.dy;
        }
        set fa(a) {
            let b = this.dy;
            this.dy = a;
            if (b != this.dy) {
                this.da("ActualSelectedItemTextColor", b, a);
            }
        }
        get e4() {
            return this.ds;
        }
        set e4(a) {
            let b = this.ds;
            this.ds = a;
            if (b != this.ds) {
                this.da("ActualItemHoverBackgroundColor", b, a);
            }
        }
        get e5() {
            return this.dt;
        }
        set e5(a) {
            let b = this.dt;
            this.dt = a;
            if (b != this.dt) {
                this.da("ActualItemHoverTextColor", b, a);
            }
        }
        get e8() {
            return this.dw;
        }
        set e8(a) {
            let b = this.dw;
            this.dw = a;
            if (b != this.dw) {
                this.da("ActualSelectedItemHoverBackgroundColor", b, a);
            }
        }
        get e9() {
            return this.dx;
        }
        set e9(a) {
            let b = this.dx;
            this.dx = a;
            if (b != this.dx) {
                this.da("ActualSelectedItemHoverTextColor", b, a);
            }
        }
        get a1() {
            return this.ah;
        }
        set a1(a) {
            let b = this.ah;
            this.ah = a;
            if (b != this.ah) {
                this.da("ItemCornerRadius", b, a);
            }
        }
        get hn() {
            return this.d7;
        }
        set hn(a) {
            let b = this.d7;
            this.d7 = a;
            if (b != this.d7) {
                this.da("ItemBackgroundColor", b, a);
            }
        }
        get hp() {
            return this.d9;
        }
        set hp(a) {
            let b = this.d9;
            this.d9 = a;
            if (b != this.d9) {
                this.da("ItemDisabledBackgroundColor", b, a);
            }
        }
        get hu() {
            return this.ee;
        }
        set hu(a) {
            let b = this.ee;
            this.ee = a;
            if (b != this.ee) {
                this.da("ItemTextColor", b, a);
            }
        }
        get hr() {
            return this.eb;
        }
        set hr(a) {
            let b = this.eb;
            this.eb = a;
            if (b != this.eb) {
                this.da("ItemDisabledTextColor", b, a);
            }
        }
        get hs() {
            return this.ec;
        }
        set hs(a) {
            let b = this.ec;
            this.ec = a;
            if (b != this.ec) {
                this.da("ItemHoverBackgroundColor", b, a);
            }
        }
        get ho() {
            return this.d8;
        }
        set ho(a) {
            let b = this.d8;
            this.d8 = a;
            if (b != this.d8) {
                this.da("ItemBorderColor", b, a);
            }
        }
        get hq() {
            return this.ea;
        }
        set hq(a) {
            let b = this.ea;
            this.ea = a;
            if (b != this.ea) {
                this.da("ItemDisabledBorderColor", b, a);
            }
        }
        get a0() {
            return this.ag;
        }
        set a0(a) {
            let b = this.ag;
            this.ag = a;
            if (b != this.ag) {
                this.da("ItemBorderWidth", b, a);
            }
        }
        get ht() {
            return this.ed;
        }
        set ht(a) {
            let b = this.ed;
            this.ed = a;
            if (b != this.ed) {
                this.da("ItemHoverTextColor", b, a);
            }
        }
        get h7() {
            return this.ev;
        }
        set h7(a) {
            let b = this.ev;
            this.ev = a;
            if (b != this.ev) {
                this.da("SelectedItemBackgroundColor", b, a);
            }
        }
        get ia() {
            return this.ey;
        }
        set ia(a) {
            let b = this.ey;
            this.ey = a;
            if (b != this.ey) {
                this.da("SelectedItemTextColor", b, a);
            }
        }
        get h8() {
            return this.ew;
        }
        set h8(a) {
            let b = this.ew;
            this.ew = a;
            if (b != this.ew) {
                this.da("SelectedItemHoverBackgroundColor", b, a);
            }
        }
        get h9() {
            return this.ex;
        }
        set h9(a) {
            let b = this.ex;
            this.ex = a;
            if (b != this.ex) {
                this.da("SelectedItemHoverTextColor", b, a);
            }
        }
        get a3() {
            return this.aj;
        }
        set a3(a) {
            let b = this.aj;
            this.aj = a;
            if (b != this.aj) {
                this.da("OutlinedItemCornerRadius", b, a);
            }
        }
        get hv() {
            return this.ef;
        }
        set hv(a) {
            let b = this.ef;
            this.ef = a;
            if (b != this.ef) {
                this.da("OutlinedItemBackgroundColor", b, a);
            }
        }
        get hx() {
            return this.eh;
        }
        set hx(a) {
            let b = this.eh;
            this.eh = a;
            if (b != this.eh) {
                this.da("OutlinedItemDisabledBackgroundColor", b, a);
            }
        }
        get h2() {
            return this.em;
        }
        set h2(a) {
            let b = this.em;
            this.em = a;
            if (b != this.em) {
                this.da("OutlinedItemTextColor", b, a);
            }
        }
        get hz() {
            return this.ej;
        }
        set hz(a) {
            let b = this.ej;
            this.ej = a;
            if (b != this.ej) {
                this.da("OutlinedItemDisabledTextColor", b, a);
            }
        }
        get h0() {
            return this.ek;
        }
        set h0(a) {
            let b = this.ek;
            this.ek = a;
            if (b != this.ek) {
                this.da("OutlinedItemHoverBackgroundColor", b, a);
            }
        }
        get hw() {
            return this.eg;
        }
        set hw(a) {
            let b = this.eg;
            this.eg = a;
            if (b != this.eg) {
                this.da("OutlinedItemBorderColor", b, a);
            }
        }
        get hy() {
            return this.ei;
        }
        set hy(a) {
            let b = this.ei;
            this.ei = a;
            if (b != this.ei) {
                this.da("OutlinedItemDisabledBorderColor", b, a);
            }
        }
        get a2() {
            return this.ai;
        }
        set a2(a) {
            let b = this.ai;
            this.ai = a;
            if (b != this.ai) {
                this.da("OutlinedItemBorderWidth", b, a);
            }
        }
        get h1() {
            return this.el;
        }
        set h1(a) {
            let b = this.el;
            this.el = a;
            if (b != this.el) {
                this.da("OutlinedItemHoverTextColor", b, a);
            }
        }
        get h3() {
            return this.er;
        }
        set h3(a) {
            let b = this.er;
            this.er = a;
            if (b != this.er) {
                this.da("OutlinedSelectedItemBackgroundColor", b, a);
            }
        }
        get h6() {
            return this.eu;
        }
        set h6(a) {
            let b = this.eu;
            this.eu = a;
            if (b != this.eu) {
                this.da("OutlinedSelectedItemTextColor", b, a);
            }
        }
        get h4() {
            return this.es;
        }
        set h4(a) {
            let b = this.es;
            this.es = a;
            if (b != this.es) {
                this.da(ButtonGroup.cv, b, a);
            }
        }
        get h5() {
            return this.et;
        }
        set h5(a) {
            let b = this.et;
            this.et = a;
            if (b != this.et) {
                this.da("OutlinedSelectedItemHoverTextColor", b, a);
            }
        }
        get az() {
            return this.af;
        }
        set az(a) {
            let b = this.af;
            this.af = a;
            if (b != this.af) {
                this.da("FlatItemCornerRadius", b, a);
            }
        }
        get hb() {
            return this.dz;
        }
        set hb(a) {
            let b = this.dz;
            this.dz = a;
            if (b != this.dz) {
                this.da("FlatItemBackgroundColor", b, a);
            }
        }
        get hd() {
            return this.d1;
        }
        set hd(a) {
            let b = this.d1;
            this.d1 = a;
            if (b != this.d1) {
                this.da("FlatItemDisabledBackgroundColor", b, a);
            }
        }
        get hi() {
            return this.d6;
        }
        set hi(a) {
            let b = this.d6;
            this.d6 = a;
            if (b != this.d6) {
                this.da("FlatItemTextColor", b, a);
            }
        }
        get hf() {
            return this.d3;
        }
        set hf(a) {
            let b = this.d3;
            this.d3 = a;
            if (b != this.d3) {
                this.da("FlatItemDisabledTextColor", b, a);
            }
        }
        get hg() {
            return this.d4;
        }
        set hg(a) {
            let b = this.d4;
            this.d4 = a;
            if (b != this.d4) {
                this.da("FlatItemHoverBackgroundColor", b, a);
            }
        }
        get hc() {
            return this.d0;
        }
        set hc(a) {
            let b = this.d0;
            this.d0 = a;
            if (b != this.d0) {
                this.da("FlatItemBorderColor", b, a);
            }
        }
        get he() {
            return this.d2;
        }
        set he(a) {
            let b = this.d2;
            this.d2 = a;
            if (b != this.d2) {
                this.da("FlatItemDisabledBorderColor", b, a);
            }
        }
        get ay() {
            return this.ae;
        }
        set ay(a) {
            let b = this.ae;
            this.ae = a;
            if (b != this.ae) {
                this.da("FlatItemBorderWidth", b, a);
            }
        }
        get hh() {
            return this.d5;
        }
        set hh(a) {
            let b = this.d5;
            this.d5 = a;
            if (b != this.d5) {
                this.da("FlatItemHoverTextColor", b, a);
            }
        }
        get hj() {
            return this.en;
        }
        set hj(a) {
            let b = this.en;
            this.en = a;
            if (b != this.en) {
                this.da("FlatSelectedItemBackgroundColor", b, a);
            }
        }
        get hm() {
            return this.eq;
        }
        set hm(a) {
            let b = this.eq;
            this.eq = a;
            if (b != this.eq) {
                this.da("FlatSelectedItemTextColor", b, a);
            }
        }
        get hk() {
            return this.eo;
        }
        set hk(a) {
            let b = this.eo;
            this.eo = a;
            if (b != this.eo) {
                this.da("FlatSelectedItemHoverBackgroundColor", b, a);
            }
        }
        get hl() {
            return this.ep;
        }
        set hl(a) {
            let b = this.ep;
            this.ep = a;
            if (b != this.ep) {
                this.da("FlatSelectedItemHoverTextColor", b, a);
            }
        }
        get r() {
            return this.q;
        }
        set r(a) {
            let b = this.q;
            this.q = a;
            if (b != this.q) {
                this.da("Orientation", enumGetBox(ButtonGroupOrientation_$type, b), enumGetBox(ButtonGroupOrientation_$type, a));
            }
        }
        get b5() {
            return this.a6;
        }
        set b5(a) {
            let b = this.a6;
            this.a6 = a;
            if (b != this.a6) {
                this.da("Id", b, a);
            }
        }
        get disabled() {
            return this.w;
        }
        set disabled(a) {
            let b = this.w;
            this.w = a;
            this.v = true;
            if (b != this.w) {
                this.da("IsDisabled", b, a);
            }
        }
        get z() {
            return this.x;
        }
        set z(a) {
            let b = this.x;
            this.x = a;
            if (b != this.x) {
                this.da("IsMultiSelect", b, a);
            }
        }
        db() {
        }
        onDetachedFromUI() {
            this.view.r();
        }
        onAttachedToUI() {
            this.view.p();
        }
        ab() {
            return this.view.d();
        }
        a5() {
            return this.l();
        }
        bq() {
            let a = this.l();
            return a.l();
        }
        l() {
            let a = new ButtonGroupVisualModelExport();
            a.e = this.g;
            a.f = this.j;
            a.a = this.d;
            a.k = this.al;
            a.b = AppearanceHelper.a(this.ez);
            a.d = AppearanceHelper.a(this.e6);
            a.c = AppearanceHelper.a(this.e0);
            a.j = this.ak;
            a.g = this.disabled;
            a.h = this.z;
            a.i = new List$1(ButtonVisualModelExport.$, 0);
            for (let b = 0; b < this.buttons.count; b++) {
                a.i.add1(this.buttons._inner[b].ey());
            }
            return a;
        }
        provideContainer(a) {
            this.view.q(a);
        }
        get buttons() {
            return this.m;
        }
    }
    ButtonGroup.$t = /*@__PURE__*/ markType(ButtonGroup, 'ButtonGroup', Base.$, [INotifyPropertyChanged_$type]);
    ButtonGroup.f = 2;
    ButtonGroup.av = 4;
    ButtonGroup.gn = /*@__PURE__*/ BrushUtil.g(255, 255, 255, 255);
    ButtonGroup.gp = /*@__PURE__*/ BrushUtil.g(10, 0, 0, 0);
    ButtonGroup.go = /*@__PURE__*/ BrushUtil.g(255, 199, 199, 199);
    ButtonGroup.gq = /*@__PURE__*/ BrushUtil.g(255, 199, 199, 199);
    ButtonGroup.au = 1;
    ButtonGroup.gu = /*@__PURE__*/ BrushUtil.g(255, 0, 0, 0);
    ButtonGroup.gr = /*@__PURE__*/ BrushUtil.g(66, 0, 0, 0);
    ButtonGroup.gv = /*@__PURE__*/ BrushUtil.g(60, 0, 0, 0);
    ButtonGroup.gy = /*@__PURE__*/ BrushUtil.g(255, 0, 0, 0);
    ButtonGroup.gs = /*@__PURE__*/ BrushUtil.g(30, 0, 0, 0);
    ButtonGroup.gt = /*@__PURE__*/ BrushUtil.g(255, 0, 0, 0);
    ButtonGroup.gw = /*@__PURE__*/ BrushUtil.g(96, 0, 0, 0);
    ButtonGroup.gx = /*@__PURE__*/ BrushUtil.g(255, 0, 0, 0);
    ButtonGroup.ap = 3;
    ButtonGroup.fn = /*@__PURE__*/ BrushUtil.g(0, 255, 255, 255);
    ButtonGroup.fp = /*@__PURE__*/ BrushUtil.g(10, 0, 0, 0);
    ButtonGroup.fo = /*@__PURE__*/ BrushUtil.g(255, 33, 150, 243);
    ButtonGroup.fq = /*@__PURE__*/ BrushUtil.g(255, 199, 199, 199);
    ButtonGroup.ao = 1;
    ButtonGroup.fu = /*@__PURE__*/ BrushUtil.g(255, 33, 150, 243);
    ButtonGroup.fr = /*@__PURE__*/ BrushUtil.g(66, 0, 0, 0);
    ButtonGroup.fv = /*@__PURE__*/ BrushUtil.g(255, 33, 150, 243);
    ButtonGroup.fy = /*@__PURE__*/ BrushUtil.g(255, 255, 255, 255);
    ButtonGroup.fs = /*@__PURE__*/ BrushUtil.g(26, 33, 150, 243);
    ButtonGroup.ft = /*@__PURE__*/ BrushUtil.g(255, 33, 150, 243);
    ButtonGroup.fw = /*@__PURE__*/ BrushUtil.g(255, 33, 150, 243);
    ButtonGroup.fx = /*@__PURE__*/ BrushUtil.g(255, 255, 255, 255);
    ButtonGroup.at = 4;
    ButtonGroup.gb = /*@__PURE__*/ BrushUtil.g(0, 255, 255, 255);
    ButtonGroup.gd = /*@__PURE__*/ BrushUtil.g(10, 0, 0, 0);
    ButtonGroup.gc = /*@__PURE__*/ BrushUtil.g(0, 0, 0, 0);
    ButtonGroup.ge = /*@__PURE__*/ BrushUtil.g(255, 199, 199, 199);
    ButtonGroup.as = 0;
    ButtonGroup.gi = /*@__PURE__*/ BrushUtil.g(255, 228, 28, 119);
    ButtonGroup.gf = /*@__PURE__*/ BrushUtil.g(66, 0, 0, 0);
    ButtonGroup.gj = /*@__PURE__*/ BrushUtil.g(30, 228, 28, 119);
    ButtonGroup.gm = /*@__PURE__*/ BrushUtil.g(255, 228, 28, 119);
    ButtonGroup.gg = /*@__PURE__*/ BrushUtil.g(13, 228, 28, 119);
    ButtonGroup.gh = /*@__PURE__*/ BrushUtil.g(255, 228, 28, 119);
    ButtonGroup.gk = /*@__PURE__*/ BrushUtil.g(30, 228, 28, 119);
    ButtonGroup.gl = /*@__PURE__*/ BrushUtil.g(255, 228, 28, 119);
    ButtonGroup.an = 0;
    ButtonGroup.fb = /*@__PURE__*/ BrushUtil.g(0, 255, 255, 255);
    ButtonGroup.fd = /*@__PURE__*/ BrushUtil.g(10, 0, 0, 0);
    ButtonGroup.fc = /*@__PURE__*/ BrushUtil.g(0, 0, 0, 0);
    ButtonGroup.fe = /*@__PURE__*/ BrushUtil.g(0, 0, 0, 0);
    ButtonGroup.am = 0;
    ButtonGroup.fi = /*@__PURE__*/ BrushUtil.g(255, 119, 119, 119);
    ButtonGroup.ff = /*@__PURE__*/ BrushUtil.g(66, 0, 0, 0);
    ButtonGroup.fj = /*@__PURE__*/ BrushUtil.g(26, 33, 150, 243);
    ButtonGroup.fm = /*@__PURE__*/ BrushUtil.g(255, 33, 150, 243);
    ButtonGroup.fg = /*@__PURE__*/ BrushUtil.g(10, 33, 150, 243);
    ButtonGroup.fh = /*@__PURE__*/ BrushUtil.g(255, 119, 119, 119);
    ButtonGroup.fk = /*@__PURE__*/ BrushUtil.g(26, 33, 150, 243);
    ButtonGroup.fl = /*@__PURE__*/ BrushUtil.g(255, 33, 150, 243);
    ButtonGroup.cv = "OutlinedSelectedItemHoverBackgroundColor";
    ButtonGroup.a4 = 0;
    return ButtonGroup;
})();
//# sourceMappingURL=ButtonGroupView_combined.js.map
