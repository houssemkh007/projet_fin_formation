/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let IconVisualModelExport = /*@__PURE__*/ (() => {
    class IconVisualModelExport extends Base {
        constructor() {
            super(...arguments);
            this.a = null;
            this.c = null;
            this.b = null;
            this.d = 0;
            this._svgPath = null;
            this.j = null;
            this.k = null;
            this.l = null;
            this.e = 0;
            this.h = null;
            this.i = null;
        }
        get svgPath() {
            return this._svgPath;
        }
        set svgPath(a) {
            this._svgPath = a;
        }
        f() {
            let a = new StringBuilder(0);
            a.l("{");
            a.l("actualFill : " + this.a.serialize() + ", ");
            a.l("actualTextColor : " + this.c.serialize() + ", ");
            a.l("actualStroke : " + this.b.serialize() + ", ");
            a.l("actualStrokeThickness : " + this.d + ", ");
            if (!stringIsNullOrEmpty(this.j)) {
                a.l("textStyleFontStyle : \"" + this.j + "\", ");
            }
            if (!stringIsNullOrEmpty(this.k)) {
                a.l("textStyleFontVariant : \"" + this.k + "\", ");
            }
            if (!stringIsNullOrEmpty(this.l)) {
                a.l("textStyleFontWeight : \"" + this.l + "\", ");
            }
            if (!stringIsNullOrEmpty(this.h)) {
                a.l("textStyleFontFamily : \"" + this.h + "\", ");
            }
            if (!stringIsNullOrEmpty(this.i)) {
                a.l("textStyleFontStretch : \"" + this.i + "\", ");
            }
            if (!isNaN_(this.e)) {
                a.l("textStyleFontSize : " + this.e + ", ");
            }
            a.l("}");
            return a.toString();
        }
    }
    IconVisualModelExport.$t = /*@__PURE__*/ markType(IconVisualModelExport, 'IconVisualModelExport');
    return IconVisualModelExport;
})();
//# sourceMappingURL=IconVisualModelExport.js.map
