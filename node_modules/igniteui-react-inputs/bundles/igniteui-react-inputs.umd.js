(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('react'), require('igniteui-react-core'), require('igniteui-react-layouts')) :
    typeof define === 'function' && define.amd ? define(['exports', 'tslib', 'react', 'igniteui-react-core', 'igniteui-react-layouts'], factory) :
    (global = global || self, factory(global['igniteui-react-inputs'] = {}, global.tslib_1, global.React, global.igniteuiReactCore, global.igniteuiReactLayouts));
}(this, (function (exports, tslib_1, React, igniteuiReactCore, igniteuiReactLayouts) { 'use strict';

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DayInfo = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DayInfo, _super);
        function DayInfo() {
            var _this = _super.call(this) || this;
            _this.b = 0;
            _this.c = 0;
            _this.d = 0;
            _this.a = 0;
            return _this;
        }
        DayInfo.$t = igniteuiReactCore.markType(DayInfo, 'DayInfo');
        return DayInfo;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RippleVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RippleVisualModelExport, _super);
        function RippleVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = null;
            _this.f = 0;
            _this.d = false;
            _this.c = false;
            _this.e = false;
            return _this;
        }
        RippleVisualModelExport.prototype.g = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("ActualHoverColor : " + this.a.serialize() + ", ");
            a.l("ActualRippleColor : " + this.b.serialize() + ", ");
            a.l("RippleDuration : " + this.f + ", ");
            a.l("IsDisabled : " + this.d + ", ");
            a.l("IsCentered : " + this.c + ", ");
            a.l("IsHoverEnabled : " + this.e + ", ");
            a.l("}");
            return a.toString();
        };
        RippleVisualModelExport.$t = igniteuiReactCore.markType(RippleVisualModelExport, 'RippleVisualModelExport');
        return RippleVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var RippleView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(RippleView, _super);
        function RippleView() {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.g = null;
            _this.c = null;
            _this.f = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.l = null;
            _this.d = true;
            _this.k = null;
            _this.h = null;
            _this.j = null;
            _this.i = null;
            return _this;
        }
        RippleView.prototype.w = function () {
        };
        RippleView.prototype.e = function () {
            return true;
        };
        RippleView.prototype.t = function (a) {
            var e_1, _a;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.f.clear();
            }
            this.g = a;
            this.b.ai();
        };
        RippleView.prototype.v = function () {
            var e_2, _a;
            if (this.b.q == null) {
                this.l = null;
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var a = _c.value;
                        a();
                    }
                }
                catch (e_2_1) {
                    e_2 = { error: e_2_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_2)
                            throw e_2.error;
                    }
                }
                this.f.clear();
            }
            else {
                var b = this.b.q;
                var c = this.g.getWrapper(b);
                this.l = c;
                this.f.add(c.listen("click", igniteuiReactCore.runOn(this, this.p)));
                this.f.add(c.listen("mouseenter", igniteuiReactCore.runOn(this, this.q)));
                this.f.add(c.listen("mouseleave", igniteuiReactCore.runOn(this, this.r)));
            }
        };
        RippleView.prototype.r = function (a) {
            this.b.ag();
        };
        RippleView.prototype.q = function (a) {
            this.b.af();
        };
        RippleView.prototype.p = function (a) {
            if (this.l == null) {
                return;
            }
            var b = this.g.rootWrapper.getOffset();
            var c = a.pageX - b.left;
            var d = a.pageY - b.top;
            this.b.al(c, d, this.g.rootWrapper.outerWidth(), this.g.rootWrapper.outerHeight());
        };
        RippleView.prototype.aa = function () {
            if (this.b.j) {
                this.g.rootWrapper.setStyleProperty("background-color", this.b.as._fill);
            }
        };
        RippleView.prototype.x = function () {
            this.g.rootWrapper.setStyleProperty("background-color", "transparent");
        };
        RippleView.prototype.z = function () {
            this.g.rootWrapper.setStyleProperty("background-color", this.b.as._fill);
        };
        RippleView.prototype.m = function (a, b, c) {
            var d = this.g.createElement("span");
            d.setStyleProperty("width", c * 2 + "px");
            d.setStyleProperty("height", c * 2 + "px");
            d.setStyleProperty("top", b + "px");
            d.setStyleProperty("left", a + "px");
            d.setStyleProperty("background-color", this.b.at._fill);
            d.setStyleProperty("position", "absolute");
            d.setStyleProperty("pointer-events", "none");
            d.setStyleProperty("border-radius", c + "px");
            d.setStyleProperty("opacity", ".5");
            igniteuiReactCore.NativeUI.z(d, ((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 0.3;
                $ret.m = 0.3;
                return $ret;
            })()));
            this.g.append(d);
            return d;
        };
        RippleView.prototype.y = function (a) {
            var b = a;
            b.remove();
        };
        RippleView.prototype.n = function () {
            if (igniteuiReactCore.KeyFrameAnimationFactory.h == null) {
                igniteuiReactCore.KeyFrameAnimationFactory.h = this.g;
            }
        };
        RippleView.prototype.a = function (a, b) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, a, 0, null, b);
        };
        RippleView.prototype.o = function (a) {
        };
        RippleView.prototype.s = function () {
            this.d = true;
            this.v();
        };
        RippleView.prototype.u = function () {
            var e_3, _a;
            this.d = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_3_1) {
                e_3 = { error: e_3_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_3)
                        throw e_3.error;
                }
            }
            this.f.clear();
        };
        RippleView.$t = igniteuiReactCore.markType(RippleView, 'RippleView');
        return RippleView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Ripple = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Ripple, _super);
        function Ripple() {
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.j = false;
            _this.p = null;
            _this.ar = null;
            _this.aq = null;
            _this.ao = Ripple.au;
            _this.m = new igniteuiReactCore.LinkedList$1(igniteuiReactCore.IKeyFrameAnimation_$type);
            _this.ap = Ripple.av;
            _this.n = 600;
            _this.f = false;
            _this.e = false;
            _this.g = false;
            _this.propertyChanged = null;
            var a = new RippleView();
            a.b = _this;
            _this.c = a;
            _this.c.w();
            return _this;
        }
        Ripple.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Ripple.prototype.ah = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.aj(a, b, c);
        };
        Ripple.prototype.aj = function (a, b, c) {
            switch (a) {
                case "RippleColor":
                    this.at = this.ax != null ? this.ax : Ripple.av;
                    break;
                case "HoverColor":
                    this.as = this.aw != null ? this.aw : Ripple.au;
                    break;
                case "EventSource":
                    if (this.c.e()) {
                        this.c.v();
                    }
                    break;
                case "ActualRippleColor":
                    this.an();
                    break;
                case "ActualHoverColor":
                    this.am();
                    break;
            }
        };
        Ripple.prototype.am = function () {
            if (this.i) {
                this.c.x();
                return;
            }
            this.c.aa();
        };
        Ripple.prototype.an = function () {
        };
        Ripple.prototype.af = function () {
            this.j = true;
            if (this.i) {
                this.c.x();
                return;
            }
            if (this.k) {
                this.c.z();
            }
        };
        Ripple.prototype.ag = function () {
            this.j = false;
            if (this.k || this.i) {
                this.c.x();
            }
        };
        Object.defineProperty(Ripple.prototype, "q", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                var b = this.p;
                this.p = a;
                if (b != this.p) {
                    this.ah("EventSource", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "ax", {
            get: function () {
                return this.ar;
            },
            set: function (a) {
                var b = this.ar;
                this.ar = a;
                if (b != this.ar) {
                    this.ah("RippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "aw", {
            get: function () {
                return this.aq;
            },
            set: function (a) {
                var b = this.aq;
                this.aq = a;
                if (b != this.aq) {
                    this.ah("HoverColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "as", {
            get: function () {
                return this.ao;
            },
            set: function (a) {
                var b = this.ao;
                this.ao = a;
                if (b != this.ao) {
                    this.ah("ActualHoverColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Ripple.prototype.al = function (a, b, c, d) {
            var _this = this;
            if (this.i) {
                return;
            }
            var e = Math.max(c, d);
            var f = e / 2;
            var g = a - f;
            var h = b - f;
            if (this.h) {
                g = 0;
                h = 0;
            }
            var i = this.c.m(g, h, f);
            var j = this.d(i);
            this.m.f(j);
            var k = this.m.d;
            j.play();
            j.finished.f(function (l) {
                j.commitStyles();
                _this.m.h(k);
                _this.c.y(i);
            });
        };
        Ripple.prototype.d = function (a) {
            var b = this.a;
            var c = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.c.a(a, b).m(new igniteuiReactCore.AnimationKeyFrameProperty(1, 0.5), new igniteuiReactCore.AnimationKeyFrameProperty(14, ((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 0.3;
                $ret.m = 0.3;
                return $ret;
            })()))).m(new igniteuiReactCore.AnimationKeyFrameProperty(1, 0), new igniteuiReactCore.AnimationKeyFrameProperty(14, ((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 2;
                $ret.m = 2;
                return $ret;
            })()))));
            return c;
        };
        Object.defineProperty(Ripple.prototype, "at", {
            get: function () {
                return this.ap;
            },
            set: function (a) {
                var b = this.ap;
                this.ap = a;
                if (b != this.ap) {
                    this.ah("ActualRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "o", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.ah("RippleDuration", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "i", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.ah("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "h", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                if (b != this.e) {
                    this.ah("IsCentered", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Ripple.prototype, "k", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (b != this.g) {
                    this.ah("IsHoverEnabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Ripple.prototype.ai = function () {
            this.c.v();
        };
        Object.defineProperty(Ripple.prototype, "a", {
            get: function () {
                var a = new igniteuiReactCore.AnimationKeyFrameEffectTiming();
                a.g = this.o;
                a.b = 0;
                return a;
            },
            enumerable: true,
            configurable: true
        });
        Ripple.prototype.onDetachedFromUI = function () {
            this.c.u();
        };
        Ripple.prototype.onAttachedToUI = function () {
            this.c.s();
        };
        Ripple.prototype.l = function () {
            return this.c.e();
        };
        Ripple.prototype.r = function () {
            return this.b();
        };
        Ripple.prototype.v = function () {
            var a = this.b();
            return a.g();
        };
        Ripple.prototype.b = function () {
            var a = new RippleVisualModelExport();
            a.a = igniteuiReactCore.AppearanceHelper.a(this.as);
            a.b = igniteuiReactCore.AppearanceHelper.a(this.at);
            a.f = this.o;
            a.d = this.i;
            a.c = this.h;
            a.e = this.k;
            return a;
        };
        Ripple.prototype.provideContainer = function (a) {
            this.c.t(a);
        };
        Ripple.$t = igniteuiReactCore.markType(Ripple, 'Ripple', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        Ripple.au = igniteuiReactCore.BrushUtil.g(40, 0, 0, 0);
        Ripple.av = igniteuiReactCore.BrushUtil.g(189, 0, 0, 0);
        return Ripple;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ElevationHelper = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ElevationHelper, _super);
        function ElevationHelper() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ElevationHelper.g = function (a, b) {
            if (ElevationHelper.c == null) {
                ElevationHelper.c = ["0 1px 3px 0 ", "0 1px 5px 0 ", "0 1px 8px 0 ", "0 2px 4px -1px ", "0 3px 5px -1px ", "0 3px 5px -1px ", "0 4px 5px -2px ", "0 5px 5px -3px ", "0 5px 6px -3px ", "0 6px 6px -3px ", "0 6px 7px -4px ", "0 7px 8px -4px ", "0 7px 8px -4px ", "0 7px 9px -4px ", "0 8px 9px -5px ", "0 8px 10px -5px ", "0 8px 11px -5px ", "0 9px 11px -5px ", "0 9px 12px -6px ", "0 10px 13px -6px ", "0 10px 13px -6px ", "0 10px 14px -6px ", "0 11px 14px -7px ", "0 11px 15px -7px "];
            }
            a--;
            if (a < 0) {
                return "";
            }
            if (a > ElevationHelper.c.length - 1) {
                a = ElevationHelper.c.length - 1;
            }
            return ElevationHelper.c[a] + b;
        };
        ElevationHelper.f = function (a, b) {
            if (ElevationHelper.b == null) {
                ElevationHelper.b = ["0 1px 1px 0 ", "0 2px 2px 0 ", "0 3px 4px 0 ", "0 4px 5px 0 ", "0 5px 8px 0 ", "0 6px 10px 0 ", "0 7px 10px 1px ", "0 8px 10px 1px ", "0 9px 12px 1px ", "0 10px 14px 1px ", "0 11px 15px 1px ", "0 12px 17px 2px ", "0 13px 19px 2px ", "0 14px 21px 2px ", "0 15px 22px 2px ", "0 16px 24px 2px ", "0 17px 26px 2px ", "0 18px 28px 2px ", "0 19px 29px 2px ", "0 20px 31px 3px ", "0 21px 33px 3px ", "0 22px 35px 3px ", "0 23px 36px 3px ", "0 24px 38px 3px "];
            }
            a--;
            if (a < 0) {
                return "";
            }
            if (a > ElevationHelper.b.length - 1) {
                a = ElevationHelper.b.length - 1;
            }
            return ElevationHelper.b[a] + b;
        };
        ElevationHelper.d = function (a, b) {
            if (ElevationHelper.a == null) {
                ElevationHelper.a = ["0 2px 1px -1px ", "0 3px 1px -2px ", "0 3px 3px -2px ", "0 1px 10px 0 ", "0 1px 14px 0 ", "0 1px 18px 0 ", "0 2px 16px 1px ", "0 3px 14px 2px ", "0 3px 16px 2px ", "0 4px 18px 3px ", "0 4px 20px 3px ", "0 5px 22px 4px ", "0 5px 24px 4px ", "0 5px 26px 4px ", "0 6px 28px 5px ", "0 6px 30px 5px ", "0 6px 32px 5px ", "0 7px 34px 6px ", "0 7px 36px 6px ", "0 8px 38px 7px ", "0 8px 40px 7px ", "0 8px 42px 7px ", "0 9px 44px 8px ", "0 9px 46px 8px "];
            }
            a--;
            if (a < 0) {
                return "";
            }
            if (a > ElevationHelper.a.length - 1) {
                a = ElevationHelper.a.length - 1;
            }
            return ElevationHelper.a[a] + b;
        };
        ElevationHelper.e = function (a, b, c, d, e) {
            if (e == 2) {
                return "0 0 " + a + "px " + (a / 20) + "rem " + b._fill;
            }
            if (a == 0) {
                return "";
            }
            return ElevationHelper.g(a, b._fill) + ", " + ElevationHelper.f(a, c._fill) + ", " + ElevationHelper.d(a, d._fill);
        };
        ElevationHelper.$t = igniteuiReactCore.markType(ElevationHelper, 'ElevationHelper');
        ElevationHelper.c = null;
        ElevationHelper.b = null;
        ElevationHelper.a = null;
        return ElevationHelper;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonDisplayStyle_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonDisplayStyle', 'Raised,0|Flat,1|Outlined,2|Fab,3|Icon,4');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ThemeResolver = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ThemeResolver, _super);
        function ThemeResolver() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ThemeResolver.e = function (a, b, c) {
            if (a == 1) {
                return c;
            }
            return b;
        };
        ThemeResolver.c = function (a, b, c) {
            if (a == 1) {
                return c;
            }
            return b;
        };
        ThemeResolver.b = function (a, b, c) {
            if (a == 1) {
                return c;
            }
            return b;
        };
        ThemeResolver.d = function (a, b, c) {
            if (a == 1) {
                return c;
            }
            return b;
        };
        ThemeResolver.f = function (a, b, c) {
            if (a == 1) {
                return c;
            }
            return b;
        };
        ThemeResolver.a = function (a, b, c) {
            if (a == 1) {
                return c;
            }
            return b;
        };
        ThemeResolver.$t = igniteuiReactCore.markType(ThemeResolver, 'ThemeResolver');
        return ThemeResolver;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonClickEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonClickEventArgs, _super);
        function ButtonClickEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ButtonClickEventArgs.$t = igniteuiReactCore.markType(ButtonClickEventArgs, 'ButtonClickEventArgs', igniteuiReactCore.EventArgs.$);
        return ButtonClickEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonVisualModelExport, _super);
        function ButtonVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.s = 0;
            _this.q = 0;
            _this.p = 0;
            _this.t = 0;
            _this.h = 0;
            _this.i = 0;
            _this.c = null;
            _this.g = null;
            _this.d = null;
            _this.a = null;
            _this.u = 0;
            _this.e = null;
            _this.ah = null;
            _this.b = null;
            _this.j = 0;
            _this.f = null;
            _this.o = 0;
            _this.ae = null;
            _this.af = null;
            _this.ag = null;
            _this.r = 0;
            _this.ac = null;
            _this.ad = null;
            _this.x = null;
            _this.y = null;
            _this.z = null;
            _this.w = null;
            _this.v = null;
            _this.aa = null;
            _this.m = false;
            _this.k = false;
            _this.n = false;
            _this.l = false;
            return _this;
        }
        ButtonVisualModelExport.prototype.ab = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("top : " + this.s + ", ");
            a.l("left : " + this.q + ", ");
            a.l("top : " + this.p + ", ");
            a.l("left : " + this.t + ", ");
            a.l("baseTheme : " + this.h + ", ");
            a.l("actualDensity : " + this.i + ", ");
            a.l("actualBorderColor : " + this.c.serialize() + ", ");
            a.l("actualUmbraShadowColor : " + this.g.serialize() + ", ");
            a.l("actualPenumbraShadowColor : " + this.d.serialize() + ", ");
            a.l("actualAmbientShadowColor : " + this.a.serialize() + ", ");
            a.l("actualRestingElevation : " + this.u + ", ");
            if (this.e != null) {
                a.l("actualRippleColor : " + this.e.serialize() + ", ");
            }
            a.l("actualBackgroundColor : " + this.b.serialize() + ", ");
            a.l("actualElevationMode : " + this.j + ", ");
            a.l("actualTextColor : " + this.f.serialize() + ", ");
            a.l("actualBorderWidth : " + this.o + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ae)) {
                a.l("textStyleFontStyle : \"" + this.ae + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.af)) {
                a.l("textStyleFontVariant : \"" + this.af + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ag)) {
                a.l("textStyleFontWeight : \"" + this.ag + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ac)) {
                a.l("textStyleFontFamily : \"" + this.ac + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.ad)) {
                a.l("textStyleFontStretch : \"" + this.ad + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.r)) {
                a.l("textStyleFontSize : " + this.r + ", ");
            }
            a.l("display : \"" + this.x + "\", ");
            a.l("flexDirection : \"" + this.y + "\", ");
            a.l("flexGrow : \"" + this.z + "\", ");
            a.l("alignItems : \"" + this.w + "\", ");
            if (this.v != null) {
                a.l("value : \"" + this.v.toString() + "\", ");
            }
            a.l("name : \"" + this.aa + "\", ");
            a.l("isFocused : " + this.m + ", ");
            a.l("actualDisableRipple : " + this.k + ", ");
            a.l("isHover : " + this.n + ", ");
            a.l("isDisabled : " + this.l + ", ");
            a.l("}");
            return a.toString();
        };
        ButtonVisualModelExport.$t = igniteuiReactCore.markType(ButtonVisualModelExport, 'ButtonVisualModelExport');
        return ButtonVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonView, _super);
        function ButtonView() {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.j = null;
            _this.c = null;
            _this.g = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.d = true;
            _this.m = null;
            _this.i = NaN;
            _this.h = NaN;
            _this.k = null;
            _this.b = null;
            _this.l = null;
            _this.o = null;
            _this.n = null;
            return _this;
        }
        ButtonView.prototype.ai = function () {
        };
        ButtonView.prototype.f = function () {
            return true;
        };
        Object.defineProperty(ButtonView.prototype, "p", {
            get: function () {
                return this.m;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonView.prototype, "q", {
            get: function () {
                return this.l;
            },
            enumerable: true,
            configurable: true
        });
        ButtonView.prototype.ac = function (a) {
            var e_1, _a;
            var _this = this;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.g)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.g.clear();
                return;
            }
            this.j = a;
            this.j.rootWrapper.setStyleProperty("display", "flex");
            this.j.rootWrapper.setStyleProperty("flex-direction", "row");
            this.j.rootWrapper.setStyleProperty("flex-wrap", "no-wrap");
            this.j.rootWrapper.setStyleProperty("align-items", "center");
            var c = this.j.createElement("button");
            this.m = c;
            this.m.setStyleProperty("position", "relative");
            this.m.setStyleProperty("display", "inline-flex");
            this.m.setStyleProperty("align-items", "center");
            this.m.setStyleProperty("justify-content", "center");
            this.ar();
            this.m.setStyleProperty("border", "none");
            this.m.setStyleProperty("cursor", "pointer");
            this.m.setStyleProperty("user-select", "none");
            this.m.setStyleProperty("outline-style", "none");
            this.m.setStyleProperty("-webkit-tap-highlight-color", "transparent");
            this.m.setStyleProperty("overflow", "hidden");
            this.m.setStyleProperty("white-space", "no-wrap");
            this.m.setStyleProperty("color", "#000");
            this.m.setStyleProperty("background", this.a.m7._fill);
            igniteuiReactCore.NativeUI.l(this.m, this.a.kb);
            this.m.setAttribute("id", this.a.h7);
            this.ao();
            this.g.add(c.listen("change", igniteuiReactCore.runOn(this, this.v)));
            this.g.add(c.listen("click", igniteuiReactCore.runOn(this, this.w)));
            this.g.add(c.listen("focus", igniteuiReactCore.runOn(this, this.x)));
            this.g.add(c.listen("blur", igniteuiReactCore.runOn(this, this.u)));
            this.g.add(this.j.rootWrapper.listen("mouseenter", igniteuiReactCore.runOn(this, this.s)));
            this.g.add(this.j.rootWrapper.listen("mouseleave", igniteuiReactCore.runOn(this, this.t)));
            this.j.append(c);
            var d = this.j.createElement("div");
            var e = this.j.getSubRenderer(d);
            d.setStyleProperty("position", "absolute");
            d.setStyleProperty("width", "100%");
            d.setStyleProperty("height", "100%");
            d.setStyleProperty("left", "0px");
            d.setStyleProperty("top", "0px");
            d.setStyleProperty("overflow", "hidden");
            var f = new Ripple();
            f.provideContainer(e);
            f.q = c;
            var g = this.j.getExternal(f, this.j.rootWrapper, this.j.getExternal(this.a, null, null));
            f.h = false;
            f.k = true;
            this.b = f;
            this.m.append(d);
            var h = this.j.createElement("div");
            h.addClass("ig-button-content");
            h.setStyleProperty("font-family", "'Segoe UI', Verdana");
            h.setStyleProperty("font-weight", "400");
            h.setStyleProperty("font-size", ".875rem");
            h.setStyleProperty("cursor", "pointer");
            this.l = h;
            this.g.add(h.listen("click", igniteuiReactCore.runOn(this, this.r)));
            this.m.append(h);
            this.n = h;
            this.j.getPortal(h, "ChildContent", function (i) {
                var comp_ = i.componentRef;
                _this.o = comp_;
                {
                    _this.n.setStyleProperty("flex-direction", _this.a.he);
                    _this.n.setStyleProperty("align-items", _this.a.fv);
                    var direction_ = _this.a.he;
                    var display_ = _this.a.gb;
                    var alignItems_ = _this.a.fv;
                    comp_.display = display_;
                    comp_.flexDirection = direction_;
                    comp_.alignItems = alignItems_;
                }
            }, true);
            this.a.jy();
        };
        ButtonView.prototype.ae = function () {
            this.b.i = this.a.ae;
        };
        ButtonView.prototype.ar = function () {
            var a = "2.25rem";
            var b = "2.25rem";
            var c = "2.25rem";
            var d = "2.25rem";
            var e = "3.5rem";
            var f = "3.5rem";
            var g = "3.5rem";
            var h = "3.5rem";
            var i = "5.5rem";
            var j = "2.25rem";
            var k = "0px";
            var l = ".9375rem";
            var m = ".5625rem 1rem";
            switch (this.a.g) {
                case 2:
                    m = ".375rem .75rem";
                    j = "1.875rem";
                    e = "3rem";
                    f = "3rem";
                    g = "3rem";
                    h = "3rem";
                    l = ".6875rem";
                    break;
                case 3:
                    m = ".1875rem 1rem";
                    j = "1.5rem";
                    f = "2.5rem";
                    e = "2.5rem";
                    h = "2.5rem";
                    g = "2.5rem";
                    l = ".4375rem";
                    break;
            }
            if (this.a.s == 4) {
                this.m.setStyleProperty("min-width", a);
                this.m.setStyleProperty("min-height", b);
                this.m.setStyleProperty("padding", k);
                this.m.setStyleProperty("width", c);
                this.m.setStyleProperty("height", d);
            }
            else if (this.a.s == 3) {
                this.m.setStyleProperty("min-width", e);
                this.m.setStyleProperty("min-height", f);
                this.m.setStyleProperty("padding", l);
                this.m.setStyleProperty("width", g);
                this.m.setStyleProperty("height", h);
            }
            else {
                this.m.setStyleProperty("min-width", i);
                this.m.setStyleProperty("min-height", j);
                this.m.setStyleProperty("padding", m);
            }
            if (!igniteuiReactCore.isNaN_(this.a.aw) && this.a.aw > 0) {
                this.m.setStyleProperty("border-style", "solid");
            }
            else {
                this.m.setStyleProperty("border-style", "none");
            }
            if (!igniteuiReactCore.isNaN_(this.i)) {
                this.m.setStyleProperty("min-width", this.i.toString() + "px");
            }
            if (!igniteuiReactCore.isNaN_(this.h)) {
                this.m.setStyleProperty("min-height", this.h.toString() + "px");
            }
        };
        ButtonView.prototype.an = function (a) {
            this.i = a;
        };
        ButtonView.prototype.am = function (a) {
            this.h = a;
        };
        ButtonView.prototype.ak = function () {
            this.m.setAttribute("disabled", this.a.disabled ? "true" : "false");
            this.m.setProperty("disabled", this.a.disabled);
        };
        ButtonView.prototype.af = function () {
            if (this.j != null) {
                this.j.rootWrapper.setStyleProperty("display", this.a.gb);
                var comp_ = this.o;
                if (this.o != null) {
                    this.n.setStyleProperty("display", this.a.gb);
                    var display_ = this.a.gb;
                    comp_.display = display_;
                }
                var ext_ = this.j.getExternal(this.a, null, null);
                if (ext_ && ext_._onDisplayChanged) {
                    ext_._onDisplayChanged();
                }
                ;
            }
        };
        ButtonView.prototype.aa = function () {
            if (this.j != null) {
                this.j.rootWrapper.setStyleProperty("align-items", this.a.fv);
                this.m.setStyleProperty("align-items", this.a.fv);
                var comp_ = this.o;
                if (this.o != null) {
                    this.n.setStyleProperty("align-items", this.a.fv);
                    var alignItems_ = this.a.fv;
                    comp_.alignItems = alignItems_;
                }
                var ext_ = this.j.getExternal(this.a, null, null);
                if (ext_ && ext_._onAlignItemsChanged) {
                    ext_._onAlignItemsChanged();
                }
                ;
            }
        };
        ButtonView.prototype.ag = function () {
            if (this.j != null) {
                this.j.rootWrapper.setStyleProperty("flex-direction", this.a.he);
                this.m.setStyleProperty("flex-direction", this.a.he);
                var ext_ = this.j.getExternal(this.a, null, null);
                var comp_ = this.o;
                if (this.o != null) {
                    this.n.setStyleProperty("flex-direction", this.a.he);
                    var direction_ = this.a.he;
                    comp_.flexDirection = direction_;
                }
                if (ext_ && ext_._onFlexDirectionChanged) {
                    ext_._onFlexDirectionChanged();
                }
                ;
            }
        };
        ButtonView.prototype.ah = function () {
            if (this.j != null) {
                this.j.rootWrapper.setStyleProperty("flex-grow", this.a.hg);
                this.m.setStyleProperty("flex-grow", this.a.hg);
                var ext_ = this.j.getExternal(this.a, null, null);
                if (ext_ && ext_._onFlexGrowChanged) {
                    ext_._onFlexGrowChanged();
                }
                ;
            }
        };
        ButtonView.prototype.r = function (a) {
        };
        ButtonView.prototype.ao = function () {
            if (this.f()) {
                var a = this.a.h7;
                this.m.setAttribute("name", this.a.ig);
                this.m.setProperty("value", this.a.ez);
                if (this.a.ah) {
                    this.m.setAttribute("tabindex", this.a.eu.toString());
                }
                this.m.setProperty("disabled", this.a.disabled);
                {
                }
                this.m.setAttribute("aria-label", this.a.fx);
            }
        };
        ButtonView.prototype.aj = function () {
            if (this.f()) {
                var a = this.a.h7;
                this.m.setAttribute("id", a);
            }
        };
        ButtonView.prototype.s = function (a) {
            this.a.jv();
        };
        ButtonView.prototype.t = function (a) {
            this.a.jw();
        };
        ButtonView.prototype.u = function (a) {
            this.a.jr();
        };
        ButtonView.prototype.x = function (a) {
            this.a.ju();
        };
        ButtonView.prototype.w = function (a) {
            this.a.js();
        };
        ButtonView.prototype.e = function () {
            return false;
        };
        ButtonView.prototype.v = function (a) {
        };
        ButtonView.prototype.z = function () {
            if (igniteuiReactCore.KeyFrameAnimationFactory.h == null) {
                igniteuiReactCore.KeyFrameAnimationFactory.h = this.j;
            }
        };
        ButtonView.prototype.ab = function () {
            this.d = true;
            this.g.add(this.m.listen("change", igniteuiReactCore.runOn(this, this.v)));
            this.g.add(this.m.listen("click", igniteuiReactCore.runOn(this, this.w)));
            this.g.add(this.m.listen("focus", igniteuiReactCore.runOn(this, this.x)));
            this.g.add(this.m.listen("blur", igniteuiReactCore.runOn(this, this.u)));
            this.g.add(this.l.listen("click", igniteuiReactCore.runOn(this, this.r)));
            this.g.add(this.m.listen("mouseenter", igniteuiReactCore.runOn(this, this.s)));
            this.g.add(this.m.listen("mouseleave", igniteuiReactCore.runOn(this, this.t)));
        };
        ButtonView.prototype.ad = function () {
            var e_2, _a;
            this.d = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.g)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            this.g.clear();
        };
        ButtonView.prototype.al = function () {
            var model_ = this.a;
            if (model_.externalObject && model_.externalObject.refreshDefaults) {
                model_.externalObject.refreshDefaults();
            }
            ;
        };
        ButtonView.prototype.ap = function (a, b) {
            this.b.ax = a;
            this.b.aw = b;
        };
        ButtonView.prototype.aq = function (a, b) {
            var c = ElevationHelper.e(a, this.a.nj, this.a.ng, this.a.m6, b);
            this.m.setStyleProperty("box-shadow", c);
        };
        ButtonView.prototype.as = function (a) {
            if (a != null) {
                this.l.setStyleProperty("font", a.fontString);
            }
        };
        ButtonView.prototype.y = function (a) {
            this.l.append(a);
        };
        ButtonView.$t = igniteuiReactCore.markType(ButtonView, 'ButtonView');
        return ButtonView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Button = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Button, _super);
        function Button() {
            var _this = _super.call(this) || this;
            _this._view = null;
            _this.sf = ThemeResolver.e(Button.c, Button.rr, Button.o8);
            _this.r3 = ThemeResolver.e(Button.c, Button.rf, Button.ow);
            _this.nm = ThemeResolver.e(Button.c, Button.p6, Button.nn);
            _this.m = ThemeResolver.a(Button.c, Button.n, Button.l);
            _this.r6 = ThemeResolver.e(Button.c, Button.ri, Button.oz);
            _this.r7 = ThemeResolver.e(Button.c, Button.rj, Button.o0);
            _this.r8 = ThemeResolver.e(Button.c, Button.rk, Button.o1);
            _this.d2 = ThemeResolver.c(Button.c, Button.du, Button.cx);
            _this.d5 = ThemeResolver.c(Button.c, Button.dx, Button.c0);
            _this.d4 = ThemeResolver.c(Button.c, Button.dw, Button.cz);
            _this.d3 = ThemeResolver.c(Button.c, Button.dv, Button.cy);
            _this.r5 = ThemeResolver.e(Button.c, Button.rh, Button.oy);
            _this.sd = ThemeResolver.e(Button.c, Button.rp, Button.o6);
            _this.ks = ThemeResolver.d(Button.c, Button.kq, Button.ki);
            _this.bc = ThemeResolver.b(Button.c, Button.ba, Button.a2);
            _this.r4 = ThemeResolver.e(Button.c, Button.rg, Button.ox);
            _this.se = ThemeResolver.e(Button.c, Button.rq, Button.o7);
            _this.sc = ThemeResolver.e(Button.c, Button.ro, Button.o5);
            _this.sb = ThemeResolver.e(Button.c, Button.rn, Button.o4);
            _this.r9 = ThemeResolver.e(Button.c, Button.rl, Button.o2);
            _this.sa = ThemeResolver.e(Button.c, Button.rm, Button.o3);
            _this.pm = ThemeResolver.e(Button.c, Button.qk, Button.n1);
            _this.pn = ThemeResolver.e(Button.c, Button.ql, Button.n2);
            _this.po = ThemeResolver.e(Button.c, Button.qm, Button.n3);
            _this.c5 = ThemeResolver.c(Button.c, Button.dh, Button.cl);
            _this.c8 = ThemeResolver.c(Button.c, Button.dk, Button.co);
            _this.c7 = ThemeResolver.c(Button.c, Button.dj, Button.cn);
            _this.c6 = ThemeResolver.c(Button.c, Button.di, Button.cm);
            _this.pl = ThemeResolver.e(Button.c, Button.qj, Button.n0);
            _this.pt = ThemeResolver.e(Button.c, Button.qr, Button.n8);
            _this.kk = ThemeResolver.d(Button.c, Button.kn, Button.kf);
            _this.a4 = ThemeResolver.b(Button.c, Button.a7, Button.az);
            _this.pk = ThemeResolver.e(Button.c, Button.qi, Button.nz);
            _this.pu = ThemeResolver.e(Button.c, Button.qs, Button.n9);
            _this.ps = ThemeResolver.e(Button.c, Button.qq, Button.n7);
            _this.pr = ThemeResolver.e(Button.c, Button.qp, Button.n6);
            _this.pp = ThemeResolver.e(Button.c, Button.qn, Button.n4);
            _this.pq = ThemeResolver.e(Button.c, Button.qo, Button.n5);
            _this.ru = ThemeResolver.e(Button.c, Button.q6, Button.on);
            _this.rv = ThemeResolver.e(Button.c, Button.q7, Button.oo);
            _this.rw = ThemeResolver.e(Button.c, Button.q8, Button.op);
            _this.dy = ThemeResolver.c(Button.c, Button.dq, Button.ct);
            _this.d1 = ThemeResolver.c(Button.c, Button.dt, Button.cw);
            _this.d0 = ThemeResolver.c(Button.c, Button.ds, Button.cv);
            _this.dz = ThemeResolver.c(Button.c, Button.dr, Button.cu);
            _this.rt = ThemeResolver.e(Button.c, Button.q5, Button.om);
            _this.r1 = ThemeResolver.e(Button.c, Button.rd, Button.ou);
            _this.kr = ThemeResolver.d(Button.c, Button.kp, Button.kh);
            _this.bb = ThemeResolver.b(Button.c, Button.a9, Button.a1);
            _this.rs = ThemeResolver.e(Button.c, Button.q4, Button.ol);
            _this.r2 = ThemeResolver.e(Button.c, Button.re, Button.ov);
            _this.r0 = ThemeResolver.e(Button.c, Button.rc, Button.ot);
            _this.rz = ThemeResolver.e(Button.c, Button.rb, Button.os);
            _this.rx = ThemeResolver.e(Button.c, Button.q9, Button.oq);
            _this.ry = ThemeResolver.e(Button.c, Button.ra, Button.or);
            _this.px = ThemeResolver.e(Button.c, Button.qv, Button.oc);
            _this.py = ThemeResolver.e(Button.c, Button.qw, Button.od);
            _this.pz = ThemeResolver.e(Button.c, Button.qx, Button.oe);
            _this.c9 = ThemeResolver.c(Button.c, Button.dl, Button.cp);
            _this.dc = ThemeResolver.c(Button.c, Button.dp, Button.cs);
            _this.db = ThemeResolver.c(Button.c, Button.dn, Button.cr);
            _this.da = ThemeResolver.c(Button.c, Button.dm, Button.cq);
            _this.pw = ThemeResolver.e(Button.c, Button.qu, Button.ob);
            _this.p4 = ThemeResolver.e(Button.c, Button.q2, Button.oj);
            _this.kl = ThemeResolver.d(Button.c, Button.ko, Button.kg);
            _this.a5 = ThemeResolver.b(Button.c, Button.a8, Button.a0);
            _this.pv = ThemeResolver.e(Button.c, Button.qt, Button.oa);
            _this.p5 = ThemeResolver.e(Button.c, Button.q3, Button.ok);
            _this.p3 = ThemeResolver.e(Button.c, Button.q1, Button.oi);
            _this.p2 = ThemeResolver.e(Button.c, Button.q0, Button.oh);
            _this.p0 = ThemeResolver.e(Button.c, Button.qy, Button.of);
            _this.p1 = ThemeResolver.e(Button.c, Button.qz, Button.og);
            _this.pb = ThemeResolver.e(Button.c, Button.p9, Button.nq);
            _this.pc = ThemeResolver.e(Button.c, Button.qa, Button.nr);
            _this.pd = ThemeResolver.e(Button.c, Button.qb, Button.ns);
            _this.c1 = ThemeResolver.c(Button.c, Button.dd, Button.ch);
            _this.c4 = ThemeResolver.c(Button.c, Button.dg, Button.ck);
            _this.c3 = ThemeResolver.c(Button.c, Button.df, Button.cj);
            _this.c2 = ThemeResolver.c(Button.c, Button.de, Button.ci);
            _this.pa = ThemeResolver.e(Button.c, Button.p8, Button.np);
            _this.pi = ThemeResolver.e(Button.c, Button.qg, Button.nx);
            _this.kj = ThemeResolver.d(Button.c, Button.km, Button.ke);
            _this.a3 = ThemeResolver.b(Button.c, Button.a6, Button.ay);
            _this.o9 = ThemeResolver.e(Button.c, Button.p7, Button.no);
            _this.pj = ThemeResolver.e(Button.c, Button.qh, Button.ny);
            _this.ph = ThemeResolver.e(Button.c, Button.qf, Button.nw);
            _this.pg = ThemeResolver.e(Button.c, Button.qe, Button.nv);
            _this.pe = ThemeResolver.e(Button.c, Button.qc, Button.nt);
            _this.pf = ThemeResolver.e(Button.c, Button.qd, Button.nu);
            _this.at = NaN;
            _this.as = NaN;
            _this.r = 0;
            _this.f = 0;
            _this.b = 0;
            _this.e = 1;
            _this.k0 = ThemeResolver.e(Button.c, Button.rh, Button.oy);
            _this.lb = ThemeResolver.e(Button.c, Button.rr, Button.o8);
            _this.k8 = ThemeResolver.e(Button.c, Button.rf, Button.ow);
            _this.ky = ThemeResolver.e(Button.c, Button.p6, Button.nn);
            _this.bn = ThemeResolver.c(Button.c, Button.dx, Button.c0);
            _this.bl = ThemeResolver.c(Button.c, Button.dv, Button.cy);
            _this.bm = ThemeResolver.c(Button.c, Button.dw, Button.cz);
            _this.k9 = ThemeResolver.e(Button.c, Button.rp, Button.o6);
            _this.j4 = ThemeResolver.d(Button.c, Button.kq, Button.ki);
            _this.kz = ThemeResolver.e(Button.c, Button.rg, Button.ox);
            _this.k1 = ThemeResolver.e(Button.c, Button.ri, Button.oz);
            _this.k2 = ThemeResolver.e(Button.c, Button.rj, Button.o0);
            _this.k3 = ThemeResolver.e(Button.c, Button.rk, Button.o1);
            _this.bk = ThemeResolver.c(Button.c, Button.du, Button.cx);
            _this.i = ThemeResolver.a(Button.c, Button.n, Button.l);
            _this.la = ThemeResolver.e(Button.c, Button.rq, Button.o7);
            _this.k7 = ThemeResolver.e(Button.c, Button.ro, Button.o5);
            _this.k4 = ThemeResolver.e(Button.c, Button.rl, Button.o2);
            _this.k5 = ThemeResolver.e(Button.c, Button.rm, Button.o3);
            _this.k6 = ThemeResolver.e(Button.c, Button.rn, Button.o4);
            _this.an = ThemeResolver.b(Button.c, Button.ba, Button.a2);
            _this.mt = null;
            _this.mv = null;
            _this.mw = null;
            _this.mx = null;
            _this.b7 = -1;
            _this.m0 = null;
            _this.mu = null;
            _this.ca = -1;
            _this.b9 = -1;
            _this.b8 = -1;
            _this.av = NaN;
            _this.ka = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.m2 = null;
            _this.lr = null;
            _this.lt = null;
            _this.lu = null;
            _this.lv = null;
            _this.bt = -1;
            _this.ly = null;
            _this.ls = null;
            _this.bw = -1;
            _this.bv = -1;
            _this.bu = -1;
            _this.l0 = null;
            _this.l1 = null;
            _this.lz = null;
            _this.lw = null;
            _this.lx = null;
            _this.aq = NaN;
            _this.j7 = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.lc = null;
            _this.le = null;
            _this.lf = null;
            _this.lg = null;
            _this.bo = -1;
            _this.j = 0;
            _this.l4 = null;
            _this.ld = null;
            _this.cb = -1;
            _this.by = -1;
            _this.bx = -1;
            _this.u = null;
            _this.m5 = null;
            _this.l6 = null;
            _this.m4 = null;
            _this.m3 = null;
            _this.m1 = null;
            _this.my = null;
            _this.mz = null;
            _this.l2 = null;
            _this.l3 = null;
            _this.ao = NaN;
            _this.j5 = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.mi = null;
            _this.mk = null;
            _this.ml = null;
            _this.mm = null;
            _this.b3 = -1;
            _this.mp = null;
            _this.mj = null;
            _this.b6 = -1;
            _this.b5 = -1;
            _this.b4 = -1;
            _this.au = NaN;
            _this.j9 = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.mr = null;
            _this.ms = null;
            _this.mq = null;
            _this.mn = null;
            _this.mo = null;
            _this.lh = null;
            _this.lj = null;
            _this.lk = null;
            _this.ll = null;
            _this.bp = -1;
            _this.l5 = null;
            _this.li = null;
            _this.bs = -1;
            _this.br = -1;
            _this.bq = -1;
            _this.ap = NaN;
            _this.j6 = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.lp = null;
            _this.lq = null;
            _this.lo = null;
            _this.lm = null;
            _this.ln = null;
            _this.l7 = null;
            _this.l9 = null;
            _this.ma = null;
            _this.mb = null;
            _this.bz = -1;
            _this.me = null;
            _this.l8 = null;
            _this.b2 = -1;
            _this.b1 = -1;
            _this.b0 = -1;
            _this.ar = NaN;
            _this.j8 = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.mg = null;
            _this.mh = null;
            _this.mf = null;
            _this.mc = null;
            _this.md = null;
            _this.e6 = "ig-native-button-" + Button.ew++;
            _this.e5 = "ig-button-" + Button.ev++;
            _this.e2 = "inline-block";
            _this.e3 = "inline-block";
            _this.e4 = null;
            _this.e0 = "center";
            _this.ex = null;
            _this.e7 = null;
            _this.cc = 0;
            _this.z = false;
            _this.ab = false;
            _this.ac = true;
            _this.e1 = null;
            _this.x = false;
            _this.w = false;
            _this.ad = false;
            _this.aa = false;
            _this.y = false;
            _this.propertyChanged = null;
            _this.clicked = null;
            var a = new ButtonView();
            a.a = _this;
            _this.view = a;
            _this.view.ai();
            return _this;
        }
        Object.defineProperty(Button.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        Button.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Button.prototype.jx = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.jz(a, b, c);
        };
        Button.prototype.jz = function (a, b, c) {
            switch (a) {
                case "CornerRadius":
                case "BorderColor":
                case "RestingElevation":
                case "HoverElevation":
                case "FocusElevation":
                case "RippleColor":
                case "BorderWidth":
                case "BackgroundColor":
                case "DisabledBackgroundColor":
                case "DisabledBorderColor":
                case "DisabledTextColor":
                case "DisabledElevation":
                case "HoverBackgroundColor":
                case "TextStyle":
                case "FocusTextColor":
                case "TextColor":
                case "HoverTextColor":
                case "FocusBackgroundColor":
                case "RaisedBorderColor":
                case "RaisedRestingElevation":
                case "RaisedFocusElevation":
                case "RaisedHoverElevation":
                case "RaisedRippleColor":
                case "RaisedBorderWidth":
                case "RaisedBackgroundColor":
                case "RaisedDisabledBackgroundColor":
                case "RaisedDisabledBorderColor":
                case "RaisedDisabledTextColor":
                case "RaisedDisabledElevation":
                case "RaisedHoverBackgroundColor":
                case "RaisedCornerRadius":
                case "RaisedFocusBackgroundColor":
                case "RaisedFocusTextColor":
                case "RaisedTextColor":
                case "RaisedHoverTextColor":
                case "FlatBorderColor":
                case "FlatRestingElevation":
                case "FlatFocusElevation":
                case "FlatHoverElevation":
                case "FlatRippleColor":
                case "FlatBorderWidth":
                case "FlatBackgroundColor":
                case "FlatDisabledBackgroundColor":
                case "FlatDisabledBorderColor":
                case "FlatDisabledTextColor":
                case "FlatDisabledElevation":
                case "FlatHoverBackgroundColor":
                case "FlatCornerRadius":
                case "FlatFocusBackgroundColor":
                case "FlatFocusTextColor":
                case "FlatTextColor":
                case "FlatHoverTextColor":
                case "OutlinedRippleColor":
                case "OutlinedRestingElevation":
                case "OutlinedFocusElevation":
                case "OutlinedHoverElevation":
                case "OutlinedBorderColor":
                case "OutlinedBorderWidth":
                case "OutlinedBackgroundColor":
                case "OutlinedDisabledBackgroundColor":
                case "OutlinedDisabledBorderColor":
                case "OutlinedDisabledTextColor":
                case "OutlinedDisabledElevation":
                case "OutlinedHoverBackgroundColor":
                case "OutlinedCornerRadius":
                case "OutlinedFocusBackgroundColor":
                case "OutlinedFocusTextColor":
                case "OutlinedTextColor":
                case "OutlinedHoverTextColor":
                case "FabBorderColor":
                case "FabRippleColor":
                case "FabRestingElevation":
                case "FabFocusElevation":
                case "FabHoverElevation":
                case "FabBorderWidth":
                case "FabBackgroundColor":
                case "FabDisabledBackgroundColor":
                case "FabDisabledBorderColor":
                case "FabDisabledTextColor":
                case "FabDisabledElevation":
                case "FabHoverBackgroundColor":
                case "FabCornerRadius":
                case "FabFocusBackgroundColor":
                case "FabFocusTextColor":
                case "FabTextColor":
                case "FabHoverTextColor":
                case "IconRestingElevation":
                case "IconFocusElevation":
                case "IconHoverElevation":
                case "IconBorderColor":
                case "IconRippleColor":
                case "IconBorderWidth":
                case "IconBackgroundColor":
                case "IconDisabledBackgroundColor":
                case "IconDisabledBorderColor":
                case "IconDisabledTextColor":
                case "IconDisabledElevation":
                case "IconHoverBackgroundColor":
                case "IconCornerRadius":
                case "IconFocusBackgroundColor":
                case "IconFocusTextColor":
                case "IconTextColor":
                case "IconHoverTextColor":
                case "ElevationMode":
                    this.j2();
                    break;
                case "BaseTheme":
                    this.j3(this.d == 0 ? 2 : this.d);
                    this.j2();
                    break;
                case "IsDisabled":
                    this.ae = this.disabled || this.af;
                    this.j2();
                    this.view.ak();
                    break;
                case "DisableRipple":
                    this.ae = this.disabled || this.af;
                    this.j2();
                    break;
                case "ActualDisableRipple":
                    this.view.ae();
                    break;
                case "ActualBackgroundColor":
                case "ActualDisabledBackgroundColor":
                case "ActualDisabledBorderColor":
                case "ActualDisabledTextColor":
                case "ActualDisabledElevation":
                case "ActualHoverBackgroundColor":
                case "ActualBorderColor":
                case "ActualFocusTextColor":
                case "ActualHoverTextColor":
                case "ActualElevationMode":
                    this.j1();
                    break;
                case "Density":
                    this.g = this.h == 0 ? 1 : this.h;
                    break;
                case "ActualDensity":
                case "ActualBorderWidth":
                case "ActualCornerRadius":
                    this.view.ar();
                    this.j1();
                    break;
                case "DisplayType":
                    this.view.ar();
                    this.j2();
                    this.j1();
                    break;
                case "InputId":
                    this.view.aj();
                    break;
                case "Display":
                    this.view.af();
                    break;
                case "FlexDirection":
                    this.view.ag();
                    break;
                case "FlexGrow":
                    this.view.ah();
                    break;
                case "AlignItems":
                    this.view.aa();
                    break;
                case "MinWidth":
                    this.view.an(this.bh);
                    this.view.ar();
                    break;
                case "MinHeight":
                    this.view.am(this.bg);
                    this.view.ar();
                    break;
                case "TabIndex":
                    this.view.ao();
                    break;
            }
        };
        Button.prototype.kc = function (a, b) {
            return new igniteuiReactCore.CornerRadius(1, !igniteuiReactCore.isNaN_(a.c) ? a.c : b.c, !igniteuiReactCore.isNaN_(a.d) ? a.d : b.d, !igniteuiReactCore.isNaN_(a.b) ? a.b : b.b, !igniteuiReactCore.isNaN_(a.a) ? a.a : b.a);
        };
        Button.prototype.j2 = function () {
            this.k = this.o != 0 ? this.o : this.m;
            this.nj = this.sf;
            this.ng = this.r3;
            this.m6 = this.nm;
            switch (this.s) {
                case 0:
                    this.m9 = this.sg != null ? this.sg : this.tx != null ? this.tx : this.r6;
                    this.na = this.sh != null ? this.sh : this.ty != null ? this.ty : this.r7;
                    this.nb = this.si != null ? this.si : this.tz != null ? this.tz : this.r8;
                    this.cd = this.d6 >= 0 ? this.d6 : this.ep >= 0 ? this.ep : this.d2;
                    this.cg = this.et >= 0 ? this.et : this.es >= 0 ? this.es : this.d5;
                    this.cf = this.eg >= 0 ? this.eg : this.er >= 0 ? this.er : this.d4;
                    this.ce = this.ef >= 0 ? this.ef : this.eq >= 0 ? this.eq : this.d3;
                    this.m8 = this.nl != null ? this.nl : this.tw != null ? this.tw : this.r5;
                    this.m7 = this.nk != null ? this.nk : this.tv != null ? this.tv : this.r4;
                    this.ne = this.s7 != null ? this.s7 : this.t2 != null ? this.t2 : this.sb;
                    this.kb = this.kc(this.kd, this.kc(this.kx, this.ks));
                    this.aw = !igniteuiReactCore.isNaN_(this.ax) ? this.ax : !igniteuiReactCore.isNaN_(this.bj) ? this.bj : this.bc;
                    this.nh = this.t6 != null ? this.t6 : this.t4 != null ? this.t4 : this.sd;
                    this.nc = this.s5 != null ? this.s5 : this.t0 != null ? this.t0 : this.r9;
                    this.nd = this.s6 != null ? this.s6 : this.t1 != null ? this.t1 : this.sa;
                    this.ni = this.t7 != null ? this.t7 : this.t5 != null ? this.t5 : this.se;
                    this.nf = this.s8 != null ? this.s8 : this.t3 != null ? this.t3 : this.sc;
                    break;
                case 2:
                    this.m9 = this.sg != null ? this.sg : this.tm != null ? this.tm : this.ru;
                    this.na = this.sh != null ? this.sh : this.tn != null ? this.tn : this.rv;
                    this.nb = this.si != null ? this.si : this.to != null ? this.to : this.rw;
                    this.cd = this.d6 >= 0 ? this.d6 : this.el >= 0 ? this.el : this.dy;
                    this.cg = this.et >= 0 ? this.et : this.eo >= 0 ? this.eo : this.d1;
                    this.cf = this.eg >= 0 ? this.eg : this.en >= 0 ? this.en : this.d0;
                    this.ce = this.ef >= 0 ? this.ef : this.em >= 0 ? this.em : this.dz;
                    this.m8 = this.nl != null ? this.nl : this.tl != null ? this.tl : this.rt;
                    this.m7 = this.s7 != null ? this.s7 : this.nk != null ? this.nk : this.tk != null ? this.tk : this.rs;
                    this.ne = this.tr != null ? this.tr : this.rz;
                    this.kb = this.kc(this.kd, this.kc(this.kw, this.kr));
                    this.aw = !igniteuiReactCore.isNaN_(this.ax) ? this.ax : !igniteuiReactCore.isNaN_(this.bi) ? this.bi : this.bb;
                    this.nh = this.t6 != null ? this.t6 : this.tt != null ? this.tt : this.r1;
                    this.nc = this.s5 != null ? this.s5 : this.tp != null ? this.tp : this.rx;
                    this.nd = this.s6 != null ? this.s6 : this.tq != null ? this.tq : this.ry;
                    this.ni = this.t7 != null ? this.t7 : this.tu != null ? this.tu : this.r2;
                    this.nf = this.s8 != null ? this.s8 : this.ts != null ? this.ts : this.r0;
                    break;
                case 1:
                    this.m9 = this.sg != null ? this.sg : this.sw != null ? this.sw : this.pm;
                    this.na = this.sh != null ? this.sh : this.sx != null ? this.sx : this.pn;
                    this.nb = this.si != null ? this.si : this.sy != null ? this.sy : this.po;
                    this.cd = this.d6 >= 0 ? this.d6 : this.eb >= 0 ? this.eb : this.c5;
                    this.cg = this.et >= 0 ? this.et : this.ee >= 0 ? this.ee : this.c8;
                    this.cf = this.eg >= 0 ? this.eg : this.ed >= 0 ? this.ed : this.c7;
                    this.ce = this.ef >= 0 ? this.ef : this.ec >= 0 ? this.ec : this.c6;
                    this.m8 = this.nl != null ? this.nl : this.sv != null ? this.sv : this.pl;
                    this.m7 = this.nk != null ? this.nk : this.su != null ? this.su : this.pk;
                    this.ne = this.s7 != null ? this.s7 : this.s1 != null ? this.s1 : this.pr;
                    this.kb = this.kc(this.kd, this.kc(this.ku, this.kk));
                    this.aw = !igniteuiReactCore.isNaN_(this.ax) ? this.ax : !igniteuiReactCore.isNaN_(this.be) ? this.be : this.a4;
                    this.nh = this.t6 != null ? this.t6 : this.s3 != null ? this.s3 : this.pt;
                    this.nc = this.s5 != null ? this.s5 : this.sz != null ? this.sz : this.pp;
                    this.nd = this.s6 != null ? this.s6 : this.s0 != null ? this.s0 : this.pq;
                    this.ni = this.t7 != null ? this.t7 : this.s4 != null ? this.s4 : this.pu;
                    this.nf = this.s8 != null ? this.s8 : this.s2 != null ? this.s2 : this.ps;
                    break;
                case 4:
                    this.m9 = this.sg != null ? this.sg : this.tb != null ? this.tb : this.px;
                    this.na = this.sh != null ? this.sh : this.tc != null ? this.tc : this.py;
                    this.nb = this.si != null ? this.si : this.td != null ? this.td : this.pz;
                    this.cd = this.d6 >= 0 ? this.d6 : this.eh >= 0 ? this.eh : this.c9;
                    this.cg = this.et >= 0 ? this.et : this.ek >= 0 ? this.ek : this.dc;
                    this.cf = this.eg >= 0 ? this.eg : this.ej >= 0 ? this.ej : this.db;
                    this.ce = this.ef >= 0 ? this.ef : this.ei >= 0 ? this.ei : this.da;
                    this.m8 = this.nl != null ? this.nl : this.ta != null ? this.ta : this.pw;
                    this.m7 = this.nk != null ? this.nk : this.s9 != null ? this.s9 : this.pv;
                    this.ne = this.s7 != null ? this.s7 : this.tg != null ? this.tg : this.p2;
                    this.kb = this.kc(this.kd, this.kc(this.kv, this.kl));
                    this.aw = !igniteuiReactCore.isNaN_(this.ax) ? this.ax : !igniteuiReactCore.isNaN_(this.bf) ? this.bf : this.a5;
                    this.nh = this.t6 != null ? this.t6 : this.ti != null ? this.ti : this.p4;
                    this.nc = this.s5 != null ? this.s5 : this.te != null ? this.te : this.p0;
                    this.nd = this.s6 != null ? this.s6 : this.tf != null ? this.tf : this.p1;
                    this.ni = this.t7 != null ? this.t7 : this.tj != null ? this.tj : this.p5;
                    this.nf = this.s8 != null ? this.s8 : this.th != null ? this.th : this.p3;
                    break;
                case 3:
                    this.m9 = this.sg != null ? this.sg : this.sl != null ? this.sl : this.pb;
                    this.na = this.sh != null ? this.sh : this.sm != null ? this.sm : this.pc;
                    this.nb = this.si != null ? this.si : this.sn != null ? this.sn : this.pd;
                    this.cd = this.d6 >= 0 ? this.d6 : this.d7 >= 0 ? this.d7 : this.c1;
                    this.cg = this.et >= 0 ? this.et : this.ea >= 0 ? this.ea : this.c4;
                    this.cf = this.eg >= 0 ? this.eg : this.d9 >= 0 ? this.d9 : this.c3;
                    this.ce = this.ef >= 0 ? this.ef : this.d8 >= 0 ? this.d8 : this.c2;
                    this.m8 = this.nl != null ? this.nl : this.sk != null ? this.sk : this.pa;
                    this.m7 = this.nk != null ? this.nk : this.sj != null ? this.sj : this.o9;
                    this.ne = this.s7 != null ? this.s7 : this.sq != null ? this.sq : this.pg;
                    this.kb = this.kc(this.kd, this.kc(this.kt, this.kj));
                    this.aw = !igniteuiReactCore.isNaN_(this.ax) ? this.ax : !igniteuiReactCore.isNaN_(this.bd) ? this.bd : this.a3;
                    this.nh = this.t6 != null ? this.t6 : this.ss != null ? this.ss : this.sd;
                    this.nc = this.s5 != null ? this.s5 : this.so != null ? this.so : this.pe;
                    this.nd = this.s6 != null ? this.s6 : this.sp != null ? this.sp : this.pf;
                    this.ni = this.t7 != null ? this.t7 : this.st != null ? this.st : this.pj;
                    this.nf = this.s8 != null ? this.s8 : this.sr != null ? this.sr : this.ph;
                    break;
            }
        };
        Button.prototype.js = function () {
            if (this.disabled) {
                return;
            }
            if (this.clicked != null) {
                this.clicked(this, new ButtonClickEventArgs());
            }
        };
        Button.prototype.jr = function () {
            this.focused = false;
            this.j1();
        };
        Button.prototype.ju = function () {
            this.focused = true;
            this.j1();
        };
        Button.prototype.jw = function () {
            this.al = false;
            this.j1();
        };
        Button.prototype.jv = function () {
            this.al = true;
            this.j1();
        };
        Button.prototype.j1 = function () {
            var a = this.view.p;
            igniteuiReactCore.NativeUI.l(a, this.kb);
            igniteuiReactCore.NativeUI.k(a, this.m8);
            if (!igniteuiReactCore.isNaN_(this.aw)) {
                igniteuiReactCore.NativeUI.m(a, new igniteuiReactCore.Thickness(0, this.aw));
            }
            if (this.disabled) {
                this.view.aq(this.cd, this.k);
            }
            else if (this.focused && this.ak) {
                this.view.aq(this.ce, this.k);
            }
            else {
                if (this.al) {
                    this.view.aq(this.cf, this.k);
                }
                else {
                    this.view.aq(this.cg, this.k);
                }
            }
            if (this.disabled) {
                igniteuiReactCore.NativeUI.j(a, this.m9);
            }
            else if (this.focused && this.ak) {
                igniteuiReactCore.NativeUI.j(a, this.nc);
            }
            else {
                if (this.al) {
                    igniteuiReactCore.NativeUI.j(a, this.ne);
                }
                else {
                    igniteuiReactCore.NativeUI.j(a, this.m7);
                }
            }
            this.view.ap(this.nh, igniteuiReactCore.BrushUtil.g(0, 0, 0, 0));
            if (this.v != null) {
                this.view.as(this.v);
            }
            if (this.disabled) {
                igniteuiReactCore.NativeUI.n(this.view.q, this.nb);
                igniteuiReactCore.NativeUI.o(this.view.q, this.nb);
            }
            else if (this.focused && this.ak) {
                igniteuiReactCore.NativeUI.n(this.view.q, this.nd);
                igniteuiReactCore.NativeUI.o(this.view.q, this.nd);
            }
            else {
                if (this.al) {
                    igniteuiReactCore.NativeUI.n(this.view.q, this.nf);
                    igniteuiReactCore.NativeUI.o(this.view.q, this.nf);
                }
                else {
                    igniteuiReactCore.NativeUI.n(this.view.q, this.ni);
                    igniteuiReactCore.NativeUI.o(this.view.q, this.ni);
                }
            }
        };
        Button.prototype.j3 = function (a) {
            this.sf = ThemeResolver.e(a, Button.rr, Button.o8);
            this.r3 = ThemeResolver.e(a, Button.rf, Button.ow);
            this.nm = ThemeResolver.e(a, Button.p6, Button.nn);
            this.m = ThemeResolver.a(a, Button.n, Button.l);
            this.r6 = ThemeResolver.e(a, Button.ri, Button.oz);
            this.r7 = ThemeResolver.e(a, Button.rj, Button.o0);
            this.r8 = ThemeResolver.e(a, Button.rk, Button.o1);
            this.d2 = ThemeResolver.c(a, Button.du, Button.cx);
            this.d5 = ThemeResolver.c(a, Button.dx, Button.c0);
            this.d4 = ThemeResolver.c(a, Button.dw, Button.cz);
            this.d3 = ThemeResolver.c(a, Button.dv, Button.cy);
            this.r5 = ThemeResolver.e(a, Button.rh, Button.oy);
            this.sd = ThemeResolver.e(a, Button.rp, Button.o6);
            this.ks = ThemeResolver.d(a, Button.kq, Button.ki);
            this.bc = ThemeResolver.b(a, Button.ba, Button.a2);
            this.r4 = ThemeResolver.e(a, Button.rg, Button.ox);
            this.se = ThemeResolver.e(a, Button.rq, Button.o7);
            this.sc = ThemeResolver.e(a, Button.ro, Button.o5);
            this.sb = ThemeResolver.e(a, Button.rn, Button.o4);
            this.r9 = ThemeResolver.e(a, Button.rl, Button.o2);
            this.sa = ThemeResolver.e(a, Button.rm, Button.o3);
            this.pm = ThemeResolver.e(a, Button.qk, Button.n1);
            this.pn = ThemeResolver.e(a, Button.ql, Button.n2);
            this.po = ThemeResolver.e(a, Button.qm, Button.n3);
            this.c5 = ThemeResolver.c(a, Button.dh, Button.cl);
            this.c8 = ThemeResolver.c(a, Button.dk, Button.co);
            this.c7 = ThemeResolver.c(a, Button.dj, Button.cn);
            this.c6 = ThemeResolver.c(a, Button.di, Button.cm);
            this.pl = ThemeResolver.e(a, Button.qj, Button.n0);
            this.pt = ThemeResolver.e(a, Button.qr, Button.n8);
            this.kk = ThemeResolver.d(a, Button.kn, Button.kf);
            this.a4 = ThemeResolver.b(a, Button.a7, Button.az);
            this.pk = ThemeResolver.e(a, Button.qi, Button.nz);
            this.pu = ThemeResolver.e(a, Button.qs, Button.n9);
            this.ps = ThemeResolver.e(a, Button.qq, Button.n7);
            this.pr = ThemeResolver.e(a, Button.qp, Button.n6);
            this.pp = ThemeResolver.e(a, Button.qn, Button.n4);
            this.pq = ThemeResolver.e(a, Button.qo, Button.n5);
            this.ru = ThemeResolver.e(a, Button.q6, Button.on);
            this.rv = ThemeResolver.e(a, Button.q7, Button.oo);
            this.rw = ThemeResolver.e(a, Button.q8, Button.op);
            this.dy = ThemeResolver.c(a, Button.dq, Button.ct);
            this.d1 = ThemeResolver.c(a, Button.dt, Button.cw);
            this.d0 = ThemeResolver.c(a, Button.ds, Button.cv);
            this.dz = ThemeResolver.c(a, Button.dr, Button.cu);
            this.rt = ThemeResolver.e(a, Button.q5, Button.om);
            this.r1 = ThemeResolver.e(a, Button.rd, Button.ou);
            this.kr = ThemeResolver.d(a, Button.kp, Button.kh);
            this.bb = ThemeResolver.b(a, Button.a9, Button.a1);
            this.rs = ThemeResolver.e(a, Button.q4, Button.ol);
            this.r2 = ThemeResolver.e(a, Button.re, Button.ov);
            this.r0 = ThemeResolver.e(a, Button.rc, Button.ot);
            this.rz = ThemeResolver.e(a, Button.rb, Button.os);
            this.rx = ThemeResolver.e(a, Button.q9, Button.oq);
            this.ry = ThemeResolver.e(a, Button.ra, Button.or);
            this.px = ThemeResolver.e(a, Button.qv, Button.oc);
            this.py = ThemeResolver.e(a, Button.qw, Button.od);
            this.pz = ThemeResolver.e(a, Button.qx, Button.oe);
            this.c9 = ThemeResolver.c(a, Button.dl, Button.cp);
            this.dc = ThemeResolver.c(a, Button.dp, Button.cs);
            this.db = ThemeResolver.c(a, Button.dn, Button.cr);
            this.da = ThemeResolver.c(a, Button.dm, Button.cq);
            this.pw = ThemeResolver.e(a, Button.qu, Button.ob);
            this.p4 = ThemeResolver.e(a, Button.q2, Button.oj);
            this.kl = ThemeResolver.d(a, Button.ko, Button.kg);
            this.a5 = ThemeResolver.b(a, Button.a8, Button.a0);
            this.pv = ThemeResolver.e(a, Button.qt, Button.oa);
            this.p5 = ThemeResolver.e(a, Button.q3, Button.ok);
            this.p3 = ThemeResolver.e(a, Button.q1, Button.oi);
            this.p2 = ThemeResolver.e(a, Button.q0, Button.oh);
            this.p0 = ThemeResolver.e(a, Button.qy, Button.of);
            this.p1 = ThemeResolver.e(a, Button.qz, Button.og);
            this.pb = ThemeResolver.e(a, Button.p9, Button.nq);
            this.pc = ThemeResolver.e(a, Button.qa, Button.nr);
            this.pd = ThemeResolver.e(a, Button.qb, Button.ns);
            this.c1 = ThemeResolver.c(a, Button.dd, Button.ch);
            this.c4 = ThemeResolver.c(a, Button.dg, Button.ck);
            this.c3 = ThemeResolver.c(a, Button.df, Button.cj);
            this.c2 = ThemeResolver.c(a, Button.de, Button.ci);
            this.pa = ThemeResolver.e(a, Button.p8, Button.np);
            this.pi = ThemeResolver.e(a, Button.qg, Button.nx);
            this.kj = ThemeResolver.d(a, Button.km, Button.ke);
            this.a3 = ThemeResolver.b(a, Button.a6, Button.ay);
            this.o9 = ThemeResolver.e(a, Button.p7, Button.no);
            this.pj = ThemeResolver.e(a, Button.qh, Button.ny);
            this.ph = ThemeResolver.e(a, Button.qf, Button.nw);
            this.pg = ThemeResolver.e(a, Button.qe, Button.nv);
            this.pe = ThemeResolver.e(a, Button.qc, Button.nt);
            this.pf = ThemeResolver.e(a, Button.qd, Button.nu);
        };
        Object.defineProperty(Button.prototype, "bh", {
            get: function () {
                return this.at;
            },
            set: function (a) {
                var b = this.at;
                this.at = a;
                if (b != this.at) {
                    this.jx("MinWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "bg", {
            get: function () {
                return this.as;
            },
            set: function (a) {
                var b = this.as;
                this.as = a;
                if (b != this.as) {
                    this.jx("MinHeight", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                var b = this.r;
                this.r = a;
                if (b != this.r) {
                    this.jx("DisplayType", igniteuiReactCore.enumGetBox(ButtonDisplayStyle_$type, b), igniteuiReactCore.enumGetBox(ButtonDisplayStyle_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "h", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.jx("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "d", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (b != this.b) {
                    this.jx("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "g", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                if (b != this.e) {
                    this.jx("ActualDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "m8", {
            get: function () {
                return this.k0;
            },
            set: function (a) {
                var b = this.k0;
                this.k0 = a;
                if (b != this.k0) {
                    this.jx("ActualBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nj", {
            get: function () {
                return this.lb;
            },
            set: function (a) {
                var b = this.lb;
                this.lb = a;
                if (b != this.lb) {
                    this.jx("ActualUmbraShadowColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ng", {
            get: function () {
                return this.k8;
            },
            set: function (a) {
                var b = this.k8;
                this.k8 = a;
                if (b != this.k8) {
                    this.jx("ActualPenumbraShadowColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "m6", {
            get: function () {
                return this.ky;
            },
            set: function (a) {
                var b = this.ky;
                this.ky = a;
                if (b != this.ky) {
                    this.jx("ActualAmbientShadowColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "cg", {
            get: function () {
                return this.bn;
            },
            set: function (a) {
                var b = this.bn;
                this.bn = a;
                if (b != this.bn) {
                    this.jx("ActualRestingElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ce", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (b != this.bl) {
                    this.jx("ActualFocusElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "cf", {
            get: function () {
                return this.bm;
            },
            set: function (a) {
                var b = this.bm;
                this.bm = a;
                if (b != this.bm) {
                    this.jx("ActualHoverElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nh", {
            get: function () {
                return this.k9;
            },
            set: function (a) {
                var b = this.k9;
                this.k9 = a;
                if (b != this.k9) {
                    this.jx("ActualRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "kb", {
            get: function () {
                return this.j4;
            },
            set: function (a) {
                var b = this.j4;
                this.j4 = a;
                if (b != this.j4) {
                    this.jx("ActualCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "m7", {
            get: function () {
                return this.kz;
            },
            set: function (a) {
                var b = this.kz;
                this.kz = a;
                if (b != this.kz) {
                    this.jx("ActualBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "m9", {
            get: function () {
                return this.k1;
            },
            set: function (a) {
                var b = this.k1;
                this.k1 = a;
                if (b != this.k1) {
                    this.jx("ActualDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "na", {
            get: function () {
                return this.k2;
            },
            set: function (a) {
                var b = this.k2;
                this.k2 = a;
                if (b != this.k2) {
                    this.jx("ActualDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nb", {
            get: function () {
                return this.k3;
            },
            set: function (a) {
                var b = this.k3;
                this.k3 = a;
                if (b != this.k3) {
                    this.jx("ActualDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "cd", {
            get: function () {
                return this.bk;
            },
            set: function (a) {
                var b = this.bk;
                this.bk = a;
                if (b != this.bk) {
                    this.jx("ActualDisabledElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "k", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                if (b != this.i) {
                    this.jx("ActualElevationMode", igniteuiReactCore.enumGetBox(igniteuiReactCore.ElevationMode_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ElevationMode_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ni", {
            get: function () {
                return this.la;
            },
            set: function (a) {
                var b = this.la;
                this.la = a;
                if (b != this.la) {
                    this.jx("ActualTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nf", {
            get: function () {
                return this.k7;
            },
            set: function (a) {
                var b = this.k7;
                this.k7 = a;
                if (b != this.k7) {
                    this.jx("ActualHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nc", {
            get: function () {
                return this.k4;
            },
            set: function (a) {
                var b = this.k4;
                this.k4 = a;
                if (b != this.k4) {
                    this.jx("ActualFocusBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nd", {
            get: function () {
                return this.k5;
            },
            set: function (a) {
                var b = this.k5;
                this.k5 = a;
                if (b != this.k5) {
                    this.jx("ActualFocusTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ne", {
            get: function () {
                return this.k6;
            },
            set: function (a) {
                var b = this.k6;
                this.k6 = a;
                if (b != this.k6) {
                    this.jx("ActualHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "aw", {
            get: function () {
                return this.an;
            },
            set: function (a) {
                var b = this.an;
                this.an = a;
                if (b != this.an) {
                    this.jx("ActualBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tv", {
            get: function () {
                return this.mt;
            },
            set: function (a) {
                var b = this.mt;
                this.mt = a;
                if (b != this.mt) {
                    this.jx("RaisedBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tx", {
            get: function () {
                return this.mv;
            },
            set: function (a) {
                var b = this.mv;
                this.mv = a;
                if (b != this.mv) {
                    this.jx("RaisedDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ty", {
            get: function () {
                return this.mw;
            },
            set: function (a) {
                var b = this.mw;
                this.mw = a;
                if (b != this.mw) {
                    this.jx("RaisedDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tz", {
            get: function () {
                return this.mx;
            },
            set: function (a) {
                var b = this.mx;
                this.mx = a;
                if (b != this.mx) {
                    this.jx("RaisedDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ep", {
            get: function () {
                return this.b7;
            },
            set: function (a) {
                var b = this.b7;
                this.b7 = a;
                if (b != this.b7) {
                    this.jx("RaisedDisabledElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t2", {
            get: function () {
                return this.m0;
            },
            set: function (a) {
                var b = this.m0;
                this.m0 = a;
                if (b != this.m0) {
                    this.jx("RaisedHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tw", {
            get: function () {
                return this.mu;
            },
            set: function (a) {
                var b = this.mu;
                this.mu = a;
                if (b != this.mu) {
                    this.jx("RaisedBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "es", {
            get: function () {
                return this.ca;
            },
            set: function (a) {
                var b = this.ca;
                this.ca = a;
                if (b != this.ca) {
                    this.jx("RaisedRestingElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "er", {
            get: function () {
                return this.b9;
            },
            set: function (a) {
                var b = this.b9;
                this.b9 = a;
                if (b != this.b9) {
                    this.jx("RaisedHoverElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "eq", {
            get: function () {
                return this.b8;
            },
            set: function (a) {
                var b = this.b8;
                this.b8 = a;
                if (b != this.b8) {
                    this.jx("RaisedFocusElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "bj", {
            get: function () {
                return this.av;
            },
            set: function (a) {
                var b = this.av;
                this.av = a;
                if (b != this.av) {
                    this.jx("RaisedBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "kx", {
            get: function () {
                return this.ka;
            },
            set: function (a) {
                var b = this.ka;
                this.ka = a;
                {
                    this.jx("RaisedCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t4", {
            get: function () {
                return this.m2;
            },
            set: function (a) {
                var b = this.m2;
                this.m2 = a;
                if (b != this.m2) {
                    this.jx("RaisedRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "su", {
            get: function () {
                return this.lr;
            },
            set: function (a) {
                var b = this.lr;
                this.lr = a;
                if (b != this.lr) {
                    this.jx("FlatBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sw", {
            get: function () {
                return this.lt;
            },
            set: function (a) {
                var b = this.lt;
                this.lt = a;
                if (b != this.lt) {
                    this.jx("FlatDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sx", {
            get: function () {
                return this.lu;
            },
            set: function (a) {
                var b = this.lu;
                this.lu = a;
                if (b != this.lu) {
                    this.jx("FlatDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sy", {
            get: function () {
                return this.lv;
            },
            set: function (a) {
                var b = this.lv;
                this.lv = a;
                if (b != this.lv) {
                    this.jx("FlatDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "eb", {
            get: function () {
                return this.bt;
            },
            set: function (a) {
                var b = this.bt;
                this.bt = a;
                if (b != this.bt) {
                    this.jx("FlatDisabledElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s1", {
            get: function () {
                return this.ly;
            },
            set: function (a) {
                var b = this.ly;
                this.ly = a;
                if (b != this.ly) {
                    this.jx("FlatHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sv", {
            get: function () {
                return this.ls;
            },
            set: function (a) {
                var b = this.ls;
                this.ls = a;
                if (b != this.ls) {
                    this.jx("FlatBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ee", {
            get: function () {
                return this.bw;
            },
            set: function (a) {
                var b = this.bw;
                this.bw = a;
                if (b != this.bw) {
                    this.jx("FlatRestingElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ed", {
            get: function () {
                return this.bv;
            },
            set: function (a) {
                var b = this.bv;
                this.bv = a;
                if (b != this.bv) {
                    this.jx("FlatHoverElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ec", {
            get: function () {
                return this.bu;
            },
            set: function (a) {
                var b = this.bu;
                this.bu = a;
                if (b != this.bu) {
                    this.jx("FlatFocusElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s3", {
            get: function () {
                return this.l0;
            },
            set: function (a) {
                var b = this.l0;
                this.l0 = a;
                if (b != this.l0) {
                    this.jx("FlatRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s4", {
            get: function () {
                return this.l1;
            },
            set: function (a) {
                var b = this.l1;
                this.l1 = a;
                if (b != this.l1) {
                    this.jx("FlatTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s2", {
            get: function () {
                return this.lz;
            },
            set: function (a) {
                var b = this.lz;
                this.lz = a;
                if (b != this.lz) {
                    this.jx("FlatHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sz", {
            get: function () {
                return this.lw;
            },
            set: function (a) {
                var b = this.lw;
                this.lw = a;
                if (b != this.lw) {
                    this.jx("FlatFocusBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s0", {
            get: function () {
                return this.lx;
            },
            set: function (a) {
                var b = this.lx;
                this.lx = a;
                if (b != this.lx) {
                    this.jx("FlatFocusTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "be", {
            get: function () {
                return this.aq;
            },
            set: function (a) {
                var b = this.aq;
                this.aq = a;
                if (b != this.aq) {
                    this.jx("FlatBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ku", {
            get: function () {
                return this.j7;
            },
            set: function (a) {
                var b = this.j7;
                this.j7 = a;
                {
                    this.jx("FlatCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nk", {
            get: function () {
                return this.lc;
            },
            set: function (a) {
                var b = this.lc;
                this.lc = a;
                if (b != this.lc) {
                    this.jx("BackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sg", {
            get: function () {
                return this.le;
            },
            set: function (a) {
                var b = this.le;
                this.le = a;
                if (b != this.le) {
                    this.jx("DisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sh", {
            get: function () {
                return this.lf;
            },
            set: function (a) {
                var b = this.lf;
                this.lf = a;
                if (b != this.lf) {
                    this.jx("DisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "si", {
            get: function () {
                return this.lg;
            },
            set: function (a) {
                var b = this.lg;
                this.lg = a;
                if (b != this.lg) {
                    this.jx("DisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "d6", {
            get: function () {
                return this.bo;
            },
            set: function (a) {
                var b = this.bo;
                this.bo = a;
                if (b != this.bo) {
                    this.jx("DisabledElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "o", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.jx("ElevationMode", igniteuiReactCore.enumGetBox(igniteuiReactCore.ElevationMode_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ElevationMode_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s7", {
            get: function () {
                return this.l4;
            },
            set: function (a) {
                var b = this.l4;
                this.l4 = a;
                if (b != this.l4) {
                    this.jx("HoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "nl", {
            get: function () {
                return this.ld;
            },
            set: function (a) {
                var b = this.ld;
                this.ld = a;
                if (b != this.ld) {
                    this.jx("BorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "et", {
            get: function () {
                return this.cb;
            },
            set: function (a) {
                var b = this.cb;
                this.cb = a;
                if (b != this.cb) {
                    this.jx("RestingElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "eg", {
            get: function () {
                return this.by;
            },
            set: function (a) {
                var b = this.by;
                this.by = a;
                if (b != this.by) {
                    this.jx("HoverElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ef", {
            get: function () {
                return this.bx;
            },
            set: function (a) {
                var b = this.bx;
                this.bx = a;
                if (b != this.bx) {
                    this.jx("FocusElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "v", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (b != this.u) {
                    this.jx("TextStyle", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t7", {
            get: function () {
                return this.m5;
            },
            set: function (a) {
                var b = this.m5;
                this.m5 = a;
                if (b != this.m5) {
                    this.jx("TextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s8", {
            get: function () {
                return this.l6;
            },
            set: function (a) {
                var b = this.l6;
                this.l6 = a;
                if (b != this.l6) {
                    this.jx("HoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t6", {
            get: function () {
                return this.m4;
            },
            set: function (a) {
                var b = this.m4;
                this.m4 = a;
                if (b != this.m4) {
                    this.jx("RippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t5", {
            get: function () {
                return this.m3;
            },
            set: function (a) {
                var b = this.m3;
                this.m3 = a;
                if (b != this.m3) {
                    this.jx("RaisedTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t3", {
            get: function () {
                return this.m1;
            },
            set: function (a) {
                var b = this.m1;
                this.m1 = a;
                if (b != this.m1) {
                    this.jx("RaisedHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t0", {
            get: function () {
                return this.my;
            },
            set: function (a) {
                var b = this.my;
                this.my = a;
                if (b != this.my) {
                    this.jx("RaisedFocusBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "t1", {
            get: function () {
                return this.mz;
            },
            set: function (a) {
                var b = this.mz;
                this.mz = a;
                if (b != this.mz) {
                    this.jx("RaisedFocusTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s5", {
            get: function () {
                return this.l2;
            },
            set: function (a) {
                var b = this.l2;
                this.l2 = a;
                if (b != this.l2) {
                    this.jx("FocusBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s6", {
            get: function () {
                return this.l3;
            },
            set: function (a) {
                var b = this.l3;
                this.l3 = a;
                if (b != this.l3) {
                    this.jx("FocusTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ax", {
            get: function () {
                return this.ao;
            },
            set: function (a) {
                var b = this.ao;
                this.ao = a;
                if (b != this.ao) {
                    this.jx("BorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "kd", {
            get: function () {
                return this.j5;
            },
            set: function (a) {
                var b = this.j5;
                this.j5 = a;
                {
                    this.jx("CornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tk", {
            get: function () {
                return this.mi;
            },
            set: function (a) {
                var b = this.mi;
                this.mi = a;
                if (b != this.mi) {
                    this.jx("OutlinedBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tm", {
            get: function () {
                return this.mk;
            },
            set: function (a) {
                var b = this.mk;
                this.mk = a;
                if (b != this.mk) {
                    this.jx("OutlinedDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tn", {
            get: function () {
                return this.ml;
            },
            set: function (a) {
                var b = this.ml;
                this.ml = a;
                if (b != this.ml) {
                    this.jx("OutlinedDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "to", {
            get: function () {
                return this.mm;
            },
            set: function (a) {
                var b = this.mm;
                this.mm = a;
                if (b != this.mm) {
                    this.jx("OutlinedDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "el", {
            get: function () {
                return this.b3;
            },
            set: function (a) {
                var b = this.b3;
                this.b3 = a;
                if (b != this.b3) {
                    this.jx("OutlinedDisabledElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tr", {
            get: function () {
                return this.mp;
            },
            set: function (a) {
                var b = this.mp;
                this.mp = a;
                if (b != this.mp) {
                    this.jx("OutlinedHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tl", {
            get: function () {
                return this.mj;
            },
            set: function (a) {
                var b = this.mj;
                this.mj = a;
                if (b != this.mj) {
                    this.jx("OutlinedBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "eo", {
            get: function () {
                return this.b6;
            },
            set: function (a) {
                var b = this.b6;
                this.b6 = a;
                if (b != this.b6) {
                    this.jx("OutlinedRestingElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "en", {
            get: function () {
                return this.b5;
            },
            set: function (a) {
                var b = this.b5;
                this.b5 = a;
                if (b != this.b5) {
                    this.jx("OutlinedHoverElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "em", {
            get: function () {
                return this.b4;
            },
            set: function (a) {
                var b = this.b4;
                this.b4 = a;
                if (b != this.b4) {
                    this.jx("OutlinedFocusElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "bi", {
            get: function () {
                return this.au;
            },
            set: function (a) {
                var b = this.au;
                this.au = a;
                if (b != this.au) {
                    this.jx("OutlinedBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "kw", {
            get: function () {
                return this.j9;
            },
            set: function (a) {
                var b = this.j9;
                this.j9 = a;
                {
                    this.jx("OutlinedCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tt", {
            get: function () {
                return this.mr;
            },
            set: function (a) {
                var b = this.mr;
                this.mr = a;
                if (b != this.mr) {
                    this.jx("OutlinedRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tu", {
            get: function () {
                return this.ms;
            },
            set: function (a) {
                var b = this.ms;
                this.ms = a;
                if (b != this.ms) {
                    this.jx("OutlinedTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ts", {
            get: function () {
                return this.mq;
            },
            set: function (a) {
                var b = this.mq;
                this.mq = a;
                if (b != this.mq) {
                    this.jx("OutlinedHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tp", {
            get: function () {
                return this.mn;
            },
            set: function (a) {
                var b = this.mn;
                this.mn = a;
                if (b != this.mn) {
                    this.jx("OutlinedFocusBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tq", {
            get: function () {
                return this.mo;
            },
            set: function (a) {
                var b = this.mo;
                this.mo = a;
                if (b != this.mo) {
                    this.jx("OutlinedFocusTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sj", {
            get: function () {
                return this.lh;
            },
            set: function (a) {
                var b = this.lh;
                this.lh = a;
                if (b != this.lh) {
                    this.jx("FabBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sl", {
            get: function () {
                return this.lj;
            },
            set: function (a) {
                var b = this.lj;
                this.lj = a;
                if (b != this.lj) {
                    this.jx("FabDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sm", {
            get: function () {
                return this.lk;
            },
            set: function (a) {
                var b = this.lk;
                this.lk = a;
                if (b != this.lk) {
                    this.jx("FabDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sn", {
            get: function () {
                return this.ll;
            },
            set: function (a) {
                var b = this.ll;
                this.ll = a;
                if (b != this.ll) {
                    this.jx("FabDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "d7", {
            get: function () {
                return this.bp;
            },
            set: function (a) {
                var b = this.bp;
                this.bp = a;
                if (b != this.bp) {
                    this.jx("FabDisabledElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sq", {
            get: function () {
                return this.l5;
            },
            set: function (a) {
                var b = this.l5;
                this.l5 = a;
                if (b != this.l5) {
                    this.jx("FabHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sk", {
            get: function () {
                return this.li;
            },
            set: function (a) {
                var b = this.li;
                this.li = a;
                if (b != this.li) {
                    this.jx("FabBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ea", {
            get: function () {
                return this.bs;
            },
            set: function (a) {
                var b = this.bs;
                this.bs = a;
                if (b != this.bs) {
                    this.jx("FabRestingElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "d9", {
            get: function () {
                return this.br;
            },
            set: function (a) {
                var b = this.br;
                this.br = a;
                if (b != this.br) {
                    this.jx("FabHoverElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "d8", {
            get: function () {
                return this.bq;
            },
            set: function (a) {
                var b = this.bq;
                this.bq = a;
                if (b != this.bq) {
                    this.jx("FabFocusElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "bd", {
            get: function () {
                return this.ap;
            },
            set: function (a) {
                var b = this.ap;
                this.ap = a;
                if (b != this.ap) {
                    this.jx("FabBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "kt", {
            get: function () {
                return this.j6;
            },
            set: function (a) {
                var b = this.j6;
                this.j6 = a;
                {
                    this.jx("FabCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ss", {
            get: function () {
                return this.lp;
            },
            set: function (a) {
                var b = this.lp;
                this.lp = a;
                if (b != this.lp) {
                    this.jx("FabRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "st", {
            get: function () {
                return this.lq;
            },
            set: function (a) {
                var b = this.lq;
                this.lq = a;
                if (b != this.lq) {
                    this.jx("FabTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sr", {
            get: function () {
                return this.lo;
            },
            set: function (a) {
                var b = this.lo;
                this.lo = a;
                if (b != this.lo) {
                    this.jx("FabHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "so", {
            get: function () {
                return this.lm;
            },
            set: function (a) {
                var b = this.lm;
                this.lm = a;
                if (b != this.lm) {
                    this.jx("FabFocusBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "sp", {
            get: function () {
                return this.ln;
            },
            set: function (a) {
                var b = this.ln;
                this.ln = a;
                if (b != this.ln) {
                    this.jx("FabFocusTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "s9", {
            get: function () {
                return this.l7;
            },
            set: function (a) {
                var b = this.l7;
                this.l7 = a;
                if (b != this.l7) {
                    this.jx("IconBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tb", {
            get: function () {
                return this.l9;
            },
            set: function (a) {
                var b = this.l9;
                this.l9 = a;
                if (b != this.l9) {
                    this.jx("IconDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tc", {
            get: function () {
                return this.ma;
            },
            set: function (a) {
                var b = this.ma;
                this.ma = a;
                if (b != this.ma) {
                    this.jx("IconDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "td", {
            get: function () {
                return this.mb;
            },
            set: function (a) {
                var b = this.mb;
                this.mb = a;
                if (b != this.mb) {
                    this.jx("IconDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "eh", {
            get: function () {
                return this.bz;
            },
            set: function (a) {
                var b = this.bz;
                this.bz = a;
                if (b != this.bz) {
                    this.jx("IconDisabledElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tg", {
            get: function () {
                return this.me;
            },
            set: function (a) {
                var b = this.me;
                this.me = a;
                if (b != this.me) {
                    this.jx("IconHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ta", {
            get: function () {
                return this.l8;
            },
            set: function (a) {
                var b = this.l8;
                this.l8 = a;
                if (b != this.l8) {
                    this.jx("IconBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ek", {
            get: function () {
                return this.b2;
            },
            set: function (a) {
                var b = this.b2;
                this.b2 = a;
                if (b != this.b2) {
                    this.jx("IconRestingElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ej", {
            get: function () {
                return this.b1;
            },
            set: function (a) {
                var b = this.b1;
                this.b1 = a;
                if (b != this.b1) {
                    this.jx("IconHoverElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ei", {
            get: function () {
                return this.b0;
            },
            set: function (a) {
                var b = this.b0;
                this.b0 = a;
                if (b != this.b0) {
                    this.jx("IconFocusElevation", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "bf", {
            get: function () {
                return this.ar;
            },
            set: function (a) {
                var b = this.ar;
                this.ar = a;
                if (b != this.ar) {
                    this.jx("IconBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "kv", {
            get: function () {
                return this.j8;
            },
            set: function (a) {
                var b = this.j8;
                this.j8 = a;
                {
                    this.jx("IconCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ti", {
            get: function () {
                return this.mg;
            },
            set: function (a) {
                var b = this.mg;
                this.mg = a;
                if (b != this.mg) {
                    this.jx("IconRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tj", {
            get: function () {
                return this.mh;
            },
            set: function (a) {
                var b = this.mh;
                this.mh = a;
                if (b != this.mh) {
                    this.jx("IconTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "th", {
            get: function () {
                return this.mf;
            },
            set: function (a) {
                var b = this.mf;
                this.mf = a;
                if (b != this.mf) {
                    this.jx("IconHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "te", {
            get: function () {
                return this.mc;
            },
            set: function (a) {
                var b = this.mc;
                this.mc = a;
                if (b != this.mc) {
                    this.jx("IconFocusBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "tf", {
            get: function () {
                return this.md;
            },
            set: function (a) {
                var b = this.md;
                this.md = a;
                if (b != this.md) {
                    this.jx("IconFocusTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "h7", {
            get: function () {
                return this.e6;
            },
            set: function (a) {
                var b = this.e6;
                this.e6 = a;
                if (b != this.e6) {
                    this.jx("InputId", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "h5", {
            get: function () {
                return this.e5;
            },
            set: function (a) {
                var b = this.e5;
                this.e5 = a;
                if (b != this.e5) {
                    this.jx("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "gb", {
            get: function () {
                return this.e2;
            },
            set: function (a) {
                var b = this.e2;
                this.e2 = a;
                if (b != this.e2) {
                    this.jx("Display", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "he", {
            get: function () {
                return this.e3;
            },
            set: function (a) {
                var b = this.e3;
                this.e3 = a;
                if (b != this.e3) {
                    this.jx("FlexDirection", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "hg", {
            get: function () {
                return this.e4;
            },
            set: function (a) {
                var b = this.e4;
                this.e4 = a;
                if (b != this.e4) {
                    this.jx("FlexGrow", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "fv", {
            get: function () {
                return this.e0;
            },
            set: function (a) {
                var b = this.e0;
                this.e0 = a;
                if (b != this.e0) {
                    this.jx("AlignItems", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ez", {
            get: function () {
                return this.ex;
            },
            set: function (a) {
                var b = this.ex;
                this.ex = a;
                if (b != this.ex) {
                    this.jx("Value", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ig", {
            get: function () {
                return this.e7;
            },
            set: function (a) {
                var b = this.e7;
                this.e7 = a;
                if (b != this.e7) {
                    this.jx("Name", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ah", {
            get: function () {
                return this.z;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "eu", {
            get: function () {
                return this.cc;
            },
            set: function (a) {
                var b = this.cc;
                this.cc = a;
                this.z = true;
                if (b != this.cc) {
                    this.jx("TabIndex", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "focused", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                var b = this.ab;
                this.ab = a;
                if (b != this.ab) {
                    this.jx("IsFocused", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ak", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (b != this.ac) {
                    this.jx("IsFocusStyleEnabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "fx", {
            get: function () {
                return this.e1;
            },
            set: function (a) {
                var b = this.e1;
                this.e1 = a;
                if (b != this.e1) {
                    this.jx("AriaLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "af", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                var b = this.x;
                this.x = a;
                if (b != this.x) {
                    this.jx("DisableRipple", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ae", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (b != this.w) {
                    this.jx("ActualDisableRipple", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "al", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                var b = this.ad;
                this.ad = a;
                if (b != this.ad) {
                    this.jx("IsHover", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "disabled", {
            get: function () {
                return this.aa;
            },
            set: function (a) {
                var b = this.aa;
                this.aa = a;
                if (b != this.aa) {
                    this.jx("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Button.prototype, "ag", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                var b = this.y;
                this.y = a;
                if (b != this.y) {
                    this.jx("DisableTransitions", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Button.prototype.jy = function () {
            this.jp();
            this.view.ap(this.nh, igniteuiReactCore.BrushUtil.g(0, 0, 0, 0));
            this.j1();
        };
        Object.defineProperty(Button.prototype, "a", {
            get: function () {
                var a = new igniteuiReactCore.AnimationKeyFrameEffectTiming();
                a.g = 300;
                a.b = 0;
                return a;
            },
            enumerable: true,
            configurable: true
        });
        Button.prototype.jp = function () {
            this.view.z();
        };
        Button.prototype.onDetachedFromUI = function () {
            this.view.ad();
        };
        Button.prototype.onAttachedToUI = function () {
            this.view.ab();
        };
        Button.prototype.appendButtonContent = function (a) {
            this.view.y(a);
        };
        Button.prototype.am = function () {
            return this.view.f();
        };
        Button.prototype.ey = function () {
            return this.p();
        };
        Button.prototype.gf = function () {
            var a = this.p();
            return a.ab();
        };
        Button.prototype.p = function () {
            var a = new ButtonVisualModelExport();
            a.s = this.view.j.rootWrapper.getNativeElement().offsetTop;
            a.q = this.view.j.rootWrapper.getNativeElement().offsetLeft;
            a.p = this.view.j.rootWrapper.getNativeElement().offsetHeight;
            a.t = this.view.j.rootWrapper.getNativeElement().offsetWidth;
            a.h = this.d;
            a.i = this.g;
            a.c = igniteuiReactCore.AppearanceHelper.a(this.m8);
            a.g = igniteuiReactCore.AppearanceHelper.a(this.nj);
            a.d = igniteuiReactCore.AppearanceHelper.a(this.ng);
            a.a = igniteuiReactCore.AppearanceHelper.a(this.m6);
            a.u = this.cg;
            a.e = igniteuiReactCore.AppearanceHelper.a(this.nh);
            a.ah = this.kb;
            a.b = igniteuiReactCore.AppearanceHelper.a(this.m7);
            a.j = this.k;
            a.f = igniteuiReactCore.AppearanceHelper.a(this.ni);
            a.o = this.aw;
            a.x = this.gb;
            a.y = this.he;
            a.z = this.hg;
            a.w = this.fv;
            a.v = this.view.q.getNativeElement().innerText;
            a.aa = this.ig;
            a.m = this.focused;
            a.k = this.ae;
            a.n = this.al;
            a.l = this.disabled;
            if (this.v != null) {
                var b = this.v;
                if (this.view != null && b.n == null) {
                    var c = this.view.j;
                    var d = igniteuiReactCore.FontUtil.getFontInfoFromString(c, b.fontString);
                    b.n = d.n;
                    b.d = d.d;
                    b.o = d.o;
                    b.q = d.q;
                    b.r = d.r;
                    b.s = d.s;
                }
                if (b.n != null) {
                    a.ac = b.n;
                }
                if (!igniteuiReactCore.isNaN_(b.d)) {
                    a.r = b.d;
                }
                if (b.s != null) {
                    a.ag = b.s;
                }
                if (b.q != null) {
                    a.ae = b.q;
                }
                if (b.o != null) {
                    a.ad = b.q;
                }
            }
            return a;
        };
        Button.prototype.provideContainer = function (a) {
            this.view.ac(a);
        };
        Button.$t = igniteuiReactCore.markType(Button, 'Button', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        Button.rr = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.rf = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
        Button.p6 = igniteuiReactCore.BrushUtil.g(20, 0, 0, 0);
        Button.n = 1;
        Button.ri = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.rj = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.rk = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.du = 0;
        Button.dx = 2;
        Button.dw = 4;
        Button.dv = 8;
        Button.rh = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.rp = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.kq = new igniteuiReactCore.CornerRadius(0, 4);
        Button.ba = NaN;
        Button.rg = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.rq = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.ro = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.rn = igniteuiReactCore.BrushUtil.g(255, 220, 83, 145);
        Button.rl = igniteuiReactCore.BrushUtil.g(255, 220, 83, 145);
        Button.rm = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.qk = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.ql = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.qm = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.dh = 0;
        Button.dk = 0;
        Button.dj = 0;
        Button.di = 0;
        Button.qj = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.qr = null;
        Button.kn = new igniteuiReactCore.CornerRadius(0, 4);
        Button.a7 = NaN;
        Button.qi = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.qs = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.qq = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.qp = igniteuiReactCore.BrushUtil.g(13, 228, 28, 119);
        Button.qn = igniteuiReactCore.BrushUtil.g(30, 228, 28, 119);
        Button.qo = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.q6 = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.q7 = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
        Button.q8 = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.dq = 0;
        Button.dt = 0;
        Button.ds = 0;
        Button.dr = 0;
        Button.q5 = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
        Button.rd = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.kp = new igniteuiReactCore.CornerRadius(0, 4);
        Button.a9 = 1;
        Button.q4 = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.re = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.rc = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.rb = igniteuiReactCore.BrushUtil.g(13, 228, 28, 119);
        Button.q9 = igniteuiReactCore.BrushUtil.g(30, 228, 28, 119);
        Button.ra = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.qv = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.qw = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.qx = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.dl = 0;
        Button.dp = 0;
        Button.dn = 0;
        Button.dm = 0;
        Button.qu = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.q2 = null;
        Button.ko = new igniteuiReactCore.CornerRadius(0, 28);
        Button.a8 = NaN;
        Button.qt = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.q3 = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.q1 = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.q0 = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
        Button.qy = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.qz = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.p9 = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.qa = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.qb = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.dd = 0;
        Button.dg = 6;
        Button.df = 12;
        Button.de = 12;
        Button.p8 = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.qg = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.km = new igniteuiReactCore.CornerRadius(0, 28);
        Button.a6 = NaN;
        Button.p7 = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Button.qh = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.qf = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.qe = igniteuiReactCore.BrushUtil.g(255, 220, 83, 145);
        Button.qc = igniteuiReactCore.BrushUtil.g(255, 220, 83, 145);
        Button.qd = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        Button.o8 = igniteuiReactCore.BrushUtil.g(100, 33, 150, 243);
        Button.ow = igniteuiReactCore.BrushUtil.g(70, 33, 150, 243);
        Button.nn = igniteuiReactCore.BrushUtil.g(40, 33, 150, 243);
        Button.l = 2;
        Button.oz = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.o0 = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.o1 = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.cx = 0;
        Button.c0 = 0;
        Button.cz = 0;
        Button.cy = 2;
        Button.oy = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.o6 = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.ki = new igniteuiReactCore.CornerRadius(0, 3);
        Button.a2 = NaN;
        Button.ox = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.o7 = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.o5 = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.o4 = igniteuiReactCore.BrushUtil.g(255, 27, 135, 220);
        Button.o2 = igniteuiReactCore.BrushUtil.g(255, 21, 112, 184);
        Button.o3 = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.n1 = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.n2 = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.n3 = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.cl = 0;
        Button.co = 0;
        Button.cn = 0;
        Button.cm = 2;
        Button.n0 = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.n8 = igniteuiReactCore.BrushUtil.g(100, 33, 150, 243);
        Button.kf = new igniteuiReactCore.CornerRadius(0, 3);
        Button.az = NaN;
        Button.nz = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.n9 = igniteuiReactCore.BrushUtil.g(255, 119, 119, 119);
        Button.n7 = igniteuiReactCore.BrushUtil.g(255, 119, 119, 119);
        Button.n6 = igniteuiReactCore.BrushUtil.g(26, 33, 150, 243);
        Button.n4 = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.n5 = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.on = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.oo = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
        Button.op = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.ct = 0;
        Button.cw = 0;
        Button.cv = 0;
        Button.cu = 2;
        Button.om = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.ou = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.kh = new igniteuiReactCore.CornerRadius(0, 3);
        Button.a1 = 1;
        Button.ol = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.ov = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.ot = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.os = igniteuiReactCore.BrushUtil.g(26, 33, 150, 243);
        Button.oq = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.or = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.oc = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.od = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.oe = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.cp = 0;
        Button.cs = 0;
        Button.cr = 0;
        Button.cq = 2;
        Button.ob = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.oj = null;
        Button.kg = new igniteuiReactCore.CornerRadius(0, 28);
        Button.a0 = NaN;
        Button.oa = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        Button.ok = igniteuiReactCore.BrushUtil.g(255, 119, 119, 119);
        Button.oi = igniteuiReactCore.BrushUtil.g(255, 119, 119, 119);
        Button.oh = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
        Button.of = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.og = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.nq = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.nr = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        Button.ns = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        Button.ch = 0;
        Button.ck = 0;
        Button.cj = 0;
        Button.ci = 2;
        Button.np = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Button.nx = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.ke = new igniteuiReactCore.CornerRadius(0, 28);
        Button.ay = NaN;
        Button.no = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Button.ny = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.nw = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.nv = igniteuiReactCore.BrushUtil.g(255, 27, 135, 220);
        Button.nt = igniteuiReactCore.BrushUtil.g(255, 21, 112, 184);
        Button.nu = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Button.c = 2;
        Button.ew = 0;
        Button.ev = 0;
        return Button;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ValueChangedEventArgs, _super);
        function ValueChangedEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._oldValue = new Date();
            _this._newValue = new Date();
            return _this;
        }
        Object.defineProperty(ValueChangedEventArgs.prototype, "oldValue", {
            get: function () {
                return this._oldValue;
            },
            set: function (a) {
                this._oldValue = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ValueChangedEventArgs.prototype, "newValue", {
            get: function () {
                return this._newValue;
            },
            set: function (a) {
                this._newValue = a;
            },
            enumerable: true,
            configurable: true
        });
        ValueChangedEventArgs.$t = igniteuiReactCore.markType(ValueChangedEventArgs, 'ValueChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return ValueChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IconVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IconVisualModelExport, _super);
        function IconVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.c = null;
            _this.b = null;
            _this.d = 0;
            _this._svgPath = null;
            _this.j = null;
            _this.k = null;
            _this.l = null;
            _this.e = 0;
            _this.h = null;
            _this.i = null;
            return _this;
        }
        Object.defineProperty(IconVisualModelExport.prototype, "svgPath", {
            get: function () {
                return this._svgPath;
            },
            set: function (a) {
                this._svgPath = a;
            },
            enumerable: true,
            configurable: true
        });
        IconVisualModelExport.prototype.f = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("actualFill : " + this.a.serialize() + ", ");
            a.l("actualTextColor : " + this.c.serialize() + ", ");
            a.l("actualStroke : " + this.b.serialize() + ", ");
            a.l("actualStrokeThickness : " + this.d + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.j)) {
                a.l("textStyleFontStyle : \"" + this.j + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.k)) {
                a.l("textStyleFontVariant : \"" + this.k + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.l)) {
                a.l("textStyleFontWeight : \"" + this.l + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.h)) {
                a.l("textStyleFontFamily : \"" + this.h + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.i)) {
                a.l("textStyleFontStretch : \"" + this.i + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.e)) {
                a.l("textStyleFontSize : " + this.e + ", ");
            }
            a.l("}");
            return a.toString();
        };
        IconVisualModelExport.$t = igniteuiReactCore.markType(IconVisualModelExport, 'IconVisualModelExport');
        return IconVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var IconView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IconView, _super);
        function IconView() {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.g = null;
            _this.b = null;
            _this.f = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.k = null;
            _this.c = true;
            _this.h = null;
            _this.i = null;
            return _this;
        }
        IconView.prototype.r = function () {
        };
        IconView.prototype.d = function () {
            return true;
        };
        Object.defineProperty(IconView.prototype, "j", {
            get: function () {
                return this.h;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IconView.prototype, "w", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IconView.prototype, "e", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        IconView.prototype.p = function (a) {
            var e_1, _a;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.f.clear();
            }
            this.g = a;
            a.rootWrapper.setStyleProperty("position", "relative");
            this.g.rootWrapper.setStyleProperty("display", "flex");
            this.g.rootWrapper.setStyleProperty("flex-direction", "row");
            this.g.rootWrapper.setStyleProperty("flex-wrap", "no-wrap");
            this.g.rootWrapper.setStyleProperty("align-items", "center");
            this.t();
            var c = this.g.createElementNS("svg", "http://www.w3.org/2000/svg");
            c.setStyleProperty("position", "absolute");
            c.setStyleProperty("top", "0");
            c.setStyleProperty("left", "0");
            c.setStyleProperty("right", "0");
            c.setStyleProperty("bottom", "0");
            c.setAttribute("viewBox", "0 0 24 24");
            this.h = c;
            var d = this.g.createElementNS("path", "http://www.w3.org/2000/svg");
            d.setAttribute("d", "");
            this.h.append(d);
            if (this.k != null) {
                d.setAttribute("d", this.k);
            }
            this.i = d;
            this.g.append(this.h);
            this.a.a8();
        };
        IconView.prototype.u = function (a) {
            if (this.k != a) {
                this.k = a;
                if (this.i != null) {
                    this.i.setAttribute("d", this.k);
                }
            }
        };
        IconView.prototype.t = function () {
            this.g.rootWrapper.setStyleProperty("width", "1.5rem");
            this.g.rootWrapper.setStyleProperty("height", "1.5rem");
        };
        IconView.prototype.l = function (a) {
        };
        IconView.prototype.s = function () {
            if (this.d()) {
            }
        };
        IconView.prototype.m = function (a) {
            this.a.a5();
        };
        IconView.prototype.n = function (a) {
            this.a.a6();
        };
        IconView.prototype.o = function () {
            this.c = true;
            this.f.add(this.g.rootWrapper.listen("mouseenter", igniteuiReactCore.runOn(this, this.m)));
            this.f.add(this.g.rootWrapper.listen("mouseleave", igniteuiReactCore.runOn(this, this.n)));
        };
        IconView.prototype.q = function () {
            var e_2, _a;
            this.c = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            this.f.clear();
        };
        IconView.prototype.v = function (a) {
            if (a != null) {
                this.g.rootWrapper.setStyleProperty("font", a.fontString);
            }
        };
        IconView.$t = igniteuiReactCore.markType(IconView, 'IconView');
        return IconView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Icon = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Icon, _super);
        function Icon() {
            var _this = _super.call(this) || this;
            _this._view = null;
            _this.bd = Icon.bt;
            _this.bh = Icon.bx;
            _this.be = Icon.bu;
            _this.bf = Icon.bv;
            _this.bg = Icon.bw;
            _this.m = Icon.s;
            _this.n = Icon.t;
            _this.bi = Icon.bt;
            _this.bn = Icon.bx;
            _this.ac = null;
            _this.bj = Icon.bu;
            _this.bk = Icon.bv;
            _this.bm = Icon.bw;
            _this.o = Icon.s;
            _this.p = Icon.t;
            _this.c = null;
            _this.bl = null;
            _this.ab = "ig-icon-" + Icon.y++;
            _this.w = 0;
            _this.e = false;
            _this.aa = null;
            _this.g = false;
            _this.f = false;
            _this.propertyChanged = null;
            var a = new IconView();
            a.a = _this;
            _this.view = a;
            _this.view.r();
            return _this;
        }
        Object.defineProperty(Icon.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        Icon.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Icon.prototype.a7 = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.a9(a, b, c);
        };
        Icon.prototype.a9 = function (a, b, c) {
            switch (a) {
                case "Fill":
                case "Stroke":
                case "StrokeThickness":
                case "HoverFill":
                case "HoverStroke":
                case "HoverStrokeThickness":
                    this.bc();
                    break;
                case "ActualFill":
                case "ActualStroke":
                case "ActualHoverFill":
                case "ActualHoverStroke":
                case "ActualStrokeThickness":
                case "ActualHoverStrokeThickness":
                case "SVGPath":
                    this.bb();
                    break;
            }
        };
        Icon.prototype.bc = function () {
            this.bo = this.fill != null ? this.fill : Icon.bt;
            this.bp = this.by != null ? this.by : Icon.bu;
            this.br = this.b1 != null ? this.b1 : Icon.bw;
            this.bq = this.bz != null ? this.bz : Icon.bv;
            this.r = !igniteuiReactCore.isNaN_(this.v) ? this.v : Icon.t;
            this.q = !igniteuiReactCore.isNaN_(this.u) ? this.u : Icon.s;
            this.bs = this.b2 != null ? this.b2 : Icon.bx;
        };
        Object.defineProperty(Icon.prototype, "i", {
            get: function () {
                return this.svgPath != null && !this.view.e;
            },
            enumerable: true,
            configurable: true
        });
        Icon.prototype.bb = function () {
            var a = this.view.j;
            if (this.i) {
                var b = this.view.w;
                if (this.k) {
                    b._fill = this.bp;
                    b._stroke = this.bq;
                    b.ac = this.q;
                }
                else {
                    b._fill = this.bo;
                    b._stroke = this.br;
                    b.ac = this.r;
                }
            }
            else {
                if (this.svgPath != null) {
                    this.view.u(this.svgPath);
                }
                var c = this.view.j;
                if (this.k) {
                    if (this.bp != null) {
                        igniteuiReactCore.NativeUI.o(c, this.bp);
                    }
                    if (this.bq != null) {
                        igniteuiReactCore.NativeUI.v(c, this.bq);
                    }
                    if (!igniteuiReactCore.isNaN_(this.q)) {
                        igniteuiReactCore.NativeUI.y(c, this.q);
                    }
                }
                else {
                    if (this.bo != null) {
                        igniteuiReactCore.NativeUI.o(c, this.bo);
                    }
                    if (this.br != null) {
                        igniteuiReactCore.NativeUI.v(c, this.br);
                    }
                    if (!igniteuiReactCore.isNaN_(this.r)) {
                        igniteuiReactCore.NativeUI.y(c, this.r);
                    }
                }
            }
            if (this.d != null) {
                this.view.v(this.d);
            }
            if (this.bs != null) {
                igniteuiReactCore.NativeUI.n(this.view.j, this.bs);
            }
        };
        Object.defineProperty(Icon.prototype, "bo", {
            get: function () {
                return this.bd;
            },
            set: function (a) {
                var b = this.bd;
                this.bd = a;
                if (b != this.bd) {
                    this.a7("ActualFill", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "bs", {
            get: function () {
                return this.bh;
            },
            set: function (a) {
                var b = this.bh;
                this.bh = a;
                if (b != this.bh) {
                    this.a7("ActualTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "bp", {
            get: function () {
                return this.be;
            },
            set: function (a) {
                var b = this.be;
                this.be = a;
                if (b != this.be) {
                    this.a7("ActualHoverFill", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "bq", {
            get: function () {
                return this.bf;
            },
            set: function (a) {
                var b = this.bf;
                this.bf = a;
                if (b != this.bf) {
                    this.a7("ActualHoverStroke", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "br", {
            get: function () {
                return this.bg;
            },
            set: function (a) {
                var b = this.bg;
                this.bg = a;
                if (b != this.bg) {
                    this.a7("ActualStroke", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "q", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.a7("ActualHoverStrokeThickness", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "r", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.a7("ActualStrokeThickness", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "fill", {
            get: function () {
                return this.bi;
            },
            set: function (a) {
                var b = this.bi;
                this.bi = a;
                if (b != this.bi) {
                    this.a7("Fill", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "b2", {
            get: function () {
                return this.bn;
            },
            set: function (a) {
                var b = this.bn;
                this.bn = a;
                if (b != this.bn) {
                    this.a7("TextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "svgPath", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (b != this.ac) {
                    this.a7("SVGPath", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "by", {
            get: function () {
                return this.bj;
            },
            set: function (a) {
                var b = this.bj;
                this.bj = a;
                if (b != this.bj) {
                    this.a7("HoverFill", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "bz", {
            get: function () {
                return this.bk;
            },
            set: function (a) {
                var b = this.bk;
                this.bk = a;
                if (b != this.bk) {
                    this.a7("HoverStroke", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "b1", {
            get: function () {
                return this.bm;
            },
            set: function (a) {
                var b = this.bm;
                this.bm = a;
                if (b != this.bm) {
                    this.a7("Stroke", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "u", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                var b = this.o;
                this.o = a;
                if (b != this.o) {
                    this.a7("HoverStrokeThickness", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "v", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                var b = this.p;
                this.p = a;
                if (b != this.p) {
                    this.a7("StrokeThickness", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Icon.prototype.a5 = function () {
            this.k = true;
        };
        Icon.prototype.a6 = function () {
            this.k = false;
        };
        Object.defineProperty(Icon.prototype, "d", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.a7("TextStyle", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "b0", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (b != this.bl) {
                    this.a7("HoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "as", {
            get: function () {
                return this.ab;
            },
            set: function (a) {
                var b = this.ab;
                this.ab = a;
                if (b != this.ab) {
                    this.a7("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "h", {
            get: function () {
                return this.e;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "x", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                this.e = true;
                if (b != this.w) {
                    this.a7("TabIndex", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "ak", {
            get: function () {
                return this.aa;
            },
            set: function (a) {
                var b = this.aa;
                this.aa = a;
                if (b != this.aa) {
                    this.a7("AriaLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "k", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (b != this.g) {
                    this.a7("IsHover", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Icon.prototype, "disabled", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.a7("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Icon.prototype.a8 = function () {
        };
        Icon.prototype.onDetachedFromUI = function () {
            this.view.q();
        };
        Icon.prototype.onAttachedToUI = function () {
            this.view.o();
        };
        Icon.prototype.l = function () {
            return this.view.d();
        };
        Icon.prototype.z = function () {
            return this.a();
        };
        Icon.prototype.am = function () {
            var a = this.a();
            return a.f();
        };
        Icon.prototype.a = function () {
            var a = new IconVisualModelExport();
            a.a = igniteuiReactCore.AppearanceHelper.a(this.bo);
            a.c = igniteuiReactCore.AppearanceHelper.a(this.bs);
            a.b = igniteuiReactCore.AppearanceHelper.a(this.br);
            a.d = this.r;
            if (this.d != null) {
                var b = this.d;
                if (this.view != null && b.n == null) {
                    var c = this.view.g;
                    var d = igniteuiReactCore.FontUtil.getFontInfoFromString(c, b.fontString);
                    b.n = d.n;
                    b.d = d.d;
                    b.o = d.o;
                    b.q = d.q;
                    b.r = d.r;
                    b.s = d.s;
                }
                if (b.n != null) {
                    a.h = b.n;
                }
                if (!igniteuiReactCore.isNaN_(b.d)) {
                    a.e = b.d;
                }
                if (b.s != null) {
                    a.l = b.s;
                }
                if (b.q != null) {
                    a.j = b.q;
                }
                if (b.o != null) {
                    a.i = b.q;
                }
            }
            return a;
        };
        Icon.prototype.provideContainer = function (a) {
            this.view.p(a);
        };
        Icon.$t = igniteuiReactCore.markType(Icon, 'Icon', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type, igniteuiReactCore.IIcon_$type]);
        Icon.bt = null;
        Icon.bx = null;
        Icon.bw = null;
        Icon.bu = null;
        Icon.bv = null;
        Icon.t = 0;
        Icon.s = 0;
        Icon.y = 0;
        return Icon;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalendarVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CalendarVisualModelExport, _super);
        function CalendarVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.h = 0;
            _this.g = 0;
            _this.d = null;
            _this.f = null;
            _this.b = null;
            _this.e = null;
            _this.c = null;
            _this.a = null;
            _this.o = null;
            _this.p = null;
            _this.q = null;
            _this.j = 0;
            _this.m = null;
            _this.n = null;
            _this.k = null;
            _this.i = null;
            return _this;
        }
        CalendarVisualModelExport.prototype.l = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("Density : " + this.h + ", ");
            a.l("BaseTheme : " + this.g + ", ");
            a.l("SelectedDateBackgroundColor : " + this.d.serialize() + ", ");
            a.l("SelectedFocusDateBackgroundColor : " + this.f.serialize() + ", ");
            a.l("FocusDateBackgroundColor : " + this.b.serialize() + ", ");
            a.l("SelectedDateTextColor : " + this.e.serialize() + ", ");
            a.l("FocusDateTextColor : " + this.c.serialize() + ", ");
            a.l("CurrentDateTextColor : " + this.a.serialize() + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.o)) {
                a.l("textStyleFontStyle : \"" + this.o + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.p)) {
                a.l("textStyleFontVariant : \"" + this.p + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.q)) {
                a.l("textStyleFontWeight : \"" + this.q + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.m)) {
                a.l("textStyleFontFamily : \"" + this.m + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.n)) {
                a.l("textStyleFontStretch : \"" + this.n + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.j)) {
                a.l("textStyleFontSize : " + this.j + ", ");
            }
            a.l("activePicker : \"" + this.k + "\", ");
            a.l("buttonsModels: [");
            for (var b = 0; b < this.i.count; b++) {
                if (b != 0) {
                    a.l(",");
                }
                var c = this.i._inner[b].aa.charAt(0).toString().toLowerCase() + this.i._inner[b].aa.substr(1);
                a.l(this.i._inner[b].ab());
            }
            a.l("]");
            a.l("}");
            return a.toString();
        };
        CalendarVisualModelExport.$t = igniteuiReactCore.markType(CalendarVisualModelExport, 'CalendarVisualModelExport');
        return CalendarVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CalendarView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CalendarView, _super);
        function CalendarView() {
            var _this = _super.call(this) || this;
            _this.g = null;
            _this.i = null;
            _this.j = null;
            _this.c = new igniteuiReactCore.List$1(igniteuiReactCore.DomWrapper_$type, 0);
            _this.b = new igniteuiReactCore.List$1(igniteuiReactCore.DomWrapper_$type, 0);
            _this.d = new igniteuiReactCore.List$1(igniteuiReactCore.DomWrapper_$type, 0);
            _this.e = new igniteuiReactCore.List$1(igniteuiReactCore.DomWrapper_$type, 0);
            _this.h = null;
            _this.l = null;
            _this.a = null;
            _this.f = null;
            _this.l = "day";
            _this.h = null;
            return _this;
        }
        CalendarView.prototype.y = function () {
        };
        CalendarView.prototype.x = function (a) {
            if (a == null) {
                this.f = null;
                return;
            }
            this.f = a;
            this.f.rootWrapper.setStyleProperty("background-color", "rgb(255, 255, 255)");
            var b = Math.round(a.rootWrapper.width());
            var c = Math.round(a.rootWrapper.height());
            this.p();
            this.ai();
            this.aj();
            this.ah();
            var d = this.f.rootWrapper;
            d.listen("keydown", igniteuiReactCore.runOn(this, this.o));
            d.listen("focus", igniteuiReactCore.runOn(this, this.n));
        };
        CalendarView.prototype.m = function () {
            return this.l;
        };
        CalendarView.prototype.p = function () {
            if (this.f != null) {
                this.g = this.f.createElement("div");
                this.g.setStyleProperty("height", "100%");
                this.f.append(this.g);
                for (var a = 0; a < 42; a++) {
                    var b = this.f.createElement("div");
                    this.b.add(b);
                }
                this.a.at(this.f, this.g, this.b);
                this.i = this.f.createElement("div");
                this.i.setStyleProperty("height", "100%");
                this.f.append(this.i);
                for (var c = 0; c < 12; c++) {
                    var d = this.f.createElement("div");
                    this.d.add(d);
                }
                this.a.av(this.f, this.i, this.d);
                for (var e = 0; e < 12; e++) {
                    var f = this.i.getChildAt(e);
                    f.listen("click", igniteuiReactCore.runOn(this, this.s));
                }
                this.i.hide();
                this.j = this.f.createElement("div");
                this.j.setStyleProperty("height", "100%");
                this.f.append(this.j);
                for (var g = 0; g < 7; g++) {
                    var h = this.f.createElement("div");
                    this.e.add(h);
                }
                this.a.aw(this.f, this.j, this.e);
                for (var i = 0; i < 7; i++) {
                    var j = this.j.getChildAt(i);
                    j.listen("click", igniteuiReactCore.runOn(this, this.an));
                }
                this.j.listen("wheel", igniteuiReactCore.runOn(this, this.ao));
                this.j.hide();
            }
        };
        CalendarView.prototype.ai = function () {
            if (this.f != null) {
                var a = this.g.getChildAt(0);
                for (var b = 0; b < 4; b++) {
                    var c = this.f.createElement("div");
                    this.c.add(c);
                }
                this.a.be(this.f, a, this.c);
                var d = a.getChildAt(0);
                var e = a.getChildAt(3);
                d.listen("click", igniteuiReactCore.runOn(this, this.z));
                e.listen("click", igniteuiReactCore.runOn(this, this.u));
                var f = a.getChildAt(1);
                var g = a.getChildAt(2);
                f.listen("click", igniteuiReactCore.runOn(this, this.t));
                g.listen("click", igniteuiReactCore.runOn(this, this.ap));
            }
        };
        CalendarView.prototype.aj = function () {
            if (this.f != null) {
                var a = this.g.getChildAt(1);
                this.a.bg(a);
            }
        };
        CalendarView.prototype.ah = function () {
            if (this.f != null) {
                this.a.bd(this.b);
                for (var a = 2; a < 8; a++) {
                    var b = this.g.getChildAt(a);
                    for (var c = 0; c < 7; c++) {
                        var d = b.getChildAt(c);
                        d.listen("click", igniteuiReactCore.runOn(this, this.q));
                    }
                }
            }
        };
        CalendarView.prototype.ag = function () {
            if (this.f != null) {
                this.a.bb(this.c._inner[1]);
                this.a.bj(this.c._inner[2]);
            }
        };
        CalendarView.prototype.ac = function (a) {
            if (a === void 0) {
                a = false;
            }
            if (this.f != null) {
                this.a.bd(this.b, a);
            }
        };
        CalendarView.prototype.af = function () {
            if (this.d.count != 0) {
                this.a.bf(this.d);
            }
        };
        CalendarView.prototype.ak = function () {
            if (this.e.count != 0) {
                this.a.bi(this.e);
            }
        };
        CalendarView.prototype.ab = function () {
            this.ac();
            this.ag();
            this.l = "day";
            this.g.show();
            this.i.hide();
            this.j.hide();
            this.r();
        };
        CalendarView.prototype.ad = function () {
            this.ae(this.c._inner[0]);
        };
        CalendarView.prototype.ae = function (a) {
            this.h = a;
        };
        CalendarView.prototype.r = function () {
            if (this.h != null) {
                this.h.parent().parent().focus(false);
            }
        };
        CalendarView.prototype.aa = function (a) {
            if (a === void 0) {
                a = true;
            }
            this.a.ap(-1);
            this.ac(a);
            this.ag();
        };
        CalendarView.prototype.v = function (a) {
            if (a === void 0) {
                a = true;
            }
            this.a.ap(1);
            this.ac(a);
            this.ag();
        };
        CalendarView.prototype.al = function () {
            this.g.hide();
            this.i.show();
            this.i.setStyleProperty("display", "flex");
            this.j.hide();
            this.l = "month";
            this.af();
            this.r();
        };
        CalendarView.prototype.am = function () {
            this.g.hide();
            this.i.hide();
            this.j.show();
            this.l = "year";
            this.ak();
            this.r();
        };
        CalendarView.prototype.n = function (a) {
        };
        CalendarView.prototype.o = function (a) {
            var b = a.which;
            if (this.l == "day") {
                var c = this.h.getAttribute("data-section").toString();
                var d = parseInt(this.h.getAttribute("data-index").toString());
                if (c == "header") {
                    if (b == 37) {
                        if (d > 0) {
                            var e = this.c._inner[d - 1];
                            this.ae(e);
                            this.r();
                        }
                        else {
                            this.aa(false);
                        }
                    }
                    else if (b == 39) {
                        if (d < 3) {
                            var f = this.c._inner[d + 1];
                            this.ae(f);
                            this.r();
                        }
                        else {
                            this.v(false);
                        }
                    }
                    else if (b == 9) {
                        if (a.shiftKey) {
                            this.a.a2();
                        }
                        else {
                            a.preventDefault();
                            this.ac(true);
                            this.r();
                        }
                    }
                    else if (b == 13) {
                        a.preventDefault();
                        if (d == 0) {
                            this.aa(false);
                        }
                        else if (d == 1) {
                            this.al();
                        }
                        else if (d == 2) {
                            this.am();
                        }
                        else if (d == 3) {
                            this.v(false);
                        }
                    }
                }
                else if (c == "days") {
                    var g = this.h.getAttribute("data-day").toString();
                    var h = this.h.getAttribute("data-month").toString();
                    if (b == 37) {
                        if (d == 0) {
                            this.aa();
                            this.r();
                        }
                        else {
                            var i = this.b._inner[d - 1];
                            var j = i.getAttribute("data-day").toString();
                            var k = i.getAttribute("data-month").toString();
                            if (h == k) {
                                this.ae(i);
                                this.r();
                            }
                            else {
                                this.aa();
                                var l = this.k(j, k);
                                this.ae(l);
                                this.r();
                            }
                        }
                    }
                    else if (b == 39) {
                        if (d == 41) {
                            this.v();
                            this.r();
                        }
                        else {
                            var m = this.b._inner[d + 1];
                            var n = m.getAttribute("data-day").toString();
                            var o = m.getAttribute("data-month").toString();
                            if (h == o) {
                                this.ae(m);
                                this.r();
                            }
                            else {
                                this.v();
                                var p = this.k(n, o);
                                this.ae(p);
                                this.r();
                            }
                        }
                    }
                    else if (b == 40) {
                        if (d >= 35) {
                            this.v();
                            var q = this.k(g, h);
                            var r = parseInt(q.getAttribute("data-index").toString());
                            var s = this.b._inner[r + 7];
                            var t = s.getAttribute("data-day").toString();
                            var u = s.getAttribute("data-month").toString();
                            var v = this.k(t, u);
                            this.ae(v);
                            this.r();
                        }
                        else {
                            var w = this.b._inner[d + 7];
                            var x = w.getAttribute("data-day").toString();
                            var y = w.getAttribute("data-month").toString();
                            if (h == y) {
                                this.ae(w);
                                this.r();
                            }
                            else {
                                this.v();
                                var z = this.k(x, y);
                                this.ae(z);
                                this.r();
                            }
                        }
                    }
                    else if (b == 38) {
                        if (d <= 6) {
                            this.aa();
                            var aa = this.k(g, h);
                            var ab = parseInt(aa.getAttribute("data-index").toString());
                            var ac = this.b._inner[ab - 7];
                            var ad = ac.getAttribute("data-day").toString();
                            var ae = ac.getAttribute("data-month").toString();
                            var af = this.k(ad, ae);
                            this.ae(af);
                            this.r();
                        }
                        else {
                            var ag = this.b._inner[d - 7];
                            var ah = ag.getAttribute("data-day").toString();
                            var ai = ag.getAttribute("data-month").toString();
                            if (h == ai) {
                                this.ae(ag);
                                this.r();
                            }
                            else {
                                this.aa();
                                var aj = this.k(ah, ai);
                                this.ae(aj);
                                this.r();
                            }
                        }
                    }
                    else if (b == 34) {
                        this.v();
                        this.r();
                    }
                    else if (b == 33) {
                        this.aa();
                        this.r();
                    }
                    else if (b == 9) {
                        if (a.shiftKey) {
                            a.preventDefault();
                            var ak = this.c._inner[1];
                            this.ae(ak);
                            this.r();
                        }
                        else {
                            this.a.a2();
                        }
                    }
                }
            }
            else if (this.l == "month") {
                var al = parseInt(this.h.getAttribute("data-index").toString());
                if (b == 37) {
                    if (al == 0) {
                        var am = this.d._inner[11];
                        this.ae(am);
                        this.r();
                    }
                    else {
                        var an = this.d._inner[al - 1];
                        this.ae(an);
                        this.r();
                    }
                }
                else if (b == 39) {
                    if (al == 11) {
                        var ao = this.d._inner[0];
                        this.ae(ao);
                        this.r();
                    }
                    else {
                        var ap = this.d._inner[al + 1];
                        this.ae(ap);
                        this.r();
                    }
                }
                else if (b == 40) {
                    if (al >= 9) {
                        var aq = this.d._inner[al - 9];
                        this.ae(aq);
                        this.r();
                    }
                    else {
                        var ar = this.d._inner[al + 3];
                        this.ae(ar);
                        this.r();
                    }
                }
                else if (b == 38) {
                    if (al <= 2) {
                        var as = this.d._inner[al + 9];
                        this.ae(as);
                        this.r();
                    }
                    else {
                        var at = this.d._inner[al - 3];
                        this.ae(at);
                        this.r();
                    }
                }
                else if (b == 13) {
                    this.ae(this.c._inner[1]);
                    this.r();
                }
            }
            else if (this.l == "year") {
                var au = parseInt(this.h.getAttribute("data-index").toString());
                if (b == 40) {
                    this.a.a9(this.e, 1);
                }
                else if (b == 38) {
                    this.a.a9(this.e, -1);
                }
                else if (b == 13) {
                    this.ae(this.c._inner[2]);
                    this.r();
                }
            }
            if (b == 27) {
                this.ab();
                this.a.a2();
            }
        };
        CalendarView.prototype.k = function (a, b) {
            var c = null;
            for (var d = 0; d < 42; d++) {
                var e = this.b._inner[d];
                var f = e.getAttribute("data-day").toString();
                var g = e.getAttribute("data-month").toString();
                if (b == g && a == f) {
                    c = e;
                    break;
                }
            }
            return c;
        };
        CalendarView.prototype.z = function (a) {
            this.aa();
        };
        CalendarView.prototype.u = function (a) {
            this.v();
        };
        CalendarView.prototype.t = function (a) {
            this.al();
        };
        CalendarView.prototype.ap = function (a) {
            this.am();
        };
        CalendarView.prototype.q = function (e_) {
            var a = (e_.originalEvent.currentTarget);
            var b = a.innerText;
            var c = a.lastChild.lastChild.lastChild;
            var d = c.getAttribute("data-month").toString();
            var e = c.getAttribute("data-year").toString();
            if (b != "") {
                this.a.ay(b, d, e);
            }
        };
        CalendarView.prototype.s = function (e_) {
            var a = (e_.originalEvent.currentTarget);
            var b = a.getAttribute("data-month").toString();
            if (b != "") {
                this.a.aq(parseInt(b));
                this.ab();
            }
        };
        CalendarView.prototype.an = function (e_) {
            var a = (e_.originalEvent.currentTarget);
            var b = a.innerText;
            if (b != "") {
                this.a.ar(parseInt(b));
                this.ab();
            }
        };
        CalendarView.prototype.ao = function (e_) {
            var a = (e_.originalEvent.deltaY);
            this.a.a9(this.e, a);
        };
        CalendarView.prototype.w = function () {
        };
        CalendarView.$t = igniteuiReactCore.markType(CalendarView, 'CalendarView');
        return CalendarView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Calendar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Calendar, _super);
        function Calendar() {
            var _this = _super.call(this) || this;
            _this.h = null;
            _this.s = igniteuiReactCore.dateNow();
            _this.t = igniteuiReactCore.dateNow();
            _this.r = new Date();
            _this.n = null;
            _this.o = null;
            _this.m = null;
            _this.p = null;
            _this.q = null;
            _this.propertyChanged = null;
            _this.close = null;
            _this.valueChanged = null;
            _this.w = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, null);
            _this.c = 3;
            _this.a = 1;
            _this.bm = igniteuiReactCore.BrushUtil.g(0, 255, 255, 255);
            _this.br = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
            _this.bt = igniteuiReactCore.BrushUtil.g(255, 21, 112, 184);
            _this.bo = igniteuiReactCore.BrushUtil.g(76, 33, 150, 243);
            _this.bq = igniteuiReactCore.BrushUtil.g(50, 186, 191, 199);
            _this.bu = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
            _this.bs = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
            _this.bp = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
            _this.bn = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
            _this.k = null;
            _this.r = igniteuiReactCore.dateAddYears(_this.r, -200);
            _this.n = new igniteuiReactCore.ObservableCollection$1(DayInfo.$, 0);
            _this.o = new igniteuiReactCore.ObservableCollection$1(Button.$, 0);
            _this.m = new igniteuiReactCore.ObservableCollection$1(Button.$, 0);
            _this.p = new igniteuiReactCore.ObservableCollection$1(Button.$, 0);
            _this.q = new igniteuiReactCore.ObservableCollection$1(Button.$, 0);
            var a = new CalendarView();
            a.a = _this;
            _this.h = a;
            _this.h.y();
            return _this;
        }
        Calendar.prototype.a2 = function () {
            if (this.close != null) {
                this.close(this);
            }
        };
        Calendar.prototype.a4 = function (a) {
            var b = this.w;
            this.w = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, a);
            if (this.valueChanged != null) {
                this.valueChanged(this, ((function () {
                    var $ret = new ValueChangedEventArgs();
                    $ret.oldValue = b.value;
                    $ret.newValue = a;
                    return $ret;
                })()));
            }
            if (igniteuiReactCore.nullableNotEquals(this.w, null)) {
                this.s = this.w.value;
            }
            this.a7();
        };
        Calendar.prototype.ay = function (a, b, c) {
            var d = igniteuiReactCore.dateFromValues(parseInt(c), parseInt(b), parseInt(a), 0, 0, 0, 0);
            this.a4(d);
        };
        Calendar.prototype.notifySizeChanged = function () {
            this.h.w();
        };
        Calendar.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Calendar.prototype.provideContainer = function (a) {
            this.h.x(a);
        };
        Object.defineProperty(Calendar.prototype, "u", {
            get: function () {
                return this.w.value;
            },
            set: function (a) {
                var b = this.w;
                this.w = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, a);
                if (igniteuiReactCore.nullableNotEquals(b, this.w)) {
                    this.a3("Value", igniteuiReactCore.unwrapNullable(b), igniteuiReactCore.unwrapNullable(this.w));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "d", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.a3("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.c));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.a3("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, this.a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "bv", {
            get: function () {
                return this.bm;
            },
            set: function (a) {
                var b = this.bm;
                this.bm = a;
                if (b != this.bm) {
                    this.a3("BackgroundColor", b, this.bm);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "b0", {
            get: function () {
                return this.br;
            },
            set: function (a) {
                var b = this.br;
                this.br = a;
                if (b != this.br) {
                    this.a3("SelectedDateBackgroundColor", b, this.br);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "b2", {
            get: function () {
                return this.bt;
            },
            set: function (a) {
                var b = this.bt;
                this.bt = a;
                if (b != this.bt) {
                    this.a3("SelectedFocusDateBackgroundColor", b, this.bt);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "bx", {
            get: function () {
                return this.bo;
            },
            set: function (a) {
                var b = this.bo;
                this.bo = a;
                if (b != this.bo) {
                    this.a3("FocusDateBackgroundColor", b, this.bo);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "bz", {
            get: function () {
                return this.bq;
            },
            set: function (a) {
                var b = this.bq;
                this.bq = a;
                if (b != this.bq) {
                    this.a3("HoverBackgroundColor", b, this.bq);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "b3", {
            get: function () {
                return this.bu;
            },
            set: function (a) {
                var b = this.bu;
                this.bu = a;
                if (b != this.bu) {
                    this.a3("TextColor", b, this.bu);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "b1", {
            get: function () {
                return this.bs;
            },
            set: function (a) {
                var b = this.bs;
                this.bs = a;
                if (b != this.bs) {
                    this.a3("SelectedDateTextColor", b, this.bs);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "by", {
            get: function () {
                return this.bp;
            },
            set: function (a) {
                var b = this.bp;
                this.bp = a;
                if (b != this.bp) {
                    this.a3("FocusDateTextColor", b, this.bp);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "bw", {
            get: function () {
                return this.bn;
            },
            set: function (a) {
                var b = this.bn;
                this.bn = a;
                if (b != this.bn) {
                    this.a3("CurrentDateTextColor", b, this.bn);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Calendar.prototype, "l", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                this.k = a;
                if (b != this.k) {
                    this.a3("TextStyle", b, this.k);
                }
            },
            enumerable: true,
            configurable: true
        });
        Calendar.prototype.a3 = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.a5(a, b, c);
        };
        Calendar.prototype.a5 = function (a, b, c) {
            switch (a) {
                case "Density":
                    this.ba();
                    break;
                case "BaseTheme":
                    this.bc();
                    break;
                case "Value":
                    if (igniteuiReactCore.nullableNotEquals(this.w, null)) {
                        this.s = this.w.value;
                    }
                    this.a7();
                    break;
                case "TextColor":
                case "SelectedDateTextColor":
                case "FocusDateTextColor":
                case "CurrentDateTextColor":
                case "BackgroundColor":
                case "FocusDateBackgroundColor":
                case "SelectedFocusDateBackgroundColor":
                case "SelectedDateBackgroundColor":
                case "HoverBackgroundColor":
                    this.bk();
                    break;
                case "TextStyle":
                    this.bl();
                    break;
            }
        };
        Calendar.prototype.bk = function () {
            for (var a = 0; a < this.o.count; a++) {
                if (this.b3 != null) {
                    this.o._inner[a].s4 = this.b3;
                }
                if (this.by != null) {
                    this.o._inner[a].s0 = this.by;
                }
                if (this.bv != null) {
                    this.o._inner[a].su = this.bv;
                }
                if (this.bx != null) {
                    this.o._inner[a].sz = this.bx;
                }
                if (this.bz != null) {
                    this.o._inner[a].s1 = this.bz;
                }
            }
            for (var b = 0; b < this.m.count; b++) {
                if (this.b3 != null) {
                    this.m._inner[b].s4 = this.b3;
                }
                if (this.by != null) {
                    this.m._inner[b].s0 = this.by;
                }
                if (this.bv != null) {
                    this.m._inner[b].su = this.bv;
                }
                if (this.bx != null) {
                    this.m._inner[b].sz = this.bx;
                }
                if (this.bz != null) {
                    this.m._inner[b].s1 = this.bz;
                }
            }
            for (var c = 0; c < this.p.count; c++) {
                if (this.b3 != null) {
                    this.p._inner[c].s4 = this.b3;
                }
                if (this.by != null) {
                    this.p._inner[c].s0 = this.by;
                }
                if (this.bv != null) {
                    this.p._inner[c].su = this.bv;
                }
                if (this.bx != null) {
                    this.p._inner[c].sz = this.bx;
                }
                if (this.bz != null) {
                    this.p._inner[c].s1 = this.bz;
                }
            }
            for (var d = 0; d < this.q.count; d++) {
                if (this.b3 != null) {
                    this.q._inner[d].s4 = this.b3;
                }
                if (this.by != null) {
                    this.q._inner[d].s0 = this.by;
                }
                if (this.bv != null) {
                    this.q._inner[d].su = this.bv;
                }
                if (this.bx != null) {
                    this.q._inner[d].sz = this.bx;
                }
                if (this.bz != null) {
                    this.q._inner[d].s1 = this.bz;
                }
            }
        };
        Calendar.prototype.bl = function () {
            for (var a = 0; a < this.o.count; a++) {
                if (this.k != null) {
                    this.o._inner[a].v = this.k;
                }
            }
            for (var b = 0; b < this.m.count; b++) {
                if (this.k != null) {
                    this.m._inner[b].v = this.k;
                }
            }
            for (var c = 0; c < this.p.count; c++) {
                if (this.k != null) {
                    this.p._inner[c].v = this.k;
                }
            }
            for (var d = 0; d < this.q.count; d++) {
                if (this.k != null) {
                    this.q._inner[d].v = this.k;
                }
            }
        };
        Calendar.prototype.a0 = function () {
            this.h.ad();
            this.h.r();
        };
        Calendar.prototype.bc = function () {
        };
        Calendar.prototype.ba = function () {
        };
        Calendar.prototype.as = function () {
        };
        Calendar.prototype.ax = function () {
            this.w = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, null);
            this.h.ac();
        };
        Calendar.prototype.a7 = function () {
            this.au();
            this.h.ag();
            this.h.ak();
            this.h.ac();
        };
        Calendar.prototype.at = function (a, b, c) {
            var d = a.createElement("div");
            d.setStyleProperty("height", "14%");
            d.setStyleProperty("display", "flex");
            d.setStyleProperty("justify-content", "space-evenly");
            var e = a.createElement("div");
            e.setStyleProperty("width", "15%");
            var f = a.createElement("div");
            f.setStyleProperty("width", "20%");
            var g = a.createElement("div");
            g.setStyleProperty("width", "20%");
            var h = a.createElement("div");
            h.setStyleProperty("width", "15%");
            d.append(e);
            d.append(f);
            d.append(g);
            d.append(h);
            b.append(d);
            var i = 0;
            for (var j = 0; j < 7; j++) {
                var k = a.createElement("div");
                k.setStyleProperty("display", "flex");
                k.setStyleProperty("justify-content", "space-evenly");
                if (j == 0) {
                    k.setStyleProperty("height", "10%");
                    for (var l = 0; l < 7; l++) {
                        var m = a.createElement("div");
                        m.setStyleProperty("text-align", "center");
                        m.setStyleProperty("vertical-align", "middle");
                        m.setStyleProperty("width", "12%");
                        var n = a.createElement("span");
                        n.setStyleProperty("font", "16px \"Segoe UI\", Verdana");
                        n.setStyleProperty("color", "rgb(24, 29, 31)");
                        m.append(n);
                        k.append(m);
                    }
                }
                else {
                    k.setStyleProperty("height", "12%");
                    for (var o = 0; o < 7; o++) {
                        var p = a.createElement("div");
                        p.setStyleProperty("justify-content", "center");
                        var q = c._inner[i];
                        var r = this.g(a, p, q);
                        r.bh = 30;
                        r.bg = 30;
                        this.m.add(r);
                        r.ig = "btnDays" + o.toString();
                        p.setStyleProperty("width", "12%");
                        p.setStyleProperty("height", "100%");
                        k.append(p);
                        i++;
                    }
                }
                b.append(k);
            }
            this.au();
        };
        Calendar.prototype.av = function (a, b, c) {
            b.setStyleProperty("display", "flex");
            b.setStyleProperty("flex-direction", "row");
            b.setStyleProperty("flex-wrap", "wrap");
            b.setStyleProperty("margin", "2px");
            b.setStyleProperty("justify-content", "center");
            for (var d = 0; d < 12; d++) {
                var e = a.createElement("div");
                e.setStyleProperty("margin", "5px");
                e.setAttribute("data-month", (d + 1).toString());
                var f = c._inner[d];
                var g = this.g(a, e, f);
                g.bh = 40;
                this.p.add(g);
                e.setStyleProperty("width", "28%");
                var h = e.getChildAt(0);
                h.setStyleProperty("width", "100%");
                var i = f.getChildAt(0);
                var j = "";
                var k = d + 1;
                switch (k) {
                    case 1:
                        j = "Jan";
                        break;
                    case 2:
                        j = "Feb";
                        break;
                    case 3:
                        j = "Mar";
                        break;
                    case 4:
                        j = "Apr";
                        break;
                    case 5:
                        j = "May";
                        break;
                    case 6:
                        j = "Jun";
                        break;
                    case 7:
                        j = "Jul";
                        break;
                    case 8:
                        j = "Aug";
                        break;
                    case 9:
                        j = "Sep";
                        break;
                    case 10:
                        j = "Oct";
                        break;
                    case 11:
                        j = "Nov";
                        break;
                    case 12:
                        j = "Dec";
                        break;
                }
                g.ig = "btnMonth" + j;
                i.setText(j);
                f.setAttribute("data-index", d.toString());
                f.append(i);
                b.append(e);
            }
        };
        Calendar.prototype.aw = function (a, b, c) {
            var d = this.s.getFullYear() - 3;
            b.setStyleProperty("padding", "5px");
            for (var e = 0; e < 7; e++) {
                var f = a.createElement("div");
                var g = c._inner[e];
                var h = this.g(a, f, g);
                this.q.add(h);
                f.setStyleProperty("width", "100%");
                f.setStyleProperty("height", "14%");
                f.setStyleProperty("justify-content", "center");
                var i = f.getChildAt(0);
                i.setStyleProperty("width", "98%");
                var j = g.getChildAt(0);
                h.ig = "btnYear" + e.toString();
                j.setText(d.toString());
                d++;
                g.setAttribute("data-index", e.toString());
                g.append(j);
                b.append(f);
            }
        };
        Calendar.prototype.au = function () {
            this.n.clear();
            var a = igniteuiReactCore.dateAddDays(this.s, -(this.s.getDate() - 1));
            var b = a.getDay();
            a = igniteuiReactCore.dateAddDays(a, -b);
            while (this.n.count < 42) {
                var c = new DayInfo();
                c.b = a.getDate();
                c.c = igniteuiReactCore.dateGetMonth(a);
                c.d = a.getFullYear();
                c.a = a.getDay();
                this.n.add(c);
                a = igniteuiReactCore.dateAddDays(a, 1);
            }
        };
        Calendar.prototype.be = function (a, b, c) {
            var d = b.getChildAt(0);
            var e = c._inner[0];
            var f = this.f(a, d, e, Calendar.y);
            f.bh = 28;
            f.bg = 28;
            f.ig = "btnPrev";
            this.o.add(f);
            e.setAttribute("data-section", "header");
            e.setAttribute("data-index", "0");
            var g = b.getChildAt(1);
            var h = c._inner[1];
            var i = this.g(a, g, h);
            i.bh = 40;
            i.ig = "btnMonth";
            this.o.add(i);
            h.setAttribute("data-section", "header");
            h.setAttribute("data-index", "1");
            this.bb(h);
            var j = b.getChildAt(2);
            var k = c._inner[2];
            var l = this.g(a, j, k);
            l.bh = 40;
            l.ig = "btnYear";
            this.o.add(l);
            k.setAttribute("data-section", "header");
            k.setAttribute("data-index", "2");
            this.bj(k);
            var m = b.getChildAt(3);
            var n = c._inner[3];
            var o = this.f(a, m, n, Calendar.z);
            o.bh = 28;
            o.bg = 28;
            o.ig = "btnNext";
            this.o.add(o);
            n.setAttribute("data-section", "header");
            n.setAttribute("data-index", "3");
        };
        Calendar.prototype.bb = function (a) {
            var b = a.getChildAt(0);
            var c = igniteuiReactCore.dateGetMonth(this.s);
            var d = "";
            switch (c) {
                case 1:
                    d = "Jan";
                    break;
                case 2:
                    d = "Feb";
                    break;
                case 3:
                    d = "Mar";
                    break;
                case 4:
                    d = "Apr";
                    break;
                case 5:
                    d = "May";
                    break;
                case 6:
                    d = "Jun";
                    break;
                case 7:
                    d = "Jul";
                    break;
                case 8:
                    d = "Aug";
                    break;
                case 9:
                    d = "Sep";
                    break;
                case 10:
                    d = "Oct";
                    break;
                case 11:
                    d = "Nov";
                    break;
                case 12:
                    d = "Dec";
                    break;
            }
            b.setText(d);
        };
        Calendar.prototype.bj = function (a) {
            var b = a.getChildAt(0);
            var c = this.s.getFullYear().toString();
            b.setText(c);
        };
        Calendar.prototype.bg = function (a) {
            var b = a.getChildAt(0);
            var c = b.getChildAt(0);
            c.setText("S");
            b.append(c);
            var d = a.getChildAt(1);
            var e = d.getChildAt(0);
            e.setText("M");
            d.append(e);
            var f = a.getChildAt(2);
            var g = f.getChildAt(0);
            g.setText("T");
            f.append(g);
            var h = a.getChildAt(3);
            var i = h.getChildAt(0);
            i.setText("W");
            h.append(i);
            var j = a.getChildAt(4);
            var k = j.getChildAt(0);
            k.setText("T");
            j.append(k);
            var l = a.getChildAt(5);
            var m = l.getChildAt(0);
            m.setText("F");
            l.append(m);
            var n = a.getChildAt(6);
            var o = n.getChildAt(0);
            o.setText("S");
            n.append(o);
        };
        Calendar.prototype.bd = function (a, b) {
            if (b === void 0) {
                b = false;
            }
            var c = null;
            var d = null;
            var e = null;
            for (var f = 0; f < 42; f++) {
                var g = a._inner[f];
                var h = g.getChildAt(0);
                var i = this.n._inner[f];
                var j = this.m._inner[f];
                if (i != null) {
                    g.setAttribute("data-section", "days");
                    g.setAttribute("data-index", f.toString());
                    g.setAttribute("data-day", i.b.toString());
                    g.setAttribute("data-month", i.c.toString());
                    g.setAttribute("data-year", i.d.toString());
                    h.setText(i.b.toString());
                    if (igniteuiReactCore.nullableNotEquals(this.w, null) && i.b == this.w.value.getDate() && i.c == igniteuiReactCore.dateGetMonth(this.w.value) && i.d == this.w.value.getFullYear()) {
                        j.s4 = this.b1;
                        j.s0 = this.b1;
                        j.su = this.b0;
                        j.sz = this.b2;
                        j.sv = this.bv;
                        c = g;
                    }
                    else if (i.b == this.t.getDate() && i.c == igniteuiReactCore.dateGetMonth(this.t) && i.d == this.t.getFullYear()) {
                        j.s4 = this.bw;
                        ;
                        j.s0 = this.by;
                        j.su = this.bv;
                        j.sz = this.bx;
                        j.sv = this.bw;
                        j.be = 1;
                        d = g;
                    }
                    else if (i.a != 0 && i.a != 6 && i.c == igniteuiReactCore.dateGetMonth(this.s)) {
                        j.s4 = this.b3;
                        j.s0 = this.by;
                        j.su = this.bv;
                        j.sz = this.bx;
                        j.sv = this.bv;
                    }
                    else {
                        j.s4 = this.b3;
                        j.s0 = this.by;
                        j.su = this.bv;
                        j.sz = this.bx;
                        j.sv = this.bv;
                    }
                    if (i.b == 1 && i.c == igniteuiReactCore.dateGetMonth(this.s)) {
                        e = g;
                    }
                }
            }
            if (b == true) {
                if (c != null && igniteuiReactCore.nullableNotEquals(this.w, null) && this.w.value.getFullYear() == this.s.getFullYear() && igniteuiReactCore.dateGetMonth(this.w.value) == igniteuiReactCore.dateGetMonth(this.s)) {
                    this.h.ae(c);
                }
                else if (d != null && this.t.getFullYear() == this.s.getFullYear() && igniteuiReactCore.dateGetMonth(this.t) == igniteuiReactCore.dateGetMonth(this.s)) {
                    this.h.ae(d);
                }
                else if (e != null) {
                    this.h.ae(e);
                }
            }
        };
        Calendar.prototype.bf = function (a) {
            var b = null;
            var c = null;
            for (var d = 0; d < 12; d++) {
                var e = a._inner[d];
                e.setAttribute("data-section", "months");
                if (igniteuiReactCore.nullableNotEquals(this.w, null) && igniteuiReactCore.dateGetMonth(this.w.value) == d + 1) {
                    c = e;
                }
                if (igniteuiReactCore.dateGetMonth(this.t) == d + 1) {
                    b = e;
                }
            }
            if (c != null) {
                this.h.ae(c);
            }
            else if (b != null) {
                this.h.ae(b);
            }
            else {
                this.h.ae(a._inner[0]);
            }
        };
        Calendar.prototype.bi = function (a) {
            this.bh(a, this.s.getFullYear(), true);
        };
        Calendar.prototype.bh = function (a, b, c) {
            if (c === void 0) {
                c = false;
            }
            var d = b - 3;
            for (var e = 0; e < 7; e++) {
                var f = a._inner[e];
                f.setAttribute("data-section", "years");
                var g = f.getChildAt(0);
                g.setText(d.toString());
                if (d == b && c) {
                    this.h.ae(f);
                }
                d++;
            }
        };
        Calendar.prototype.g = function (a, b, c) {
            var d = a.getSubRenderer(b);
            var e = new Button();
            e.provideContainer(d);
            e.d = this.b;
            e.h = this.d;
            e.v = this.k;
            e.eu = -1;
            e.s = 1;
            if (this.k != null) {
                e.v = this.k;
            }
            var f = a.createElement("span");
            var g = new igniteuiReactCore.CornerRadius(0, 2);
            e.kd = g;
            e.ku = g;
            e.ec = 0;
            c.append(f);
            e.appendButtonContent(c);
            e.s4 = this.b3;
            e.s0 = this.by;
            e.su = this.bv;
            e.sz = this.bx;
            e.s1 = this.bz;
            return e;
        };
        Calendar.prototype.f = function (a, b, c, d) {
            var e = a.getSubRenderer(b);
            var f = new Button();
            f.provideContainer(e);
            f.d = this.b;
            f.h = this.d;
            f.v = this.k;
            f.eu = -1;
            f.s = 1;
            var g = new igniteuiReactCore.CornerRadius(0, 2);
            f.kd = g;
            f.ku = g;
            f.ec = 0;
            var h = a.createElement("div");
            var i = a.getSubRenderer(h);
            var j = new Icon();
            j.provideContainer(i);
            j.svgPath = d;
            c.append(h);
            f.appendButtonContent(c);
            f.s4 = this.b3;
            f.s0 = this.by;
            f.su = this.bv;
            f.sz = this.bx;
            f.s1 = this.bz;
            return f;
        };
        Calendar.prototype.ap = function (a) {
            this.s = igniteuiReactCore.dateAddMonths(this.s, a);
            this.au();
        };
        Calendar.prototype.aq = function (a) {
            this.s = igniteuiReactCore.dateFromValues(this.s.getFullYear(), a, this.s.getDate(), 0, 0, 0, 0);
            this.au();
        };
        Calendar.prototype.ar = function (a) {
            this.s = igniteuiReactCore.dateFromValues(a, igniteuiReactCore.dateGetMonth(this.s), this.s.getDate(), 0, 0, 0, 0);
            this.au();
        };
        Calendar.prototype.a9 = function (a, b) {
            var c = parseInt(a._inner[3].getChildAt(0).getText());
            if (b < 0) {
                c--;
            }
            else {
                c++;
            }
            this.bh(a, c);
        };
        Calendar.prototype.a8 = function () {
            this.h.ab();
        };
        Calendar.prototype.x = function () {
            return this.e();
        };
        Calendar.prototype.af = function () {
            var a = this.e();
            return a.l();
        };
        Calendar.prototype.e = function () {
            var a = new CalendarVisualModelExport();
            a.h = this.d;
            a.g = this.b;
            a.d = igniteuiReactCore.AppearanceHelper.a(this.b0);
            a.f = igniteuiReactCore.AppearanceHelper.a(this.b2);
            a.b = igniteuiReactCore.AppearanceHelper.a(this.bx);
            a.e = igniteuiReactCore.AppearanceHelper.a(this.b1);
            a.c = igniteuiReactCore.AppearanceHelper.a(this.by);
            a.a = igniteuiReactCore.AppearanceHelper.a(this.bw);
            a.i = new igniteuiReactCore.List$1(ButtonVisualModelExport.$, 0);
            var b = this.h.m();
            a.k = b;
            if (b == "day") {
                for (var c = 0; c < this.o.count; c++) {
                    if (this.o._inner[c].ig == null) {
                        this.o._inner[c].ig = "header" + c.toString();
                    }
                    a.i.add1(this.o._inner[c].ey());
                }
                for (var d = 0; d < this.m.count; d++) {
                    if (this.m._inner[d].ig == null) {
                        this.m._inner[d].ig = "days" + d.toString();
                    }
                    a.i.add1(this.m._inner[d].ey());
                }
            }
            else if (b == "month") {
                for (var e = 0; e < this.p.count; e++) {
                    if (this.p._inner[e].ig == null) {
                        this.p._inner[e].ig = "months" + e.toString();
                    }
                    a.i.add1(this.p._inner[e].ey());
                }
            }
            else if (b == "year") {
                for (var f = 0; f < this.q.count; f++) {
                    if (this.q._inner[f].ig == null) {
                        this.q._inner[f].ig = "years" + f.toString();
                    }
                    a.i.add1(this.q._inner[f].ey());
                }
            }
            if (this.l != null) {
                var g = this.l;
                if (this.h != null && g.n == null) {
                    var h = this.h.f;
                    var i = igniteuiReactCore.FontUtil.getFontInfoFromString(h, g.fontString);
                    g.n = i.n;
                    g.d = i.d;
                    g.o = i.o;
                    g.q = i.q;
                    g.r = i.r;
                    g.s = i.s;
                }
                if (g.n != null) {
                    a.m = g.n;
                }
                if (!igniteuiReactCore.isNaN_(g.d)) {
                    a.j = g.d;
                }
                if (g.s != null) {
                    a.q = g.s;
                }
                if (g.q != null) {
                    a.o = g.q;
                }
                if (g.o != null) {
                    a.n = g.q;
                }
            }
            return a;
        };
        Calendar.$t = igniteuiReactCore.markType(Calendar, 'Calendar', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        Calendar.y = "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z";
        Calendar.z = "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z";
        return Calendar;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrValueChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrValueChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrValueChangedEventArgs.prototype.createImplementation = function () {
            return new ValueChangedEventArgs();
        };
        Object.defineProperty(IgrValueChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrValueChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrValueChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrValueChangedEventArgs.prototype, "oldValue", {
            get: function () {
                return this.i.oldValue;
            },
            set: function (v) {
                this.i.oldValue = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrValueChangedEventArgs.prototype, "newValue", {
            get: function () {
                return this.i.newValue;
            },
            set: function (v) {
                this.i.newValue = v;
            },
            enumerable: true,
            configurable: true
        });
        return IgrValueChangedEventArgs;
    }());

    var IgrCalendar = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrCalendar, _super);
        function IgrCalendar(props) {
            var _this = _super.call(this, props) || this;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._valueChanged = null;
            _this._valueChanged_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._implementation = _this.createImplementation();
            var calendar = _this.i;
            _this._calendar = calendar;
            calendar.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrCalendar.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._calendar.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._calendar.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrCalendar.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            if (this._elRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._calendar.provideContainer(this._renderer);
            }
        };
        IgrCalendar.prototype.render = function () {
            var children = [];
            var div = React.createElement("div", {
                className: "ig-calendar igr-calendar",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrCalendar.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrCalendar.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrCalendar.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrCalendar.prototype.componentWillUnmount = function () {
            this._calendar.destroy();
            if (this._renderer) {
                this._renderer.destroy();
            }
        };
        IgrCalendar.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this._calendar.notifySizeChanged();
            this.initializeContent();
        };
        IgrCalendar.prototype.initializeContent = function () {
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrCalendar.prototype.createImplementation = function () {
            return new Calendar();
        };
        Object.defineProperty(IgrCalendar.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "value", {
            /**
         * Gets or Sets the value for the calendar.
        */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "density", {
            /**
             * Gets or sets the display density to use for the calendar.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "baseTheme", {
            /**
             * Gets or sets the base built in theme to use for the calendar.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "backgroundColor", {
            /**
             * Gets or Sets the selected date background color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bv);
            },
            set: function (v) {
                this.i.bv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "selectedDateBackgroundColor", {
            /**
             * Gets or Sets the selected date background color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.b0);
            },
            set: function (v) {
                this.i.b0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "selectedFocusDateBackgroundColor", {
            /**
             * Gets or Sets the selected date background color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.b2);
            },
            set: function (v) {
                this.i.b2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "focusDateBackgroundColor", {
            /**
             * Gets or Sets the focus date background color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bx);
            },
            set: function (v) {
                this.i.bx = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "hoverBackgroundColor", {
            /**
             * Gets or Sets the focus date background color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bz);
            },
            set: function (v) {
                this.i.bz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "textColor", {
            /**
             * Gets or Sets the selected date text color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.b3);
            },
            set: function (v) {
                this.i.b3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "selectedDateTextColor", {
            /**
             * Gets or Sets the selected date text color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.b1);
            },
            set: function (v) {
                this.i.b1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "focusDateTextColor", {
            /**
             * Gets or Sets the focus date text color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.by);
            },
            set: function (v) {
                this.i.by = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "currentDateTextColor", {
            /**
             * Gets or Sets the current date text color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bw);
            },
            set: function (v) {
                this.i.bw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "textStyle", {
            /**
             * Gets or sets the font to use for the combobox.
            */
            get: function () {
                if (this.i.l == null) {
                    return null;
                }
                return this.i.l.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.l = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCalendar.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrCalendar.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCalendar.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Calendar");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        /**
     * Exports visual information about the current state of the grid.

    */
        IgrCalendar.prototype.exportVisualModel = function () {
            var iv = this.i.x();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrCalendar.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.af();
            return (iv);
        };
        Object.defineProperty(IgrCalendar.prototype, "valueChanged", {
            /**
             * Called when date is selected.
            */
            get: function () {
                return this._valueChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._valueChanged_wrapped !== null) {
                    this.i.valueChanged = igniteuiReactCore.delegateRemove(this.i.valueChanged, this._valueChanged_wrapped);
                    this._valueChanged_wrapped = null;
                    this._valueChanged = null;
                }
                this._valueChanged = ev;
                this._valueChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeValueChanged) {
                        _this.beforeValueChanged(_this, outerArgs);
                    }
                    if (_this._valueChanged) {
                        _this._valueChanged(_this, outerArgs);
                    }
                };
                this.i.valueChanged = igniteuiReactCore.delegateCombine(this.i.valueChanged, this._valueChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrCalendar;
    }(React.Component));

    var IgrRipple = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrRipple, _super);
        function IgrRipple(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            if (document) {
                _this._container = document.createElement("div");
                _this._container.style.display = "block";
            }
            var root;
            root = _this._container;
            if (_this._container != null) {
                root = _this._container;
            }
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {});
            _this._wrapper = ren;
            var ripple = _this.i;
            _this._ripple = ripple;
            ripple.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrRipple.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.width = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "top", {
            get: function () {
                return this._top;
            },
            set: function (value) {
                this._top = value;
                if (this._elRef) {
                    this._elRef.style.top = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "left", {
            get: function () {
                return this._left;
            },
            set: function (value) {
                this._left = value;
                if (this._elRef) {
                    this._elRef.style.left = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "position", {
            get: function () {
                return this._position;
            },
            set: function (value) {
                this._position = value;
                if (this._elRef) {
                    this._elRef.style.position = value;
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrRipple.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrRipple.prototype.render = function () {
            var div = React.createElement("div", {
                className: "ig-ripple igr-ripple",
                ref: this._getMainRef
            });
            //}
            return div;
        };
        IgrRipple.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrRipple.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrRipple.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrRipple.prototype.componentWillUnmount = function () {
            this._ripple.destroy();
            this._wrapper.destroy();
        };
        IgrRipple.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container);
            this.initializeContent();
        };
        IgrRipple.prototype.initializeContent = function () {
            this._styling(this._container, this);
            this.updateStyle();
        };
        IgrRipple.prototype.createImplementation = function () {
            return new Ripple();
        };
        Object.defineProperty(IgrRipple.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "eventSource", {
            /**
         * Gets or sets the target element to inject ripples into.
        */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "rippleColor", {
            /**
             * Gets or sets the color to use for the background when the checkbox is unchecked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ax);
            },
            set: function (v) {
                this.i.ax = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "hoverColor", {
            /**
             * Gets or sets the color to use for the background when the ripple is hovered.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.aw);
            },
            set: function (v) {
                this.i.aw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "actualHoverColor", {
            /**
             * Gets or sets the actual color to use for the background when the ripple is hovered.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.as);
            },
            set: function (v) {
                this.i.as = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "actualRippleColor", {
            /**
             * Gets or sets the color to use for the actual background when the checkbox is unchecked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.at);
            },
            set: function (v) {
                this.i.at = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "rippleDuration", {
            /**
             * Gets or sets the duration to use for the ripple animation.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "isDisabled", {
            /**
             * Gets or sets if the ripple is disabled.
            */
            get: function () {
                return this.i.i;
            },
            set: function (v) {
                this.i.i = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "isCentered", {
            /**
             * Gets or sets if the ripple is centered.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrRipple.prototype, "isHoverEnabled", {
            /**
             * Gets or sets if the ripple is centered.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrRipple.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrRipple.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrRipple.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrRipple.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Ripple");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrRipple.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrRipple.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrRipple.prototype.exportVisualModel = function () {
            var iv = this.i.r();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrRipple.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.v();
            return (iv);
        };
        return IgrRipple;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrRippleModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrRippleModule() {
        }
        IgrRippleModule.register = function () {
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRipple', IgrRipple);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrRipple', IgrRipple);
            igniteuiReactCore.TypeRegistrar.register('Ripple', Ripple.$type);
        };
        return IgrRippleModule;
    }());

    var IgrButtonClickEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrButtonClickEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrButtonClickEventArgs.prototype.createImplementation = function () {
            return new ButtonClickEventArgs();
        };
        Object.defineProperty(IgrButtonClickEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrButtonClickEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrButtonClickEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrButtonClickEventArgs;
    }());

    var IgrButton = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrButton, _super);
        function IgrButton(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._clicked = null;
            _this._clicked_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("buttonContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            var button = _this.i;
            _this._button = button;
            button.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrButton.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrButton.prototype.render = function () {
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-button igr-button",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrButton.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        IgrButton.prototype._onDisplayChanged = function () {
            this._container.setStyleProperty("display", this.display);
        };
        IgrButton.prototype._onFlexDirectionChanged = function () {
            this._container.setStyleProperty("flex-direction", this.flexDirection);
        };
        IgrButton.prototype._onFlexGrowChanged = function () {
            this._container.setStyleProperty("flex-grow", this.flexGrow);
        };
        IgrButton.prototype._onAlignItemsChanged = function () {
            this._container.setStyleProperty("align-items", this.alignItems);
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrButton.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrButton.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrButton.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrButton.prototype.componentWillUnmount = function () {
            this._button.destroy();
            this._wrapper.destroy();
        };
        IgrButton.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrButton.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrButton.prototype.createImplementation = function () {
            return new Button();
        };
        Object.defineProperty(IgrButton.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: true,
            configurable: true
        });
        IgrButton._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        Object.defineProperty(IgrButton.prototype, "minWidth", {
            /**
         * Gets or sets the min width to use for the button.
        */
            get: function () {
                return this.i.bh;
            },
            set: function (v) {
                this.i.bh = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "minHeight", {
            /**
             * Gets or sets the min height to use for the button.
            */
            get: function () {
                return this.i.bg;
            },
            set: function (v) {
                this.i.bg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "displayType", {
            /**
             * Gets or sets the display style to use for the button.
            */
            get: function () {
                return this.i.s;
            },
            set: function (v) {
                this.i.s = igniteuiReactCore.ensureEnum(ButtonDisplayStyle_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "density", {
            /**
             * Gets or sets the display density to use for the button.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "baseTheme", {
            /**
             * Gets or sets the base built in theme to use for the button.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualDensity", {
            /**
             * Gets the actual display density to use for the label.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualBorderColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.m8);
            },
            set: function (v) {
                this.i.m8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualUmbraShadowColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nj);
            },
            set: function (v) {
                this.i.nj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualPenumbraShadowColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ng);
            },
            set: function (v) {
                this.i.ng = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualAmbientShadowColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.m6);
            },
            set: function (v) {
                this.i.m6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualRestingElevation", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return this.i.cg;
            },
            set: function (v) {
                this.i.cg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualFocusElevation", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return this.i.ce;
            },
            set: function (v) {
                this.i.ce = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualHoverElevation", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return this.i.cf;
            },
            set: function (v) {
                this.i.cf = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualRippleColor", {
            /**
             * Gets or sets the color to use for the ripple when the button is pressed.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nh);
            },
            set: function (v) {
                this.i.nh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualCornerRadiusBottomRight", {
            get: function () {
                return this.i.kb ? this.i.kb.b : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.kb.b = +v;
                this.i.kb = this.i.kb;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualCornerRadiusBottomLeft", {
            get: function () {
                return this.i.kb ? this.i.kb.a : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.kb.a = +v;
                this.i.kb = this.i.kb;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualCornerRadiusTopLeft", {
            get: function () {
                return this.i.kb ? this.i.kb.c : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.kb.c = +v;
                this.i.kb = this.i.kb;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualCornerRadiusTopRight", {
            get: function () {
                return this.i.kb ? this.i.kb.d : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.kb.d = +v;
                this.i.kb = this.i.kb;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.ensureActualCornerRadius = function () {
            if (this.i.kb) {
                return;
            }
            this.i.kb = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrButton.prototype, "actualBackgroundColor", {
            /**
             * Gets the color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.m7);
            },
            set: function (v) {
                this.i.m7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualDisabledBackgroundColor", {
            /**
             * Gets the actual color to use for the disabled background of the button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.m9);
            },
            set: function (v) {
                this.i.m9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualDisabledBorderColor", {
            /**
             * Gets the actual color to use for the disabled border of the button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.na);
            },
            set: function (v) {
                this.i.na = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualDisabledTextColor", {
            /**
             * Gets the actual color to use for the disabled text of the button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nb);
            },
            set: function (v) {
                this.i.nb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualDisabledElevation", {
            /**
             * Gets the actual disabled elevation to use for the button.
            */
            get: function () {
                return this.i.cd;
            },
            set: function (v) {
                this.i.cd = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualElevationMode", {
            /**
             * Gets the actual disabled elevation to use for the button.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureEnum(igniteuiReactCore.ElevationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualTextColor", {
            /**
             * Gets the color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ni);
            },
            set: function (v) {
                this.i.ni = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualHoverTextColor", {
            /**
             * Gets the color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nf);
            },
            set: function (v) {
                this.i.nf = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualFocusBackgroundColor", {
            /**
             * Gets the color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nc);
            },
            set: function (v) {
                this.i.nc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualFocusTextColor", {
            /**
             * Gets the actual color to use for the focused text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nd);
            },
            set: function (v) {
                this.i.nd = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualHoverBackgroundColor", {
            /**
             * Gets the hover color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ne);
            },
            set: function (v) {
                this.i.ne = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualBorderWidth", {
            /**
             * Gets or sets the Width to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return this.i.aw;
            },
            set: function (v) {
                this.i.aw = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedBackgroundColor", {
            /**
             * Gets or sets the color to use for the background of the button when the  type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tv);
            },
            set: function (v) {
                this.i.tv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedDisabledBackgroundColor", {
            /**
             * Gets or sets the color to use for the disabled background of the button when the type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tx);
            },
            set: function (v) {
                this.i.tx = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedDisabledBorderColor", {
            /**
             * Gets or sets the color to use for the disabled border of the button when the type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ty);
            },
            set: function (v) {
                this.i.ty = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedDisabledTextColor", {
            /**
             * Gets or sets the color to use for the disabled text of the button when the type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tz);
            },
            set: function (v) {
                this.i.tz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedDisabledElevation", {
            /**
             * Gets or sets the disabled elevation to use for the button when the type is raised.
            */
            get: function () {
                return this.i.ep;
            },
            set: function (v) {
                this.i.ep = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedHoverBackgroundColor", {
            /**
             * Gets or sets the hover color to use for the background of the button when the  type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t2);
            },
            set: function (v) {
                this.i.t2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedBorderColor", {
            /**
             * Gets or sets the border color to use for the button when the type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tw);
            },
            set: function (v) {
                this.i.tw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedRestingElevation", {
            /**
             * Gets or sets the elevation to use for the button when the type is raised.
            */
            get: function () {
                return this.i.es;
            },
            set: function (v) {
                this.i.es = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedHoverElevation", {
            /**
             * Gets or sets the hover elevation to use for the button when the type is raised.
            */
            get: function () {
                return this.i.er;
            },
            set: function (v) {
                this.i.er = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedFocusElevation", {
            /**
             * Gets or sets the focus elevation to use for the button when the type is raised.
            */
            get: function () {
                return this.i.eq;
            },
            set: function (v) {
                this.i.eq = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedBorderWidth", {
            /**
             * Gets or sets the width to use for the button border when the type is raised.
            */
            get: function () {
                return this.i.bj;
            },
            set: function (v) {
                this.i.bj = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedCornerRadiusBottomRight", {
            get: function () {
                return this.i.kx ? this.i.kx.b : NaN;
            },
            set: function (v) {
                this.ensureRaisedCornerRadius();
                this.i.kx.b = +v;
                this.i.kx = this.i.kx;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedCornerRadiusBottomLeft", {
            get: function () {
                return this.i.kx ? this.i.kx.a : NaN;
            },
            set: function (v) {
                this.ensureRaisedCornerRadius();
                this.i.kx.a = +v;
                this.i.kx = this.i.kx;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedCornerRadiusTopLeft", {
            get: function () {
                return this.i.kx ? this.i.kx.c : NaN;
            },
            set: function (v) {
                this.ensureRaisedCornerRadius();
                this.i.kx.c = +v;
                this.i.kx = this.i.kx;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedCornerRadiusTopRight", {
            get: function () {
                return this.i.kx ? this.i.kx.d : NaN;
            },
            set: function (v) {
                this.ensureRaisedCornerRadius();
                this.i.kx.d = +v;
                this.i.kx = this.i.kx;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.ensureRaisedCornerRadius = function () {
            if (this.i.kx) {
                return;
            }
            this.i.kx = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrButton.prototype, "raisedRippleColor", {
            /**
             * Gets or sets the color to use for the background when the button is pressed and the type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t4);
            },
            set: function (v) {
                this.i.t4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatBackgroundColor", {
            /**
             * Gets or sets the color to use for the background of the button when the type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.su);
            },
            set: function (v) {
                this.i.su = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatDisabledBackgroundColor", {
            /**
             * Gets or sets the color to use for the disabled background of the button when the type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sw);
            },
            set: function (v) {
                this.i.sw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatDisabledBorderColor", {
            /**
             * Gets or sets the color to use for the disabled border of the button when the type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sx);
            },
            set: function (v) {
                this.i.sx = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatDisabledTextColor", {
            /**
             * Gets or sets the color to use for the disabled text of the button when the type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sy);
            },
            set: function (v) {
                this.i.sy = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatDisabledElevation", {
            /**
             * Gets or sets the disabled elevation to use for the button when the type is flat.
            */
            get: function () {
                return this.i.eb;
            },
            set: function (v) {
                this.i.eb = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatHoverBackgroundColor", {
            /**
             * Gets or sets the hover color to use for the background of the button when the type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s1);
            },
            set: function (v) {
                this.i.s1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatBorderColor", {
            /**
             * Gets or sets the border color to use for the button when the type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sv);
            },
            set: function (v) {
                this.i.sv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatRestingElevation", {
            /**
             * Gets or sets the elevation to use for the button when the type is flat.
            */
            get: function () {
                return this.i.ee;
            },
            set: function (v) {
                this.i.ee = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatHoverElevation", {
            /**
             * Gets or sets the hover elevation to use for the button when the type is flat.
            */
            get: function () {
                return this.i.ed;
            },
            set: function (v) {
                this.i.ed = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatFocusElevation", {
            /**
             * Gets or sets the focus elevation to use for the button when the type is flat.
            */
            get: function () {
                return this.i.ec;
            },
            set: function (v) {
                this.i.ec = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatRippleColor", {
            /**
             * Gets or sets the color to use for the background when the button is pressed and the type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s3);
            },
            set: function (v) {
                this.i.s3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatTextColor", {
            /**
             * Gets or sets the color to use for the text of the button when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s4);
            },
            set: function (v) {
                this.i.s4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatHoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s2);
            },
            set: function (v) {
                this.i.s2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatFocusBackgroundColor", {
            /**
             * Gets or sets the color to use for the backround the button when it is focused and flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sz);
            },
            set: function (v) {
                this.i.sz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatFocusTextColor", {
            /**
             * Gets or sets the color to use for the text the button when it is focused and flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s0);
            },
            set: function (v) {
                this.i.s0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatBorderWidth", {
            /**
             * Gets or sets the width to use for the button border when the type is flat.
            */
            get: function () {
                return this.i.be;
            },
            set: function (v) {
                this.i.be = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatCornerRadiusBottomRight", {
            get: function () {
                return this.i.ku ? this.i.ku.b : NaN;
            },
            set: function (v) {
                this.ensureFlatCornerRadius();
                this.i.ku.b = +v;
                this.i.ku = this.i.ku;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatCornerRadiusBottomLeft", {
            get: function () {
                return this.i.ku ? this.i.ku.a : NaN;
            },
            set: function (v) {
                this.ensureFlatCornerRadius();
                this.i.ku.a = +v;
                this.i.ku = this.i.ku;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatCornerRadiusTopLeft", {
            get: function () {
                return this.i.ku ? this.i.ku.c : NaN;
            },
            set: function (v) {
                this.ensureFlatCornerRadius();
                this.i.ku.c = +v;
                this.i.ku = this.i.ku;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flatCornerRadiusTopRight", {
            get: function () {
                return this.i.ku ? this.i.ku.d : NaN;
            },
            set: function (v) {
                this.ensureFlatCornerRadius();
                this.i.ku.d = +v;
                this.i.ku = this.i.ku;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.ensureFlatCornerRadius = function () {
            if (this.i.ku) {
                return;
            }
            this.i.ku = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrButton.prototype, "backgroundColor", {
            /**
             * Gets or sets the color to use for the background when the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nk);
            },
            set: function (v) {
                this.i.nk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "disabledBackgroundColor", {
            /**
             * Gets or sets the color to use for the disabled background of the button when the type is disabled.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sg);
            },
            set: function (v) {
                this.i.sg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "disabledBorderColor", {
            /**
             * Gets or sets the color to use for the disabled border of the button when the type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sh);
            },
            set: function (v) {
                this.i.sh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "disabledTextColor", {
            /**
             * Gets or sets the color to use for the disabled text of the button when the type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.si);
            },
            set: function (v) {
                this.i.si = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "disabledElevation", {
            /**
             * Gets or sets the disabled elevation to use for the button when the type is raised.
            */
            get: function () {
                return this.i.d6;
            },
            set: function (v) {
                this.i.d6 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "elevationMode", {
            /**
             * Gets or sets the disabled elevation to use for the button when the type is raised.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureEnum(igniteuiReactCore.ElevationMode_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "hoverBackgroundColor", {
            /**
             * Gets or sets the hover color to use for the background of the button when the  type is hovered.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s7);
            },
            set: function (v) {
                this.i.s7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "borderColor", {
            /**
             * Gets or sets the border color to use for the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.nl);
            },
            set: function (v) {
                this.i.nl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "restingElevation", {
            /**
             * Gets or sets the elevation to use for the button regardless of type.
            */
            get: function () {
                return this.i.et;
            },
            set: function (v) {
                this.i.et = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "hoverElevation", {
            /**
             * Gets or sets the hover elevation to use for the button regardless of type.
            */
            get: function () {
                return this.i.eg;
            },
            set: function (v) {
                this.i.eg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "focusElevation", {
            /**
             * Gets or sets the focus elevation to use for the button regardless of type.
            */
            get: function () {
                return this.i.ef;
            },
            set: function (v) {
                this.i.ef = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "textStyle", {
            /**
             * Gets or sets the use for the button.
            */
            get: function () {
                if (this.i.v == null) {
                    return null;
                }
                return this.i.v.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.v = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "textColor", {
            /**
             * Gets or sets the color to use for the text of the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t7);
            },
            set: function (v) {
                this.i.t7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "hoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s8);
            },
            set: function (v) {
                this.i.s8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "rippleColor", {
            /**
             * Gets or sets the color to use for the background of the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t6);
            },
            set: function (v) {
                this.i.t6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedTextColor", {
            /**
             * Gets or sets the color to use for the text of the button when type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t5);
            },
            set: function (v) {
                this.i.t5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedHoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button when type is raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t3);
            },
            set: function (v) {
                this.i.t3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedFocusBackgroundColor", {
            /**
             * Gets or sets the color to use for the backround the button when it is focused and raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t0);
            },
            set: function (v) {
                this.i.t0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "raisedFocusTextColor", {
            /**
             * Gets or sets the color to use for the text the button when it is focused and raised.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.t1);
            },
            set: function (v) {
                this.i.t1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "focusBackgroundColor", {
            /**
             * Gets or sets the color to use for the backround the button when it is focused.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s5);
            },
            set: function (v) {
                this.i.s5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "focusTextColor", {
            /**
             * Gets or sets the color to use for the text of the button when it is focused.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s6);
            },
            set: function (v) {
                this.i.s6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "borderWidth", {
            /**
             * Gets or sets the width to use for the button border regardless of type.
            */
            get: function () {
                return this.i.ax;
            },
            set: function (v) {
                this.i.ax = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "cornerRadiusBottomRight", {
            get: function () {
                return this.i.kd ? this.i.kd.b : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.kd.b = +v;
                this.i.kd = this.i.kd;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "cornerRadiusBottomLeft", {
            get: function () {
                return this.i.kd ? this.i.kd.a : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.kd.a = +v;
                this.i.kd = this.i.kd;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "cornerRadiusTopLeft", {
            get: function () {
                return this.i.kd ? this.i.kd.c : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.kd.c = +v;
                this.i.kd = this.i.kd;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "cornerRadiusTopRight", {
            get: function () {
                return this.i.kd ? this.i.kd.d : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.kd.d = +v;
                this.i.kd = this.i.kd;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.ensureCornerRadius = function () {
            if (this.i.kd) {
                return;
            }
            this.i.kd = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrButton.prototype, "outlinedBackgroundColor", {
            /**
             * Gets or sets the color to use for the background of the button when the  type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tk);
            },
            set: function (v) {
                this.i.tk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedDisabledBackgroundColor", {
            /**
             * Gets or sets the color to use for the disabled background of the button when the type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tm);
            },
            set: function (v) {
                this.i.tm = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedDisabledBorderColor", {
            /**
             * Gets or sets the color to use for the disabled border of the button when the type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tn);
            },
            set: function (v) {
                this.i.tn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedDisabledTextColor", {
            /**
             * Gets or sets the color to use for the disabled text of the button when the type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.to);
            },
            set: function (v) {
                this.i.to = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedDisabledElevation", {
            /**
             * Gets or sets the disabled elevation to use for the button when the type is outlined.
            */
            get: function () {
                return this.i.el;
            },
            set: function (v) {
                this.i.el = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedHoverBackgroundColor", {
            /**
             * Gets or sets the hover color to use for the background of the button when the  type is hoveredOutlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tr);
            },
            set: function (v) {
                this.i.tr = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedBorderColor", {
            /**
             * Gets or sets the border color to use for the button when the type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tl);
            },
            set: function (v) {
                this.i.tl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedRestingElevation", {
            /**
             * Gets or sets the elevation to use for the button when the type is outlined.
            */
            get: function () {
                return this.i.eo;
            },
            set: function (v) {
                this.i.eo = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedHoverElevation", {
            /**
             * Gets or sets the hover elevation to use for the button when the type is outlined.
            */
            get: function () {
                return this.i.en;
            },
            set: function (v) {
                this.i.en = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedFocusElevation", {
            /**
             * Gets or sets the focus elevation to use for the button when the type is outlined.
            */
            get: function () {
                return this.i.em;
            },
            set: function (v) {
                this.i.em = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedBorderWidth", {
            /**
             * Gets or sets the width to use for the button border when the type is outlined.
            */
            get: function () {
                return this.i.bi;
            },
            set: function (v) {
                this.i.bi = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedCornerRadiusBottomRight", {
            get: function () {
                return this.i.kw ? this.i.kw.b : NaN;
            },
            set: function (v) {
                this.ensureOutlinedCornerRadius();
                this.i.kw.b = +v;
                this.i.kw = this.i.kw;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedCornerRadiusBottomLeft", {
            get: function () {
                return this.i.kw ? this.i.kw.a : NaN;
            },
            set: function (v) {
                this.ensureOutlinedCornerRadius();
                this.i.kw.a = +v;
                this.i.kw = this.i.kw;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedCornerRadiusTopLeft", {
            get: function () {
                return this.i.kw ? this.i.kw.c : NaN;
            },
            set: function (v) {
                this.ensureOutlinedCornerRadius();
                this.i.kw.c = +v;
                this.i.kw = this.i.kw;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedCornerRadiusTopRight", {
            get: function () {
                return this.i.kw ? this.i.kw.d : NaN;
            },
            set: function (v) {
                this.ensureOutlinedCornerRadius();
                this.i.kw.d = +v;
                this.i.kw = this.i.kw;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.ensureOutlinedCornerRadius = function () {
            if (this.i.kw) {
                return;
            }
            this.i.kw = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrButton.prototype, "outlinedRippleColor", {
            /**
             * Gets or sets the color to use for the background when the button is pressed and the type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tt);
            },
            set: function (v) {
                this.i.tt = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedTextColor", {
            /**
             * Gets or sets the color to use for the text of the button when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tu);
            },
            set: function (v) {
                this.i.tu = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedHoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ts);
            },
            set: function (v) {
                this.i.ts = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedFocusBackgroundColor", {
            /**
             * Gets or sets the color to use for the backround the button when it is focused and outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tp);
            },
            set: function (v) {
                this.i.tp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "outlinedFocusTextColor", {
            /**
             * Gets or sets the color to use for the text the button when it is focused and outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tq);
            },
            set: function (v) {
                this.i.tq = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabBackgroundColor", {
            /**
             * Gets or sets the color to use for the background of the button when the  type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sj);
            },
            set: function (v) {
                this.i.sj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabDisabledBackgroundColor", {
            /**
             * Gets or sets the color to use for the disabled background of the button when the type is fab.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sl);
            },
            set: function (v) {
                this.i.sl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabDisabledBorderColor", {
            /**
             * Gets or sets the color to use for the disabled border of the button when the type is fab.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sm);
            },
            set: function (v) {
                this.i.sm = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabDisabledTextColor", {
            /**
             * Gets or sets the color to use for the disabled text of the button when the type is fab.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sn);
            },
            set: function (v) {
                this.i.sn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabDisabledElevation", {
            /**
             * Gets or sets the disabled elevation to use for the button when the type is fab.
            */
            get: function () {
                return this.i.d7;
            },
            set: function (v) {
                this.i.d7 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabHoverBackgroundColor", {
            /**
             * Gets or sets the hover color to use for the background of the button when the  type is hoveredFab.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sq);
            },
            set: function (v) {
                this.i.sq = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabBorderColor", {
            /**
             * Gets or sets the border color to use for the button when the type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sk);
            },
            set: function (v) {
                this.i.sk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabRestingElevation", {
            /**
             * Gets or sets the elevation to use for the button when the type is floating action button.
            */
            get: function () {
                return this.i.ea;
            },
            set: function (v) {
                this.i.ea = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabHoverElevation", {
            /**
             * Gets or sets the hover elevation to use for the button when the type is floating action button.
            */
            get: function () {
                return this.i.d9;
            },
            set: function (v) {
                this.i.d9 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabFocusElevation", {
            /**
             * Gets or sets the focus elevation to use for the button when the type is floating action button.
            */
            get: function () {
                return this.i.d8;
            },
            set: function (v) {
                this.i.d8 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabBorderWidth", {
            /**
             * Gets or sets the width to use for the button border when the type is floating action button.
            */
            get: function () {
                return this.i.bd;
            },
            set: function (v) {
                this.i.bd = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabCornerRadiusBottomRight", {
            get: function () {
                return this.i.kt ? this.i.kt.b : NaN;
            },
            set: function (v) {
                this.ensureFabCornerRadius();
                this.i.kt.b = +v;
                this.i.kt = this.i.kt;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabCornerRadiusBottomLeft", {
            get: function () {
                return this.i.kt ? this.i.kt.a : NaN;
            },
            set: function (v) {
                this.ensureFabCornerRadius();
                this.i.kt.a = +v;
                this.i.kt = this.i.kt;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabCornerRadiusTopLeft", {
            get: function () {
                return this.i.kt ? this.i.kt.c : NaN;
            },
            set: function (v) {
                this.ensureFabCornerRadius();
                this.i.kt.c = +v;
                this.i.kt = this.i.kt;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabCornerRadiusTopRight", {
            get: function () {
                return this.i.kt ? this.i.kt.d : NaN;
            },
            set: function (v) {
                this.ensureFabCornerRadius();
                this.i.kt.d = +v;
                this.i.kt = this.i.kt;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.ensureFabCornerRadius = function () {
            if (this.i.kt) {
                return;
            }
            this.i.kt = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrButton.prototype, "fabRippleColor", {
            /**
             * Gets or sets the color to use for the background when the button is pressed and the type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ss);
            },
            set: function (v) {
                this.i.ss = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabTextColor", {
            /**
             * Gets or sets the color to use for the text of the button when type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.st);
            },
            set: function (v) {
                this.i.st = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabHoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button when type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sr);
            },
            set: function (v) {
                this.i.sr = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabFocusBackgroundColor", {
            /**
             * Gets or sets the color to use for the backround the button when it is focused and fab.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.so);
            },
            set: function (v) {
                this.i.so = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "fabFocusTextColor", {
            /**
             * Gets or sets the color to use for the text the button when it is focused and fab.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sp);
            },
            set: function (v) {
                this.i.sp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconBackgroundColor", {
            /**
             * Gets or sets the color to use for the background of the button when the  type is icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s9);
            },
            set: function (v) {
                this.i.s9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconDisabledBackgroundColor", {
            /**
             * Gets or sets the color to use for the disabled background of the button when the type is icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tb);
            },
            set: function (v) {
                this.i.tb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconDisabledBorderColor", {
            /**
             * Gets or sets the color to use for the disabled border of the button when the type is icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tc);
            },
            set: function (v) {
                this.i.tc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconDisabledTextColor", {
            /**
             * Gets or sets the color to use for the disabled text of the button when the type is icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.td);
            },
            set: function (v) {
                this.i.td = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconDisabledElevation", {
            /**
             * Gets or sets the disabled elevation to use for the button when the type is icon.
            */
            get: function () {
                return this.i.eh;
            },
            set: function (v) {
                this.i.eh = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconHoverBackgroundColor", {
            /**
             * Gets or sets the hover color to use for the background of the button when the  type is hoveredIcon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tg);
            },
            set: function (v) {
                this.i.tg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconBorderColor", {
            /**
             * Gets or sets the border color to use for the button when the type is icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ta);
            },
            set: function (v) {
                this.i.ta = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconRestingElevation", {
            /**
             * Gets or sets the elevation to use for the button when the type is icon.
            */
            get: function () {
                return this.i.ek;
            },
            set: function (v) {
                this.i.ek = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconHoverElevation", {
            /**
             * Gets or sets the hover elevation to use for the button when the type is icon.
            */
            get: function () {
                return this.i.ej;
            },
            set: function (v) {
                this.i.ej = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconFocusElevation", {
            /**
             * Gets or sets the focus elevation to use for the button when the type is icon.
            */
            get: function () {
                return this.i.ei;
            },
            set: function (v) {
                this.i.ei = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconBorderWidth", {
            /**
             * Gets or sets the width to use for the button border when the type is icon.
            */
            get: function () {
                return this.i.bf;
            },
            set: function (v) {
                this.i.bf = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconCornerRadiusBottomRight", {
            get: function () {
                return this.i.kv ? this.i.kv.b : NaN;
            },
            set: function (v) {
                this.ensureIconCornerRadius();
                this.i.kv.b = +v;
                this.i.kv = this.i.kv;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconCornerRadiusBottomLeft", {
            get: function () {
                return this.i.kv ? this.i.kv.a : NaN;
            },
            set: function (v) {
                this.ensureIconCornerRadius();
                this.i.kv.a = +v;
                this.i.kv = this.i.kv;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconCornerRadiusTopLeft", {
            get: function () {
                return this.i.kv ? this.i.kv.c : NaN;
            },
            set: function (v) {
                this.ensureIconCornerRadius();
                this.i.kv.c = +v;
                this.i.kv = this.i.kv;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconCornerRadiusTopRight", {
            get: function () {
                return this.i.kv ? this.i.kv.d : NaN;
            },
            set: function (v) {
                this.ensureIconCornerRadius();
                this.i.kv.d = +v;
                this.i.kv = this.i.kv;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.ensureIconCornerRadius = function () {
            if (this.i.kv) {
                return;
            }
            this.i.kv = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrButton.prototype, "iconRippleColor", {
            /**
             * Gets or sets the color to use for the background when the button is pressed and the type is floating action button.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ti);
            },
            set: function (v) {
                this.i.ti = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconTextColor", {
            /**
             * Gets or sets the color to use for the text of the button when type is icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tj);
            },
            set: function (v) {
                this.i.tj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconHoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button when type is icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.th);
            },
            set: function (v) {
                this.i.th = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconFocusBackgroundColor", {
            /**
             * Gets or sets the color to use for the backround the button when it is focused and icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.te);
            },
            set: function (v) {
                this.i.te = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "iconFocusTextColor", {
            /**
             * Gets or sets the color to use for the text the button when it is focused and icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.tf);
            },
            set: function (v) {
                this.i.tf = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "inputId", {
            /**
             * Gets or sets the id to use for the internal native checkbox.
            */
            get: function () {
                return this.i.h7;
            },
            set: function (v) {
                this.i.h7 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "id", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.h5;
            },
            set: function (v) {
                this.i.h5 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "display", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.gb;
            },
            set: function (v) {
                this.i.gb = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flexDirection", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.he;
            },
            set: function (v) {
                this.i.he = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "flexGrow", {
            /**
             * Gets or sets the flex-grow setting for the button.
            */
            get: function () {
                return this.i.hg;
            },
            set: function (v) {
                this.i.hg = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "alignItems", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.fv;
            },
            set: function (v) {
                this.i.fv = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "value", {
            /**
             * Gets or sets value to use for the checkbox.
            */
            get: function () {
                return this.i.ez;
            },
            set: function (v) {
                this.i.ez = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "name", {
            /**
             * Gets or sets name to use for the button.
            */
            get: function () {
                return this.i.ig;
            },
            set: function (v) {
                this.i.ig = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "tabIndex", {
            /**
             * Gets or sets TabIndex to use for the checkbox.
            */
            get: function () {
                return this.i.eu;
            },
            set: function (v) {
                this.i.eu = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "focused", {
            /**
             * Gets or sets if the checkbox is Focused.
            */
            get: function () {
                return this.i.focused;
            },
            set: function (v) {
                this.i.focused = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "isFocusStyleEnabled", {
            /**
             * Gets or sets if the button show use styling to show focus.
            */
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "ariaLabel", {
            /**
             * Gets or sets the value of the aria-label attribute.
            */
            get: function () {
                return this.i.fx;
            },
            set: function (v) {
                this.i.fx = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "disableRipple", {
            /**
             * Gets or sets whether to disable the ripple effect for the button.
            */
            get: function () {
                return this.i.af;
            },
            set: function (v) {
                this.i.af = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "actualDisableRipple", {
            /**
             * Gets whether to actually disable the ripple effect for the button.
            */
            get: function () {
                return this.i.ae;
            },
            set: function (v) {
                this.i.ae = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "isHover", {
            /**
             * Gets or sets whether the checkbox is checked.
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButton.prototype, "disableTransitions", {
            /**
             * Gets or sets whether the checkbox transitions are disabled.
            */
            get: function () {
                return this.i.ag;
            },
            set: function (v) {
                this.i.ag = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrButton.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrButton.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrButton.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Button");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrButton.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrButton.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrButton.prototype.exportVisualModel = function () {
            var iv = this.i.ey();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrButton.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.gf();
            return (iv);
        };
        Object.defineProperty(IgrButton.prototype, "clicked", {
            get: function () {
                return this._clicked;
            },
            set: function (ev) {
                var _this = this;
                if (this._clicked_wrapped !== null) {
                    this.i.clicked = igniteuiReactCore.delegateRemove(this.i.clicked, this._clicked_wrapped);
                    this._clicked_wrapped = null;
                    this._clicked = null;
                }
                this._clicked = ev;
                this._clicked_wrapped = function (o, e) {
                    var outerArgs = new IgrButtonClickEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeClicked) {
                        _this.beforeClicked(_this, outerArgs);
                    }
                    if (_this._clicked) {
                        _this._clicked(_this, outerArgs);
                    }
                };
                this.i.clicked = igniteuiReactCore.delegateCombine(this.i.clicked, this._clicked_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrButton;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrButtonModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrButtonModule() {
        }
        IgrButtonModule.register = function () {
            IgrRippleModule.register();
            igniteuiReactCore.IgrChildContentModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButton', IgrButton);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButton', IgrButton);
            igniteuiReactCore.TypeRegistrar.register('Button', Button.$type);
        };
        return IgrButtonModule;
    }());

    var IgrIcon = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrIcon, _super);
        function IgrIcon(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("iconContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            _this._container.setStyleProperty("vertical-align", "middle");
            var icon = _this.i;
            _this._icon = icon;
            icon.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrIcon.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrIcon.prototype.render = function () {
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-icon igr-icon",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrIcon.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrIcon.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrIcon.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrIcon.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrIcon.prototype.componentWillUnmount = function () {
            this._icon.destroy();
            this._wrapper.destroy();
        };
        IgrIcon.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrIcon.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrIcon.prototype.createImplementation = function () {
            return new Icon();
        };
        Object.defineProperty(IgrIcon.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "actualFill", {
            /**
         * Gets the color to use for the actual background.
        */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bo);
            },
            set: function (v) {
                this.i.bo = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "actualTextColor", {
            /**
             * Gets the color to use for the actual text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bs);
            },
            set: function (v) {
                this.i.bs = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "actualHoverFill", {
            /**
             * Gets the color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bp);
            },
            set: function (v) {
                this.i.bp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "actualHoverStroke", {
            /**
             * Gets the hover stroke to use for the icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bq);
            },
            set: function (v) {
                this.i.bq = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "actualStroke", {
            /**
             * Gets the stroke to use for the icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.br);
            },
            set: function (v) {
                this.i.br = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "actualHoverStrokeThickness", {
            /**
             * Gets the hover stroke to use for the icon.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "actualStrokeThickness", {
            /**
             * Gets the stroke to use for the icon.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "fill", {
            /**
             * Gets or sets the color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fill);
            },
            set: function (v) {
                this.i.fill = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "textColor", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.b2);
            },
            set: function (v) {
                this.i.b2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "svgPath", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return this.i.svgPath;
            },
            set: function (v) {
                this.i.svgPath = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "hoverFill", {
            /**
             * Gets or sets the color to use for the actual background.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.by);
            },
            set: function (v) {
                this.i.by = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "hoverStroke", {
            /**
             * Gets or sets the hover stroke to use for the icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.bz);
            },
            set: function (v) {
                this.i.bz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "stroke", {
            /**
             * Gets or sets the stroke to use for the icon.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.b1);
            },
            set: function (v) {
                this.i.b1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "hoverStrokeThickness", {
            /**
             * Gets or sets the hover stroke to use for the icon.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "strokeThickness", {
            /**
             * Gets or sets the stroke to use for the icon.
            */
            get: function () {
                return this.i.v;
            },
            set: function (v) {
                this.i.v = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "textStyle", {
            /**
             * Gets or sets the use for the button.
            */
            get: function () {
                if (this.i.d == null) {
                    return null;
                }
                return this.i.d.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.d = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "hoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.b0);
            },
            set: function (v) {
                this.i.b0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "id", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.as;
            },
            set: function (v) {
                this.i.as = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "tabIndex", {
            /**
             * Gets or sets TabIndex to use for the checkbox.
            */
            get: function () {
                return this.i.x;
            },
            set: function (v) {
                this.i.x = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "ariaLabel", {
            /**
             * Gets or sets the value of the aria-label attribute.
            */
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "isHover", {
            /**
             * Gets or sets whether the icon is hovered.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrIcon.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrIcon.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrIcon.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrIcon.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrIcon.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Icon");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrIcon.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrIcon.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrIcon.prototype.exportVisualModel = function () {
            var iv = this.i.z();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrIcon.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.am();
            return (iv);
        };
        return IgrIcon;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrIconModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrIconModule() {
        }
        IgrIconModule.register = function () {
            igniteuiReactCore.IgrChildContentModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrIcon', IgrIcon);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrIcon', IgrIcon);
            igniteuiReactCore.TypeRegistrar.register('Icon', Icon.$type);
        };
        return IgrIconModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCalendarModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCalendarModule() {
        }
        IgrCalendarModule.register = function () {
            IgrButtonModule.register();
            IgrIconModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCalendar', IgrCalendar);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCalendar', IgrCalendar);
            igniteuiReactCore.TypeRegistrar.register('Calendar', Calendar.$type);
        };
        return IgrCalendarModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var SuffixShiftType = /*@__PURE__*/ (function (SuffixShiftType) {
        SuffixShiftType[SuffixShiftType["Line"] = 0] = "Line";
        SuffixShiftType[SuffixShiftType["Box"] = 1] = "Box";
        SuffixShiftType[SuffixShiftType["Border"] = 2] = "Border";
        return SuffixShiftType;
    })({});
    /**
     * @hidden
     */
    var SuffixShiftType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('SuffixShiftType', 'Line,0|Box,1|Border,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var PrefixShiftType = /*@__PURE__*/ (function (PrefixShiftType) {
        PrefixShiftType[PrefixShiftType["Line"] = 0] = "Line";
        PrefixShiftType[PrefixShiftType["Box"] = 1] = "Box";
        PrefixShiftType[PrefixShiftType["Border"] = 2] = "Border";
        return PrefixShiftType;
    })({});
    /**
     * @hidden
     */
    var PrefixShiftType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('PrefixShiftType', 'Line,0|Box,1|Border,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var LabelShiftType = /*@__PURE__*/ (function (LabelShiftType) {
        LabelShiftType[LabelShiftType["Line"] = 0] = "Line";
        LabelShiftType[LabelShiftType["Box"] = 1] = "Box";
        LabelShiftType[LabelShiftType["Border"] = 2] = "Border";
        return LabelShiftType;
    })({});
    /**
     * @hidden
     */
    var LabelShiftType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('LabelShiftType', 'Line,0|Box,1|Border,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var InputShiftType = /*@__PURE__*/ (function (InputShiftType) {
        InputShiftType[InputShiftType["Line"] = 0] = "Line";
        InputShiftType[InputShiftType["Box"] = 1] = "Box";
        InputShiftType[InputShiftType["Border"] = 2] = "Border";
        return InputShiftType;
    })({});
    /**
     * @hidden
     */
    var InputShiftType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('InputShiftType', 'Line,0|Box,1|Border,2');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var SuffixVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SuffixVisualModelExport, _super);
        function SuffixVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this.c = false;
            _this.b = false;
            _this.d = null;
            return _this;
        }
        SuffixVisualModelExport.prototype.e = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("shiftType : " + this.a + ", ");
            a.l("isHover : " + this.c + ", ");
            a.l("isDisabled : " + this.b + ", ");
            a.l("name : \"" + this.d + "\", ");
            a.l("}");
            return a.toString();
        };
        SuffixVisualModelExport.$t = igniteuiReactCore.markType(SuffixVisualModelExport, 'SuffixVisualModelExport');
        return SuffixVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var PrefixVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PrefixVisualModelExport, _super);
        function PrefixVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = 0;
            _this.c = false;
            _this.b = false;
            _this.d = null;
            return _this;
        }
        PrefixVisualModelExport.prototype.e = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("shiftType : " + igniteuiReactCore.enumGetBox(PrefixShiftType_$type, this.a) + ", ");
            a.l("isHover : " + this.c + ", ");
            a.l("isDisabled : " + this.b + ", ");
            a.l("name : \"" + this.d + "\", ");
            a.l("}");
            return a.toString();
        };
        PrefixVisualModelExport.$t = igniteuiReactCore.markType(PrefixVisualModelExport, 'PrefixVisualModelExport');
        return PrefixVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var InputGroupDisplayType = /*@__PURE__*/ (function (InputGroupDisplayType) {
        InputGroupDisplayType[InputGroupDisplayType["Line"] = 0] = "Line";
        InputGroupDisplayType[InputGroupDisplayType["Box"] = 1] = "Box";
        InputGroupDisplayType[InputGroupDisplayType["Border"] = 2] = "Border";
        InputGroupDisplayType[InputGroupDisplayType["Search"] = 3] = "Search";
        return InputGroupDisplayType;
    })({});
    /**
     * @hidden
     */
    var InputGroupDisplayType_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('InputGroupDisplayType', 'Line,0|Box,1|Border,2|Search,3');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var InputGroupVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputGroupVisualModelExport, _super);
        function InputGroupVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.f = 0;
            _this.e = 0;
            _this.b = null;
            _this.o = 0;
            _this.p = 0;
            _this.z = null;
            _this.aa = null;
            _this.x = 0;
            _this.w = 0;
            _this.t = 0;
            _this.c = null;
            _this.d = null;
            _this.u = 0;
            _this.s = 0;
            _this.q = 0;
            _this.r = 0;
            _this.v = 0;
            _this.a = null;
            _this.g = false;
            _this.j = false;
            _this.i = false;
            _this.h = false;
            _this.m = null;
            _this.l = null;
            _this.k = null;
            _this.n = null;
            return _this;
        }
        InputGroupVisualModelExport.prototype.y = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("actualDensity : " + this.f + ", ");
            a.l("baseTheme : " + this.e + ", ");
            a.l("actualBorderColor : " + this.b.serialize() + ", ");
            a.l("actualBorderWidth : " + this.o + ", ");
            a.l("actualFocusBorderWidth : " + this.p + ", ");
            a.l("actualContentPadding : { left: " + this.aa.c + ",top: " + this.aa.e + ",right: " + this.aa.d + ",bottom: " + this.aa.b + "},");
            a.l("actualUnderlineWidth : " + this.x + ", ");
            a.l("actualUnderlineRippleWidth : " + this.w + ", ");
            a.l("actualBackgroundColor : " + this.a.serialize() + ", ");
            a.l("actualHoverUnderlineWidth : " + this.t + ", ");
            a.l("actualUnderlineColor : " + this.c.serialize() + ", ");
            a.l("actualUnderlineRippleColor : " + this.d.serialize() + ", ");
            a.l("actualUnderlineOpacity : " + this.u + ", ");
            a.l("actualHoverUnderlineOpacity : " + this.s + ", ");
            a.l("actualFocusUnderlineOpacity : " + this.q + ", ");
            a.l("actualFocusUnderlineRippleOpacity : " + this.r + ", ");
            a.l("actualUnderlineRippleOpacity : " + this.v + ", ");
            a.l("actualBackgroundColor : " + this.a.serialize() + ", ");
            a.l("actualIsExpanded : " + this.g + ", ");
            a.l("isHovered : " + this.j + ", ");
            a.l("isFocused : " + this.i + ", ");
            a.l("isDisabled : " + this.h + ", ");
            a.l("prefixModels : [");
            for (var b = 0; b < this.m.count; b++) {
                if (b != 0) {
                    a.l(",");
                }
                a.l(this.m._inner[b].e());
            }
            a.l("],");
            a.l("labelModels: [");
            for (var c = 0; c < this.l.count; c++) {
                if (c != 0) {
                    a.l(",");
                }
                var d = this.l._inner[c].q.charAt(0).toString().toLowerCase() + this.l._inner[c].q.substr(1);
                a.l(this.l._inner[c].r());
            }
            a.l("],");
            a.l("inputModels : [");
            for (var e = 0; e < this.k.count; e++) {
                if (e != 0) {
                    a.l(",");
                }
                var f = this.k._inner[e].k.charAt(0).toString().toLowerCase() + this.k._inner[e].k.substr(1);
                a.l(this.k._inner[e].n());
            }
            a.l("],");
            a.l("suffixModels : [");
            for (var g = 0; g < this.n.count; g++) {
                if (g != 0) {
                    a.l(",");
                }
                var h = this.n._inner[g].d.charAt(0).toString().toLowerCase() + this.n._inner[g].d.substr(1);
                a.l(this.n._inner[g].e());
            }
            a.l("]");
            a.l("}");
            return a.toString();
        };
        InputGroupVisualModelExport.$t = igniteuiReactCore.markType(InputGroupVisualModelExport, 'InputGroupVisualModelExport');
        return InputGroupVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var LabelVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(LabelVisualModelExport, _super);
        function LabelVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = 0;
            _this.e = 0;
            _this.d = 0;
            _this.b = null;
            _this.a = null;
            _this.v = null;
            _this.w = null;
            _this.x = null;
            _this.l = 0;
            _this.t = null;
            _this.u = null;
            _this.f = 0;
            _this.j = false;
            _this.h = false;
            _this.n = null;
            _this.o = null;
            _this.p = null;
            _this.m = null;
            _this.s = null;
            _this.i = false;
            _this.k = false;
            _this.g = false;
            _this.q = null;
            return _this;
        }
        LabelVisualModelExport.prototype.r = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("baseTheme : " + this.c + ", ");
            a.l("density : " + this.e + ", ");
            a.l("actualDensity : " + this.d + ", ");
            a.l("actualTextColor : " + this.b.serialize() + ", ");
            a.l("actualHighlightTextColor : " + this.a.serialize() + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.v)) {
                a.l("textStyleFontStyle : \"" + this.v + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.w)) {
                a.l("textStyleFontVariant : \"" + this.w + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.x)) {
                a.l("textStyleFontWeight : \"" + this.x + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.t)) {
                a.l("textStyleFontFamily : \"" + this.t + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.u)) {
                a.l("textStyleFontStretch : \"" + this.u + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.l)) {
                a.l("textStyleFontSize : " + this.l + ", ");
            }
            a.l("shiftType : " + this.f + ", ");
            a.l("isShifted : " + this.j + ", ");
            a.l("isHighlighted : " + this.h + ", ");
            a.l("display : \"" + this.n + "\", ");
            a.l("flexDirection : \"" + this.o + "\", ");
            a.l("flexGrow : \"" + this.p + "\", ");
            a.l("alignItems :\"" + this.m + "\", ");
            a.l("text : \"" + this.s + "\", ");
            a.l("isHover : " + this.i + ", ");
            a.l("value : " + this.k + ", ");
            a.l("isDisabled : " + this.g + ", ");
            a.l("name : \"" + this.q + "\", ");
            a.l("}");
            return a.toString();
        };
        LabelVisualModelExport.$t = igniteuiReactCore.markType(LabelVisualModelExport, 'LabelVisualModelExport');
        return LabelVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var InputVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputVisualModelExport, _super);
        function InputVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.h = 0;
            _this.f = 0;
            _this.c = 0;
            _this.b = 0;
            _this.j = null;
            _this.m = null;
            _this.d = false;
            _this.a = null;
            _this.q = null;
            _this.r = null;
            _this.s = null;
            _this.g = 0;
            _this.o = null;
            _this.p = null;
            _this.i = null;
            _this.l = null;
            _this.e = false;
            _this.t = null;
            _this.k = null;
            return _this;
        }
        InputVisualModelExport.prototype.n = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("top : " + this.h + ", ");
            a.l("left : " + this.f + ", ");
            a.l("shiftType : " + this.c + ", ");
            a.l("actualDensity : " + this.b + ", ");
            a.l("mask : \"" + this.j + "\", ");
            a.l("promptChar : \"" + this.m + "\", ");
            a.l("includeLiterals : " + this.d + ", ");
            a.l("actualTextColor : " + this.a.serialize() + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.q)) {
                a.l("textStyleFontStyle : \"" + this.q + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.r)) {
                a.l("textStyleFontVariant : \"" + this.r + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.s)) {
                a.l("textStyleFontWeight : \"" + this.s + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.o)) {
                a.l("textStyleFontFamily : \"" + this.o + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.p)) {
                a.l("textStyleFontStretch : \"" + this.p + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.g)) {
                a.l("textStyleFontSize : " + this.g + ", ");
            }
            a.l("inputType : \"" + this.i + "\", ");
            a.l("placeholder : \"" + this.l + "\", ");
            a.l("isHover : " + this.e + ", ");
            a.l("value : \"" + this.t + "\", ");
            a.l("name : \"" + this.k + "\", ");
            a.l("}");
            return a.toString();
        };
        InputVisualModelExport.$t = igniteuiReactCore.markType(InputVisualModelExport, 'InputVisualModelExport');
        return InputVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var Replaced = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Replaced, _super);
        function Replaced() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = null;
            _this.a = 0;
            return _this;
        }
        Replaced.$t = igniteuiReactCore.markType(Replaced, 'Replaced');
        return Replaced;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MaskParsingService = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MaskParsingService, _super);
        function MaskParsingService() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        MaskParsingService.prototype.g = function (a, b) {
            var e_1, _a, e_2, _b;
            var c = "";
            var d = "";
            var e = b.a;
            var f = this.c(e);
            var g = f.keys;
            var h = this.e(e, g);
            var i = f.values;
            if (a != null) {
                d = a.toString();
            }
            for (var j = 0; j < e.length; j++) {
                c += b.b;
            }
            try {
                for (var _c = tslib_1.__values(igniteuiReactCore.fromEnum(f)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var k = _d.value;
                    c = this.i(c, k.key, k.value);
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            if (d == "") {
                return c;
            }
            var l = this.f(d, i);
            for (var m = 0; m < l.count; m++) {
                var n = l._inner[m];
                var o = this.b(n, h._inner[m], e);
                if (!o && n != b.b) {
                    l.item(m, b.b);
                }
            }
            if (l.count > h.count) {
                l.v(h.count + 1, l.count);
            }
            var p = 0;
            try {
                for (var _e = tslib_1.__values(igniteuiReactCore.fromEnum(l)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var q = _f.value;
                    var r = q;
                    c = this.i(c, h._inner[p++], r);
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return c;
        };
        MaskParsingService.prototype.h = function (a, b) {
            var c = "";
            var d = b.a;
            var e = this.c(d);
            var f = e.values;
            for (var g = 0; g < a.length; g++) {
                var h = a.charAt(g).toString();
                if (!f.contains(h)) {
                    if (h != b.b) {
                        c += h;
                    }
                }
            }
            return c;
        };
        MaskParsingService.prototype.a = function (a, b, c, d, e) {
            var f = this.c(c.a).keys;
            var g = new igniteuiReactCore.ObservableCollection$1(igniteuiReactCore.String_$type, 0);
            for (var h = 0; h < b.length; h++) {
                g.add(b.charAt(h).toString());
            }
            var i = d;
            e = Math.min(e, a.length);
            for (var j = d; j < e || (g.count > 0 && j < a.length); j++) {
                if (f.contains(j)) {
                    if (g._inner[0] == a.charAt(j).toString()) {
                        i = j + 1;
                        g.removeAt(0);
                    }
                    continue;
                }
                if (g._inner[0] != null && !this.b(g._inner[0].toString(), j, c.a) && g._inner[0].toString() != c.b) {
                    break;
                }
                var k = c.b;
                if (g.count > 0) {
                    i = j + 1;
                    k = g._inner[0];
                    g.removeAt(0);
                }
                a = this.i(a, j, k);
            }
            var l = new Replaced();
            l.b = a;
            l.a = i;
            return l;
        };
        MaskParsingService.prototype.i = function (a, b, c) {
            if (a != null) {
                return a.substr(0, b) + c + a.substr(b + 1);
            }
            return null;
        };
        MaskParsingService.prototype.b = function (a, b, c) {
            var d;
            var e;
            var f = "[\\d\\u00C0-\\u1FFF\\u2C00-\\uD7FFa-zA-Z]";
            var g = "[\\d\\u00C0-\\u1FFF\\u2C00-\\uD7FFa-zA-Z\\u0020]";
            var h = "[\\u00C0-\\u1FFF\\u2C00-\\uD7FFa-zA-Z]";
            var i = "[\\u00C0-\\u1FFF\\u2C00-\\uD7FFa-zA-Z\\u0020]";
            var j = "[\\d]";
            var k = "[\\d\\u0020]";
            var l = "[\\d-\\+\\s]";
            switch (c.charAt(b)) {
                case 'C':
                    e = a != "";
                    break;
                case '&':
                    d = new RegExp("[\\u0020]");
                    e = !d.test(a);
                    break;
                case 'a':
                    d = new RegExp(g);
                    e = d.test(a);
                    break;
                case 'A':
                    d = new RegExp(f);
                    e = d.test(a);
                    break;
                case '?':
                    d = new RegExp(i);
                    e = d.test(a);
                    break;
                case 'L':
                    d = new RegExp(h);
                    e = d.test(a);
                    break;
                case '0':
                    d = new RegExp(j);
                    e = d.test(a);
                    break;
                case '9':
                    d = new RegExp(k);
                    e = d.test(a);
                    break;
                case '#':
                    d = new RegExp(l);
                    e = d.test(a);
                    break;
                default:
                    e = false;
                    break;
            }
            return e;
        };
        MaskParsingService.prototype.c = function (a) {
            var b = new igniteuiReactCore.Dictionary$2(igniteuiReactCore.Number_$type, igniteuiReactCore.String_$type, 0);
            for (var c = 0; c < a.length; c++) {
                var d = a.charAt(c);
                if (!MaskParsingService.d.contains(d)) {
                    b.addItem(c, d.toString());
                }
            }
            return b;
        };
        MaskParsingService.prototype.e = function (a, b) {
            var c = new igniteuiReactCore.ObservableCollection$1(igniteuiReactCore.Number_$type, 0);
            for (var d = 0; d < a.length; d++) {
                if (!b.contains(d)) {
                    c.add(d);
                }
            }
            return c;
        };
        MaskParsingService.prototype.f = function (a, b) {
            var c = new igniteuiReactCore.ObservableCollection$1(igniteuiReactCore.String_$type, 0);
            for (var d = 0; d < a.length; d++) {
                var e = a.charAt(d).toString();
                if (!b.contains(e)) {
                    b.remove(e);
                    c.add(e);
                }
            }
            return c;
        };
        MaskParsingService.$t = igniteuiReactCore.markType(MaskParsingService, 'MaskParsingService');
        MaskParsingService.d = ((function () {
            var $ret = new igniteuiReactCore.List$1(igniteuiReactCore.String_$type, 0);
            $ret.add('C');
            $ret.add('&');
            $ret.add('a');
            $ret.add('A');
            $ret.add('?');
            $ret.add('L');
            $ret.add('9');
            $ret.add('0');
            $ret.add('#');
            return $ret;
        })());
        return MaskParsingService;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var InputChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputChangeEventArgs, _super);
        function InputChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._value = null;
            _this._isCompositionInProgress = false;
            return _this;
        }
        Object.defineProperty(InputChangeEventArgs.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (a) {
                this._value = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputChangeEventArgs.prototype, "isCompositionInProgress", {
            get: function () {
                return this._isCompositionInProgress;
            },
            set: function (a) {
                this._isCompositionInProgress = a;
            },
            enumerable: true,
            configurable: true
        });
        InputChangeEventArgs.$t = igniteuiReactCore.markType(InputChangeEventArgs, 'InputChangeEventArgs', igniteuiReactCore.EventArgs.$);
        return InputChangeEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var MaskOptions = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(MaskOptions, _super);
        function MaskOptions() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.a = null;
            _this.b = null;
            return _this;
        }
        MaskOptions.$t = igniteuiReactCore.markType(MaskOptions, 'MaskOptions');
        return MaskOptions;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var InputGroupView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputGroupView, _super);
        function InputGroupView() {
            var _this = _super.call(this) || this;
            _this.d = null;
            _this.l = null;
            _this.e = null;
            _this.i = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.y = null;
            _this.f = true;
            _this.n = null;
            _this.o = null;
            _this.p = null;
            _this.s = null;
            _this.r = null;
            _this.q = null;
            _this.m = null;
            return _this;
        }
        InputGroupView.prototype.ag = function () {
        };
        InputGroupView.prototype.g = function () {
            return true;
        };
        Object.defineProperty(InputGroupView.prototype, "v", {
            get: function () {
                return this.n;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroupView.prototype, "ao", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroupView.prototype, "h", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        InputGroupView.prototype.ad = function (a) {
            var e_1, _a;
            var _this = this;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.i)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.i.clear();
            }
            this.l = a;
            a.rootWrapper.setStyleProperty("position", "relative");
            a.rootWrapper.setStyleProperty("box-sizing", "border-box");
            a.rootWrapper.setStyleProperty("border-width", "0px");
            a.rootWrapper.setStyleProperty("border-style", "solid");
            var c = this.u;
            this.i.add(c.listen("focusin", igniteuiReactCore.runOn(this, this.af)));
            this.i.add(c.listen("focusout", igniteuiReactCore.runOn(this, this.ai)));
            var d = this.l.createElement("div");
            d.setStyleProperty("position", "absolute");
            d.setStyleProperty("width", "100%");
            d.setStyleProperty("height", "100%");
            d.setStyleProperty("border-style", "solid");
            d.setStyleProperty("box-sizing", "border-box");
            d.setStyleProperty("left", "0px");
            d.setStyleProperty("top", "0px");
            this.l.append(d);
            this.m = d;
            var e = this.l.createElement("div");
            e.addClass("ig-input-content");
            e.setStyleProperty("width", "100%");
            e.setStyleProperty("position", "relative");
            e.setStyleProperty("display", "flex");
            e.setStyleProperty("flex-direction", "row");
            e.setStyleProperty("flex-wrap", "no-wrap");
            e.setStyleProperty("flex-flow", "row nowrap");
            e.setStyleProperty("flex-grow", "1");
            e.setStyleProperty("align-items", "center");
            e.setStyleProperty("padding-top", "1.125rem");
            this.p = e;
            this.i.add(e.listen("click", igniteuiReactCore.runOn(this, this.z)));
            this.l.append(e);
            this.l.getPortal(e, "ChildContent", function (f) {
                var comp_ = f.componentRef;
                _this.s = comp_;
                _this.p.setStyleProperty("flex-direction", "row");
            }, true);
            var f = this.l.createElement("div");
            f.setStyleProperty("position", "absolute");
            f.setStyleProperty("width", "100%");
            f.setStyleProperty("background-color", "rgba(0, 0, 0, 0.54)");
            f.setStyleProperty("height", "1px");
            f.setStyleProperty("pointer-events", "none");
            f.setStyleProperty("left", "0px");
            f.setStyleProperty("bottom", "1px");
            f.setStyleProperty("overflow", "visible");
            var g = this.l.createElement("span");
            g.setStyleProperty("width", "100%");
            g.setStyleProperty("height", "2px");
            g.setStyleProperty("display", "block");
            g.setStyleProperty("pointer-events", "none");
            igniteuiReactCore.NativeUI.z(g, ((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 0.5;
                $ret.m = 1;
                return $ret;
            })()));
            g.setStyleProperty("opacity", "0");
            this.r = g;
            f.append(this.r);
            this.q = f;
            this.l.append(f);
            this.d.me();
        };
        Object.defineProperty(InputGroupView.prototype, "u", {
            get: function () {
                return this.l.rootWrapper;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroupView.prototype, "t", {
            get: function () {
                return this.m;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroupView.prototype, "w", {
            get: function () {
                return this.q;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroupView.prototype, "x", {
            get: function () {
                return this.r;
            },
            enumerable: true,
            configurable: true
        });
        InputGroupView.prototype.am = function (a) {
            if (this.y != a) {
                this.y = a;
                if (this.o != null) {
                    this.o.setAttribute("d", this.y);
                }
            }
        };
        InputGroupView.prototype.al = function () {
            switch (this.d.g) {
                case 1:
                    this.p.setStyleProperty("padding-top", "1.125rem");
                    break;
                case 2:
                    this.p.setStyleProperty("padding-top", ".94737rem");
                    break;
                case 3:
                    this.p.setStyleProperty("padding-top", ".81818rem");
                    break;
            }
        };
        InputGroupView.prototype.z = function (a) {
        };
        InputGroupView.prototype.ah = function () {
            if (this.g()) {
            }
        };
        InputGroupView.prototype.j = function () {
            var a = this.l.rootWrapper.getStyleProperty("height");
            return parseFloat(igniteuiReactCore.stringReplace(a, "px", ""));
        };
        InputGroupView.prototype.ac = function () {
            this.f = true;
        };
        InputGroupView.prototype.ae = function () {
            var e_2, _a;
            this.f = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.i)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            this.i.clear();
        };
        InputGroupView.prototype.an = function (a) {
            if (a != null) {
                this.l.rootWrapper.setStyleProperty("font", a.fontString);
            }
        };
        InputGroupView.prototype.k = function (a) {
            return a.view.h();
        };
        InputGroupView.prototype.ab = function () {
            if (igniteuiReactCore.KeyFrameAnimationFactory.h == null) {
                igniteuiReactCore.KeyFrameAnimationFactory.h = this.l;
            }
        };
        InputGroupView.prototype.a = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.t, 0, null, a);
        };
        InputGroupView.prototype.c = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.w, 0, null, a);
        };
        InputGroupView.prototype.b = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.r, 0, null, a);
        };
        InputGroupView.prototype.ak = function (a) {
        };
        InputGroupView.prototype.aa = function (a) {
            this.p.append(a);
        };
        InputGroupView.prototype.aj = function (a) {
            this.p.removeChild(a);
        };
        InputGroupView.prototype.af = function (a) {
            this.d.ma();
        };
        InputGroupView.prototype.ai = function (a) {
            this.d.mc();
        };
        InputGroupView.$t = igniteuiReactCore.markType(InputGroupView, 'InputGroupView');
        return InputGroupView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var SuffixView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(SuffixView, _super);
        function SuffixView() {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.g = null;
            _this.b = null;
            _this.e = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.c = true;
            _this.h = null;
            return _this;
        }
        SuffixView.prototype.o = function () {
        };
        SuffixView.prototype.d = function () {
            return true;
        };
        Object.defineProperty(SuffixView.prototype, "r", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        SuffixView.prototype.m = function (a) {
            var e_3, _a;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.e)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_3_1) {
                    e_3 = { error: e_3_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_3)
                            throw e_3.error;
                    }
                }
                this.e.clear();
            }
            this.g = a;
            this.g.rootWrapper.setStyleProperty("display", "inline-block");
            var c = this.g.createElement("div");
            c.addClass("ig-suffix-content");
            this.g.append(c);
            c.setStyleProperty("cursor", "pointer");
            this.h = c;
            this.g.getPortal(c, "ChildContent", function (d) {
            }, true);
            this.a.am();
        };
        SuffixView.prototype.q = function () {
            var _this = this;
            var a = new igniteuiReactCore.TransformGroup();
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.TranslateTransform();
                $ret.k = _this.a.k == 2 ? (_this.f() * -0.25) : 0;
                return $ret;
            })()));
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 1;
                $ret.m = 1;
                return $ret;
            })()));
            igniteuiReactCore.NativeUI.z(this.g.rootWrapper, a);
            this.g.rootWrapper.setStyleProperty("transform-origin", "0px 0px");
        };
        SuffixView.prototype.f = function () {
            var a = this.g.rootWrapper.getStyleProperty("height");
            return parseFloat(igniteuiReactCore.stringReplace(a, "px", ""));
        };
        SuffixView.prototype.p = function () {
            if (this.d()) {
            }
        };
        SuffixView.prototype.i = function (a) {
            this.a.aj();
        };
        SuffixView.prototype.j = function (a) {
            this.a.ak();
        };
        SuffixView.prototype.l = function () {
            this.c = true;
            this.e.add(this.g.rootWrapper.listen("mouseenter", igniteuiReactCore.runOn(this, this.i)));
            this.e.add(this.g.rootWrapper.listen("mouseleave", igniteuiReactCore.runOn(this, this.j)));
        };
        SuffixView.prototype.n = function () {
            var e_4, _a;
            this.c = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.e)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_4_1) {
                e_4 = { error: e_4_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_4)
                        throw e_4.error;
                }
            }
            this.e.clear();
        };
        SuffixView.prototype.k = function (a) {
            this.h.append(a);
        };
        SuffixView.$t = igniteuiReactCore.markType(SuffixView, 'SuffixView');
        return SuffixView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var PrefixView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(PrefixView, _super);
        function PrefixView() {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.g = null;
            _this.b = null;
            _this.e = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.c = true;
            _this.h = null;
            return _this;
        }
        PrefixView.prototype.o = function () {
        };
        PrefixView.prototype.d = function () {
            return true;
        };
        Object.defineProperty(PrefixView.prototype, "r", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        PrefixView.prototype.m = function (a) {
            var e_5, _a;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.e)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_5_1) {
                    e_5 = { error: e_5_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_5)
                            throw e_5.error;
                    }
                }
                this.e.clear();
            }
            this.g = a;
            this.g.rootWrapper.setStyleProperty("display", "inline-block");
            var c = this.g.createElement("div");
            c.addClass("ig-prefix-content");
            this.g.append(c);
            c.setStyleProperty("cursor", "pointer");
            this.h = c;
            this.g.getPortal(c, "ChildContent", function (d) {
            }, true);
            this.a.am();
        };
        PrefixView.prototype.q = function () {
            var _this = this;
            var a = new igniteuiReactCore.TransformGroup();
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.TranslateTransform();
                $ret.k = _this.a.k == 2 ? (_this.f() * -0.25) : 0;
                return $ret;
            })()));
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 1;
                $ret.m = 1;
                return $ret;
            })()));
            igniteuiReactCore.NativeUI.z(this.g.rootWrapper, a);
            this.g.rootWrapper.setStyleProperty("transform-origin", "0px 0px");
        };
        PrefixView.prototype.f = function () {
            var a = this.g.rootWrapper.getStyleProperty("height");
            return parseFloat(igniteuiReactCore.stringReplace(a, "px", ""));
        };
        PrefixView.prototype.p = function () {
            if (this.d()) {
            }
        };
        PrefixView.prototype.i = function (a) {
            this.a.aj();
        };
        PrefixView.prototype.j = function (a) {
            this.a.ak();
        };
        PrefixView.prototype.l = function () {
            this.c = true;
            this.e.add(this.g.rootWrapper.listen("mouseenter", igniteuiReactCore.runOn(this, this.i)));
            this.e.add(this.g.rootWrapper.listen("mouseleave", igniteuiReactCore.runOn(this, this.j)));
        };
        PrefixView.prototype.n = function () {
            var e_6, _a;
            this.c = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.e)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_6_1) {
                e_6 = { error: e_6_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_6)
                        throw e_6.error;
                }
            }
            this.e.clear();
        };
        PrefixView.prototype.k = function (a) {
            this.h.append(a);
        };
        PrefixView.$t = igniteuiReactCore.markType(PrefixView, 'PrefixView');
        return PrefixView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var LabelView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(LabelView, _super);
        function LabelView() {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.i = null;
            _this.c = null;
            _this.g = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.m = null;
            _this.d = true;
            _this.j = null;
            _this.k = null;
            return _this;
        }
        LabelView.prototype.y = function () {
        };
        LabelView.prototype.e = function () {
            return true;
        };
        Object.defineProperty(LabelView.prototype, "l", {
            get: function () {
                return this.j;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(LabelView.prototype, "ag", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(LabelView.prototype, "f", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        LabelView.prototype.q = function () {
            if (igniteuiReactCore.KeyFrameAnimationFactory.h == null) {
                igniteuiReactCore.KeyFrameAnimationFactory.h = this.i;
            }
        };
        LabelView.prototype.a = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.i.rootWrapper, 0, null, a);
        };
        LabelView.prototype.t = function (a) {
            var e_7, _a;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.g)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_7_1) {
                    e_7 = { error: e_7_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_7)
                            throw e_7.error;
                    }
                }
                this.g.clear();
            }
            this.i = a;
            this.i.rootWrapper.setStyleProperty("display", "inline-block");
            this.i.rootWrapper.setStyleProperty("position", "relative");
            var c = this.i.createElement("label");
            c.setStyleProperty("position", "relative");
            c.setStyleProperty("display", "inline-block");
            c.setStyleProperty("white-space", "nowrap");
            c.setStyleProperty("text-overflow", "ellipsis");
            c.setStyleProperty("line-height", "1");
            c.setStyleProperty("overflow", "hidden");
            c.setStyleProperty("height", "1.125rem");
            c.setStyleProperty("backface-visibility", "hidden");
            igniteuiReactCore.NativeUI.n(this.i.rootWrapper, this.b.cw);
            c.setStyleProperty("outline-style", "none");
            c.setStyleProperty("box-shadow", "none");
            c.setStyleProperty("font-family", "'Segoe UI', Verdana");
            c.setStyleProperty("font-size", "1rem");
            this.j = c;
            this.i.append(this.j);
            this.b.ce();
        };
        LabelView.prototype.ac = function () {
            var _this = this;
            this.b.bf = "block";
            var a = new igniteuiReactCore.TransformGroup();
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.TranslateTransform();
                $ret.k = _this.b.s == 0 ? (_this.h() * 0.5) : 0;
                return $ret;
            })()));
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 1;
                $ret.m = 1;
                return $ret;
            })()));
            igniteuiReactCore.NativeUI.z(this.i.rootWrapper, a);
            this.j.setStyleProperty("height", "1.125rem");
            this.i.rootWrapper.setStyleProperty("position", "absolute");
            this.i.rootWrapper.setStyleProperty("transform-origin", "0px 0px");
        };
        LabelView.prototype.ad = function () {
            switch (this.b.o) {
                case 1:
                    this.i.rootWrapper.setStyleProperty("margin-top", "0px");
                    break;
                case 2:
                    this.i.rootWrapper.setStyleProperty("margin-top", "-.125rem");
                    break;
                case 3:
                    this.i.rootWrapper.setStyleProperty("margin-top", "-.25rem");
                    break;
            }
        };
        LabelView.prototype.ab = function () {
            this.j.setText(this.b.text != null ? this.b.text : "");
        };
        LabelView.prototype.ae = function (a) {
            if (this.m != a) {
                this.m = a;
                if (this.k != null) {
                    this.k.setAttribute("d", this.m);
                }
            }
        };
        LabelView.prototype.v = function () {
            if (this.i != null) {
                this.i.rootWrapper.setStyleProperty("display", this.b.bf);
                this.j.setStyleProperty("display", this.b.bf);
                var ext_ = this.i.getExternal(this.b, null, null);
                if (ext_ && ext_._onDisplayChanged) {
                    ext_._onDisplayChanged();
                }
                ;
            }
        };
        LabelView.prototype.r = function () {
            if (this.i != null) {
                this.i.rootWrapper.setStyleProperty("align-items", this.b.a9);
                this.j.setStyleProperty("align-items", this.b.a9);
                var ext_ = this.i.getExternal(this.b, null, null);
                if (ext_ && ext_._onAlignItemsChanged) {
                    ext_._onAlignItemsChanged();
                }
                ;
            }
        };
        LabelView.prototype.w = function () {
            if (this.i != null) {
                this.i.rootWrapper.setStyleProperty("flex-direction", this.b.bi);
                this.j.setStyleProperty("flex-direction", this.b.bi);
                var ext_ = this.i.getExternal(this.b, null, null);
                if (ext_ && ext_._onFlexDirectionChanged) {
                    ext_._onFlexDirectionChanged();
                }
                ;
            }
        };
        LabelView.prototype.x = function () {
            if (this.i != null) {
                this.i.rootWrapper.setStyleProperty("flex-grow", this.b.bk);
                this.j.setStyleProperty("flex-grow", this.b.bk);
                var ext_ = this.i.getExternal(this.b, null, null);
                if (ext_ && ext_._onFlexGrowChanged) {
                    ext_._onFlexGrowChanged();
                }
                ;
            }
        };
        LabelView.prototype.n = function (a) {
        };
        LabelView.prototype.z = function () {
            if (this.e()) {
            }
        };
        LabelView.prototype.h = function () {
            var a = this.i.rootWrapper.getStyleProperty("height");
            return parseFloat(igniteuiReactCore.stringReplace(a, "px", ""));
        };
        LabelView.prototype.o = function (a) {
            this.b.cb();
        };
        LabelView.prototype.p = function (a) {
            this.b.cc();
        };
        LabelView.prototype.s = function () {
            this.d = true;
            this.g.add(this.i.rootWrapper.listen("mouseenter", igniteuiReactCore.runOn(this, this.o)));
            this.g.add(this.i.rootWrapper.listen("mouseleave", igniteuiReactCore.runOn(this, this.p)));
        };
        LabelView.prototype.u = function () {
            var e_8, _a;
            this.d = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.g)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_8_1) {
                e_8 = { error: e_8_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_8)
                        throw e_8.error;
                }
            }
            this.g.clear();
        };
        LabelView.prototype.af = function (a) {
            if (a != null) {
                this.j.setStyleProperty("font", a.fontString);
            }
        };
        LabelView.prototype.aa = function (a) {
            igniteuiReactCore.NativeUI.n(this.j, a);
        };
        LabelView.$t = igniteuiReactCore.markType(LabelView, 'LabelView');
        return LabelView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var InputView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputView, _super);
        function InputView() {
            var _this = _super.call(this) || this;
            _this.b = null;
            _this.j = null;
            _this.c = null;
            _this.h = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.e = false;
            _this.p = null;
            _this.d = true;
            _this.k = null;
            _this.l = null;
            return _this;
        }
        InputView.prototype.an = function () {
        };
        InputView.prototype.f = function () {
            return true;
        };
        Object.defineProperty(InputView.prototype, "o", {
            get: function () {
                return this.k;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputView.prototype, "a2", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputView.prototype, "g", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        InputView.prototype.ak = function (a) {
            var e_9, _a;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.h)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_9_1) {
                    e_9 = { error: e_9_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_9)
                            throw e_9.error;
                    }
                }
                this.h.clear();
            }
            this.j = a;
            this.j.rootWrapper.setStyleProperty("display", "inline-block");
            var c = this.j.createElement("input");
            c.setAttribute("type", this.b.b0);
            c.setStyleProperty("position", "relative");
            c.setStyleProperty("box-sizing", "border-box");
            c.setStyleProperty("display", "inline-block");
            c.setStyleProperty("border", "none");
            c.setStyleProperty("height", "2rem");
            c.setStyleProperty("line-height", "0");
            c.setStyleProperty("width", "100%");
            c.setStyleProperty("min-width", "0");
            c.setStyleProperty("overflow", "visible");
            c.setStyleProperty("background", "transparent");
            c.setStyleProperty("background-position-x", "initial");
            c.setStyleProperty("background-position-y", "initial");
            c.setStyleProperty("background-size", "initial");
            c.setStyleProperty("background-repeat-x", "initial");
            c.setStyleProperty("background-repeat-y", "initial");
            c.setStyleProperty("background-attachment", "initial");
            c.setStyleProperty("background-origin", "initial");
            c.setStyleProperty("background-color", "transparent");
            igniteuiReactCore.NativeUI.n(c, this.b.dp);
            c.setStyleProperty("outline-style", "none");
            c.setStyleProperty("box-shadow", "none");
            c.setStyleProperty("border-top", "0.1875rem solid transparent");
            c.setStyleProperty("padding-bottom", "0.1875rem");
            c.setStyleProperty("font-family", "'Segoe UI', Verdana");
            c.setStyleProperty("font-size", "1rem");
            this.h.add(c.listen("change", igniteuiReactCore.runOn(this, this.v)));
            this.h.add(c.listen("input", igniteuiReactCore.runOn(this, this.w)));
            this.h.add(c.listen("focus", igniteuiReactCore.runOn(this, this.ab)));
            this.h.add(c.listen("blur", igniteuiReactCore.runOn(this, this.u)));
            this.h.add(c.listen("mouseenter", igniteuiReactCore.runOn(this, this.s)));
            this.h.add(c.listen("mouseleave", igniteuiReactCore.runOn(this, this.t)));
            this.h.add(c.listen("keydown", igniteuiReactCore.runOn(this, this.ac)));
            this.h.add(c.listen("keyup", igniteuiReactCore.runOn(this, this.ae)));
            this.h.add(c.listen("keypress", igniteuiReactCore.runOn(this, this.ad)));
            this.h.add(c.listen("paste", igniteuiReactCore.runOn(this, this.ah)));
            this.h.add(c.listen("dragenter", igniteuiReactCore.runOn(this, this.z)));
            this.h.add(c.listen("dragleave", igniteuiReactCore.runOn(this, this.aa)));
            this.h.add(c.listen("compositionstart", igniteuiReactCore.runOn(this, this.y)));
            this.h.add(c.listen("compositionend", igniteuiReactCore.runOn(this, this.x)));
            this.h.add(c.listen("mousedown", igniteuiReactCore.runOn(this, this.af)));
            this.h.add(c.listen("mouseup", igniteuiReactCore.runOn(this, this.ag)));
            this.k = c;
            this.j.append(this.k);
            this.b.c8();
        };
        InputView.prototype.at = function (a) {
            this.k.setAttribute("readonly", a.toString());
        };
        InputView.prototype.y = function (a) {
            this.e = true;
            this.b.cq();
        };
        InputView.prototype.x = function (a) {
            this.e = false;
            this.b.cp();
        };
        InputView.prototype.ar = function () {
            this.k.setAttribute("type", this.b.b0);
            if (this.b.b0 == "date") {
                this.k.setStyleProperty("line-height", "normal");
            }
            else {
                this.k.setStyleProperty("line-height", "0");
            }
        };
        InputView.prototype.ap = function () {
            this.k.setAttribute("placeholder", this.b.b7);
        };
        InputView.prototype.ay = function () {
            switch (this.b.l) {
                case 1:
                    this.k.setStyleProperty("height", "2rem");
                    this.k.setStyleProperty("font-size", "1rem");
                    break;
                case 2:
                    this.k.setStyleProperty("height", "1.68421rem");
                    this.k.setStyleProperty("font-size", "1rem");
                    break;
                case 3:
                    this.k.setStyleProperty("height", "1.45455rem");
                    this.k.setStyleProperty("font-size", ".95455rem");
                    break;
            }
        };
        InputView.prototype.ax = function () {
            var _this = this;
            var a = new igniteuiReactCore.TransformGroup();
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.TranslateTransform();
                $ret.k = _this.b.r == 2 ? (_this.i() * -0.25) : 0;
                return $ret;
            })()));
            a.j.add(((function () {
                var $ret = new igniteuiReactCore.ScaleTransform();
                $ret.l = 1;
                $ret.m = 1;
                return $ret;
            })()));
            igniteuiReactCore.NativeUI.z(this.j.rootWrapper, a);
            this.j.rootWrapper.setStyleProperty("transform-origin", "0px 0px");
        };
        InputView.prototype.i = function () {
            var a = this.j.rootWrapper.getStyleProperty("height");
            var b = parseFloat(igniteuiReactCore.stringReplace(a, "px", ""));
            return b;
        };
        InputView.prototype.as = function (a) {
            this.k.setProperty("value", a);
        };
        InputView.prototype.u = function (a) {
            this.b.cm();
        };
        InputView.prototype.ab = function (a) {
            this.b.cu();
        };
        InputView.prototype.af = function (a) {
            var b = this.a1(a);
            this.b.c0(b);
            if (b.handled) {
                a.preventDefault();
            }
        };
        InputView.prototype.ag = function (a) {
            var b = this.a1(a);
            this.b.c3(b);
            if (b.handled) {
                a.preventDefault();
            }
        };
        InputView.prototype.a1 = function (a) {
            var b = new igniteuiReactCore.MouseButtonEventArgs();
            b.position = { $type: igniteuiReactCore.Point_$type, x: a.offsetX, y: a.offsetY };
            return b;
        };
        InputView.prototype.v = function (a) {
            this.b.cn();
        };
        InputView.prototype.w = function (a) {
            this.b.co();
        };
        InputView.prototype.ac = function (a) {
            var b = new igniteuiReactCore.KeyEventArgs(0, a);
            this.b.cx(b);
        };
        InputView.prototype.ae = function (a) {
            var b = new igniteuiReactCore.KeyEventArgs(0, a);
            this.b.cz(b);
        };
        InputView.prototype.ad = function (a) {
            var b = new igniteuiReactCore.KeyEventArgs(0, a);
            this.b.cy(b);
        };
        InputView.prototype.ah = function (a) {
            this.b.c4();
        };
        InputView.prototype.z = function (a) {
            this.b.cs();
        };
        InputView.prototype.aa = function (a) {
            this.b.ct();
        };
        InputView.prototype.az = function (a) {
            if (this.p != a) {
                this.p = a;
                if (this.l != null) {
                    this.l.setAttribute("d", this.p);
                }
            }
        };
        InputView.prototype.q = function () {
            return this.k.getProperty("value");
        };
        InputView.prototype.r = function (a) {
        };
        InputView.prototype.n = function () {
            var a = this.k.getProperty("selectionStart");
            return igniteuiReactCore.typeGetValue(a);
        };
        InputView.prototype.m = function () {
            var a = this.k.getProperty("selectionEnd");
            return igniteuiReactCore.typeGetValue(a);
        };
        InputView.prototype.aw = function (a) {
            this.k.setProperty("selectionStart", a);
        };
        InputView.prototype.au = function (a) {
            this.k.setProperty("selectionEnd", a);
        };
        InputView.prototype.ao = function () {
            if (this.f()) {
            }
        };
        InputView.prototype.s = function (a) {
            this.b.c1();
        };
        InputView.prototype.t = function (a) {
            this.b.c2();
        };
        InputView.prototype.aj = function () {
            this.d = true;
            this.h.add(this.k.listen("change", igniteuiReactCore.runOn(this, this.v)));
            this.h.add(this.k.listen("input", igniteuiReactCore.runOn(this, this.w)));
            this.h.add(this.k.listen("focus", igniteuiReactCore.runOn(this, this.ab)));
            this.h.add(this.k.listen("blur", igniteuiReactCore.runOn(this, this.u)));
            this.h.add(this.k.listen("mouseenter", igniteuiReactCore.runOn(this, this.s)));
            this.h.add(this.k.listen("mouseleave", igniteuiReactCore.runOn(this, this.t)));
            this.h.add(this.k.listen("keydown", igniteuiReactCore.runOn(this, this.ac)));
            this.h.add(this.k.listen("paste", igniteuiReactCore.runOn(this, this.ah)));
            this.h.add(this.k.listen("dragenter", igniteuiReactCore.runOn(this, this.z)));
            this.h.add(this.k.listen("dragleave", igniteuiReactCore.runOn(this, this.aa)));
            this.h.add(this.k.listen("compositionstart", igniteuiReactCore.runOn(this, this.y)));
            this.h.add(this.k.listen("compositionend", igniteuiReactCore.runOn(this, this.x)));
            this.h.add(this.k.listen("mousedown", igniteuiReactCore.runOn(this, this.af)));
            this.h.add(this.k.listen("mouseup", igniteuiReactCore.runOn(this, this.ag)));
        };
        InputView.prototype.al = function () {
            var e_10, _a;
            this.d = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.h)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_10_1) {
                e_10 = { error: e_10_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_10)
                        throw e_10.error;
                }
            }
            this.h.clear();
        };
        InputView.prototype.a0 = function (a) {
            if (a != null) {
                this.k.setStyleProperty("font", a.fontString);
            }
        };
        InputView.prototype.am = function () {
            if (this.k != null) {
                this.k.focus(false);
            }
        };
        InputView.prototype.aq = function () {
            if (this.k != null) {
                var nativeInput_ = this.k;
                nativeInput_.getNativeElement().select();
            }
        };
        InputView.prototype.av = function (a, b) {
            if (this.k != null) {
                var c = this.k.getNativeElement();
                c.setSelectionRange(a, b);
            }
        };
        InputView.prototype.ai = function () {
            if (igniteuiReactCore.KeyFrameAnimationFactory.h == null) {
                igniteuiReactCore.KeyFrameAnimationFactory.h = this.j;
            }
        };
        InputView.prototype.a = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.j.rootWrapper, 0, null, a);
        };
        InputView.$t = igniteuiReactCore.markType(InputView, 'InputView');
        return InputView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var InputGroupItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputGroupItem, _super);
        function InputGroupItem() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.c = null;
            _this.a = null;
            _this.propertyChanged = null;
            return _this;
        }
        Object.defineProperty(InputGroupItem.prototype, "e", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.g("Name", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroupItem.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.g("InputGroup", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        InputGroupItem.prototype.g = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.h(a, b, c);
        };
        InputGroupItem.prototype.h = function (a, b, c) {
        };
        InputGroupItem.$t = igniteuiReactCore.markType(InputGroupItem, 'InputGroupItem', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        return InputGroupItem;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Suffix = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Suffix, _super);
        function Suffix() {
            var _this = _super.call(this) || this;
            _this._view = null;
            _this.j = 0;
            _this.v = "ig-suffix-" + Suffix.s++;
            _this.u = null;
            _this.n = false;
            _this.m = false;
            _this.o = false;
            var a = new SuffixView();
            a.a = _this;
            _this.view = a;
            _this.view.o();
            return _this;
        }
        Object.defineProperty(Suffix.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        Suffix.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Object.defineProperty(Suffix.prototype, "k", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.g("ShiftType", igniteuiReactCore.enumGetBox(SuffixShiftType_$type, b), igniteuiReactCore.enumGetBox(SuffixShiftType_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Suffix.prototype.h = function (a, b, c) {
            _super.prototype.h.call(this, a, b, c);
            switch (a) {
                case "InputGroup":
                    this.ai();
                    break;
                case "ShiftType":
                    this.al();
                    break;
            }
        };
        Suffix.prototype.al = function () {
            this.view.q();
        };
        Suffix.prototype.ai = function () {
            this.view.q();
        };
        Suffix.prototype.ap = function () {
        };
        Suffix.prototype.ao = function () {
        };
        Suffix.prototype.aj = function () {
            this.q = true;
        };
        Suffix.prototype.ak = function () {
            this.q = false;
        };
        Object.defineProperty(Suffix.prototype, "z", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                var b = this.v;
                this.v = a;
                if (b != this.v) {
                    this.g("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Suffix.prototype, "w", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (b != this.u) {
                    this.g("AriaLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Suffix.prototype, "q", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.g("IsHover", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Suffix.prototype, "disabled", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.g("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Suffix.prototype.am = function () {
        };
        Suffix.prototype.onDetachedFromUI = function () {
            this.view.n();
        };
        Suffix.prototype.onAttachedToUI = function () {
            this.view.l();
        };
        Suffix.prototype.r = function () {
            return this.view.d();
        };
        Suffix.prototype.t = function () {
            return this.i();
        };
        Suffix.prototype.y = function () {
            var a = this.i();
            return a.e();
        };
        Suffix.prototype.i = function () {
            var a = new SuffixVisualModelExport();
            a.a = this.k;
            a.c = this.q;
            a.b = this.disabled;
            a.d = this.e;
            return a;
        };
        Suffix.prototype.appendContentChild = function (a) {
            this.view.k(a);
        };
        Suffix.prototype.provideContainer = function (a) {
            this.view.m(a);
        };
        Suffix.$t = igniteuiReactCore.markType(Suffix, 'Suffix', InputGroupItem.$);
        Suffix.s = 0;
        return Suffix;
    }(InputGroupItem));
    /**
     * @hidden
     */
    var Prefix = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Prefix, _super);
        function Prefix() {
            var _this = _super.call(this) || this;
            _this._view = null;
            _this.j = 0;
            _this.v = "ig-prefix-" + Prefix.s++;
            _this.u = null;
            _this.n = false;
            _this.m = false;
            _this.o = false;
            var a = new PrefixView();
            a.a = _this;
            _this.view = a;
            _this.view.o();
            return _this;
        }
        Object.defineProperty(Prefix.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        Prefix.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Object.defineProperty(Prefix.prototype, "k", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.g("ShiftType", igniteuiReactCore.enumGetBox(PrefixShiftType_$type, b), igniteuiReactCore.enumGetBox(PrefixShiftType_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Prefix.prototype.h = function (a, b, c) {
            _super.prototype.h.call(this, a, b, c);
            switch (a) {
                case "InputGroup":
                    this.ai();
                    break;
                case "ShiftType":
                    this.al();
                    break;
            }
        };
        Prefix.prototype.al = function () {
            this.view.q();
        };
        Prefix.prototype.ai = function () {
            this.view.q();
        };
        Prefix.prototype.ap = function () {
        };
        Prefix.prototype.ao = function () {
        };
        Prefix.prototype.aj = function () {
            this.q = true;
        };
        Prefix.prototype.ak = function () {
            this.q = false;
        };
        Object.defineProperty(Prefix.prototype, "z", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                var b = this.v;
                this.v = a;
                if (b != this.v) {
                    this.g("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Prefix.prototype, "w", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (b != this.u) {
                    this.g("AriaLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Prefix.prototype, "q", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.g("IsHover", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Prefix.prototype, "disabled", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.g("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Prefix.prototype.am = function () {
        };
        Prefix.prototype.onDetachedFromUI = function () {
            this.view.n();
        };
        Prefix.prototype.onAttachedToUI = function () {
            this.view.l();
        };
        Prefix.prototype.r = function () {
            return this.view.d();
        };
        Prefix.prototype.t = function () {
            return this.i();
        };
        Prefix.prototype.y = function () {
            var a = this.i();
            return a.e();
        };
        Prefix.prototype.i = function () {
            var a = new PrefixVisualModelExport();
            a.a = this.k;
            a.c = this.q;
            a.b = this.disabled;
            a.d = this.e;
            return a;
        };
        Prefix.prototype.appendContentChild = function (a) {
            this.view.k(a);
        };
        Prefix.prototype.provideContainer = function (a) {
            this.view.m(a);
        };
        Prefix.$t = igniteuiReactCore.markType(Prefix, 'Prefix', InputGroupItem.$);
        Prefix.s = 0;
        return Prefix;
    }(InputGroupItem));
    /**
     * @hidden
     */
    var InputGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputGroup, _super);
        function InputGroup() {
            var _this = _super.call(this) || this;
            _this.j = 0;
            _this.f = 1;
            _this.e = 1;
            _this.ad = false;
            _this.b = 0;
            _this._view = null;
            _this.q = null;
            _this.o = null;
            _this.lostFocus = null;
            _this.gotFocus = null;
            _this.df = ThemeResolver.b(InputGroup.c, InputGroup.fu, InputGroup.d1);
            _this.e5 = ThemeResolver.b(InputGroup.c, InputGroup.f5, InputGroup.ec);
            _this.m6 = ThemeResolver.d(InputGroup.c, InputGroup.nf, InputGroup.m9);
            _this.tm = ThemeResolver.f(InputGroup.c, InputGroup.tv, InputGroup.tp);
            _this.pf = ThemeResolver.e(InputGroup.c, InputGroup.rd, InputGroup.px);
            _this.q0 = ThemeResolver.e(InputGroup.c, InputGroup.ru, InputGroup.qe);
            _this.q1 = ThemeResolver.e(InputGroup.c, InputGroup.rv, InputGroup.qf);
            _this.hb = ThemeResolver.b(InputGroup.c, InputGroup.gx, InputGroup.e4);
            _this.ha = ThemeResolver.b(InputGroup.c, InputGroup.gw, InputGroup.e3);
            _this.e9 = ThemeResolver.b(InputGroup.c, InputGroup.f9, InputGroup.eg);
            _this.so = ThemeResolver.e(InputGroup.c, InputGroup.se, InputGroup.qy);
            _this.sp = ThemeResolver.e(InputGroup.c, InputGroup.sf, InputGroup.qz);
            _this.q3 = ThemeResolver.e(InputGroup.c, InputGroup.rx, InputGroup.qh);
            _this.q2 = ThemeResolver.e(InputGroup.c, InputGroup.rw, InputGroup.qg);
            _this.g8 = ThemeResolver.b(InputGroup.c, InputGroup.gu, InputGroup.e1);
            _this.e8 = ThemeResolver.b(InputGroup.c, InputGroup.f8, InputGroup.ef);
            _this.e6 = ThemeResolver.b(InputGroup.c, InputGroup.f6, InputGroup.ed);
            _this.e7 = ThemeResolver.b(InputGroup.c, InputGroup.f7, InputGroup.ee);
            _this.g9 = ThemeResolver.b(InputGroup.c, InputGroup.gv, InputGroup.e2);
            _this.pe = ThemeResolver.e(InputGroup.c, InputGroup.rc, InputGroup.pw);
            _this.fa = ThemeResolver.b(InputGroup.c, InputGroup.ga, InputGroup.eh);
            _this.fb = ThemeResolver.b(InputGroup.c, InputGroup.gb, InputGroup.ei);
            _this.nc = ThemeResolver.d(InputGroup.c, InputGroup.ng, InputGroup.na);
            _this.ts = ThemeResolver.f(InputGroup.c, InputGroup.tw, InputGroup.tq);
            _this.q5 = ThemeResolver.e(InputGroup.c, InputGroup.rz, InputGroup.qj);
            _this.q6 = ThemeResolver.e(InputGroup.c, InputGroup.r0, InputGroup.qk);
            _this.q7 = ThemeResolver.e(InputGroup.c, InputGroup.r1, InputGroup.ql);
            _this.fj = ThemeResolver.b(InputGroup.c, InputGroup.gj, InputGroup.eq);
            _this.fi = ThemeResolver.b(InputGroup.c, InputGroup.gi, InputGroup.ep);
            _this.ff = ThemeResolver.b(InputGroup.c, InputGroup.gf, InputGroup.em);
            _this.ra = ThemeResolver.e(InputGroup.c, InputGroup.r4, InputGroup.qo);
            _this.rb = ThemeResolver.e(InputGroup.c, InputGroup.r5, InputGroup.qp);
            _this.q9 = ThemeResolver.e(InputGroup.c, InputGroup.r3, InputGroup.qn);
            _this.q8 = ThemeResolver.e(InputGroup.c, InputGroup.r2, InputGroup.qm);
            _this.fg = ThemeResolver.b(InputGroup.c, InputGroup.gg, InputGroup.en);
            _this.fe = ThemeResolver.b(InputGroup.c, InputGroup.ge, InputGroup.el);
            _this.fc = ThemeResolver.b(InputGroup.c, InputGroup.gc, InputGroup.ej);
            _this.fd = ThemeResolver.b(InputGroup.c, InputGroup.gd, InputGroup.ek);
            _this.fh = ThemeResolver.b(InputGroup.c, InputGroup.gh, InputGroup.eo);
            _this.q4 = ThemeResolver.e(InputGroup.c, InputGroup.ry, InputGroup.qi);
            _this.dg = ThemeResolver.b(InputGroup.c, InputGroup.fv, InputGroup.d2);
            _this.dh = ThemeResolver.b(InputGroup.c, InputGroup.fw, InputGroup.d3);
            _this.m5 = ThemeResolver.d(InputGroup.c, InputGroup.ne, InputGroup.m8);
            _this.tl = ThemeResolver.f(InputGroup.c, InputGroup.tu, InputGroup.to);
            _this.pp = ThemeResolver.e(InputGroup.c, InputGroup.rn, InputGroup.p7);
            _this.pq = ThemeResolver.e(InputGroup.c, InputGroup.ro, InputGroup.p8);
            _this.pr = ThemeResolver.e(InputGroup.c, InputGroup.rp, InputGroup.p9);
            _this.dq = ThemeResolver.b(InputGroup.c, InputGroup.f4, InputGroup.eb);
            _this.dp = ThemeResolver.b(InputGroup.c, InputGroup.f3, InputGroup.ea);
            _this.dl = ThemeResolver.b(InputGroup.c, InputGroup.f0, InputGroup.d7);
            _this.pu = ThemeResolver.e(InputGroup.c, InputGroup.rs, InputGroup.qc);
            _this.pv = ThemeResolver.e(InputGroup.c, InputGroup.rt, InputGroup.qd);
            _this.pt = ThemeResolver.e(InputGroup.c, InputGroup.rr, InputGroup.qb);
            _this.ps = ThemeResolver.e(InputGroup.c, InputGroup.rq, InputGroup.qa);
            _this.dm = ThemeResolver.b(InputGroup.c, InputGroup.f1, InputGroup.d8);
            _this.dk = ThemeResolver.b(InputGroup.c, InputGroup.fz, InputGroup.d6);
            _this.di = ThemeResolver.b(InputGroup.c, InputGroup.fx, InputGroup.d4);
            _this.dj = ThemeResolver.b(InputGroup.c, InputGroup.fy, InputGroup.d5);
            _this.dn = ThemeResolver.b(InputGroup.c, InputGroup.f2, InputGroup.d9);
            _this.po = ThemeResolver.e(InputGroup.c, InputGroup.rm, InputGroup.p6);
            _this.c5 = ThemeResolver.b(InputGroup.c, InputGroup.fk, InputGroup.dr);
            _this.c6 = ThemeResolver.b(InputGroup.c, InputGroup.fl, InputGroup.ds);
            _this.m4 = ThemeResolver.d(InputGroup.c, InputGroup.nd, InputGroup.m7);
            _this.tk = ThemeResolver.f(InputGroup.c, InputGroup.tt, InputGroup.tn);
            _this.ph = ThemeResolver.e(InputGroup.c, InputGroup.rf, InputGroup.pz);
            _this.pi = ThemeResolver.e(InputGroup.c, InputGroup.rg, InputGroup.p0);
            _this.pj = ThemeResolver.e(InputGroup.c, InputGroup.rh, InputGroup.p1);
            _this.de = ThemeResolver.b(InputGroup.c, InputGroup.ft, InputGroup.d0);
            _this.dd = ThemeResolver.b(InputGroup.c, InputGroup.fs, InputGroup.dz);
            _this.da = ThemeResolver.b(InputGroup.c, InputGroup.fp, InputGroup.dw);
            _this.pm = ThemeResolver.e(InputGroup.c, InputGroup.rk, InputGroup.p4);
            _this.pn = ThemeResolver.e(InputGroup.c, InputGroup.rl, InputGroup.p5);
            _this.pl = ThemeResolver.e(InputGroup.c, InputGroup.rj, InputGroup.p3);
            _this.pk = ThemeResolver.e(InputGroup.c, InputGroup.ri, InputGroup.p2);
            _this.db = ThemeResolver.b(InputGroup.c, InputGroup.fq, InputGroup.dx);
            _this.c9 = ThemeResolver.b(InputGroup.c, InputGroup.fo, InputGroup.dv);
            _this.c7 = ThemeResolver.b(InputGroup.c, InputGroup.fm, InputGroup.dt);
            _this.c8 = ThemeResolver.b(InputGroup.c, InputGroup.fn, InputGroup.du);
            _this.dc = ThemeResolver.b(InputGroup.c, InputGroup.fr, InputGroup.dy);
            _this.pg = ThemeResolver.e(InputGroup.c, InputGroup.re, InputGroup.py);
            _this.gy = ThemeResolver.b(InputGroup.c, InputGroup.gk, InputGroup.er);
            _this.gz = ThemeResolver.b(InputGroup.c, InputGroup.gl, InputGroup.es);
            _this.ni = ThemeResolver.d(InputGroup.c, InputGroup.nh, InputGroup.nb);
            _this.ty = ThemeResolver.f(InputGroup.c, InputGroup.tx, InputGroup.tr);
            _this.sh = ThemeResolver.e(InputGroup.c, InputGroup.r7, InputGroup.qr);
            _this.si = ThemeResolver.e(InputGroup.c, InputGroup.r8, InputGroup.qs);
            _this.sj = ThemeResolver.e(InputGroup.c, InputGroup.r9, InputGroup.qt);
            _this.g7 = ThemeResolver.b(InputGroup.c, InputGroup.gt, InputGroup.e0);
            _this.g6 = ThemeResolver.b(InputGroup.c, InputGroup.gs, InputGroup.ez);
            _this.g3 = ThemeResolver.b(InputGroup.c, InputGroup.gp, InputGroup.ew);
            _this.sm = ThemeResolver.e(InputGroup.c, InputGroup.sc, InputGroup.qw);
            _this.sn = ThemeResolver.e(InputGroup.c, InputGroup.sd, InputGroup.qx);
            _this.sl = ThemeResolver.e(InputGroup.c, InputGroup.sb, InputGroup.qv);
            _this.sk = ThemeResolver.e(InputGroup.c, InputGroup.sa, InputGroup.qu);
            _this.g4 = ThemeResolver.b(InputGroup.c, InputGroup.gq, InputGroup.ex);
            _this.g2 = ThemeResolver.b(InputGroup.c, InputGroup.go, InputGroup.ev);
            _this.g0 = ThemeResolver.b(InputGroup.c, InputGroup.gm, InputGroup.et);
            _this.g1 = ThemeResolver.b(InputGroup.c, InputGroup.gn, InputGroup.eu);
            _this.g5 = ThemeResolver.b(InputGroup.c, InputGroup.gr, InputGroup.ey);
            _this.sg = ThemeResolver.e(InputGroup.c, InputGroup.r6, InputGroup.qq);
            _this.nm = ThemeResolver.e(InputGroup.c, InputGroup.rd, InputGroup.px);
            _this.nn = ThemeResolver.e(InputGroup.c, InputGroup.ru, InputGroup.qe);
            _this.am = ThemeResolver.b(InputGroup.c, InputGroup.fu, InputGroup.d1);
            _this.an = ThemeResolver.b(InputGroup.c, InputGroup.f5, InputGroup.ec);
            _this.mt = ThemeResolver.d(InputGroup.c, InputGroup.nf, InputGroup.m9);
            _this.s9 = ThemeResolver.f(InputGroup.c, InputGroup.tv, InputGroup.tp);
            _this.av = ThemeResolver.b(InputGroup.c, InputGroup.gx, InputGroup.e4);
            _this.au = ThemeResolver.b(InputGroup.c, InputGroup.gw, InputGroup.e3);
            _this.ar = ThemeResolver.b(InputGroup.c, InputGroup.f9, InputGroup.eg);
            _this.nq = ThemeResolver.e(InputGroup.c, InputGroup.se, InputGroup.qy);
            _this.nr = ThemeResolver.e(InputGroup.c, InputGroup.sf, InputGroup.qz);
            _this.np = ThemeResolver.e(InputGroup.c, InputGroup.rx, InputGroup.qh);
            _this.no = ThemeResolver.e(InputGroup.c, InputGroup.rw, InputGroup.qg);
            _this.as = ThemeResolver.b(InputGroup.c, InputGroup.gu, InputGroup.e1);
            _this.aq = ThemeResolver.b(InputGroup.c, InputGroup.f8, InputGroup.ef);
            _this.ao = ThemeResolver.b(InputGroup.c, InputGroup.f6, InputGroup.ed);
            _this.ap = ThemeResolver.b(InputGroup.c, InputGroup.f7, InputGroup.ee);
            _this.at = ThemeResolver.b(InputGroup.c, InputGroup.gv, InputGroup.e2);
            _this.nl = ThemeResolver.e(InputGroup.c, InputGroup.rc, InputGroup.pw);
            _this.a6 = NaN;
            _this.bh = NaN;
            _this.nt = null;
            _this.mw = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.tc = new igniteuiReactCore.Thickness(1, NaN, NaN, NaN, NaN);
            _this.b9 = NaN;
            _this.b8 = NaN;
            _this.bl = NaN;
            _this.op = null;
            _this.oq = null;
            _this.oa = null;
            _this.n9 = null;
            _this.b6 = NaN;
            _this.bk = NaN;
            _this.bi = NaN;
            _this.bj = NaN;
            _this.b7 = NaN;
            _this.ns = null;
            _this.bm = NaN;
            _this.bn = NaN;
            _this.od = null;
            _this.oc = null;
            _this.mx = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.td = new igniteuiReactCore.Thickness(1, NaN, NaN, NaN, NaN);
            _this.bv = NaN;
            _this.bu = NaN;
            _this.br = NaN;
            _this.og = null;
            _this.oh = null;
            _this.of = null;
            _this.oe = null;
            _this.bs = NaN;
            _this.bq = NaN;
            _this.bo = NaN;
            _this.bp = NaN;
            _this.bt = NaN;
            _this.ob = null;
            _this.a7 = NaN;
            _this.a8 = NaN;
            _this.n3 = null;
            _this.n2 = null;
            _this.mv = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.tb = new igniteuiReactCore.Thickness(1, NaN, NaN, NaN, NaN);
            _this.bg = NaN;
            _this.bf = NaN;
            _this.bc = NaN;
            _this.n6 = null;
            _this.n7 = null;
            _this.n5 = null;
            _this.n4 = null;
            _this.bd = NaN;
            _this.bb = NaN;
            _this.a9 = NaN;
            _this.ba = NaN;
            _this.be = NaN;
            _this.n1 = null;
            _this.aw = NaN;
            _this.ax = NaN;
            _this.nw = null;
            _this.nv = null;
            _this.mu = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.ta = new igniteuiReactCore.Thickness(1, NaN, NaN, NaN, NaN);
            _this.a5 = NaN;
            _this.a4 = NaN;
            _this.a1 = NaN;
            _this.nz = null;
            _this.n0 = null;
            _this.ny = null;
            _this.nx = null;
            _this.a2 = NaN;
            _this.a0 = NaN;
            _this.ay = NaN;
            _this.az = NaN;
            _this.a3 = NaN;
            _this.nu = null;
            _this.bw = NaN;
            _this.bx = NaN;
            _this.ok = null;
            _this.oj = null;
            _this.my = new igniteuiReactCore.CornerRadius(1, NaN, NaN, NaN, NaN);
            _this.te = new igniteuiReactCore.Thickness(1, NaN, NaN, NaN, NaN);
            _this.b5 = NaN;
            _this.b4 = NaN;
            _this.b1 = NaN;
            _this.on = null;
            _this.oo = null;
            _this.om = null;
            _this.ol = null;
            _this.b2 = NaN;
            _this.b0 = NaN;
            _this.by = NaN;
            _this.bz = NaN;
            _this.b3 = NaN;
            _this.oi = null;
            _this.x = false;
            _this.t = false;
            _this.z = false;
            _this.v = false;
            _this.y = false;
            _this.u = false;
            _this.r = false;
            _this.n8 = null;
            _this.ib = "ig-inputgroup-" + InputGroup.h8++;
            _this.w = false;
            _this.propertyChanged = null;
            _this.l = new InputGroupInputCollection();
            _this.p = null;
            _this.ab = false;
            _this.s = false;
            _this.aa = false;
            _this.h9 = igniteuiReactCore.toNullable(igniteuiReactCore.Number_$type, null);
            var a = new InputGroupView();
            a.d = _this;
            _this.view = a;
            _this.view.ag();
            var b = _this.l;
            b.collectionChanged = igniteuiReactCore.delegateCombine(b.collectionChanged, igniteuiReactCore.runOn(_this, _this.lx));
            var c = _this.l;
            c.collectionResetting = igniteuiReactCore.delegateCombine(c.collectionResetting, igniteuiReactCore.runOn(_this, _this.ly));
            return _this;
        }
        InputGroup.prototype.ly = function (a, b) {
            this.mm();
        };
        InputGroup.prototype.appendContentChild = function (a) {
            this.view.aa(a);
        };
        InputGroup.prototype.mi = function (a) {
            this.view.aj(a);
        };
        Object.defineProperty(InputGroup.prototype, "k", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.md("DisplayType", igniteuiReactCore.enumGetBox(InputGroupDisplayType_$type, b), igniteuiReactCore.enumGetBox(InputGroupDisplayType_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "h", {
            get: function () {
                return this.f;
            },
            set: function (a) {
                var b = this.f;
                this.f = a;
                if (b != this.f) {
                    this.md("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "g", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                if (b != this.e) {
                    this.md("ActualDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.prototype.l3 = function (a) {
            for (var b = 0; b < this.inputs.count; b++) {
                if (igniteuiReactCore.typeCast(Label.$, this.inputs._inner[b]) !== null) {
                    a(this.inputs._inner[b]);
                }
            }
        };
        InputGroup.prototype.l4 = function (a) {
            for (var b = 0; b < this.inputs.count; b++) {
                if (igniteuiReactCore.typeCast(Prefix.$, this.inputs._inner[b]) !== null) {
                    a(this.inputs._inner[b]);
                }
            }
        };
        InputGroup.prototype.l2 = function (a) {
            for (var b = 0; b < this.inputs.count; b++) {
                if (igniteuiReactCore.typeCast(Input.$, this.inputs._inner[b]) !== null) {
                    a(this.inputs._inner[b]);
                }
            }
        };
        InputGroup.prototype.l5 = function (a) {
            for (var b = 0; b < this.inputs.count; b++) {
                if (igniteuiReactCore.typeCast(Suffix.$, this.inputs._inner[b]) !== null) {
                    a(this.inputs._inner[b]);
                }
            }
        };
        InputGroup.prototype.lx = function (a, b) {
            var e_11, _a, e_12, _b;
            if (b.oldItems != null) {
                try {
                    for (var _c = tslib_1.__values(igniteuiReactCore.fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var c = _d.value;
                        var d = c;
                        if (d != null) {
                            d.b = null;
                        }
                    }
                }
                catch (e_11_1) {
                    e_11 = { error: e_11_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_11)
                            throw e_11.error;
                    }
                }
            }
            if (b.newItems != null) {
                try {
                    for (var _e = tslib_1.__values(igniteuiReactCore.fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var e = _f.value;
                        var f = e;
                        if (f != null) {
                            f.b = this;
                        }
                    }
                }
                catch (e_12_1) {
                    e_12 = { error: e_12_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_12)
                            throw e_12.error;
                    }
                }
            }
            this.mk();
            this.ad = true;
            try {
                this.ms();
            }
            finally {
                this.ad = false;
            }
            this.mp();
            this.mo();
            this.mq();
            this.mr();
            this.mm();
        };
        Object.defineProperty(InputGroup.prototype, "d", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (b != this.b) {
                    this.md("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.prototype.destroy = function () {
            this.provideContainer(null);
        };
        InputGroup.prototype.md = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.mg(a, b, c);
        };
        InputGroup.prototype.mg = function (a, b, c) {
            var _this = this;
            switch (a) {
                case "BaseTheme":
                    this.ml(this.d);
                    this.mn();
                    this.l3(function (d) { return d.l = _this.d == 0 ? 2 : _this.d; });
                    break;
                case "ActualBorderColor":
                case "ActualBackgroundColor":
                case "ActualBorderWidth":
                case "ActualFocusBorderColor":
                case "ActualFocusBorderWidth":
                case "ActualCornerRadius":
                case "ActualContentPadding":
                case "ActualUnderlineOpacity":
                case "ActualUnderlineRippleOpacity":
                case "ActualUnderlineRippleWidth":
                case "ActualUnderlineRippleColor":
                case "ActualUnderlineColor":
                case "ActualHoverUnderlineColor":
                case "ActualUnderlineWidth":
                case "ActualHoverUnderlineWidth":
                case "ActualHoverUnderlineOpacity":
                case "ActualFocusUnderlineColor":
                case "ActualFocusUnderlineOpacity":
                case "ActualFocusUnderlineRippleOpacity":
                case "IsHovered":
                    this.aa = true;
                    this.ab = true;
                    this.s = true;
                    this.mm();
                    break;
                case "BorderColor":
                case "BackgroundColor":
                case "BorderWidth":
                case "FocusBorderColor":
                case "FocusBorderWidth":
                case "CornerRadius":
                case "ContentPadding":
                case "UnderlineOpacity":
                case "UnderlineRippleOpacity":
                case "UnderlineRippleWidth":
                case "UnderlineRippleColor":
                case "UnderlineColor":
                case "HoverUnderlineColor":
                case "UnderlineWidth":
                case "HoverUnderlineWidth":
                case "HoverUnderlineOpacity":
                case "FocusUnderlineColor":
                case "FocusUnderlineOpacity":
                case "FocusUnderlineRippleOpacity":
                case "LineTypeBorderColor":
                case "LineTypeBackgroundColor":
                case "LineTypeBorderWidth":
                case "LineTypeFocusBorderColor":
                case "LineTypeFocusBorderWidth":
                case "LineTypeCornerRadius":
                case "LineTypeContentPadding":
                case "LineTypeUnderlineOpacity":
                case "LineTypeUnderlineRippleOpacity":
                case "LineTypeUnderlineRippleWidth":
                case "LineTypeUnderlineRippleColor":
                case "LineTypeUnderlineColor":
                case "LineTypeHoverUnderlineColor":
                case "LineTypeUnderlineWidth":
                case "LineTypeHoverUnderlineWidth":
                case "LineTypeHoverUnderlineOpacity":
                case "LineTypeFocusUnderlineColor":
                case "LineTypeFocusUnderlineOpacity":
                case "LineTypeFocusUnderlineRippleOpacity":
                case "BoxTypeBorderColor":
                case "BoxTypeBackgroundColor":
                case "BoxTypeBorderWidth":
                case "BoxTypeFocusBorderColor":
                case "BoxTypeFocusBorderWidth":
                case "BoxTypeCornerRadius":
                case "BoxTypeContentPadding":
                case "BoxTypeUnderlineOpacity":
                case "BoxTypeUnderlineRippleOpacity":
                case "BoxTypeUnderlineRippleWidth":
                case "BoxTypeUnderlineRippleColor":
                case "BoxTypeUnderlineColor":
                case "BoxTypeHoverUnderlineColor":
                case "BoxTypeUnderlineWidth":
                case "BoxTypeHoverUnderlineWidth":
                case "BoxTypeHoverUnderlineOpacity":
                case "BoxTypeFocusUnderlineColor":
                case "BoxTypeFocusUnderlineOpacity":
                case "BoxTypeFocusUnderlineRippleOpacity":
                case "BorderTypeBorderColor":
                case "BorderTypeBackgroundColor":
                case "BorderTypeBorderWidth":
                case "BorderTypeFocusBorderColor":
                case "BorderTypeFocusBorderWidth":
                case "BorderTypeCornerRadius":
                case "BorderTypeContentPadding":
                case "BorderTypeUnderlineOpacity":
                case "BorderTypeUnderlineRippleOpacity":
                case "BorderTypeUnderlineRippleWidth":
                case "BorderTypeUnderlineRippleColor":
                case "BorderTypeUnderlineColor":
                case "BorderTypeHoverUnderlineColor":
                case "BorderTypeUnderlineWidth":
                case "BorderTypeHoverUnderlineWidth":
                case "BorderTypeHoverUnderlineOpacity":
                case "BorderTypeFocusUnderlineColor":
                case "BorderTypeFocusUnderlineOpacity":
                case "BorderTypeFocusUnderlineRippleOpacity":
                case "DisplayType":
                    this.mn();
                    break;
                case "ActualDensity":
                    this.view.al();
                    this.mn();
                    break;
                case "Density":
                    this.g = this.h == 0 ? 1 : this.h;
                    break;
                case "IsFocused":
                    this.mb();
                    this.mm();
                    break;
                case "IsExpanded":
                    this.t = true;
                    this.ac = this.ah;
                    break;
                case "ActualIsExpanded":
                    this.l6();
                    break;
            }
        };
        InputGroup.m2 = function (a, b) {
            return new igniteuiReactCore.CornerRadius(1, !igniteuiReactCore.isNaN_(a.c) ? a.c : b.c, !igniteuiReactCore.isNaN_(a.d) ? a.d : b.d, !igniteuiReactCore.isNaN_(a.b) ? a.b : b.b, !igniteuiReactCore.isNaN_(a.a) ? a.a : b.a);
        };
        InputGroup.ti = function (a, b) {
            return new igniteuiReactCore.Thickness(1, !igniteuiReactCore.isNaN_(a.c) ? a.c : b.c, !igniteuiReactCore.isNaN_(a.e) ? a.e : b.e, !igniteuiReactCore.isNaN_(a.d) ? a.d : b.d, !igniteuiReactCore.isNaN_(a.b) ? a.b : b.b);
        };
        InputGroup.prototype.mp = function () {
            var _this = this;
            this.l3(function (a) {
                a.p = _this.g;
                a.l = _this.d == 0 ? 2 : _this.d;
                switch (_this.k) {
                    case 0:
                        a.s = 0;
                        break;
                    case 1:
                        a.s = 1;
                        break;
                    case 2:
                    case 3:
                        a.s = 2;
                        break;
                }
                a.ch(_this.ac, false);
            });
        };
        InputGroup.prototype.mq = function () {
            var _this = this;
            this.l4(function (a) {
                switch (_this.k) {
                    case 0:
                        a.k = 0;
                        break;
                    case 1:
                        a.k = 1;
                        break;
                    case 2:
                    case 3:
                        a.k = 2;
                        break;
                }
            });
        };
        InputGroup.prototype.mo = function () {
            var _this = this;
            this.l2(function (a) {
                a.m = _this.g;
                switch (_this.k) {
                    case 0:
                        a.r = 0;
                        break;
                    case 1:
                        a.r = 1;
                        break;
                    case 2:
                    case 3:
                        a.r = 2;
                        break;
                }
                a.dc(_this.al, false);
            });
        };
        InputGroup.prototype.mr = function () {
            var _this = this;
            this.l5(function (a) {
                switch (_this.k) {
                    case 0:
                        a.k = 0;
                        break;
                    case 1:
                        a.k = 1;
                        break;
                    case 2:
                    case 3:
                        a.k = 2;
                        break;
                }
            });
        };
        InputGroup.prototype.mn = function () {
            this.mp();
            this.mo();
            this.mq();
            this.mr();
            switch (this.k) {
                case 0:
                    this.os = this.oz != null ? this.oz : this.su != null ? this.su : this.q5;
                    this.or = this.oy != null ? this.oy : this.st != null ? this.st : this.q4;
                    this.ca = !igniteuiReactCore.isNaN_(this.cu) ? this.cu : !igniteuiReactCore.isNaN_(this.hh) ? this.hh : this.fa;
                    this.ot = this.sq != null ? this.sq : this.sv != null ? this.sv : this.q6;
                    this.cb = !igniteuiReactCore.isNaN_(this.hc) ? this.hc : !igniteuiReactCore.isNaN_(this.hi) ? this.hi : this.fb;
                    this.mz = InputGroup.m2(this.m3, InputGroup.m2(this.nj, this.nc));
                    this.tf = InputGroup.ti(this.tj, InputGroup.ti(this.tz, this.ts));
                    this.cg = !igniteuiReactCore.isNaN_(this.h1) ? this.h1 : !igniteuiReactCore.isNaN_(this.hn) ? this.hn : this.fg;
                    this.ch = !igniteuiReactCore.isNaN_(this.h2) ? this.h2 : !igniteuiReactCore.isNaN_(this.ho) ? this.ho : this.fh;
                    this.ci = !igniteuiReactCore.isNaN_(this.h3) ? this.h3 : !igniteuiReactCore.isNaN_(this.hp) ? this.hp : this.fi;
                    this.ox = this.s8 != null ? this.s8 : this.sz != null ? this.sz : this.rb;
                    this.ow = this.s7 != null ? this.s7 : this.sy != null ? this.sy : this.ra;
                    this.ov = this.ss != null ? this.ss : this.sx != null ? this.sx : this.q9;
                    this.cj = !igniteuiReactCore.isNaN_(this.h4) ? this.h4 : !igniteuiReactCore.isNaN_(this.hq) ? this.hq : this.fj;
                    this.cf = !igniteuiReactCore.isNaN_(this.hg) ? this.hg : !igniteuiReactCore.isNaN_(this.hm) ? this.hm : this.ff;
                    this.ce = !igniteuiReactCore.isNaN_(this.hf) ? this.hf : !igniteuiReactCore.isNaN_(this.hl) ? this.hl : this.fe;
                    this.ou = this.sr != null ? this.sr : this.sw != null ? this.sw : this.q8;
                    this.cc = !igniteuiReactCore.isNaN_(this.hd) ? this.hd : !igniteuiReactCore.isNaN_(this.hj) ? this.hj : this.fc;
                    this.cd = !igniteuiReactCore.isNaN_(this.he) ? this.he : !igniteuiReactCore.isNaN_(this.hk) ? this.hk : this.fd;
                    break;
                case 1:
                    this.os = this.oz != null ? this.oz : this.o8 != null ? this.o8 : this.pp;
                    this.or = this.oy != null ? this.oy : this.o7 != null ? this.o7 : this.po;
                    this.ca = !igniteuiReactCore.isNaN_(this.cu) ? this.cu : !igniteuiReactCore.isNaN_(this.cv) ? this.cv : this.dg;
                    this.ot = this.sq != null ? this.sq : this.o9 != null ? this.o9 : this.pq;
                    this.cb = !igniteuiReactCore.isNaN_(this.hc) ? this.hc : !igniteuiReactCore.isNaN_(this.cw) ? this.cw : this.dh;
                    this.mz = InputGroup.m2(this.m3, InputGroup.m2(this.m1, this.m5));
                    this.tf = InputGroup.ti(this.tj, InputGroup.ti(this.th, this.tl));
                    this.cg = !igniteuiReactCore.isNaN_(this.h1) ? this.h1 : !igniteuiReactCore.isNaN_(this.c1) ? this.c1 : this.dm;
                    this.ch = !igniteuiReactCore.isNaN_(this.h2) ? this.h2 : !igniteuiReactCore.isNaN_(this.c2) ? this.c2 : this.dn;
                    this.ci = !igniteuiReactCore.isNaN_(this.h3) ? this.h3 : !igniteuiReactCore.isNaN_(this.c3) ? this.c3 : this.dp;
                    this.ox = this.s8 != null ? this.s8 : this.pd != null ? this.pd : this.pv;
                    this.ow = this.s7 != null ? this.s7 : this.pc != null ? this.pc : this.pu;
                    this.ov = this.ss != null ? this.ss : this.pb != null ? this.pb : this.pt;
                    this.cj = !igniteuiReactCore.isNaN_(this.h4) ? this.h4 : !igniteuiReactCore.isNaN_(this.c4) ? this.c4 : this.dq;
                    this.cf = !igniteuiReactCore.isNaN_(this.hg) ? this.hg : !igniteuiReactCore.isNaN_(this.c0) ? this.c0 : this.dl;
                    this.ce = !igniteuiReactCore.isNaN_(this.hf) ? this.hf : !igniteuiReactCore.isNaN_(this.cz) ? this.cz : this.dk;
                    this.ou = this.sr != null ? this.sr : this.pa != null ? this.pa : this.ps;
                    this.cc = !igniteuiReactCore.isNaN_(this.hd) ? this.hd : !igniteuiReactCore.isNaN_(this.cx) ? this.cx : this.di;
                    this.cd = !igniteuiReactCore.isNaN_(this.he) ? this.he : !igniteuiReactCore.isNaN_(this.cy) ? this.cy : this.dj;
                    break;
                case 2:
                    this.os = this.oz != null ? this.oz : this.o1 != null ? this.o1 : this.ph;
                    this.or = this.oy != null ? this.oy : this.o0 != null ? this.o0 : this.pg;
                    this.ca = !igniteuiReactCore.isNaN_(this.cu) ? this.cu : !igniteuiReactCore.isNaN_(this.ck) ? this.ck : this.c5;
                    this.ot = this.sq != null ? this.sq : this.o2 != null ? this.o2 : this.pi;
                    this.cb = !igniteuiReactCore.isNaN_(this.hc) ? this.hc : !igniteuiReactCore.isNaN_(this.cl) ? this.cl : this.c6;
                    this.mz = InputGroup.m2(this.m3, InputGroup.m2(this.m0, this.m4));
                    this.tf = InputGroup.ti(this.tj, InputGroup.ti(this.tg, this.tk));
                    this.cg = !igniteuiReactCore.isNaN_(this.h1) ? this.h1 : !igniteuiReactCore.isNaN_(this.cq) ? this.cq : this.db;
                    this.ch = !igniteuiReactCore.isNaN_(this.h2) ? this.h2 : !igniteuiReactCore.isNaN_(this.cr) ? this.cr : this.dc;
                    this.ci = !igniteuiReactCore.isNaN_(this.h3) ? this.h3 : !igniteuiReactCore.isNaN_(this.cs) ? this.cs : this.dd;
                    this.ox = this.s8 != null ? this.s8 : this.o6 != null ? this.o6 : this.pn;
                    this.ow = this.s7 != null ? this.s7 : this.o5 != null ? this.o5 : this.pm;
                    this.ov = this.ss != null ? this.ss : this.o4 != null ? this.o4 : this.pl;
                    this.cj = !igniteuiReactCore.isNaN_(this.h4) ? this.h4 : !igniteuiReactCore.isNaN_(this.ct) ? this.ct : this.de;
                    this.cf = !igniteuiReactCore.isNaN_(this.hg) ? this.hg : !igniteuiReactCore.isNaN_(this.cp) ? this.cp : this.da;
                    this.ce = !igniteuiReactCore.isNaN_(this.hf) ? this.hf : !igniteuiReactCore.isNaN_(this.co) ? this.co : this.c9;
                    this.ou = this.sr != null ? this.sr : this.o3 != null ? this.o3 : this.pk;
                    this.cc = !igniteuiReactCore.isNaN_(this.hd) ? this.hd : !igniteuiReactCore.isNaN_(this.cm) ? this.cm : this.c7;
                    this.cd = !igniteuiReactCore.isNaN_(this.he) ? this.he : !igniteuiReactCore.isNaN_(this.cn) ? this.cn : this.c8;
                    break;
                case 3:
                    this.os = this.oz != null ? this.oz : this.s1 != null ? this.s1 : this.sh;
                    this.or = this.oy != null ? this.oy : this.s0 != null ? this.s0 : this.sg;
                    this.ca = !igniteuiReactCore.isNaN_(this.cu) ? this.cu : !igniteuiReactCore.isNaN_(this.hr) ? this.hr : this.gy;
                    this.ot = this.sq != null ? this.sq : this.s2 != null ? this.s2 : this.si;
                    this.cb = !igniteuiReactCore.isNaN_(this.hc) ? this.hc : !igniteuiReactCore.isNaN_(this.hs) ? this.hs : this.gz;
                    this.mz = InputGroup.m2(this.m3, InputGroup.m2(this.nk, this.ni));
                    this.tf = InputGroup.ti(this.tj, InputGroup.ti(this.t0, this.ty));
                    this.cg = !igniteuiReactCore.isNaN_(this.h1) ? this.h1 : !igniteuiReactCore.isNaN_(this.hx) ? this.hx : this.g4;
                    this.ch = !igniteuiReactCore.isNaN_(this.h2) ? this.h2 : !igniteuiReactCore.isNaN_(this.hy) ? this.hy : this.g5;
                    this.ci = !igniteuiReactCore.isNaN_(this.h3) ? this.h3 : !igniteuiReactCore.isNaN_(this.hz) ? this.hz : this.g6;
                    this.ox = this.s8 != null ? this.s8 : this.s6 != null ? this.s6 : this.sn;
                    this.ow = this.s7 != null ? this.s7 : this.s5 != null ? this.s5 : this.sm;
                    this.ov = this.ss != null ? this.ss : this.s4 != null ? this.s4 : this.sl;
                    this.cj = !igniteuiReactCore.isNaN_(this.h4) ? this.h4 : !igniteuiReactCore.isNaN_(this.h0) ? this.h0 : this.g7;
                    this.cf = !igniteuiReactCore.isNaN_(this.hg) ? this.hg : !igniteuiReactCore.isNaN_(this.hw) ? this.hw : this.g3;
                    this.ce = !igniteuiReactCore.isNaN_(this.hf) ? this.hf : !igniteuiReactCore.isNaN_(this.hv) ? this.hv : this.g2;
                    this.ou = this.sr != null ? this.sr : this.s3 != null ? this.s3 : this.sk;
                    this.cc = !igniteuiReactCore.isNaN_(this.hd) ? this.hd : !igniteuiReactCore.isNaN_(this.ht) ? this.ht : this.g0;
                    this.cd = !igniteuiReactCore.isNaN_(this.he) ? this.he : !igniteuiReactCore.isNaN_(this.hu) ? this.hu : this.g1;
                    break;
            }
        };
        InputGroup.prototype.mm = function () {
            this.l3(function (a) {
            });
            this.l2(function (a) {
            });
            var a = this.view.u;
            var b = this.view.t;
            var c = this.view.w;
            var d = this.view.x;
            var e = this.p != null && this.p.playState == 1;
            var f = this.q != null && this.q.playState == 1;
            var g = this.o != null && this.o.playState == 1;
            igniteuiReactCore.NativeUI.l(a, this.mz);
            igniteuiReactCore.NativeUI.l(b, this.mz);
            igniteuiReactCore.NativeUI.j(a, this.or);
            igniteuiReactCore.NativeUI.u(a, this.tf);
            if (this.ai) {
                if (!g) {
                    igniteuiReactCore.NativeUI.k(b, this.ot);
                    igniteuiReactCore.NativeUI.m(b, new igniteuiReactCore.Thickness(0, this.cb));
                }
                if (!f) {
                    igniteuiReactCore.NativeUI.j(c, this.ou);
                }
            }
            else {
                if (!f) {
                    if (this.aj) {
                        igniteuiReactCore.NativeUI.j(c, this.ov);
                        igniteuiReactCore.NativeUI.t(c, this.ce);
                        igniteuiReactCore.NativeUI.q(c, this.cf);
                    }
                    else {
                        igniteuiReactCore.NativeUI.j(c, this.ow);
                        igniteuiReactCore.NativeUI.t(c, this.cg);
                        igniteuiReactCore.NativeUI.q(c, this.cj);
                    }
                }
                if (!g) {
                    igniteuiReactCore.NativeUI.k(b, this.os);
                    igniteuiReactCore.NativeUI.m(b, new igniteuiReactCore.Thickness(0, this.ca));
                }
                if (!f) {
                    igniteuiReactCore.NativeUI.j(a, this.or);
                }
            }
            if (!e) {
                igniteuiReactCore.NativeUI.j(d, this.ox);
                igniteuiReactCore.NativeUI.q(d, this.ci);
                igniteuiReactCore.NativeUI.t(d, this.ch);
            }
        };
        Object.defineProperty(InputGroup.prototype, "a", {
            get: function () {
                var a = new igniteuiReactCore.AnimationKeyFrameEffectTiming();
                a.g = 300;
                a.b = 0;
                return a;
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.prototype.onChildrenMutated = function () {
            this.l2(function (a) { return a.view.ax(); });
            this.l3(function (a) { return a.view.ac(); });
            this.l4(function (a) { return a.view.q(); });
            this.l5(function (a) { return a.view.q(); });
        };
        InputGroup.prototype.l1 = function () {
            this.view.ab();
            var a = false;
            if (this.q == null) {
                this.q = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.c(this.a).m(new igniteuiReactCore.AnimationKeyFrameProperty(2, this.os)).m(new igniteuiReactCore.AnimationKeyFrameProperty(2, this.ot)));
            }
            if (this.o == null) {
                this.o = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.a(this.a).m(new igniteuiReactCore.AnimationKeyFrameProperty(3, this.os), new igniteuiReactCore.AnimationKeyFrameProperty(4, this.k == 2 || this.k == 3 ? new igniteuiReactCore.Thickness(0, this.ca) : new igniteuiReactCore.Thickness(0, 0))).m(new igniteuiReactCore.AnimationKeyFrameProperty(3, this.ot), new igniteuiReactCore.AnimationKeyFrameProperty(4, this.k == 2 || this.k == 3 ? new igniteuiReactCore.Thickness(0, this.cb) : new igniteuiReactCore.Thickness(0, 0))));
            }
            if (this.p == null) {
                this.p = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.b(this.a).m(new igniteuiReactCore.AnimationKeyFrameProperty(2, this.ot), new igniteuiReactCore.AnimationKeyFrameProperty(14, ((function () {
                    var $ret = new igniteuiReactCore.ScaleTransform();
                    $ret.l = 0.5;
                    $ret.m = 1;
                    return $ret;
                })())), new igniteuiReactCore.AnimationKeyFrameProperty(1, 0)).m(new igniteuiReactCore.AnimationKeyFrameProperty(2, this.ot), new igniteuiReactCore.AnimationKeyFrameProperty(14, ((function () {
                    var $ret = new igniteuiReactCore.ScaleTransform();
                    $ret.l = 1;
                    $ret.m = 1;
                    return $ret;
                })())), new igniteuiReactCore.AnimationKeyFrameProperty(1, 1)));
            }
        };
        Object.defineProperty(InputGroup.prototype, "af", {
            get: function () {
                var a = false;
                this.l2(function (b) {
                    if (b.ao) {
                        a = true;
                    }
                });
                return a;
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.prototype.mc = function () {
            this.ac = this.t ? this.ah : this.af ? true : false;
            this.ai = false;
            if (null != this.lostFocus) {
                this.lostFocus(this, igniteuiReactCore.EventArgs.empty);
            }
        };
        InputGroup.prototype.ml = function (a) {
            this.df = ThemeResolver.b(a, InputGroup.fu, InputGroup.d1);
            this.e5 = ThemeResolver.b(a, InputGroup.f5, InputGroup.ec);
            this.m6 = ThemeResolver.d(a, InputGroup.nf, InputGroup.m9);
            this.tm = ThemeResolver.f(a, InputGroup.tv, InputGroup.tp);
            this.pf = ThemeResolver.e(a, InputGroup.rd, InputGroup.px);
            this.q0 = ThemeResolver.e(a, InputGroup.ru, InputGroup.qe);
            this.q1 = ThemeResolver.e(a, InputGroup.rv, InputGroup.qf);
            this.hb = ThemeResolver.b(a, InputGroup.gx, InputGroup.e4);
            this.ha = ThemeResolver.b(a, InputGroup.gw, InputGroup.e3);
            this.e9 = ThemeResolver.b(a, InputGroup.f9, InputGroup.eg);
            this.so = ThemeResolver.e(a, InputGroup.se, InputGroup.qy);
            this.sp = ThemeResolver.e(a, InputGroup.sf, InputGroup.qz);
            this.q3 = ThemeResolver.e(a, InputGroup.rx, InputGroup.qh);
            this.q2 = ThemeResolver.e(a, InputGroup.rw, InputGroup.qg);
            this.g8 = ThemeResolver.b(a, InputGroup.gu, InputGroup.e1);
            this.e8 = ThemeResolver.b(a, InputGroup.f8, InputGroup.ef);
            this.e6 = ThemeResolver.b(a, InputGroup.f6, InputGroup.ed);
            this.e7 = ThemeResolver.b(a, InputGroup.f7, InputGroup.ee);
            this.g9 = ThemeResolver.b(a, InputGroup.gv, InputGroup.e2);
            this.pe = ThemeResolver.e(a, InputGroup.rc, InputGroup.pw);
            this.fa = ThemeResolver.b(a, InputGroup.ga, InputGroup.eh);
            this.fb = ThemeResolver.b(a, InputGroup.gb, InputGroup.ei);
            this.nc = ThemeResolver.d(a, InputGroup.ng, InputGroup.na);
            this.ts = ThemeResolver.f(a, InputGroup.tw, InputGroup.tq);
            this.q5 = ThemeResolver.e(a, InputGroup.rz, InputGroup.qj);
            this.q6 = ThemeResolver.e(a, InputGroup.r0, InputGroup.qk);
            this.q7 = ThemeResolver.e(a, InputGroup.r1, InputGroup.ql);
            this.fj = ThemeResolver.b(a, InputGroup.gj, InputGroup.eq);
            this.fi = ThemeResolver.b(a, InputGroup.gi, InputGroup.ep);
            this.ff = ThemeResolver.b(a, InputGroup.gf, InputGroup.em);
            this.ra = ThemeResolver.e(a, InputGroup.r4, InputGroup.qo);
            this.rb = ThemeResolver.e(a, InputGroup.r5, InputGroup.qp);
            this.q9 = ThemeResolver.e(a, InputGroup.r3, InputGroup.qn);
            this.q8 = ThemeResolver.e(a, InputGroup.r2, InputGroup.qm);
            this.fg = ThemeResolver.b(a, InputGroup.gg, InputGroup.en);
            this.fe = ThemeResolver.b(a, InputGroup.ge, InputGroup.el);
            this.fc = ThemeResolver.b(a, InputGroup.gc, InputGroup.ej);
            this.fd = ThemeResolver.b(a, InputGroup.gd, InputGroup.ek);
            this.fh = ThemeResolver.b(a, InputGroup.gh, InputGroup.eo);
            this.q4 = ThemeResolver.e(a, InputGroup.ry, InputGroup.qi);
            this.dg = ThemeResolver.b(a, InputGroup.fv, InputGroup.d2);
            this.dh = ThemeResolver.b(a, InputGroup.fw, InputGroup.d3);
            this.m5 = ThemeResolver.d(a, InputGroup.ne, InputGroup.m8);
            this.tl = ThemeResolver.f(a, InputGroup.tu, InputGroup.to);
            this.pp = ThemeResolver.e(a, InputGroup.rn, InputGroup.p7);
            this.pq = ThemeResolver.e(a, InputGroup.ro, InputGroup.p8);
            this.pr = ThemeResolver.e(a, InputGroup.rp, InputGroup.p9);
            this.dq = ThemeResolver.b(a, InputGroup.f4, InputGroup.eb);
            this.dp = ThemeResolver.b(a, InputGroup.f3, InputGroup.ea);
            this.dl = ThemeResolver.b(a, InputGroup.f0, InputGroup.d7);
            this.pu = ThemeResolver.e(a, InputGroup.rs, InputGroup.qc);
            this.pv = ThemeResolver.e(a, InputGroup.rt, InputGroup.qd);
            this.pt = ThemeResolver.e(a, InputGroup.rr, InputGroup.qb);
            this.ps = ThemeResolver.e(a, InputGroup.rq, InputGroup.qa);
            this.dm = ThemeResolver.b(a, InputGroup.f1, InputGroup.d8);
            this.dk = ThemeResolver.b(a, InputGroup.fz, InputGroup.d6);
            this.di = ThemeResolver.b(a, InputGroup.fx, InputGroup.d4);
            this.dj = ThemeResolver.b(a, InputGroup.fy, InputGroup.d5);
            this.dn = ThemeResolver.b(a, InputGroup.f2, InputGroup.d9);
            this.po = ThemeResolver.e(a, InputGroup.rm, InputGroup.p6);
            this.c5 = ThemeResolver.b(a, InputGroup.fk, InputGroup.dr);
            this.c6 = ThemeResolver.b(a, InputGroup.fl, InputGroup.ds);
            this.m4 = ThemeResolver.d(a, InputGroup.nd, InputGroup.m7);
            this.tk = ThemeResolver.f(a, InputGroup.tt, InputGroup.tn);
            this.ph = ThemeResolver.e(a, InputGroup.rf, InputGroup.pz);
            this.pi = ThemeResolver.e(a, InputGroup.rg, InputGroup.p0);
            this.pj = ThemeResolver.e(a, InputGroup.rh, InputGroup.p1);
            this.de = ThemeResolver.b(a, InputGroup.ft, InputGroup.d0);
            this.dd = ThemeResolver.b(a, InputGroup.fs, InputGroup.dz);
            this.da = ThemeResolver.b(a, InputGroup.fp, InputGroup.dw);
            this.pm = ThemeResolver.e(a, InputGroup.rk, InputGroup.p4);
            this.pn = ThemeResolver.e(a, InputGroup.rl, InputGroup.p5);
            this.pl = ThemeResolver.e(a, InputGroup.rj, InputGroup.p3);
            this.pk = ThemeResolver.e(a, InputGroup.ri, InputGroup.p2);
            this.db = ThemeResolver.b(a, InputGroup.fq, InputGroup.dx);
            this.c9 = ThemeResolver.b(a, InputGroup.fo, InputGroup.dv);
            this.c7 = ThemeResolver.b(a, InputGroup.fm, InputGroup.dt);
            this.c8 = ThemeResolver.b(a, InputGroup.fn, InputGroup.du);
            this.dc = ThemeResolver.b(a, InputGroup.fr, InputGroup.dy);
            this.pg = ThemeResolver.e(a, InputGroup.re, InputGroup.py);
            this.gy = ThemeResolver.b(a, InputGroup.gk, InputGroup.er);
            this.gz = ThemeResolver.b(a, InputGroup.gl, InputGroup.es);
            this.ni = ThemeResolver.d(a, InputGroup.nh, InputGroup.nb);
            this.ty = ThemeResolver.f(a, InputGroup.tx, InputGroup.tr);
            this.sh = ThemeResolver.e(a, InputGroup.r7, InputGroup.qr);
            this.si = ThemeResolver.e(a, InputGroup.r8, InputGroup.qs);
            this.sj = ThemeResolver.e(a, InputGroup.r9, InputGroup.qt);
            this.g7 = ThemeResolver.b(a, InputGroup.gt, InputGroup.e0);
            this.g6 = ThemeResolver.b(a, InputGroup.gs, InputGroup.ez);
            this.g3 = ThemeResolver.b(a, InputGroup.gp, InputGroup.ew);
            this.sm = ThemeResolver.e(a, InputGroup.sc, InputGroup.qw);
            this.sn = ThemeResolver.e(a, InputGroup.sd, InputGroup.qx);
            this.sl = ThemeResolver.e(a, InputGroup.sb, InputGroup.qv);
            this.sk = ThemeResolver.e(a, InputGroup.sa, InputGroup.qu);
            this.g4 = ThemeResolver.b(a, InputGroup.gq, InputGroup.ex);
            this.g2 = ThemeResolver.b(a, InputGroup.go, InputGroup.ev);
            this.g0 = ThemeResolver.b(a, InputGroup.gm, InputGroup.et);
            this.g1 = ThemeResolver.b(a, InputGroup.gn, InputGroup.eu);
            this.g5 = ThemeResolver.b(a, InputGroup.gr, InputGroup.ey);
            this.sg = ThemeResolver.e(a, InputGroup.r6, InputGroup.qq);
        };
        InputGroup.prototype.l6 = function () {
            var _this = this;
            this.l1();
            if (this.ac) {
                this.l3(function (a) { return a.ch(true, !_this.ad); });
                this.l2(function (a) { return a.dc(_this.al, !_this.ad); });
            }
            else {
                this.l3(function (a) { return a.ch(false, !_this.ad); });
                this.l2(function (a) { return a.dc(_this.al, !_this.ad); });
            }
        };
        InputGroup.prototype.mb = function () {
            this.l1();
            if (this.ai) {
                var a = 1;
                this.l3(function (b) { return b.al = true; });
                this.mf(a);
            }
            else {
                var b = -1;
                this.l3(function (c) { return c.al = false; });
                this.mf(b);
            }
        };
        InputGroup.prototype.ma = function () {
            this.ac = this.t ? this.ah : true;
            this.ai = true;
            if (null != this.gotFocus) {
                this.gotFocus(this, igniteuiReactCore.EventArgs.empty);
            }
        };
        InputGroup.prototype.ms = function () {
            if (this.t) {
                this.ac = this.t;
            }
            else if (this.ai) {
                this.ac = true;
            }
            else {
                this.ac = this.af ? true : false;
            }
        };
        InputGroup.prototype.mf = function (a) {
            var _this = this;
            if ((a > 0 && this.q.playbackRate < 0) || (a < 0 && this.q.playbackRate > 0)) {
                this.q.reverse();
                this.q.finished.f(function (b) {
                    if (_this.q != null) {
                        _this.q.commitStyles();
                    }
                    if (_this.ab) {
                        _this.q = null;
                        _this.ab = false;
                    }
                });
                this.o.reverse();
                this.o.finished.f(function (b) {
                    if (_this.o != null) {
                        _this.o.commitStyles();
                    }
                    if (_this.s) {
                        _this.o = null;
                        _this.s = false;
                    }
                });
                this.p.reverse();
                this.p.finished.f(function (b) {
                    if (_this.p != null) {
                        _this.p.commitStyles();
                    }
                    if (_this.aa) {
                        _this.p = null;
                        _this.aa = false;
                    }
                });
            }
            else {
                this.q.play();
                this.q.finished.f(function (b) {
                    if (_this.q != null) {
                        _this.q.commitStyles();
                    }
                    if (_this.ab) {
                        _this.q = null;
                        _this.ab = false;
                    }
                });
                this.o.play();
                this.o.finished.f(function (b) {
                    if (_this.o != null) {
                        _this.o.commitStyles();
                    }
                    if (_this.s) {
                        _this.o = null;
                        _this.s = false;
                    }
                });
                this.p.play();
                this.p.finished.f(function (b) {
                    if (_this.p != null) {
                        _this.p.commitStyles();
                    }
                    if (_this.aa) {
                        _this.p = null;
                        _this.aa = false;
                    }
                });
            }
        };
        Object.defineProperty(InputGroup.prototype, "os", {
            get: function () {
                return this.nm;
            },
            set: function (a) {
                var b = this.nm;
                this.nm = a;
                if (b != this.nm) {
                    this.md("ActualBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ot", {
            get: function () {
                return this.nn;
            },
            set: function (a) {
                var b = this.nn;
                this.nn = a;
                if (b != this.nn) {
                    this.md("ActualFocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ca", {
            get: function () {
                return this.am;
            },
            set: function (a) {
                var b = this.am;
                this.am = a;
                if (b != this.am) {
                    this.md("ActualBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cb", {
            get: function () {
                return this.an;
            },
            set: function (a) {
                var b = this.an;
                this.an = a;
                if (b != this.an) {
                    this.md("ActualFocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "mz", {
            get: function () {
                return this.mt;
            },
            set: function (a) {
                var b = this.mt;
                this.mt = a;
                if (b != this.mt) {
                    this.md("ActualCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "tf", {
            get: function () {
                return this.s9;
            },
            set: function (a) {
                var b = this.s9;
                this.s9 = a;
                if (b != this.s9) {
                    this.md("ActualContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cj", {
            get: function () {
                return this.av;
            },
            set: function (a) {
                var b = this.av;
                this.av = a;
                if (b != this.av) {
                    this.md("ActualUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ci", {
            get: function () {
                return this.au;
            },
            set: function (a) {
                var b = this.au;
                this.au = a;
                if (b != this.au) {
                    this.md("ActualUnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cf", {
            get: function () {
                return this.ar;
            },
            set: function (a) {
                var b = this.ar;
                this.ar = a;
                if (b != this.ar) {
                    this.md("ActualHoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ow", {
            get: function () {
                return this.nq;
            },
            set: function (a) {
                var b = this.nq;
                this.nq = a;
                if (b != this.nq) {
                    this.md("ActualUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ox", {
            get: function () {
                return this.nr;
            },
            set: function (a) {
                var b = this.nr;
                this.nr = a;
                if (b != this.nr) {
                    this.md("ActualUnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ov", {
            get: function () {
                return this.np;
            },
            set: function (a) {
                var b = this.np;
                this.np = a;
                if (b != this.np) {
                    this.md("ActualHoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ou", {
            get: function () {
                return this.no;
            },
            set: function (a) {
                var b = this.no;
                this.n9 = a;
                if (b != this.no) {
                    this.md("ActualFocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cg", {
            get: function () {
                return this.as;
            },
            set: function (a) {
                var b = this.as;
                this.as = a;
                if (b != this.as) {
                    this.md("ActualUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ce", {
            get: function () {
                return this.aq;
            },
            set: function (a) {
                var b = this.aq;
                this.aq = a;
                if (b != this.aq) {
                    this.md("ActualHoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cc", {
            get: function () {
                return this.ao;
            },
            set: function (a) {
                var b = this.ao;
                this.ao = a;
                if (b != this.ao) {
                    this.md("ActualFocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cd", {
            get: function () {
                return this.ap;
            },
            set: function (a) {
                var b = this.ap;
                this.ap = a;
                if (b != this.ap) {
                    this.md("ActualFocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ch", {
            get: function () {
                return this.at;
            },
            set: function (a) {
                var b = this.at;
                this.at = a;
                if (b != this.at) {
                    this.md("ActualUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "or", {
            get: function () {
                return this.nl;
            },
            set: function (a) {
                var b = this.nl;
                this.nl = a;
                if (b != this.nl) {
                    this.md("ActualBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cu", {
            get: function () {
                return this.a6;
            },
            set: function (a) {
                var b = this.a6;
                this.a6 = a;
                if (b != this.a6) {
                    this.md("BorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hc", {
            get: function () {
                return this.bh;
            },
            set: function (a) {
                var b = this.bh;
                this.bh = a;
                if (b != this.bh) {
                    this.md("FocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "oz", {
            get: function () {
                return this.nt;
            },
            set: function (a) {
                var b = this.nt;
                this.nt = a;
                if (b != this.nt) {
                    this.md("BorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "m3", {
            get: function () {
                return this.mw;
            },
            set: function (a) {
                var b = this.mw;
                this.mw = a;
                if (b != this.mw) {
                    this.md("CornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "tj", {
            get: function () {
                return this.tc;
            },
            set: function (a) {
                var b = this.tc;
                this.tc = a;
                if (b != this.tc) {
                    this.md("ContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "h4", {
            get: function () {
                return this.b9;
            },
            set: function (a) {
                var b = this.b9;
                this.b9 = a;
                if (b != this.b9) {
                    this.md("UnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "h3", {
            get: function () {
                return this.b8;
            },
            set: function (a) {
                var b = this.b8;
                this.b8 = a;
                if (b != this.b8) {
                    this.md("UnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hg", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (b != this.bl) {
                    this.md("HoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s7", {
            get: function () {
                return this.op;
            },
            set: function (a) {
                var b = this.op;
                this.op = a;
                if (b != this.op) {
                    this.md("UnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s8", {
            get: function () {
                return this.oq;
            },
            set: function (a) {
                var b = this.oq;
                this.oq = a;
                if (b != this.oq) {
                    this.md("UnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ss", {
            get: function () {
                return this.oa;
            },
            set: function (a) {
                var b = this.oa;
                this.oa = a;
                if (b != this.oa) {
                    this.md("HoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "sr", {
            get: function () {
                return this.n9;
            },
            set: function (a) {
                var b = this.n9;
                this.n9 = a;
                if (b != this.n9) {
                    this.md("FocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "h1", {
            get: function () {
                return this.b6;
            },
            set: function (a) {
                var b = this.b6;
                this.b6 = a;
                if (b != this.b6) {
                    this.md("UnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hf", {
            get: function () {
                return this.bk;
            },
            set: function (a) {
                var b = this.bk;
                this.bk = a;
                if (b != this.bk) {
                    this.md("HoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hd", {
            get: function () {
                return this.bi;
            },
            set: function (a) {
                var b = this.bi;
                this.bi = a;
                if (b != this.bi) {
                    this.md("FocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "he", {
            get: function () {
                return this.bj;
            },
            set: function (a) {
                var b = this.bj;
                this.bj = a;
                if (b != this.bj) {
                    this.md("FocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "h2", {
            get: function () {
                return this.b7;
            },
            set: function (a) {
                var b = this.b7;
                this.b7 = a;
                if (b != this.b7) {
                    this.md("UnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "oy", {
            get: function () {
                return this.ns;
            },
            set: function (a) {
                var b = this.ns;
                this.ns = a;
                if (b != this.ns) {
                    this.md("BackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hh", {
            get: function () {
                return this.bm;
            },
            set: function (a) {
                var b = this.bm;
                this.bm = a;
                if (b != this.bm) {
                    this.md("LineTypeBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hi", {
            get: function () {
                return this.bn;
            },
            set: function (a) {
                var b = this.bn;
                this.bn = a;
                if (b != this.bn) {
                    this.md("LineTypeFocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "sv", {
            get: function () {
                return this.od;
            },
            set: function (a) {
                var b = this.od;
                this.od = a;
                if (b != this.od) {
                    this.md("LineTypeFocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "su", {
            get: function () {
                return this.oc;
            },
            set: function (a) {
                var b = this.oc;
                this.oc = a;
                if (b != this.oc) {
                    this.md("LineTypeBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "nj", {
            get: function () {
                return this.mx;
            },
            set: function (a) {
                var b = this.mx;
                this.mx = a;
                if (b != this.mx) {
                    this.md("LineTypeCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "tz", {
            get: function () {
                return this.td;
            },
            set: function (a) {
                var b = this.td;
                this.td = a;
                if (b != this.td) {
                    this.md("LineTypeContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hq", {
            get: function () {
                return this.bv;
            },
            set: function (a) {
                var b = this.bv;
                this.bv = a;
                if (b != this.bv) {
                    this.md("LineTypeUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hp", {
            get: function () {
                return this.bu;
            },
            set: function (a) {
                var b = this.bu;
                this.bu = a;
                if (b != this.bu) {
                    this.md("LineTypeUnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hm", {
            get: function () {
                return this.br;
            },
            set: function (a) {
                var b = this.br;
                this.br = a;
                if (b != this.br) {
                    this.md("LineTypeHoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "sy", {
            get: function () {
                return this.og;
            },
            set: function (a) {
                var b = this.og;
                this.og = a;
                if (b != this.og) {
                    this.md("LineTypeUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "sz", {
            get: function () {
                return this.oh;
            },
            set: function (a) {
                var b = this.oh;
                this.oh = a;
                if (b != this.oh) {
                    this.md("LineTypeUnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "sx", {
            get: function () {
                return this.of;
            },
            set: function (a) {
                var b = this.of;
                this.oa = a;
                if (b != this.of) {
                    this.md("LineTypeHoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "sw", {
            get: function () {
                return this.oe;
            },
            set: function (a) {
                var b = this.oe;
                this.oe = a;
                if (b != this.oe) {
                    this.md("LineTypeFocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hn", {
            get: function () {
                return this.bs;
            },
            set: function (a) {
                var b = this.bs;
                this.bs = a;
                if (b != this.bs) {
                    this.md("LineTypeUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hl", {
            get: function () {
                return this.bq;
            },
            set: function (a) {
                var b = this.bq;
                this.bq = a;
                if (b != this.bq) {
                    this.md("LineTypeHoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hj", {
            get: function () {
                return this.bo;
            },
            set: function (a) {
                var b = this.bo;
                this.bo = a;
                if (b != this.bo) {
                    this.md("LineTypeFocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hk", {
            get: function () {
                return this.bp;
            },
            set: function (a) {
                var b = this.bp;
                this.bp = a;
                if (b != this.bp) {
                    this.md("LineTypeFocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ho", {
            get: function () {
                return this.bt;
            },
            set: function (a) {
                var b = this.bt;
                this.bt = a;
                if (b != this.bt) {
                    this.md("LineTypeUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "st", {
            get: function () {
                return this.ob;
            },
            set: function (a) {
                var b = this.ob;
                this.ob = a;
                if (b != this.ob) {
                    this.md("LineTypeBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cv", {
            get: function () {
                return this.a7;
            },
            set: function (a) {
                var b = this.a7;
                this.a7 = a;
                if (b != this.a7) {
                    this.md("BoxTypeBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cw", {
            get: function () {
                return this.a8;
            },
            set: function (a) {
                var b = this.a8;
                this.a8 = a;
                if (b != this.a8) {
                    this.md("BoxTypeFocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o9", {
            get: function () {
                return this.n3;
            },
            set: function (a) {
                var b = this.n3;
                this.n3 = a;
                if (b != this.n3) {
                    this.md("BoxTypeFocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o8", {
            get: function () {
                return this.n2;
            },
            set: function (a) {
                var b = this.n2;
                this.n2 = a;
                if (b != this.n2) {
                    this.md("BoxTypeBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "m1", {
            get: function () {
                return this.mv;
            },
            set: function (a) {
                var b = this.mv;
                this.mv = a;
                if (b != this.mv) {
                    this.md("BoxTypeCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "th", {
            get: function () {
                return this.tb;
            },
            set: function (a) {
                var b = this.tb;
                this.tb = a;
                if (b != this.tb) {
                    this.md("BoxTypeContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "c4", {
            get: function () {
                return this.bg;
            },
            set: function (a) {
                var b = this.bg;
                this.bg = a;
                if (b != this.bg) {
                    this.md("BoxTypeUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "c3", {
            get: function () {
                return this.bf;
            },
            set: function (a) {
                var b = this.bf;
                this.bf = a;
                if (b != this.bf) {
                    this.md("BoxTypeUnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "c0", {
            get: function () {
                return this.bc;
            },
            set: function (a) {
                var b = this.bc;
                this.bc = a;
                if (b != this.bc) {
                    this.md("BoxTypeHoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "pc", {
            get: function () {
                return this.n6;
            },
            set: function (a) {
                var b = this.n6;
                this.n6 = a;
                if (b != this.n6) {
                    this.md("BoxTypeUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "pd", {
            get: function () {
                return this.n7;
            },
            set: function (a) {
                var b = this.n7;
                this.n7 = a;
                if (b != this.n7) {
                    this.md("BoxTypeUnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "pb", {
            get: function () {
                return this.n5;
            },
            set: function (a) {
                var b = this.n5;
                this.oa = a;
                if (b != this.n5) {
                    this.md("BoxTypeHoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "pa", {
            get: function () {
                return this.n4;
            },
            set: function (a) {
                var b = this.n4;
                this.n4 = a;
                if (b != this.n4) {
                    this.md("BoxTypeFocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "c1", {
            get: function () {
                return this.bd;
            },
            set: function (a) {
                var b = this.bd;
                this.bd = a;
                if (b != this.bd) {
                    this.md("BoxTypeUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cz", {
            get: function () {
                return this.bb;
            },
            set: function (a) {
                var b = this.bb;
                this.bb = a;
                if (b != this.bb) {
                    this.md("BoxTypeHoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cx", {
            get: function () {
                return this.a9;
            },
            set: function (a) {
                var b = this.a9;
                this.a9 = a;
                if (b != this.a9) {
                    this.md("BoxTypeFocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cy", {
            get: function () {
                return this.ba;
            },
            set: function (a) {
                var b = this.ba;
                this.ba = a;
                if (b != this.ba) {
                    this.md("BoxTypeFocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "c2", {
            get: function () {
                return this.be;
            },
            set: function (a) {
                var b = this.be;
                this.be = a;
                if (b != this.be) {
                    this.md("BoxTypeUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o7", {
            get: function () {
                return this.n1;
            },
            set: function (a) {
                var b = this.n1;
                this.n1 = a;
                if (b != this.n1) {
                    this.md("BoxTypeBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ck", {
            get: function () {
                return this.aw;
            },
            set: function (a) {
                var b = this.aw;
                this.aw = a;
                if (b != this.aw) {
                    this.md("BorderTypeBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cl", {
            get: function () {
                return this.ax;
            },
            set: function (a) {
                var b = this.ax;
                this.ax = a;
                if (b != this.ax) {
                    this.md("BorderTypeFocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o2", {
            get: function () {
                return this.nw;
            },
            set: function (a) {
                var b = this.nw;
                this.nw = a;
                if (b != this.nw) {
                    this.md("BorderTypeFocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o1", {
            get: function () {
                return this.nv;
            },
            set: function (a) {
                var b = this.nv;
                this.nv = a;
                if (b != this.nv) {
                    this.md("BorderTypeBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "m0", {
            get: function () {
                return this.mu;
            },
            set: function (a) {
                var b = this.mu;
                this.mu = a;
                if (b != this.mu) {
                    this.md("BorderTypeCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "tg", {
            get: function () {
                return this.ta;
            },
            set: function (a) {
                var b = this.ta;
                this.ta = a;
                if (b != this.ta) {
                    this.md("BorderTypeContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ct", {
            get: function () {
                return this.a5;
            },
            set: function (a) {
                var b = this.a5;
                this.a5 = a;
                if (b != this.a5) {
                    this.md("BorderTypeUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cs", {
            get: function () {
                return this.a4;
            },
            set: function (a) {
                var b = this.a4;
                this.a4 = a;
                if (b != this.a4) {
                    this.md("BorderTypeUnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cp", {
            get: function () {
                return this.a1;
            },
            set: function (a) {
                var b = this.a1;
                this.a1 = a;
                if (b != this.a1) {
                    this.md("BorderTypeHoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o5", {
            get: function () {
                return this.nz;
            },
            set: function (a) {
                var b = this.nz;
                this.nz = a;
                if (b != this.nz) {
                    this.md("BorderTypeUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o6", {
            get: function () {
                return this.n0;
            },
            set: function (a) {
                var b = this.n0;
                this.n0 = a;
                if (b != this.n0) {
                    this.md("BorderTypeUnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o4", {
            get: function () {
                return this.ny;
            },
            set: function (a) {
                var b = this.ny;
                this.oa = a;
                if (b != this.ny) {
                    this.md("BorderTypeHoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o3", {
            get: function () {
                return this.nx;
            },
            set: function (a) {
                var b = this.nx;
                this.nx = a;
                if (b != this.nx) {
                    this.md("BorderTypeFocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cq", {
            get: function () {
                return this.a2;
            },
            set: function (a) {
                var b = this.a2;
                this.a2 = a;
                if (b != this.a2) {
                    this.md("BorderTypeUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "co", {
            get: function () {
                return this.a0;
            },
            set: function (a) {
                var b = this.a0;
                this.a0 = a;
                if (b != this.a0) {
                    this.md("BorderTypeHoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cm", {
            get: function () {
                return this.ay;
            },
            set: function (a) {
                var b = this.ay;
                this.ay = a;
                if (b != this.ay) {
                    this.md("BorderTypeFocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cn", {
            get: function () {
                return this.az;
            },
            set: function (a) {
                var b = this.az;
                this.az = a;
                if (b != this.az) {
                    this.md("BorderTypeFocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "cr", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                var b = this.a3;
                this.a3 = a;
                if (b != this.a3) {
                    this.md("BorderTypeUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "o0", {
            get: function () {
                return this.nu;
            },
            set: function (a) {
                var b = this.nu;
                this.nu = a;
                if (b != this.nu) {
                    this.md("BorderTypeBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hr", {
            get: function () {
                return this.bw;
            },
            set: function (a) {
                var b = this.bw;
                this.bw = a;
                if (b != this.bw) {
                    this.md("SearchTypeBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hs", {
            get: function () {
                return this.bx;
            },
            set: function (a) {
                var b = this.bx;
                this.bx = a;
                if (b != this.bx) {
                    this.md("SearchTypeFocusBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s2", {
            get: function () {
                return this.ok;
            },
            set: function (a) {
                var b = this.ok;
                this.ok = a;
                if (b != this.ok) {
                    this.md("SearchTypeFocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s1", {
            get: function () {
                return this.oj;
            },
            set: function (a) {
                var b = this.oj;
                this.oj = a;
                if (b != this.oj) {
                    this.md("SearchTypeBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "nk", {
            get: function () {
                return this.my;
            },
            set: function (a) {
                var b = this.my;
                this.my = a;
                if (b != this.my) {
                    this.md("SearchTypeCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "t0", {
            get: function () {
                return this.te;
            },
            set: function (a) {
                var b = this.te;
                this.te = a;
                if (b != this.te) {
                    this.md("SearchTypeContentPadding", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "h0", {
            get: function () {
                return this.b5;
            },
            set: function (a) {
                var b = this.b5;
                this.b5 = a;
                if (b != this.b5) {
                    this.md("SearchTypeUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hz", {
            get: function () {
                return this.b4;
            },
            set: function (a) {
                var b = this.b4;
                this.b4 = a;
                if (b != this.b4) {
                    this.md("SearchTypeUnderlineRippleWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hw", {
            get: function () {
                return this.b1;
            },
            set: function (a) {
                var b = this.b1;
                this.b1 = a;
                if (b != this.b1) {
                    this.md("SearchTypeHoverUnderlineWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s5", {
            get: function () {
                return this.on;
            },
            set: function (a) {
                var b = this.on;
                this.on = a;
                if (b != this.on) {
                    this.md("SearchTypeUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s6", {
            get: function () {
                return this.oo;
            },
            set: function (a) {
                var b = this.oo;
                this.oo = a;
                if (b != this.oo) {
                    this.md("SearchTypeUnderlineRippleColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s4", {
            get: function () {
                return this.om;
            },
            set: function (a) {
                var b = this.om;
                this.oa = a;
                if (b != this.om) {
                    this.md("SearchTypeHoverUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s3", {
            get: function () {
                return this.ol;
            },
            set: function (a) {
                var b = this.ol;
                this.ol = a;
                if (b != this.ol) {
                    this.md("SearchTypeFocusUnderlineColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hx", {
            get: function () {
                return this.b2;
            },
            set: function (a) {
                var b = this.b2;
                this.b2 = a;
                if (b != this.b2) {
                    this.md("SearchTypeUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hv", {
            get: function () {
                return this.b0;
            },
            set: function (a) {
                var b = this.b0;
                this.b0 = a;
                if (b != this.b0) {
                    this.md("SearchTypeHoverUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ht", {
            get: function () {
                return this.by;
            },
            set: function (a) {
                var b = this.by;
                this.by = a;
                if (b != this.by) {
                    this.md("SearchTypeFocusUnderlineOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hu", {
            get: function () {
                return this.bz;
            },
            set: function (a) {
                var b = this.bz;
                this.bz = a;
                if (b != this.bz) {
                    this.md("SearchTypeFocusUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "hy", {
            get: function () {
                return this.b3;
            },
            set: function (a) {
                var b = this.b3;
                this.b3 = a;
                if (b != this.b3) {
                    this.md("SearchTypeUnderlineRippleOpacity", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "s0", {
            get: function () {
                return this.oi;
            },
            set: function (a) {
                var b = this.oi;
                this.oi = a;
                if (b != this.oi) {
                    this.md("SearchTypeBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ah", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                var b = this.x;
                this.x = a;
                if (b != this.x) {
                    this.md("IsExpanded", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.prototype.mj = function () {
            this.x = false;
            this.t = false;
            this.ms();
        };
        Object.defineProperty(InputGroup.prototype, "aj", {
            get: function () {
                return this.z;
            },
            set: function (a) {
                var b = this.z;
                this.z = a;
                if (b != this.z) {
                    this.md("IsHovered", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ai", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                var b = this.y;
                this.y = a;
                if (b != this.y) {
                    this.md("IsFocused", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ac", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                var b = this.r;
                this.r = a;
                if (b != this.r) {
                    this.md("ActualIsExpanded", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "sq", {
            get: function () {
                return this.n8;
            },
            set: function (a) {
                var b = this.n8;
                this.n8 = a;
                if (b != this.n8) {
                    this.md("FocusBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "ki", {
            get: function () {
                return this.ib;
            },
            set: function (a) {
                var b = this.ib;
                this.ib = a;
                if (b != this.ib) {
                    this.md("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "disabled", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                if (b != this.w) {
                    this.md("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.prototype.me = function () {
        };
        InputGroup.prototype.onDetachedFromUI = function () {
            this.view.ae();
        };
        InputGroup.prototype.onAttachedToUI = function () {
            this.view.ac();
        };
        InputGroup.prototype.ak = function () {
            return this.view.g();
        };
        InputGroup.prototype.ia = function () {
            return this.i();
        };
        InputGroup.prototype.j9 = function () {
            var a = this.i();
            return a.y();
        };
        InputGroup.prototype.i = function () {
            var a = new InputGroupVisualModelExport();
            a.f = this.g;
            a.e = this.d;
            a.b = igniteuiReactCore.AppearanceHelper.a(this.os);
            a.o = this.ca;
            a.p = this.cb;
            a.z = this.mz;
            a.aa = this.tf;
            a.x = this.cj;
            a.w = this.ci;
            a.t = this.cf;
            a.c = igniteuiReactCore.AppearanceHelper.a(this.ow);
            a.d = igniteuiReactCore.AppearanceHelper.a(this.ox);
            a.u = this.cg;
            a.s = this.ce;
            a.q = this.cc;
            a.r = this.cd;
            a.v = this.ch;
            a.a = igniteuiReactCore.AppearanceHelper.a(this.or);
            a.g = this.ac;
            a.j = this.aj;
            a.i = this.ai;
            a.h = this.disabled;
            a.m = new igniteuiReactCore.List$1(PrefixVisualModelExport.$, 0);
            a.l = new igniteuiReactCore.List$1(LabelVisualModelExport.$, 0);
            a.k = new igniteuiReactCore.List$1(InputVisualModelExport.$, 0);
            a.n = new igniteuiReactCore.List$1(SuffixVisualModelExport.$, 0);
            for (var b = 0; b < this.inputs.count; b++) {
                if (igniteuiReactCore.typeCast(Prefix.$, this.inputs._inner[b]) !== null) {
                    if (this.inputs._inner[b].e == null) {
                        this.inputs._inner[b].e = "Prefix" + a.m.count.toString();
                    }
                    a.m.add1(this.inputs._inner[b].t());
                }
                else if (igniteuiReactCore.typeCast(Label.$, this.inputs._inner[b]) !== null) {
                    if (this.inputs._inner[b].e == null) {
                        this.inputs._inner[b].e = "Label" + a.l.count.toString();
                    }
                    a.l.add1(this.inputs._inner[b].au());
                }
                else if (igniteuiReactCore.typeCast(Input.$, this.inputs._inner[b]) !== null) {
                    if (this.inputs._inner[b].e == null) {
                        this.inputs._inner[b].e = "Input" + a.k.count.toString();
                    }
                    a.k.add1(this.inputs._inner[b].ba());
                }
                else if (igniteuiReactCore.typeCast(Suffix.$, this.inputs._inner[b]) !== null) {
                    if (this.inputs._inner[b].e == null) {
                        this.inputs._inner[b].e = "Suffix" + a.n.count.toString();
                    }
                    a.n.add1(this.inputs._inner[b].t());
                }
            }
            return a;
        };
        InputGroup.prototype.provideContainer = function (a) {
            this.view.ad(a);
        };
        Object.defineProperty(InputGroup.prototype, "inputs", {
            get: function () {
                return this.l;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "h7", {
            get: function () {
                if (!this.h9.hasValue) {
                    var a_1 = 0;
                    this.l3(function (b) { return a_1++; });
                    this.h9 = igniteuiReactCore.toNullable(igniteuiReactCore.Number_$type, a_1);
                }
                return this.h9.value;
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.prototype.mk = function () {
            this.h9 = igniteuiReactCore.toNullable(igniteuiReactCore.Number_$type, null);
        };
        Object.defineProperty(InputGroup.prototype, "ae", {
            get: function () {
                return this.h7 > 0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(InputGroup.prototype, "al", {
            get: function () {
                return !this.ae || this.ac;
            },
            enumerable: true,
            configurable: true
        });
        InputGroup.$t = igniteuiReactCore.markType(InputGroup, 'InputGroup', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        InputGroup.c = 2;
        InputGroup.fu = 0;
        InputGroup.f5 = 0;
        InputGroup.nf = new igniteuiReactCore.CornerRadius(1, 0, 0, 0, 0);
        InputGroup.tv = new igniteuiReactCore.Thickness(1, 0, 0, 0, 0);
        InputGroup.rd = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.ru = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.rv = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.gx = 1;
        InputGroup.gw = 2;
        InputGroup.f9 = 2;
        InputGroup.se = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.sf = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.rx = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.rw = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.gu = 1;
        InputGroup.f8 = 1;
        InputGroup.f6 = 1;
        InputGroup.f7 = 1;
        InputGroup.gv = 0;
        InputGroup.rc = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.ga = 0;
        InputGroup.gb = 0;
        InputGroup.ng = new igniteuiReactCore.CornerRadius(1, 0, 0, 0, 0);
        InputGroup.tw = new igniteuiReactCore.Thickness(1, 0, 0, 0, 0);
        InputGroup.rz = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.r0 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.r1 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.gj = 1;
        InputGroup.gi = 2;
        InputGroup.gf = 2;
        InputGroup.r4 = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.r5 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.r3 = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.r2 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.gg = 1;
        InputGroup.ge = 1;
        InputGroup.gc = 1;
        InputGroup.gd = 1;
        InputGroup.gh = 0;
        InputGroup.ry = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.fv = 0;
        InputGroup.fw = 0;
        InputGroup.ne = new igniteuiReactCore.CornerRadius(1, 4, 4, 0, 0);
        InputGroup.tu = new igniteuiReactCore.Thickness(1, 16, 0, 16, 0);
        InputGroup.rn = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.ro = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.rp = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.f4 = 1;
        InputGroup.f3 = 2;
        InputGroup.f0 = 2;
        InputGroup.rs = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.rt = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.rr = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.rq = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.f1 = 1;
        InputGroup.fz = 1;
        InputGroup.fx = 1;
        InputGroup.fy = 1;
        InputGroup.f2 = 0;
        InputGroup.rm = igniteuiReactCore.BrushUtil.g(20, 0, 0, 0);
        InputGroup.fk = 1;
        InputGroup.fl = 2;
        InputGroup.nd = new igniteuiReactCore.CornerRadius(1, 4, 4, 4, 4);
        InputGroup.tt = new igniteuiReactCore.Thickness(1, 16, 0, 16, 0);
        InputGroup.rf = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.rg = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.rh = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.ft = 1;
        InputGroup.fs = 2;
        InputGroup.fp = 2;
        InputGroup.rk = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.rl = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.rj = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.ri = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.fq = 0;
        InputGroup.fo = 0;
        InputGroup.fm = 0;
        InputGroup.fn = 0;
        InputGroup.fr = 0;
        InputGroup.re = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.gk = 1;
        InputGroup.gl = 2;
        InputGroup.nh = new igniteuiReactCore.CornerRadius(1, 4, 4, 4, 4);
        InputGroup.tx = new igniteuiReactCore.Thickness(1, 16, 0, 16, 0);
        InputGroup.r7 = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.r8 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.r9 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.gt = 1;
        InputGroup.gs = 2;
        InputGroup.gp = 2;
        InputGroup.sc = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.sd = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.sb = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        InputGroup.sa = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        InputGroup.gq = 0;
        InputGroup.go = 0;
        InputGroup.gm = 0;
        InputGroup.gn = 0;
        InputGroup.gr = 0;
        InputGroup.r6 = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.d1 = 0;
        InputGroup.ec = 0;
        InputGroup.m9 = new igniteuiReactCore.CornerRadius(1, 0, 0, 0, 0);
        InputGroup.tp = new igniteuiReactCore.Thickness(1, 0, 0, 0, 0);
        InputGroup.px = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qe = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.qf = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.e4 = 1;
        InputGroup.e3 = 2;
        InputGroup.eg = 2;
        InputGroup.qy = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qz = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.qh = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qg = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.e1 = 1;
        InputGroup.ef = 1;
        InputGroup.ed = 1;
        InputGroup.ee = 1;
        InputGroup.e2 = 0;
        InputGroup.pw = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.eh = 0;
        InputGroup.ei = 0;
        InputGroup.na = new igniteuiReactCore.CornerRadius(1, 0, 0, 0, 0);
        InputGroup.tq = new igniteuiReactCore.Thickness(1, 0, 0, 0, 0);
        InputGroup.qj = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qk = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.ql = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.eq = 1;
        InputGroup.ep = 2;
        InputGroup.em = 2;
        InputGroup.qo = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qp = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.qn = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qm = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.en = 1;
        InputGroup.el = 1;
        InputGroup.ej = 1;
        InputGroup.ek = 1;
        InputGroup.eo = 0;
        InputGroup.qi = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.d2 = 0;
        InputGroup.d3 = 0;
        InputGroup.m8 = new igniteuiReactCore.CornerRadius(1, 4, 4, 0, 0);
        InputGroup.to = new igniteuiReactCore.Thickness(1, 16, 0, 16, 0);
        InputGroup.p7 = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.p8 = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.p9 = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.eb = 1;
        InputGroup.ea = 2;
        InputGroup.d7 = 2;
        InputGroup.qc = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qd = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.qb = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qa = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.d8 = 1;
        InputGroup.d6 = 1;
        InputGroup.d4 = 1;
        InputGroup.d5 = 1;
        InputGroup.d9 = 0;
        InputGroup.p6 = igniteuiReactCore.BrushUtil.g(20, 0, 0, 0);
        InputGroup.dr = 1;
        InputGroup.ds = 2;
        InputGroup.m7 = new igniteuiReactCore.CornerRadius(1, 4, 4, 4, 4);
        InputGroup.tn = new igniteuiReactCore.Thickness(1, 16, 0, 16, 0);
        InputGroup.pz = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.p0 = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.p1 = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.d0 = 1;
        InputGroup.dz = 2;
        InputGroup.dw = 2;
        InputGroup.p4 = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.p5 = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.p3 = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.p2 = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.dx = 0;
        InputGroup.dv = 0;
        InputGroup.dt = 0;
        InputGroup.du = 0;
        InputGroup.dy = 0;
        InputGroup.py = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.er = 1;
        InputGroup.es = 2;
        InputGroup.nb = new igniteuiReactCore.CornerRadius(1, 4, 4, 4, 4);
        InputGroup.tr = new igniteuiReactCore.Thickness(1, 16, 0, 16, 0);
        InputGroup.qr = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qs = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.qt = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.e0 = 1;
        InputGroup.ez = 2;
        InputGroup.ew = 2;
        InputGroup.qw = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qx = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.qv = igniteuiReactCore.BrushUtil.g(255, 186, 191, 199);
        InputGroup.qu = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        InputGroup.ex = 0;
        InputGroup.ev = 0;
        InputGroup.et = 0;
        InputGroup.eu = 0;
        InputGroup.ey = 0;
        InputGroup.qq = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        InputGroup.h8 = 0;
        return InputGroup;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var InputGroupInputCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(InputGroupInputCollection, _super);
        function InputGroupInputCollection() {
            var _this = _super.call(this, InputGroupItem.$, 0) || this;
            _this.collectionResetting = null;
            return _this;
        }
        InputGroupInputCollection.prototype.p = function () {
            if (this.collectionResetting != null) {
                this.collectionResetting(this, null);
            }
            _super.prototype.p.call(this);
        };
        InputGroupInputCollection.$t = igniteuiReactCore.markType(InputGroupInputCollection, 'InputGroupInputCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(InputGroupItem.$));
        return InputGroupInputCollection;
    }(igniteuiReactCore.ObservableCollection$1));
    /**
     * @hidden
     */
    var Label = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Label, _super);
        function Label() {
            var _this = _super.call(this) || this;
            _this.j = 0;
            _this._view = null;
            _this.aa = null;
            _this.z = null;
            _this.n = 0;
            _this.m = 1;
            _this.co = ThemeResolver.e(Label.k, Label.c7, Label.c0);
            _this.cl = ThemeResolver.e(Label.k, Label.c4, Label.cx);
            _this.cm = ThemeResolver.e(Label.k, Label.c5, Label.cy);
            _this.cn = ThemeResolver.e(Label.k, Label.c6, Label.cz);
            _this.u = null;
            _this.cs = Label.c8;
            _this.cp = Label.c1;
            _this.cq = Label.c2;
            _this.r = 0;
            _this.af = false;
            _this.ad = false;
            _this.v = null;
            _this.cr = null;
            _this.a1 = "ig-label-" + Label.at++;
            _this.ax = "inline-block";
            _this.ay = "inline-block";
            _this.az = null;
            _this.av = "center";
            _this.ar = 0;
            _this.ab = false;
            _this.a0 = null;
            _this.aw = null;
            _this.a2 = null;
            _this.ae = false;
            _this.ai = false;
            _this.ac = false;
            _this.ah = false;
            _this.ag = false;
            _this.ap = false;
            var a = new LabelView();
            a.b = _this;
            _this.view = a;
            _this.view.y();
            return _this;
        }
        Object.defineProperty(Label.prototype, "l", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.g("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        Label.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Object.defineProperty(Label.prototype, "i", {
            get: function () {
                var a = new igniteuiReactCore.AnimationKeyFrameEffectTiming();
                a.g = 300;
                a.b = 0;
                return a;
            },
            enumerable: true,
            configurable: true
        });
        Label.prototype.b5 = function () {
            var _this = this;
            this.view.q();
            var a = false;
            if (this.aa == null) {
                var b = new igniteuiReactCore.TransformGroup();
                b.j.add(((function () {
                    var $ret = new igniteuiReactCore.TranslateTransform();
                    $ret.k = _this.s == 0 ? (_this.view.h() * 0.5) : 0;
                    return $ret;
                })()));
                b.j.add(((function () {
                    var $ret = new igniteuiReactCore.ScaleTransform();
                    $ret.l = 1;
                    $ret.m = 1;
                    return $ret;
                })()));
                var c_1 = -(this.view.h() * 1.3);
                if (this.o == 2) {
                    c_1 = -(this.view.h() * 1.05);
                }
                if (this.o == 3) {
                    c_1 = -(this.view.h() * 1.01);
                }
                var d = new igniteuiReactCore.TransformGroup();
                d.j.add(((function () {
                    var $ret = new igniteuiReactCore.TranslateTransform();
                    $ret.k = _this.s == 2 ? c_1 : -(_this.view.h() * 0.5);
                    return $ret;
                })()));
                d.j.add(((function () {
                    var $ret = new igniteuiReactCore.ScaleTransform();
                    $ret.l = 0.75;
                    $ret.m = 0.75;
                    return $ret;
                })()));
                this.aa = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.a(this.i).m(new igniteuiReactCore.AnimationKeyFrameProperty(14, b), new igniteuiReactCore.AnimationKeyFrameProperty(2, igniteuiReactCore.BrushUtil.g(0, 255, 255, 255))).m(new igniteuiReactCore.AnimationKeyFrameProperty(14, d), new igniteuiReactCore.AnimationKeyFrameProperty(2, igniteuiReactCore.BrushUtil.g(this.s == 2 ? 255 : 0, 255, 255, 255))));
            }
            if (this.z == null) {
                this.z = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.a(this.i).m(new igniteuiReactCore.AnimationKeyFrameProperty(7, this.cw)).m(new igniteuiReactCore.AnimationKeyFrameProperty(7, this.ct)));
            }
        };
        Label.prototype.cf = function (a, b) {
            var _this = this;
            if ((b > 0 && a.playbackRate < 0) || (b < 0 && a.playbackRate > 0)) {
                a.reverse();
                if (this.ap) {
                    a.finish();
                    this.b6(a);
                    return;
                }
                a.finished.f(function (c) { return _this.b6(a); });
            }
            else {
                a.play();
                if (this.ap) {
                    a.finish();
                    this.b6(a);
                    return;
                }
                a.finished.f(function (c) { return _this.b6(a); });
            }
        };
        Label.prototype.b6 = function (a) {
            a.commitStyles();
            if (a == this.aa && this.ah) {
                this.aa = null;
            }
            if (a == this.z && this.ag) {
                this.z = null;
            }
        };
        Label.prototype.h = function (a, b, c) {
            _super.prototype.h.call(this, a, b, c);
            switch (a) {
                case "BaseTheme":
                    this.ci(this.l);
                    this.ck();
                    break;
                case "TextColor":
                case "HoverTextColor":
                case "TextStyle":
                case "HighlightTextColor":
                case "HoverHighlightTextColor":
                    this.ck();
                    break;
                case "ActualTextColor":
                case "ActualHoverTextColor":
                case "ActualTextStyle":
                case "ActualHighlightTextColor":
                case "ActualHoverHighlightTextColor":
                    if (this.aa != null) {
                        if (this.aa.playState == 3) {
                            this.aa = null;
                        }
                        else {
                            this.ah = true;
                        }
                    }
                    if (this.z != null) {
                        if (this.z.playState == 3) {
                            this.z = null;
                        }
                        else {
                            this.ag = true;
                        }
                    }
                    this.cj();
                    break;
                case "Text":
                    this.view.ab();
                    break;
                case "Density":
                    this.o = this.p == 0 ? 1 : this.p;
                    break;
                case "ActualDensity":
                    this.view.ad();
                    this.view.ac();
                    break;
                case "InputGroup":
                    this.view.ac();
                    break;
                case "IsHighlighted":
                    this.b9();
                    break;
                case "IsShifted":
                    this.ca();
                    break;
                case "ShiftType":
                    if (this.aa != null) {
                        if (this.aa.playState == 3) {
                            this.aa = null;
                        }
                        else {
                            this.ah = true;
                        }
                    }
                    this.cd();
                    break;
                case "Display":
                    this.view.v();
                    break;
                case "FlexDirection":
                    this.view.w();
                    break;
                case "FlexGrow":
                    this.view.x();
                    break;
                case "AlignItems":
                    this.view.r();
                    break;
            }
        };
        Label.prototype.cd = function () {
            this.view.ac();
        };
        Label.prototype.ca = function () {
            this.b5();
            var a = 1;
            var b = this.an;
            if (!b) {
                a = -1;
            }
            this.cf(this.aa, a);
        };
        Label.prototype.b9 = function () {
            this.b5();
            var a = 1;
            var b = this.al;
            if (!b) {
                a = -1;
            }
            this.cf(this.z, a);
        };
        Label.prototype.ck = function () {
            this.cw = this.dc != null ? this.dc : Label.c8;
            this.cv = this.db != null ? this.db : Label.c8;
            this.ct = this.c9 != null ? this.c9 : Label.c1;
            this.w = this.y != null ? this.y : Label.x;
        };
        Label.prototype.cj = function () {
            if (this.w != null) {
                this.view.af(this.w);
            }
            this.view.aa(this.cw);
        };
        Label.prototype.ci = function (a) {
            Label.c8 = ThemeResolver.e(a, Label.c7, Label.c0);
            Label.c1 = ThemeResolver.e(a, Label.c4, Label.cx);
            Label.c3 = ThemeResolver.e(a, Label.c6, Label.cz);
            Label.c2 = ThemeResolver.e(a, Label.c5, Label.cy);
        };
        Object.defineProperty(Label.prototype, "p", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.g("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "o", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.g("ActualDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "cw", {
            get: function () {
                return this.co;
            },
            set: function (a) {
                var b = this.co;
                this.co = a;
                if (b != this.co) {
                    this.g("ActualTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "ct", {
            get: function () {
                return this.cl;
            },
            set: function (a) {
                var b = this.cl;
                this.cl = a;
                if (b != this.cl) {
                    this.g("ActualHighlightTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "cu", {
            get: function () {
                return this.cm;
            },
            set: function (a) {
                var b = this.cm;
                this.cm = a;
                if (b != this.cm) {
                    this.g("ActualHoverHighlightTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "cv", {
            get: function () {
                return this.cn;
            },
            set: function (a) {
                var b = this.cn;
                this.cn = a;
                if (b != this.cn) {
                    this.g("ActualHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "w", {
            get: function () {
                return this.u;
            },
            set: function (a) {
                var b = this.u;
                this.u = a;
                if (b != this.u) {
                    this.g("ActualTextStyle", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "dc", {
            get: function () {
                return this.cs;
            },
            set: function (a) {
                var b = this.cs;
                this.cs = a;
                if (b != this.cs) {
                    this.g("TextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "c9", {
            get: function () {
                return this.cp;
            },
            set: function (a) {
                var b = this.cp;
                this.cp = a;
                if (b != this.cp) {
                    this.g("HighlightTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "da", {
            get: function () {
                return this.cq;
            },
            set: function (a) {
                var b = this.cq;
                this.cq = a;
                if (b != this.cq) {
                    this.g("HoverHighlightTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "s", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                var b = this.r;
                this.r = a;
                if (b != this.r) {
                    this.g("ShiftType", igniteuiReactCore.enumGetBox(LabelShiftType_$type, b), igniteuiReactCore.enumGetBox(LabelShiftType_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "an", {
            get: function () {
                return this.af;
            },
            set: function (a) {
                var b = this.af;
                this.af = a;
                if (b != this.af) {
                    this.g("IsShifted", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Label.prototype.ch = function (a, b) {
            if (b === void 0) {
                b = true;
            }
            var c = this.ap;
            if (!b) {
                this.ap = true;
            }
            try {
                this.an = a;
            }
            finally {
                if (!b) {
                    this.ap = c;
                }
            }
        };
        Object.defineProperty(Label.prototype, "al", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                var b = this.ad;
                this.ad = a;
                if (b != this.ad) {
                    this.g("IsHighlighted", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Label.prototype.cb = function () {
            this.am = true;
        };
        Label.prototype.cc = function () {
            this.am = false;
        };
        Object.defineProperty(Label.prototype, "y", {
            get: function () {
                return this.v;
            },
            set: function (a) {
                var b = this.v;
                this.v = a;
                if (b != this.v) {
                    this.g("TextStyle", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "db", {
            get: function () {
                return this.cr;
            },
            set: function (a) {
                var b = this.cr;
                this.cr = a;
                if (b != this.cr) {
                    this.g("HoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "br", {
            get: function () {
                return this.a1;
            },
            set: function (a) {
                var b = this.a1;
                this.a1 = a;
                if (b != this.a1) {
                    this.g("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "bf", {
            get: function () {
                return this.ax;
            },
            set: function (a) {
                var b = this.ax;
                this.ax = a;
                if (b != this.ax) {
                    this.g("Display", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "bi", {
            get: function () {
                return this.ay;
            },
            set: function (a) {
                var b = this.ay;
                this.ay = a;
                if (b != this.ay) {
                    this.g("FlexDirection", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "bk", {
            get: function () {
                return this.az;
            },
            set: function (a) {
                var b = this.az;
                this.az = a;
                if (b != this.az) {
                    this.g("FlexGrow", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "a9", {
            get: function () {
                return this.av;
            },
            set: function (a) {
                var b = this.av;
                this.av = a;
                if (b != this.av) {
                    this.g("AlignItems", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "aj", {
            get: function () {
                return this.ab;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "as", {
            get: function () {
                return this.ar;
            },
            set: function (a) {
                var b = this.ar;
                this.ar = a;
                this.ab = true;
                if (b != this.ar) {
                    this.g("TabIndex", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "bm", {
            get: function () {
                return this.a0;
            },
            set: function (a) {
                var b = this.a0;
                this.a0 = a;
                if (b != this.a0) {
                    this.g("TabIndex", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "bb", {
            get: function () {
                return this.aw;
            },
            set: function (a) {
                var b = this.aw;
                this.aw = a;
                if (b != this.aw) {
                    this.g("AriaLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "text", {
            get: function () {
                return this.a2;
            },
            set: function (a) {
                var b = this.a2;
                this.a2 = a;
                if (b != this.a2) {
                    this.g("Text", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "am", {
            get: function () {
                return this.ae;
            },
            set: function (a) {
                var b = this.ae;
                this.ae = a;
                if (b != this.ae) {
                    this.g("IsHover", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "aq", {
            get: function () {
                return this.ai;
            },
            set: function (a) {
                var b = this.ai;
                this.ai = a;
                if (b != this.ai) {
                    this.g("Value", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Label.prototype, "disabled", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (b != this.ac) {
                    this.g("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Label.prototype.ce = function () {
            this.view.ab();
        };
        Label.prototype.onDetachedFromUI = function () {
            this.view.u();
        };
        Label.prototype.onAttachedToUI = function () {
            this.view.s();
        };
        Label.prototype.ao = function () {
            return this.view.e();
        };
        Label.prototype.au = function () {
            return this.q();
        };
        Label.prototype.bh = function () {
            var a = this.q();
            return a.r();
        };
        Label.prototype.q = function () {
            var a = new LabelVisualModelExport();
            a.c = this.l;
            a.e = this.p;
            a.d = this.o;
            a.b = igniteuiReactCore.AppearanceHelper.a(this.cw);
            a.a = igniteuiReactCore.AppearanceHelper.a(this.ct);
            a.f = this.s;
            a.j = this.an;
            a.h = this.al;
            a.n = this.bf;
            a.o = this.bi;
            a.p = this.bk;
            a.m = this.a9;
            a.s = this.text;
            a.i = this.am;
            a.k = this.aq;
            a.g = this.disabled;
            a.q = this.e;
            if (this.w != null) {
                var b = this.w;
                if (this.view != null && b.n == null) {
                    var c = this.view.i;
                    var d = igniteuiReactCore.FontUtil.getFontInfoFromString(c, b.fontString);
                    b.n = d.n;
                    b.d = d.d;
                    b.o = d.o;
                    b.q = d.q;
                    b.r = d.r;
                    b.s = d.s;
                }
                if (b.n != null) {
                    a.t = b.n;
                }
                if (!igniteuiReactCore.isNaN_(b.d)) {
                    a.l = b.d;
                }
                if (b.s != null) {
                    a.x = b.s;
                }
                if (b.q != null) {
                    a.v = b.q;
                }
                if (b.o != null) {
                    a.u = b.q;
                }
            }
            return a;
        };
        Label.prototype.provideContainer = function (a) {
            this.view.t(a);
        };
        Label.$t = igniteuiReactCore.markType(Label, 'Label', InputGroupItem.$);
        Label.c7 = igniteuiReactCore.BrushUtil.g(221, 0, 0, 0);
        Label.c4 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        Label.c6 = igniteuiReactCore.BrushUtil.g(221, 0, 0, 0);
        Label.c5 = igniteuiReactCore.BrushUtil.g(255, 0, 153, 155);
        Label.c0 = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
        Label.cx = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Label.cz = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
        Label.cy = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Label.k = 2;
        Label.c8 = ThemeResolver.e(Label.k, Label.c7, Label.c0);
        Label.c1 = ThemeResolver.e(Label.k, Label.c4, Label.cx);
        Label.c3 = ThemeResolver.e(Label.k, Label.c6, Label.cz);
        Label.c2 = ThemeResolver.e(Label.k, Label.c5, Label.cy);
        Label.x = null;
        Label.at = 0;
        return Label;
    }(InputGroupItem));
    /**
     * @hidden
     */
    var Input = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Input, _super);
        function Input() {
            var _this = _super.call(this) || this;
            _this.x = null;
            _this.a1 = 0;
            _this.a2 = 0;
            _this.t = 0;
            _this.bi = "";
            _this.bc = "";
            _this.ae = false;
            _this.bd = null;
            _this.af = false;
            _this.am = false;
            _this._view = null;
            _this.q = 0;
            _this.k = 1;
            _this.j = 1;
            _this.bh = null;
            _this.bk = "_";
            _this.ah = false;
            _this.dk = Input.dr;
            _this.dj = Input.dq;
            _this.y = null;
            _this.dm = Input.dr;
            _this.keyDown = null;
            _this.keyUp = null;
            _this.keyPress = null;
            _this.gotFocus = null;
            _this.lostFocus = null;
            _this.mouseDown = null;
            _this.mouseUp = null;
            _this.z = null;
            _this.bg = "text";
            _this.bj = "text";
            _this.dl = null;
            _this.bf = "ig-input-" + Input.a9++;
            _this.a3 = 0;
            _this.ag = false;
            _this.be = null;
            _this.bb = null;
            _this.ak = false;
            _this.bl = null;
            _this.aj = false;
            _this.ai = false;
            _this.change = null;
            _this.changing = null;
            _this.compositionStart = null;
            _this.compositionEnd = null;
            _this.al = true;
            _this.ad = null;
            _this.au = false;
            _this.x = new MaskParsingService();
            var a = new InputView();
            a.b = _this;
            _this.view = a;
            _this.view.an();
            Input.ab = new igniteuiReactCore.FontInfo();
            Input.ab.n = "'Segoe UI', Verdana";
            return _this;
        }
        Object.defineProperty(Input.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        Input.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Object.defineProperty(Input.prototype, "r", {
            get: function () {
                return this.q;
            },
            set: function (a) {
                var b = this.q;
                this.q = a;
                if (b != this.q) {
                    this.g("ShiftType", igniteuiReactCore.enumGetBox(InputShiftType_$type, b), igniteuiReactCore.enumGetBox(InputShiftType_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "m", {
            get: function () {
                return this.k;
            },
            set: function (a) {
                var b = this.k;
                this.k = a;
                if (b != this.k) {
                    this.g("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "l", {
            get: function () {
                return this.j;
            },
            set: function (a) {
                var b = this.j;
                this.j = a;
                if (b != this.j) {
                    this.g("ActualDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "b5", {
            get: function () {
                return this.bh;
            },
            set: function (a) {
                var b = this.bh;
                this.bh = a;
                if (b != this.bh) {
                    this.g("Mask", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "b9", {
            get: function () {
                return this.bk;
            },
            set: function (a) {
                var b = this.bk;
                this.bk = a;
                if (b != this.bk) {
                    this.g("PromptChar", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ap", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (b != this.ah) {
                    this.g("IncludeLiterals", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Input.prototype.h = function (a, b, c) {
            _super.prototype.h.call(this, a, b, c);
            switch (a) {
                case "TextColor":
                case "HoverTextColor":
                case "TextStyle":
                    this.dh();
                    break;
                case "ActualTextColor":
                case "ActualHoverTextColor":
                case "ActualTextStyle":
                    this.dg();
                    break;
                case "Value":
                    if (!this.ai) {
                        this.view.as(this.cf);
                        if (this.b != null) {
                            this.b.ms();
                        }
                        if (this.b5 != null && !this.am) {
                            this.di(this.cf);
                        }
                    }
                    break;
                case "Density":
                    this.l = this.m == 0 ? 1 : this.m;
                    break;
                case "ActualDensity":
                    this.view.ay();
                    this.view.ax();
                    break;
                case "InputGroup":
                    this.cv();
                    break;
                case "ShiftType":
                    this.c6();
                    break;
                case "InputType":
                    this.c7();
                    break;
                case "Placeholder":
                    this.c5();
                    break;
                case "Mask":
                    this.b7 = this.b5;
                    break;
                case "PromptChar": break;
                case "IncludeLiterals": break;
                case "IsShown":
                    this.cw();
                    break;
                case "IsDisabled":
                    this.view.at(this.aj);
                    break;
            }
        };
        Input.prototype.c5 = function () {
            this.view.ap();
        };
        Input.prototype.c7 = function () {
            this.view.ar();
        };
        Input.prototype.c6 = function () {
            this.view.ax();
        };
        Input.prototype.cv = function () {
            this.view.ax();
        };
        Input.prototype.dh = function () {
            this.dp = this.dt != null ? this.dt : Input.dr;
            this.dn = this.ds != null ? this.ds : Input.dr;
            this.aa = this.ac != null ? this.ac : Input.ab;
        };
        Input.prototype.dg = function () {
            if (this.aa != null) {
                this.view.a0(this.aa);
            }
            igniteuiReactCore.NativeUI.n(this.view.o, this.dp);
        };
        Object.defineProperty(Input.prototype, "dp", {
            get: function () {
                return this.dk;
            },
            set: function (a) {
                var b = this.dk;
                this.dk = a;
                if (b != this.dk) {
                    this.g("ActualTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "dn", {
            get: function () {
                return this.dj;
            },
            set: function (a) {
                var b = this.dj;
                this.dj = a;
                if (b != this.dj) {
                    this.g("ActualHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "aa", {
            get: function () {
                return this.y;
            },
            set: function (a) {
                var b = this.y;
                this.y = a;
                if (b != this.y) {
                    this.g("ActualTextStyle", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "dt", {
            get: function () {
                return this.dm;
            },
            set: function (a) {
                var b = this.dm;
                this.dm = a;
                if (b != this.dm) {
                    this.g("TextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Input.prototype.cm = function () {
            if (this.b5 != null) {
                this.de(this.cf);
            }
            if (null != this.lostFocus) {
                this.lostFocus(this, igniteuiReactCore.EventArgs.empty);
            }
        };
        Input.prototype.cu = function () {
            if (this.b5 != null) {
                this.df(this.cf);
            }
            if (null != this.gotFocus) {
                this.gotFocus(this, igniteuiReactCore.EventArgs.empty);
            }
        };
        Input.prototype.cx = function (a) {
            if (this.b5 != null) {
                var b = a.keyCode;
                if ((b == 17 && b == 90) || (b == 17 && b == 89)) {
                    a.preventDefault();
                }
                this.t = b;
                this.a2 = this.a5();
                this.a1 = this.a4();
            }
            if (null != this.keyDown) {
                this.keyDown(this, a);
            }
        };
        Input.prototype.cz = function (a) {
            if (null != this.keyUp) {
                this.keyUp(this, a);
            }
        };
        Input.prototype.cy = function (a) {
            if (null != this.keyPress) {
                this.keyPress(this, a);
            }
        };
        Input.prototype.c0 = function (a) {
            if (null != this.mouseDown) {
                this.mouseDown(this, a);
            }
        };
        Input.prototype.c3 = function (a) {
            if (null != this.mouseUp) {
                this.mouseUp(this, a);
            }
        };
        Input.prototype.c4 = function () {
            if (this.b5 != null) {
                this.bi = this.cf;
                this.a2 = this.a5();
            }
        };
        Input.prototype.cs = function () {
            if (this.b5 != null) {
                if (!this.ae) {
                    this.df(this.bc);
                }
            }
        };
        Input.prototype.ct = function () {
            if (this.b5 != null) {
                if (!this.ae) {
                    this.de(this.cf);
                }
            }
        };
        Input.prototype.cn = function () {
            var _this = this;
            this.ai = true;
            this.cf = this.view.q();
            if (this.change != null) {
                this.change(this, ((function () {
                    var $ret = new InputChangeEventArgs();
                    $ret.value = _this.cf;
                    $ret.isCompositionInProgress = _this.view.e;
                    return $ret;
                })()));
            }
            this.ai = false;
        };
        Input.prototype.co = function () {
            var _this = this;
            this.ai = true;
            this.cf = this.view.q();
            this.ai = false;
            if (this.b5 != null) {
                this.am = true;
                if (this.af) {
                    this.a2 = this.a5();
                }
                if (this.cf.length < this.bi.length && this.t == 229) {
                    this.t = 8;
                }
                var a = this.a5();
                var b = this.a4();
                var c = "";
                switch (this.t) {
                    case 46:
                        this.a1 = this.a2 == this.a1 ? ++this.a1 : this.a1;
                        break;
                    case 8:
                        this.a2 = this.a5();
                        break;
                    default:
                        c = this.cf.substr(this.a2, this.a4() - this.a2);
                        break;
                }
                var d = new MaskOptions();
                d.a = this.b5;
                d.b = this.b9;
                var e = this.x.a(this.bi, c, d, this.a2, this.a1);
                this.cf = e.b;
                if (this.t == 8) {
                    e.a = this.a2;
                }
                this.dd(e.a, e.a);
                var f = this.x.h(this.cf, d);
                this.bc = this.ap ? this.cf : f;
                this.ch();
                this.am = false;
            }
            this.ai = true;
            if (this.changing != null) {
                this.changing(this, ((function () {
                    var $ret = new InputChangeEventArgs();
                    $ret.value = _this.cf;
                    $ret.isCompositionInProgress = _this.view.e;
                    return $ret;
                })()));
            }
            this.ai = false;
        };
        Input.prototype.cq = function () {
            if (this.compositionStart != null) {
                this.compositionStart(this, new igniteuiReactCore.EventArgs());
            }
        };
        Input.prototype.cp = function () {
            if (this.compositionEnd != null) {
                this.compositionEnd(this, new igniteuiReactCore.EventArgs());
            }
        };
        Input.prototype.c1 = function () {
            this.ar = true;
        };
        Input.prototype.c2 = function () {
            this.ar = false;
        };
        Object.defineProperty(Input.prototype, "ac", {
            get: function () {
                return this.z;
            },
            set: function (a) {
                var b = this.z;
                this.z = a;
                if (b != this.z) {
                    this.g("TextStyle", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "b0", {
            get: function () {
                return this.bg;
            },
            set: function (a) {
                var b = this.bg;
                this.bg = a;
                if (b != this.bg) {
                    this.g("InputType", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "b7", {
            get: function () {
                return this.bj;
            },
            set: function (a) {
                var b = this.bj;
                this.bj = a;
                if (b != this.bj) {
                    this.g("Placeholder", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ds", {
            get: function () {
                return this.dl;
            },
            set: function (a) {
                var b = this.dl;
                this.dl = a;
                if (b != this.dl) {
                    this.g("HoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "bx", {
            get: function () {
                return this.bf;
            },
            set: function (a) {
                var b = this.bf;
                this.bf = a;
                if (b != this.bf) {
                    this.g("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "an", {
            get: function () {
                return this.ag;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "a8", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                var b = this.a3;
                this.a3 = a;
                this.ag = true;
                if (b != this.a3) {
                    this.g("TabIndex", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "bu", {
            get: function () {
                return this.be;
            },
            set: function (a) {
                var b = this.be;
                this.be = a;
                if (b != this.be) {
                    this.g("TabIndex", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "bq", {
            get: function () {
                return this.bb;
            },
            set: function (a) {
                var b = this.bb;
                this.bb = a;
                if (b != this.bb) {
                    this.g("AriaLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ar", {
            get: function () {
                return this.ak;
            },
            set: function (a) {
                var b = this.ak;
                this.ak = a;
                if (b != this.ak) {
                    this.g("IsHover", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "cf", {
            get: function () {
                return this.bl;
            },
            set: function (a) {
                var b = this.bl;
                this.bl = a;
                if (b != this.bl) {
                    this.g("Value", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "ao", {
            get: function () {
                return !igniteuiReactCore.stringIsNullOrEmpty(this.cf);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "disabled", {
            get: function () {
                return this.aj;
            },
            set: function (a) {
                var b = this.aj;
                this.aj = a;
                if (b != this.aj) {
                    this.g("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Input.prototype.c8 = function () {
        };
        Input.prototype.onDetachedFromUI = function () {
            this.view.al();
        };
        Input.prototype.onAttachedToUI = function () {
            this.view.aj();
        };
        Input.prototype.at = function () {
            return this.view.f();
        };
        Input.prototype.ba = function () {
            return this.n();
        };
        Input.prototype.bt = function () {
            var a = this.n();
            return a.n();
        };
        Input.prototype.n = function () {
            var a = new InputVisualModelExport();
            a.h = this.view.j.rootWrapper.getNativeElement().offsetTop;
            a.f = this.view.j.rootWrapper.getNativeElement().offsetLeft;
            a.c = this.r;
            a.b = this.l;
            a.j = this.b5;
            a.m = this.b9;
            a.d = this.ap;
            a.a = igniteuiReactCore.AppearanceHelper.a(this.dp);
            a.i = this.b0;
            a.l = this.b7;
            a.e = this.ar;
            a.t = this.cf;
            a.k = this.e;
            if (this.aa != null) {
                var b = this.aa;
                if (this.view != null && b.n == null) {
                    var c = this.view.j;
                    var d = igniteuiReactCore.FontUtil.getFontInfoFromString(c, b.fontString);
                    b.n = d.n;
                    b.d = d.d;
                    b.o = d.o;
                    b.q = d.q;
                    b.r = d.r;
                    b.s = d.s;
                }
                if (b.n != null) {
                    a.o = b.n;
                }
                if (!igniteuiReactCore.isNaN_(b.d)) {
                    a.g = b.d;
                }
                if (b.s != null) {
                    a.s = b.s;
                }
                if (b.q != null) {
                    a.q = b.q;
                }
                if (b.o != null) {
                    a.p = b.q;
                }
            }
            return a;
        };
        Input.prototype.provideContainer = function (a) {
            this.view.ak(a);
        };
        Input.prototype.ck = function () {
            this.cu();
            this.view.am();
        };
        Input.prototype.db = function () {
            this.view.aq();
        };
        Input.prototype.dd = function (a, b) {
            this.view.av(a, b);
        };
        Input.prototype.df = function (a) {
            this.am = true;
            var b = new MaskOptions();
            b.a = this.b5;
            b.b = this.b9;
            this.cf = this.x.g(this.cf, b);
            this.bi = this.cf;
            this.am = false;
        };
        Input.prototype.de = function (a) {
            this.am = true;
            var b = new MaskOptions();
            b.a = this.b5;
            b.b = this.b9;
            if (a == this.x.g(null, b)) {
                this.cf = "";
            }
            this.am = false;
        };
        Input.prototype.di = function (a) {
            var _this = this;
            var b = new MaskOptions();
            b.a = this.b5;
            b.b = this.b9;
            if (this.b9 != null && this.b9.length > 1) {
                b.b = this.b9.substr(0, 1);
            }
            this.cf = a != null ? this.x.g(a, b) : "";
            this.bc = this.ap ? this.cf : a;
            if (this.changing != null) {
                this.changing(this, ((function () {
                    var $ret = new InputChangeEventArgs();
                    $ret.value = _this.cf;
                    $ret.isCompositionInProgress = _this.view.e;
                    return $ret;
                })()));
            }
        };
        Input.prototype.ch = function () {
            this.bi = this.cf;
            this.af = false;
            this.a2 = 0;
            this.a1 = 0;
            this.t = 0;
        };
        Input.prototype.a5 = function () {
            var a = this.view.n();
            var b = this.view.m();
            return a == b && this.af ? b - this.bd.length : a;
        };
        Input.prototype.a4 = function () {
            return this.view.m();
        };
        Object.defineProperty(Input.prototype, "selectionStart", {
            get: function () {
                return this.a5();
            },
            set: function (a) {
                this.view.aw(a);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "selectionEnd", {
            get: function () {
                return this.a4();
            },
            set: function (a) {
                this.view.au(a);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Input.prototype, "as", {
            get: function () {
                return this.al;
            },
            set: function (a) {
                var b = this.al;
                this.al = a;
                if (b != this.al) {
                    this.g("IsShown", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Input.prototype.dc = function (a, b) {
            if (b === void 0) {
                b = true;
            }
            var c = this.au;
            if (!b) {
                this.au = true;
            }
            try {
                this.as = a;
            }
            finally {
                if (!b) {
                    this.au = c;
                }
            }
        };
        Input.prototype.cw = function () {
            this.cj();
            this.c9(this.ad, this.as);
        };
        Input.prototype.cj = function () {
            this.view.ai();
            if (this.ad == null) {
                this.ad = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.a(this.i).m(new igniteuiReactCore.AnimationKeyFrameProperty(1, 0)).m(new igniteuiReactCore.AnimationKeyFrameProperty(1, 1)));
            }
        };
        Object.defineProperty(Input.prototype, "i", {
            get: function () {
                var a = new igniteuiReactCore.AnimationKeyFrameEffectTiming();
                a.g = 300;
                a.b = 0;
                return a;
            },
            enumerable: true,
            configurable: true
        });
        Input.prototype.c9 = function (a, b) {
            var c = a.playbackRate < 0;
            if (b != c) {
                a.play();
            }
            else {
                a.reverse();
            }
            if (this.au) {
                a.finish();
                a.commitStyles();
                return;
            }
            a.finished.f(function (d) { return a.commitStyles(); });
        };
        Input.$t = igniteuiReactCore.markType(Input, 'Input', InputGroupItem.$);
        Input.dr = igniteuiReactCore.BrushUtil.g(221, 0, 0, 0);
        Input.dq = igniteuiReactCore.BrushUtil.g(221, 0, 0, 0);
        Input.ab = null;
        Input.a9 = 0;
        return Input;
    }(InputGroupItem));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DatePickerVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DatePickerVisualModelExport, _super);
        function DatePickerVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.b = 0;
            _this.a = 0;
            _this.j = null;
            _this.k = null;
            _this.l = null;
            _this.f = 0;
            _this.h = null;
            _this.i = null;
            _this.e = null;
            _this.d = null;
            _this.c = null;
            return _this;
        }
        DatePickerVisualModelExport.prototype.g = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("density : " + this.b + ", ");
            a.l("baseTheme : " + this.a + ", ");
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.j)) {
                a.l("textStyleFontStyle : \"" + this.j + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.k)) {
                a.l("textStyleFontVariant : \"" + this.k + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.l)) {
                a.l("textStyleFontWeight : \"" + this.l + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.h)) {
                a.l("textStyleFontFamily : \"" + this.h + "\", ");
            }
            if (!igniteuiReactCore.stringIsNullOrEmpty(this.i)) {
                a.l("textStyleFontStretch : \"" + this.i + "\", ");
            }
            if (!igniteuiReactCore.isNaN_(this.f)) {
                a.l("textStyleFontSize : " + this.f + ", ");
            }
            var b = "popupModel";
            a.l(b + ": " + this.e.f() + ", ");
            var c = "inputGroupModel";
            a.l(c + ": " + this.d.y() + ", ");
            var d = "calendarModel";
            a.l(d + ": " + this.c.l() + ", ");
            a.l("}");
            return a.toString();
        };
        DatePickerVisualModelExport.$t = igniteuiReactCore.markType(DatePickerVisualModelExport, 'DatePickerVisualModelExport');
        return DatePickerVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var DatePickerView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DatePickerView, _super);
        function DatePickerView() {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.c = null;
            _this.f = null;
            _this.d = null;
            _this.e = null;
            return _this;
        }
        DatePickerView.prototype.p = function () {
        };
        DatePickerView.prototype.o = function (a) {
            if (a == null) {
                this.c = null;
                return;
            }
            this.c = a;
            var b = Math.round(a.rootWrapper.width());
            var c = Math.round(a.rootWrapper.height());
            this.i();
            this.j();
            var d = this.c.rootWrapper.getChildAt(0);
            d.listen("keydown", igniteuiReactCore.runOn(this, this.g));
            document.addEventListener("click", igniteuiReactCore.runOn(this, this.k), false);
        };
        DatePickerView.prototype.i = function () {
            if (this.c != null) {
                this.f = this.c.rootWrapper.getChildAt(0);
                this.e = this.c.createElement("div");
                var a = this.c.createElement("div");
                this.a.am(this.c, this.f, this.e, a);
                this.e.listen("click", igniteuiReactCore.runOn(this, this.h));
                a.listen("click", igniteuiReactCore.runOn(this, this.l));
            }
        };
        DatePickerView.prototype.r = function () {
            if (this.e != null) {
                if (this.a.q == true) {
                    this.e.show();
                }
                else {
                    this.e.hide();
                }
            }
        };
        DatePickerView.prototype.m = function () {
            if (this.e != null) {
                this.e.hide();
            }
        };
        DatePickerView.prototype.j = function () {
            if (this.c != null) {
                var a = this.c.rootWrapper.getChildAt(1);
                this.a.an(this.c, a);
            }
        };
        DatePickerView.prototype.h = function (a) {
            this.a.ak();
            if (this.e != null) {
                this.e.hide();
            }
        };
        DatePickerView.prototype.l = function (a) {
            this.a.aq();
        };
        DatePickerView.prototype.s = function () {
            if (this.c != null) {
                var a = this.c.rootWrapper.getNativeElement();
                var b = a.getBoundingClientRect();
                ;
                return b;
            }
            return null;
        };
        DatePickerView.prototype.g = function (a) {
            var b = a.which;
            if (a.altKey) {
                if (b == 40) {
                    this.a.au();
                    this.a.ap();
                }
                else if (b == 38) {
                    this.a.al();
                }
            }
            else if (b == 27) {
                this.a.al();
            }
        };
        DatePickerView.prototype.k = function (a) {
            var b = a.target;
            if (!this.b(b)) {
                this.a.al();
            }
        };
        DatePickerView.prototype.b = function (a) {
            if (null == a) {
                return false;
            }
            var b = this.f.getNativeElement();
            var c = this.d.getNativeElement();
            return b.contains(a) || c.contains(a);
        };
        DatePickerView.prototype.q = function (a) {
            this.d = a;
        };
        DatePickerView.prototype.n = function () {
        };
        DatePickerView.$t = igniteuiReactCore.markType(DatePickerView, 'DatePickerView');
        return DatePickerView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var DatePicker = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(DatePicker, _super);
        function DatePicker() {
            var _this = _super.call(this) || this;
            _this.g = null;
            _this.m = null;
            _this.k = null;
            _this.j = null;
            _this.h = null;
            _this.i = null;
            _this.f = null;
            _this.propertyChanged = null;
            _this.valueChanged = null;
            _this.t = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, null);
            _this.c = 2;
            _this.a = 1;
            _this.n = null;
            _this.a3 = igniteuiReactCore.BrushUtil.g(255, 24, 29, 31);
            _this.a2 = igniteuiReactCore.BrushUtil.g(255, 163, 172, 184);
            _this.p = true;
            var a = new DatePickerView();
            a.a = _this;
            _this.g = a;
            _this.g.p();
            return _this;
        }
        DatePicker.prototype.at = function (a, b) {
            this.t = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, b);
            if (this.m != null) {
                this.al();
            }
            if (this.j != null) {
                if (igniteuiReactCore.nullableNotEquals(this.t, null)) {
                    this.j.cf = igniteuiReactCore.dateToStringFormat(this.t.value, "MM/dd/yyyy", null);
                    this.g.r();
                }
                else {
                    this.j.cf = "";
                    this.g.m();
                }
            }
            if (this.valueChanged != null) {
                this.valueChanged(this, ((function () {
                    var $ret = new ValueChangedEventArgs();
                    $ret.oldValue = a;
                    $ret.newValue = b;
                    return $ret;
                })()));
            }
        };
        DatePicker.prototype.notifySizeChanged = function () {
            this.g.n();
        };
        DatePicker.prototype.destroy = function () {
            if (this.f != null) {
                var a = this.f;
                a.valueChanged = igniteuiReactCore.delegateRemove(a.valueChanged, igniteuiReactCore.runOn(this, this.aj));
                var b = this.f;
                b.close = igniteuiReactCore.delegateRemove(b.close, igniteuiReactCore.runOn(this, this.ai));
            }
            this.provideContainer(null);
        };
        DatePicker.prototype.provideContainer = function (a) {
            this.g.o(a);
        };
        Object.defineProperty(DatePicker.prototype, "r", {
            get: function () {
                return this.t.value;
            },
            set: function (a) {
                var b = this.t;
                this.t = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, a);
                if (igniteuiReactCore.nullableNotEquals(b, this.t)) {
                    this.as("Value", igniteuiReactCore.unwrapNullable(b), igniteuiReactCore.unwrapNullable(this.t));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "d", {
            get: function () {
                return this.c;
            },
            set: function (a) {
                var b = this.c;
                this.c = a;
                if (b != this.c) {
                    this.as("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.c));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "b", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.as("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, this.a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "o", {
            get: function () {
                return this.n;
            },
            set: function (a) {
                var b = this.n;
                this.n = a;
                if (b != this.n) {
                    this.as("TextStyle", b, this.n);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "a5", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                var b = this.a3;
                this.a3 = a;
                if (b != this.a3) {
                    this.as("TextColor", b, this.a3);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "a4", {
            get: function () {
                return this.a2;
            },
            set: function (a) {
                var b = this.a2;
                this.a2 = a;
                if (b != this.a2) {
                    this.as("IconColor", b, this.a2);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DatePicker.prototype, "q", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                var b = this.p;
                this.p = a;
                if (b != this.p) {
                    this.as("ShowClearButton", b, this.p);
                }
            },
            enumerable: true,
            configurable: true
        });
        DatePicker.prototype.as = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.av(a, b, c);
        };
        DatePicker.prototype.av = function (a, b, c) {
            switch (a) {
                case "Density":
                    this.ax();
                    break;
                case "BaseTheme":
                    this.ay();
                    break;
                case "Value":
                    if (this.f != null) {
                        this.f.u = this.t.value;
                    }
                    if (this.j != null) {
                        if (igniteuiReactCore.nullableNotEquals(this.t, null)) {
                            this.j.cf = igniteuiReactCore.dateToStringFormat(this.t.value, "MM/dd/yyyy", null);
                            this.g.r();
                        }
                        else {
                            this.j.cf = "";
                            this.g.m();
                        }
                    }
                    break;
                case "TextStyle":
                    this.a0();
                    break;
                case "ShowClearButton":
                    if (this.j != null) {
                        if (this.j.cf != "") {
                            this.g.r();
                        }
                    }
                    break;
                case "TextColor":
                case "IconColor":
                    this.a1();
                    break;
            }
        };
        DatePicker.prototype.a1 = function () {
            if (this.j != null) {
                this.j.dt = this.a5;
            }
            if (this.h != null) {
                this.h.fill = this.a4;
            }
            if (this.i != null) {
                this.i.fill = this.a4;
            }
        };
        DatePicker.prototype.az = function () {
            if (this.k != null) {
            }
        };
        DatePicker.prototype.a0 = function () {
            if (this.n != null) {
                this.j.ac = this.n;
            }
        };
        DatePicker.prototype.am = function (a, b, c, d) {
            this.k = new InputGroup();
            var e = a.getSubRenderer(b);
            this.k.provideContainer(e);
            this.k.k = 0;
            this.k.d = this.b;
            this.k.h = this.d;
            var f = a.createElement("div");
            f.setRawStyleProperty("flex-grow", "1");
            var g = a.getSubRenderer(f);
            this.j = new Input();
            this.j.provideContainer(g);
            this.j.b0 = "text";
            if (this.n != null) {
                this.j.ac = this.n;
            }
            this.j.disabled = true;
            this.j.dt = this.a5;
            this.k.appendContentChild(f);
            this.k.inputs.add(this.j);
            var h = a.createElement("div");
            var i = a.getSubRenderer(h);
            var j = new Suffix();
            j.provideContainer(i);
            this.h = new Icon();
            var k = a.getSubRenderer(c);
            this.h.provideContainer(k);
            this.h.svgPath = DatePicker.x;
            this.h.fill = this.a4;
            c.setStyleProperty("height", "16px");
            c.setStyleProperty("width", "16px");
            j.appendContentChild(c);
            this.k.appendContentChild(h);
            this.k.inputs.add(j);
            if (igniteuiReactCore.nullableEquals(this.t, null)) {
                c.hide();
            }
            var l = a.createElement("div");
            var m = a.getSubRenderer(l);
            var n = new Suffix();
            n.provideContainer(m);
            var o = a.getSubRenderer(d);
            this.i = new Icon();
            this.i.provideContainer(o);
            this.i.svgPath = DatePicker.w;
            this.i.fill = this.a4;
            d.setStyleProperty("height", "16px");
            d.setStyleProperty("width", "16px");
            n.appendContentChild(d);
            this.k.appendContentChild(l);
            this.k.inputs.add(n);
        };
        DatePicker.prototype.ak = function () {
            var a = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, this.r);
            var b = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, null);
            if (this.j != null) {
                this.j.cf = "";
            }
            this.t = igniteuiReactCore.toNullable(igniteuiReactCore.Date_$type, null);
            this.f.ax();
            this.at(a.value, b.value);
        };
        DatePicker.prototype.an = function (a, b) {
            this.m = new igniteuiReactLayouts.Popup();
            var c = a.getSubRenderer(b);
            this.m.provideRenderer(c);
            this.f = new Calendar();
            var d = a.createElement("div");
            this.g.q(d);
            d.setStyleProperty("width", "220px");
            d.setStyleProperty("height", "230px");
            var e = a.getSubRenderer(d);
            this.f.provideContainer(e);
            var f = this.f;
            f.valueChanged = igniteuiReactCore.delegateCombine(f.valueChanged, igniteuiReactCore.runOn(this, this.aj));
            var g = this.f;
            g.close = igniteuiReactCore.delegateCombine(g.close, igniteuiReactCore.runOn(this, this.ai));
            this.m.appendPopupContent(d);
        };
        DatePicker.prototype.aj = function (a, b) {
            this.at(b.oldValue, b.newValue);
        };
        DatePicker.prototype.ai = function (a) {
            if (this.m.t) {
                this.al();
            }
        };
        DatePicker.prototype.aq = function () {
            if (this.m.t) {
                this.al();
            }
            else {
                this.au();
            }
        };
        DatePicker.prototype.au = function () {
            var a = this.g.s();
            this.m.showRelativeToExclusionRect(a, 0, 0);
        };
        DatePicker.prototype.al = function () {
            this.m.an();
            this.f.a8();
        };
        DatePicker.prototype.ap = function () {
            this.f.a0();
        };
        DatePicker.prototype.ay = function () {
        };
        DatePicker.prototype.ax = function () {
        };
        DatePicker.prototype.u = function () {
            return this.e();
        };
        DatePicker.prototype.ac = function () {
            var a = this.e();
            return a.g();
        };
        DatePicker.prototype.e = function () {
            var a = new DatePickerVisualModelExport();
            a.b = this.d;
            a.a = this.b;
            a.e = this.m.ab();
            a.d = this.k.ia();
            a.c = this.f.x();
            if (this.o != null) {
                var b = this.o;
                if (this.g != null && b.n == null) {
                    var c = this.g.c;
                    var d = igniteuiReactCore.FontUtil.getFontInfoFromString(c, b.fontString);
                    b.n = d.n;
                    b.d = d.d;
                    b.o = d.o;
                    b.q = d.q;
                    b.r = d.r;
                    b.s = d.s;
                }
                if (b.n != null) {
                    a.h = b.n;
                }
                if (!igniteuiReactCore.isNaN_(b.d)) {
                    a.f = b.d;
                }
                if (b.s != null) {
                    a.l = b.s;
                }
                if (b.q != null) {
                    a.j = b.q;
                }
                if (b.o != null) {
                    a.i = b.q;
                }
            }
            return a;
        };
        DatePicker.$t = igniteuiReactCore.markType(DatePicker, 'DatePicker', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        DatePicker.w = "M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z";
        DatePicker.ab = "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z";
        DatePicker.y = "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z";
        DatePicker.x = "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z";
        return DatePicker;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrDatePicker = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrDatePicker, _super);
        function IgrDatePicker(props) {
            var _this = _super.call(this, props) || this;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._valueChanged = null;
            _this._valueChanged_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._getMainRef = _this._getMainRef.bind(_this);
            _this._implementation = _this.createImplementation();
            var datePicker = _this.i;
            _this._datePicker = datePicker;
            datePicker.notifySizeChanged();
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        Object.defineProperty(IgrDatePicker.prototype, "height", {
            get: function () {
                return this._height;
            },
            set: function (value) {
                this._height = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._datePicker.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "width", {
            get: function () {
                return this._width;
            },
            set: function (value) {
                this._width = value;
                if (this._elRef) {
                    this._elRef.style.height = value;
                    this._datePicker.notifySizeChanged();
                }
            },
            enumerable: true,
            configurable: true
        });
        IgrDatePicker.prototype._getMainRef = function (ref) {
            this._elRef = ref;
            if (this._elRef != null) {
                this._renderer = new igniteuiReactCore.ReactRenderer(this._elRef, document, false, null);
                this._datePicker.provideContainer(this._renderer);
            }
        };
        IgrDatePicker.prototype.render = function () {
            var children = [];
            var inputContainer = React.createElement("div", {
                key: "inputContainer"
            });
            children.push(inputContainer);
            var popupContainer = React.createElement("div", {
                key: "popupContainer"
            });
            children.push(popupContainer);
            var div = React.createElement("div", {
                className: "ig-date-picker igr-date-picker",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrDatePicker.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrDatePicker.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrDatePicker.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrDatePicker.prototype.componentWillUnmount = function () {
            this._datePicker.destroy();
            if (this._renderer) {
                this._renderer.destroy();
            }
        };
        IgrDatePicker.prototype.componentDidMount = function () {
            this._elRef.style.width = this._width ? this._width : "";
            this._elRef.style.height = this._height ? this._height : "";
            this._datePicker.notifySizeChanged();
            this.initializeContent();
        };
        IgrDatePicker.prototype.initializeContent = function () {
            this.updateStyle();
            this.i.notifySizeChanged();
        };
        IgrDatePicker.prototype.createImplementation = function () {
            return new DatePicker();
        };
        Object.defineProperty(IgrDatePicker.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "value", {
            /**
         * Gets or Sets the property name that contains the values.
        */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "density", {
            /**
             * Gets or sets the display density to use for the date pcicker.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "baseTheme", {
            /**
             * Gets or sets the base built in theme to use for the date picker.
            */
            get: function () {
                return this.i.b;
            },
            set: function (v) {
                this.i.b = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "textStyle", {
            /**
             * Gets or sets the font to use for the combobox.
            */
            get: function () {
                if (this.i.o == null) {
                    return null;
                }
                return this.i.o.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.o = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "textColor", {
            /**
             * Gets or Sets the text color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.a5);
            },
            set: function (v) {
                this.i.a5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "iconColor", {
            /**
             * Gets or Sets the text color
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.a4);
            },
            set: function (v) {
                this.i.a4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "showClearButton", {
            /**
             * Gets or sets the ShowClearButton property to detirmine if the clear button is shown
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrDatePicker.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrDatePicker.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrDatePicker.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("DatePicker");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        /**
     * Exports visual information about the current state of the grid.

    */
        IgrDatePicker.prototype.exportVisualModel = function () {
            var iv = this.i.u();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrDatePicker.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.ac();
            return (iv);
        };
        Object.defineProperty(IgrDatePicker.prototype, "valueChanged", {
            /**
             * Called when date is selected.
            */
            get: function () {
                return this._valueChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._valueChanged_wrapped !== null) {
                    this.i.valueChanged = igniteuiReactCore.delegateRemove(this.i.valueChanged, this._valueChanged_wrapped);
                    this._valueChanged_wrapped = null;
                    this._valueChanged = null;
                }
                this._valueChanged = ev;
                this._valueChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrValueChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeValueChanged) {
                        _this.beforeValueChanged(_this, outerArgs);
                    }
                    if (_this._valueChanged) {
                        _this._valueChanged(_this, outerArgs);
                    }
                };
                this.i.valueChanged = igniteuiReactCore.delegateCombine(this.i.valueChanged, this._valueChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrDatePicker;
    }(React.Component));

    var IgrInputGroupItem = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrInputGroupItem, _super);
        function IgrInputGroupItem(props) {
            var _this = _super.call(this, props) || this;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this.onImplementationCreated();
            return _this;
        }
        IgrInputGroupItem.prototype.createImplementation = function () {
            return null;
        };
        Object.defineProperty(IgrInputGroupItem.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            } /**
                                         * @hidden
                                         */,
            enumerable: true,
            configurable: true
        });
        IgrInputGroupItem._createFromInternal = function (internal) {
            if (!internal) {
                return null;
            }
            if (!internal.$type) {
                return null;
            }
            var name = internal.$type.name;
            var externalName = "Igr" + name;
            if (!igniteuiReactCore.TypeRegistrar.isRegistered(externalName)) {
                return null;
            }
            return igniteuiReactCore.TypeRegistrar.create(externalName);
        };
        IgrInputGroupItem.prototype.onImplementationCreated = function () {
        };
        IgrInputGroupItem.prototype.componentDidMount = function () {
            var e_1, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
        };
        IgrInputGroupItem.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrInputGroupItem.prototype.render = function () {
            return null;
        };
        Object.defineProperty(IgrInputGroupItem.prototype, "name", {
            /**
             * Gets or sets name to use for the button.
            */
            get: function () {
                return this.i.e;
            },
            set: function (v) {
                this.i.e = v;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroupItem.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrInputGroupItem.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroupItem.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrInputGroupItem.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("InputGroupItem");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        return IgrInputGroupItem;
    }(React.Component));

    var IgrInputChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrInputChangeEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrInputChangeEventArgs.prototype.createImplementation = function () {
            return new InputChangeEventArgs();
        };
        Object.defineProperty(IgrInputChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrInputChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrInputChangeEventArgs.prototype, "value", {
            get: function () {
                return this.i.value;
            },
            set: function (v) {
                this.i.value = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputChangeEventArgs.prototype, "isCompositionInProgress", {
            get: function () {
                return this.i.isCompositionInProgress;
            },
            set: function (v) {
                this.i.isCompositionInProgress = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrInputChangeEventArgs;
    }());

    var requiredStyle = "\n.ig-input input::-ms-clear {\n    display: none;\n    width: 0;\n    height: 0;\n}\n\n";
    var pending = [];
    var checked = /*@__PURE__*/ new WeakMap(); // TODO why not WeakSet?
    function ensureCss() {
        if (!document) {
            return;
        }
        if (checked.has(document)) {
            return;
        }
        injectCss(requiredStyle, "data-ig-input-style", function () {
            var temp = pending;
            pending = null;
            temp.forEach(function (v, i, a) {
                //v.styleUpdated();
            });
        });
        checked.set(document, true);
    }
    function injectCss(style, attributeName, onload) {
        if (onload === void 0) {
            onload = null;
        }
        for (var i = 0; i < document.head.children.length; i++) {
            var child = document.head.children[i];
            if (child.tagName == "link" && child.hasAttribute(attributeName)) {
                return;
            }
        }
        var link = document.createElement("link");
        link.setAttribute('href', 'data:text/css;charset=UTF-8,' + encodeURIComponent(style));
        link.setAttribute('rel', 'stylesheet');
        link.setAttribute('type', 'text/css');
        link.setAttribute(attributeName, 'true');
        if (onload) {
            var onloadResolved = function () {
                link.onload = null;
                onload();
            };
            link.onload = onloadResolved;
        }
        document.head.appendChild(link);
    }
    var IgrInput = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrInput, _super);
        function IgrInput(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this._keyDown = null;
            _this._keyDown_wrapped = null;
            _this._keyUp = null;
            _this._keyUp_wrapped = null;
            _this._keyPress = null;
            _this._keyPress_wrapped = null;
            _this._change = null;
            _this._change_wrapped = null;
            _this._changing = null;
            _this._changing_wrapped = null;
            ensureCss();
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("inputContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            _this._container.setStyleProperty("vertical-align", "middle");
            var input = _this.i;
            _this._input = input;
            input.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrInput.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrInput.prototype.render = function () {
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-input igr-input",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrInput.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrInput.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrInput.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrInput.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrInput.prototype.componentWillUnmount = function () {
            this._input.destroy();
            this._wrapper.destroy();
        };
        IgrInput.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrInput.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrInput.prototype.createImplementation = function () {
            return new Input();
        };
        Object.defineProperty(IgrInput.prototype, "i", {
            /**
                                     * @hidden
                                     */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "density", {
            /**
         * Gets or sets the display density to use for the input.
        */
            get: function () {
                return this.i.m;
            },
            set: function (v) {
                this.i.m = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "actualDensity", {
            /**
             * Gets the actual display density to use for the label.
            */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "mask", {
            /**
             * Gets/Sets the input mask for the input.
            */
            get: function () {
                return this.i.b5;
            },
            set: function (v) {
                this.i.b5 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "promptChar", {
            /**
             * Gets/Sets the character representing a fillable spot in the input mask
            */
            get: function () {
                return this.i.b9;
            },
            set: function (v) {
                this.i.b9 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "includeLiterals", {
            /**
             * Specifies if the bound value includes the formatting symbols.
            */
            get: function () {
                return this.i.ap;
            },
            set: function (v) {
                this.i.ap = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "actualTextColor", {
            /**
             * Gets the actual color to use for the text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.dp);
            },
            set: function (v) {
                this.i.dp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "actualHoverTextColor", {
            /**
             * Gets the actual hover color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.dn);
            },
            set: function (v) {
                this.i.dn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "textColor", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.dt);
            },
            set: function (v) {
                this.i.dt = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "textStyle", {
            /**
             * Gets or sets the use for the button.
            */
            get: function () {
                if (this.i.ac == null) {
                    return null;
                }
                return this.i.ac.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.ac = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "inputType", {
            /**
             * Gets or sets the type to use for the input.
            */
            get: function () {
                return this.i.b0;
            },
            set: function (v) {
                this.i.b0 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "placeholder", {
            /**
             * Gets or sets the placeholder to use for the input.
            */
            get: function () {
                return this.i.b7;
            },
            set: function (v) {
                this.i.b7 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "hoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ds);
            },
            set: function (v) {
                this.i.ds = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "id", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.bx;
            },
            set: function (v) {
                this.i.bx = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "tabIndex", {
            /**
             * Gets or sets TabIndex to use for the checkbox.
            */
            get: function () {
                return this.i.a8;
            },
            set: function (v) {
                this.i.a8 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "for", {
            /**
             * Gets or sets the for attribute to use for the input.
            */
            get: function () {
                return this.i.bu;
            },
            set: function (v) {
                this.i.bu = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "ariaLabel", {
            /**
             * Gets or sets the value of the aria-label attribute.
            */
            get: function () {
                return this.i.bq;
            },
            set: function (v) {
                this.i.bq = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "isHover", {
            /**
             * Gets or sets whether the input is hovered.
            */
            get: function () {
                return this.i.ar;
            },
            set: function (v) {
                this.i.ar = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "value", {
            /**
             * Gets or sets the value for the input.
            */
            get: function () {
                return this.i.cf;
            },
            set: function (v) {
                this.i.cf = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "hasValue", {
            get: function () {
                return this.i.ao;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "selectionStart", {
            /**
             * Returns / Sets the beginning index of the selected text. When nothing is selected, this returns the position of the text input cursor (caret) inside of the input.
            */
            get: function () {
                return this.i.selectionStart;
            },
            set: function (v) {
                this.i.selectionStart = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "selectionEnd", {
            /**
             * Returns / Sets the end index of the selected text. When nothing is selected, this returns the position of the text input cursor (caret) inside of the input.
            */
            get: function () {
                return this.i.selectionEnd;
            },
            set: function (v) {
                this.i.selectionEnd = +v;
            },
            enumerable: true,
            configurable: true
        });
        IgrInput.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrInput.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrInput.prototype.exportVisualModel = function () {
            var iv = this.i.ba();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrInput.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.bt();
            return (iv);
        };
        IgrInput.prototype.focus = function () {
            this.i.ck();
        };
        IgrInput.prototype.select = function () {
            this.i.db();
        };
        IgrInput.prototype.setSelectionRange = function (selectionStart, selectionEnd) {
            this.i.dd(selectionStart, selectionEnd);
        };
        Object.defineProperty(IgrInput.prototype, "keyDown", {
            get: function () {
                return this._keyDown;
            },
            set: function (ev) {
                var _this = this;
                if (this._keyDown_wrapped !== null) {
                    this.i.keyDown = igniteuiReactCore.delegateRemove(this.i.keyDown, this._keyDown_wrapped);
                    this._keyDown_wrapped = null;
                    this._keyDown = null;
                }
                this._keyDown = ev;
                this._keyDown_wrapped = function (o, e) {
                    var outerArgs = new igniteuiReactCore.IgrKeyEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeKeyDown) {
                        _this.beforeKeyDown(_this, outerArgs);
                    }
                    if (_this._keyDown) {
                        _this._keyDown(_this, outerArgs);
                    }
                };
                this.i.keyDown = igniteuiReactCore.delegateCombine(this.i.keyDown, this._keyDown_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "keyUp", {
            get: function () {
                return this._keyUp;
            },
            set: function (ev) {
                var _this = this;
                if (this._keyUp_wrapped !== null) {
                    this.i.keyUp = igniteuiReactCore.delegateRemove(this.i.keyUp, this._keyUp_wrapped);
                    this._keyUp_wrapped = null;
                    this._keyUp = null;
                }
                this._keyUp = ev;
                this._keyUp_wrapped = function (o, e) {
                    var outerArgs = new igniteuiReactCore.IgrKeyEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeKeyUp) {
                        _this.beforeKeyUp(_this, outerArgs);
                    }
                    if (_this._keyUp) {
                        _this._keyUp(_this, outerArgs);
                    }
                };
                this.i.keyUp = igniteuiReactCore.delegateCombine(this.i.keyUp, this._keyUp_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "keyPress", {
            get: function () {
                return this._keyPress;
            },
            set: function (ev) {
                var _this = this;
                if (this._keyPress_wrapped !== null) {
                    this.i.keyPress = igniteuiReactCore.delegateRemove(this.i.keyPress, this._keyPress_wrapped);
                    this._keyPress_wrapped = null;
                    this._keyPress = null;
                }
                this._keyPress = ev;
                this._keyPress_wrapped = function (o, e) {
                    var outerArgs = new igniteuiReactCore.IgrKeyEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeKeyPress) {
                        _this.beforeKeyPress(_this, outerArgs);
                    }
                    if (_this._keyPress) {
                        _this._keyPress(_this, outerArgs);
                    }
                };
                this.i.keyPress = igniteuiReactCore.delegateCombine(this.i.keyPress, this._keyPress_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrInputChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInput.prototype, "changing", {
            get: function () {
                return this._changing;
            },
            set: function (ev) {
                var _this = this;
                if (this._changing_wrapped !== null) {
                    this.i.changing = igniteuiReactCore.delegateRemove(this.i.changing, this._changing_wrapped);
                    this._changing_wrapped = null;
                    this._changing = null;
                }
                this._changing = ev;
                this._changing_wrapped = function (o, e) {
                    var outerArgs = new IgrInputChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChanging) {
                        _this.beforeChanging(_this, outerArgs);
                    }
                    if (_this._changing) {
                        _this._changing(_this, outerArgs);
                    }
                };
                this.i.changing = igniteuiReactCore.delegateCombine(this.i.changing, this._changing_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrInput;
    }(IgrInputGroupItem));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrInputModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrInputModule() {
        }
        IgrInputModule.register = function () {
            igniteuiReactCore.IgrChildContentModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrInput', IgrInput);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrInput', IgrInput);
            igniteuiReactCore.TypeRegistrar.register('Input', Input.$type);
        };
        return IgrInputModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrLabel = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrLabel, _super);
        function IgrLabel(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("labelContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            _this._container.setStyleProperty("vertical-align", "middle");
            var label = _this.i;
            _this._label = label;
            label.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrLabel.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrLabel.prototype.render = function () {
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-label igr-label",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrLabel.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrLabel.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrLabel.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrLabel.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrLabel.prototype.componentWillUnmount = function () {
            this._label.destroy();
            this._wrapper.destroy();
        };
        IgrLabel.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrLabel.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrLabel.prototype.createImplementation = function () {
            return new Label();
        };
        IgrLabel.prototype._onDisplayChanged = function () {
            this._container.setStyleProperty("display", this.display);
        };
        IgrLabel.prototype._onFlexDirectionChanged = function () {
            this._container.setStyleProperty("flex-direction", this.flexDirection);
        };
        IgrLabel.prototype._onFlexGrowChanged = function () {
            this._container.setStyleProperty("flex-grow", this.flexGrow);
        };
        IgrLabel.prototype._onAlignItemsChanged = function () {
            this._container.setStyleProperty("align-items", this.alignItems);
        };
        Object.defineProperty(IgrLabel.prototype, "i", {
            /**
                                     * @hidden
                                     */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "baseTheme", {
            /**
         * Gets or sets the base built in theme to use for the label.
        */
            get: function () {
                return this.i.l;
            },
            set: function (v) {
                this.i.l = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "density", {
            /**
             * Gets or sets the display density to use for the label.
            */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "actualDensity", {
            /**
             * Gets the actual display density to use for the label.
            */
            get: function () {
                return this.i.o;
            },
            set: function (v) {
                this.i.o = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "actualTextColor", {
            /**
             * Gets the actual color to use for the text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.cw);
            },
            set: function (v) {
                this.i.cw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "actualHighlightTextColor", {
            /**
             * Gets the actual color to use for the text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ct);
            },
            set: function (v) {
                this.i.ct = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "actualHoverHighlightTextColor", {
            /**
             * Gets the actual color to use for the text color when highlighted and hovered.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.cu);
            },
            set: function (v) {
                this.i.cu = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "actualHoverTextColor", {
            /**
             * Gets the actual hover color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.cv);
            },
            set: function (v) {
                this.i.cv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "textColor", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.dc);
            },
            set: function (v) {
                this.i.dc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "highlightTextColor", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.c9);
            },
            set: function (v) {
                this.i.c9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "hoverHighlightTextColor", {
            /**
             * Gets or sets the color to use for the text.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.da);
            },
            set: function (v) {
                this.i.da = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "textStyle", {
            /**
             * Gets or sets the use for the button.
            */
            get: function () {
                if (this.i.y == null) {
                    return null;
                }
                return this.i.y.fontString;
            },
            set: function (v) {
                var fi = new igniteuiReactCore.FontInfo();
                fi.fontString = v;
                this.i.y = fi;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "hoverTextColor", {
            /**
             * Gets or sets the color to use for the hovered text of the button regardless of type.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.db);
            },
            set: function (v) {
                this.i.db = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "id", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.br;
            },
            set: function (v) {
                this.i.br = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "display", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.bf;
            },
            set: function (v) {
                this.i.bf = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "flexDirection", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.bi;
            },
            set: function (v) {
                this.i.bi = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "flexGrow", {
            /**
             * Gets or sets the flex-grow setting for the button.
            */
            get: function () {
                return this.i.bk;
            },
            set: function (v) {
                this.i.bk = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "alignItems", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.a9;
            },
            set: function (v) {
                this.i.a9 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "tabIndex", {
            /**
             * Gets or sets TabIndex to use for the checkbox.
            */
            get: function () {
                return this.i.as;
            },
            set: function (v) {
                this.i.as = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "for", {
            /**
             * Gets or sets the for attribute to use for the label.
            */
            get: function () {
                return this.i.bm;
            },
            set: function (v) {
                this.i.bm = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "ariaLabel", {
            /**
             * Gets or sets the value of the aria-label attribute.
            */
            get: function () {
                return this.i.bb;
            },
            set: function (v) {
                this.i.bb = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "text", {
            /**
             * Gets or sets the text for the label.
            */
            get: function () {
                return this.i.text;
            },
            set: function (v) {
                this.i.text = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "isHover", {
            /**
             * Gets or sets whether the label is hovered.
            */
            get: function () {
                return this.i.am;
            },
            set: function (v) {
                this.i.am = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "value", {
            /**
             * Gets or sets the value for the label.
            */
            get: function () {
                return this.i.aq;
            },
            set: function (v) {
                this.i.aq = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrLabel.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrLabel.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrLabel.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrLabel.prototype.exportVisualModel = function () {
            var iv = this.i.au();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrLabel.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.bh();
            return (iv);
        };
        return IgrLabel;
    }(IgrInputGroupItem));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrLabelModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrLabelModule() {
        }
        IgrLabelModule.register = function () {
            igniteuiReactCore.IgrChildContentModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrLabel', IgrLabel);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrLabel', IgrLabel);
            igniteuiReactCore.TypeRegistrar.register('Input', Input.$type);
        };
        return IgrLabelModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrInputGroupInputCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrInputGroupInputCollection, _super);
        function IgrInputGroupInputCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrInputGroupItem.$type) {
                IgrInputGroupItem.$type = igniteuiReactCore.markType(IgrInputGroupItem, "IgrInputGroupItem");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrInputGroupInputCollection.prototype._createInnerColl = function () {
            if (!IgrInputGroupItem.$type) {
                IgrInputGroupItem.$type = igniteuiReactCore.markType(IgrInputGroupItem, "IgrInputGroupItem");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrInputGroupItem.$type, InputGroupItem.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrInputGroupItem._createFromInternal(int);
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrInputGroupInputCollection;
    }(igniteuiReactCore.IgCollection));

    var IgrInputGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrInputGroup, _super);
        function IgrInputGroup(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this.contentInputs = [];
            /**
            * The style mappings actually present in the treemap. Do not directly modify this array.
            * This array's contents can be modified by causing React to reproject the child content.
            * Or adding and removing ranges from the manual ranges collection on the ranges property.
            */
            _this.actualInputs = [];
            _this._inputs = null;
            _this._inputsAdapter = null;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._contentChildrenManager = new igniteuiReactCore.ContentChildrenManager(function (ch) { return ch.props.name || ch.key || ch.props.id; }, function (ch) { return ch.name || ch.key || ch.id; }, function () { return _this._updateContentChildren(); });
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("inputContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            var inputGroup = _this.i;
            _this._inputGroup = inputGroup;
            _this._inputsAdapter = new igniteuiReactCore.CollectionAdapter(_this.contentInputs, _this.i.inputs, _this.actualInputs, function (c) { return c.i; }, function (i) {
                if (_this._container && _this._container.getNativeElement().parentElement) {
                    i._styling(_this._container.getNativeElement(), _this, _this);
                }
            }, function (i) { });
            inputGroup.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrInputGroup.prototype._getMainRef = function (ref) {
            var _this = this;
            this._elRef = ref;
            if (this._elRef) {
                var mut = new MutationObserver(function (list) {
                    var e_1, _a;
                    try {
                        for (var list_1 = tslib_1.__values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {
                            var mutation = list_1_1.value;
                            if (mutation.type == 'childList') {
                                _this.i.onChildrenMutated();
                            }
                        }
                    }
                    catch (e_1_1) {
                        e_1 = { error: e_1_1 };
                    }
                    finally {
                        try {
                            if (list_1_1 && !list_1_1.done && (_a = list_1.return))
                                _a.call(list_1);
                        }
                        finally {
                            if (e_1)
                                throw e_1.error;
                        }
                    }
                });
                mut.observe(this._elRef, {
                    childList: true,
                    subtree: true
                });
            }
        };
        IgrInputGroup.prototype._updateContentChildren = function () {
            this.contentInputs.length = 0;
            var contentChildrenActual = this._contentChildrenManager.contentChildrenActual;
            for (var i = 0; i < contentChildrenActual.length; i++) {
                if ((InputGroupItem.$type).isAssignableFrom(contentChildrenActual[i].i.$type)) {
                    this.contentInputs.push(contentChildrenActual[i]);
                }
            }
            if (this._inputsAdapter !== null) {
                this._inputsAdapter.notifyContentChanged();
            }
        };
        Object.defineProperty(IgrInputGroup.prototype, "inputs", {
            /**
             * A collection of manually added style mappings for the treemap.
            */
            get: function () {
                var _this = this;
                if (this._inputs === null) {
                    var coll = new IgrInputGroupInputCollection();
                    var inner = coll._innerColl;
                    inner.addListener(function (sender, e) {
                        switch (e.action) {
                            case igniteuiReactCore.NotifyCollectionChangedAction.Add:
                                _this._inputsAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Remove:
                                _this._inputsAdapter.removeManualItemAt(e.oldStartingIndex);
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Replace:
                                _this._inputsAdapter.removeManualItemAt(e.oldStartingIndex);
                                _this._inputsAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Reset:
                                _this._inputsAdapter.clearManualItems();
                                break;
                        }
                    });
                    this._inputs = coll;
                }
                return this._inputs;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.render = function () {
            var children = this._contentChildrenManager.getChildren(this.props.children);
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-input-group igr-input-group",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrInputGroup.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrInputGroup.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_2, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return true;
        };
        IgrInputGroup.prototype.initializeProperties = function () {
            var e_3, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_3_1) {
                e_3 = { error: e_3_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_3)
                        throw e_3.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrInputGroup.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrInputGroup.prototype.componentWillUnmount = function () {
            this._inputGroup.destroy();
            this._wrapper.destroy();
        };
        IgrInputGroup.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrInputGroup.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrInputGroup.prototype.createImplementation = function () {
            return new InputGroup();
        };
        Object.defineProperty(IgrInputGroup.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "displayType", {
            /**
         * Gets or sets the display style to use for the button.
        */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureEnum(InputGroupDisplayType_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "density", {
            /**
             * Gets or sets the display density to use for the input group.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualDensity", {
            /**
             * Gets the actual display density to use for the input group.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "baseTheme", {
            /**
             * Gets or sets the base built in theme to use for the label.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "inputHasValue", {
            get: function () {
                return this.i.af;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualBorderColor", {
            /**
             * Gets the actual item background color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.os);
            },
            set: function (v) {
                this.i.os = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualFocusBorderColor", {
            /**
             * Gets the actual item border color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ot);
            },
            set: function (v) {
                this.i.ot = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualBorderWidth", {
            /**
             * Gets the actual item border width.
            */
            get: function () {
                return this.i.ca;
            },
            set: function (v) {
                this.i.ca = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualFocusBorderWidth", {
            /**
             * Gets the actual item border width.
            */
            get: function () {
                return this.i.cb;
            },
            set: function (v) {
                this.i.cb = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualCornerRadiusBottomRight", {
            get: function () {
                return this.i.mz ? this.i.mz.b : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.mz.b = +v;
                this.i.mz = this.i.mz;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualCornerRadiusBottomLeft", {
            get: function () {
                return this.i.mz ? this.i.mz.a : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.mz.a = +v;
                this.i.mz = this.i.mz;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualCornerRadiusTopLeft", {
            get: function () {
                return this.i.mz ? this.i.mz.c : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.mz.c = +v;
                this.i.mz = this.i.mz;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualCornerRadiusTopRight", {
            get: function () {
                return this.i.mz ? this.i.mz.d : NaN;
            },
            set: function (v) {
                this.ensureActualCornerRadius();
                this.i.mz.d = +v;
                this.i.mz = this.i.mz;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureActualCornerRadius = function () {
            if (this.i.mz) {
                return;
            }
            this.i.mz = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "actualContentPaddingBottom", {
            get: function () {
                return this.i.tf ? this.i.tf.b : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.tf.b = +v;
                this.i.tf = this.i.tf;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualContentPaddingLeft", {
            get: function () {
                return this.i.tf ? this.i.tf.c : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.tf.c = +v;
                this.i.tf = this.i.tf;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualContentPaddingRight", {
            get: function () {
                return this.i.tf ? this.i.tf.d : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.tf.d = +v;
                this.i.tf = this.i.tf;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualContentPaddingTop", {
            get: function () {
                return this.i.tf ? this.i.tf.e : NaN;
            },
            set: function (v) {
                this.ensureActualContentPadding();
                this.i.tf.e = +v;
                this.i.tf = this.i.tf;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureActualContentPadding = function () {
            if (this.i.tf) {
                return;
            }
            this.i.tf = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "actualUnderlineWidth", {
            /**
             * Gets the actual width to use for the underline element.
            */
            get: function () {
                return this.i.cj;
            },
            set: function (v) {
                this.i.cj = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualUnderlineRippleWidth", {
            /**
             * Gets the actual width to use for the underline element.
            */
            get: function () {
                return this.i.ci;
            },
            set: function (v) {
                this.i.ci = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualHoverUnderlineWidth", {
            /**
             * Gets the width to use for the underline element when hovered.
            */
            get: function () {
                return this.i.cf;
            },
            set: function (v) {
                this.i.cf = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualUnderlineColor", {
            /**
             * Gets the actual color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ow);
            },
            set: function (v) {
                this.i.ow = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualUnderlineRippleColor", {
            /**
             * Gets the actual color to use for the underline ripple element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ox);
            },
            set: function (v) {
                this.i.ox = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualHoverUnderlineColor", {
            /**
             * Gets the actual color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ov);
            },
            set: function (v) {
                this.i.ov = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualFocusUnderlineColor", {
            /**
             * Gets the actual color to use for the underline element when focused.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ou);
            },
            set: function (v) {
                this.i.ou = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualUnderlineOpacity", {
            /**
             * Gets the actual opacity to use for the underline element.
            */
            get: function () {
                return this.i.cg;
            },
            set: function (v) {
                this.i.cg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualHoverUnderlineOpacity", {
            /**
             * Gets the actual opacity to use for the underline element when hovered.
            */
            get: function () {
                return this.i.ce;
            },
            set: function (v) {
                this.i.ce = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualFocusUnderlineOpacity", {
            /**
             * Gets the actual opacity to use for the underline element when focused.
            */
            get: function () {
                return this.i.cc;
            },
            set: function (v) {
                this.i.cc = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualFocusUnderlineRippleOpacity", {
            /**
             * Gets the actual opacity to use for the underline ripple element when focused.
            */
            get: function () {
                return this.i.cd;
            },
            set: function (v) {
                this.i.cd = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualUnderlineRippleOpacity", {
            /**
             * Gets the actual opacity to use for the underline ripple element.
            */
            get: function () {
                return this.i.ch;
            },
            set: function (v) {
                this.i.ch = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualBackgroundColor", {
            /**
             * Gets the actual opacity to use for the underline ripple element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.or);
            },
            set: function (v) {
                this.i.or = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group.
            */
            get: function () {
                return this.i.cu;
            },
            set: function (v) {
                this.i.cu = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "focusBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when focused.
            */
            get: function () {
                return this.i.hc;
            },
            set: function (v) {
                this.i.hc = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderColor", {
            /**
             * Gets or sets the color to use the border of the input group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.oz);
            },
            set: function (v) {
                this.i.oz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "cornerRadiusBottomRight", {
            get: function () {
                return this.i.m3 ? this.i.m3.b : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.m3.b = +v;
                this.i.m3 = this.i.m3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "cornerRadiusBottomLeft", {
            get: function () {
                return this.i.m3 ? this.i.m3.a : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.m3.a = +v;
                this.i.m3 = this.i.m3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "cornerRadiusTopLeft", {
            get: function () {
                return this.i.m3 ? this.i.m3.c : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.m3.c = +v;
                this.i.m3 = this.i.m3;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "cornerRadiusTopRight", {
            get: function () {
                return this.i.m3 ? this.i.m3.d : NaN;
            },
            set: function (v) {
                this.ensureCornerRadius();
                this.i.m3.d = +v;
                this.i.m3 = this.i.m3;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureCornerRadius = function () {
            if (this.i.m3) {
                return;
            }
            this.i.m3 = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "contentPaddingBottom", {
            get: function () {
                return this.i.tj ? this.i.tj.b : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.tj.b = +v;
                this.i.tj = this.i.tj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "contentPaddingLeft", {
            get: function () {
                return this.i.tj ? this.i.tj.c : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.tj.c = +v;
                this.i.tj = this.i.tj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "contentPaddingRight", {
            get: function () {
                return this.i.tj ? this.i.tj.d : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.tj.d = +v;
                this.i.tj = this.i.tj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "contentPaddingTop", {
            get: function () {
                return this.i.tj ? this.i.tj.e : NaN;
            },
            set: function (v) {
                this.ensureContentPadding();
                this.i.tj.e = +v;
                this.i.tj = this.i.tj;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureContentPadding = function () {
            if (this.i.tj) {
                return;
            }
            this.i.tj = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "underlineWidth", {
            /**
             * Gets or sets the width to use for the underline element.
            */
            get: function () {
                return this.i.h4;
            },
            set: function (v) {
                this.i.h4 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "underlineRippleWidth", {
            /**
             * Gets or sets the width to use for the underline element.
            */
            get: function () {
                return this.i.h3;
            },
            set: function (v) {
                this.i.h3 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "hoverUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when hovered.
            */
            get: function () {
                return this.i.hg;
            },
            set: function (v) {
                this.i.hg = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "underlineColor", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s7);
            },
            set: function (v) {
                this.i.s7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "underlineRippleColor", {
            /**
             * Gets or sets the color to use for the underline ripple element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s8);
            },
            set: function (v) {
                this.i.s8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "hoverUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ss);
            },
            set: function (v) {
                this.i.ss = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "focusUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sr);
            },
            set: function (v) {
                this.i.sr = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "underlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return this.i.h1;
            },
            set: function (v) {
                this.i.h1 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "hoverUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return this.i.hf;
            },
            set: function (v) {
                this.i.hf = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "focusUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element.
            */
            get: function () {
                return this.i.hd;
            },
            set: function (v) {
                this.i.hd = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "focusUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when focused.
            */
            get: function () {
                return this.i.he;
            },
            set: function (v) {
                this.i.he = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "underlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element.
            */
            get: function () {
                return this.i.h2;
            },
            set: function (v) {
                this.i.h2 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "backgroundColor", {
            /**
             * Gets or sets the background color to use for the input group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.oy);
            },
            set: function (v) {
                this.i.oy = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when using type line.
            */
            get: function () {
                return this.i.hh;
            },
            set: function (v) {
                this.i.hh = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeFocusBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when focused when type is line.
            */
            get: function () {
                return this.i.hi;
            },
            set: function (v) {
                this.i.hi = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeFocusBorderColor", {
            /**
             * Gets or sets the focus color to use the border of the input group when type is line.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sv);
            },
            set: function (v) {
                this.i.sv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeBorderColor", {
            /**
             * Gets or sets the color to use the border of the input group when type is line.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.su);
            },
            set: function (v) {
                this.i.su = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeCornerRadiusBottomRight", {
            get: function () {
                return this.i.nj ? this.i.nj.b : NaN;
            },
            set: function (v) {
                this.ensureLineTypeCornerRadius();
                this.i.nj.b = +v;
                this.i.nj = this.i.nj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeCornerRadiusBottomLeft", {
            get: function () {
                return this.i.nj ? this.i.nj.a : NaN;
            },
            set: function (v) {
                this.ensureLineTypeCornerRadius();
                this.i.nj.a = +v;
                this.i.nj = this.i.nj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeCornerRadiusTopLeft", {
            get: function () {
                return this.i.nj ? this.i.nj.c : NaN;
            },
            set: function (v) {
                this.ensureLineTypeCornerRadius();
                this.i.nj.c = +v;
                this.i.nj = this.i.nj;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeCornerRadiusTopRight", {
            get: function () {
                return this.i.nj ? this.i.nj.d : NaN;
            },
            set: function (v) {
                this.ensureLineTypeCornerRadius();
                this.i.nj.d = +v;
                this.i.nj = this.i.nj;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureLineTypeCornerRadius = function () {
            if (this.i.nj) {
                return;
            }
            this.i.nj = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeContentPaddingBottom", {
            get: function () {
                return this.i.tz ? this.i.tz.b : NaN;
            },
            set: function (v) {
                this.ensureLineTypeContentPadding();
                this.i.tz.b = +v;
                this.i.tz = this.i.tz;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeContentPaddingLeft", {
            get: function () {
                return this.i.tz ? this.i.tz.c : NaN;
            },
            set: function (v) {
                this.ensureLineTypeContentPadding();
                this.i.tz.c = +v;
                this.i.tz = this.i.tz;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeContentPaddingRight", {
            get: function () {
                return this.i.tz ? this.i.tz.d : NaN;
            },
            set: function (v) {
                this.ensureLineTypeContentPadding();
                this.i.tz.d = +v;
                this.i.tz = this.i.tz;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeContentPaddingTop", {
            get: function () {
                return this.i.tz ? this.i.tz.e : NaN;
            },
            set: function (v) {
                this.ensureLineTypeContentPadding();
                this.i.tz.e = +v;
                this.i.tz = this.i.tz;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureLineTypeContentPadding = function () {
            if (this.i.tz) {
                return;
            }
            this.i.tz = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is line.
            */
            get: function () {
                return this.i.hq;
            },
            set: function (v) {
                this.i.hq = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeUnderlineRippleWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is line.
            */
            get: function () {
                return this.i.hp;
            },
            set: function (v) {
                this.i.hp = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeHoverUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when hovered when type is line.
            */
            get: function () {
                return this.i.hm;
            },
            set: function (v) {
                this.i.hm = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is line.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sy);
            },
            set: function (v) {
                this.i.sy = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeUnderlineRippleColor", {
            /**
             * Gets or sets the color to use for the underline ripple element when type is line.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sz);
            },
            set: function (v) {
                this.i.sz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeHoverUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is line.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sx);
            },
            set: function (v) {
                this.i.sx = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeFocusUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is line.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sw);
            },
            set: function (v) {
                this.i.sw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is line.
            */
            get: function () {
                return this.i.hn;
            },
            set: function (v) {
                this.i.hn = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeHoverUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is line.
            */
            get: function () {
                return this.i.hl;
            },
            set: function (v) {
                this.i.hl = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeFocusUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is line.
            */
            get: function () {
                return this.i.hj;
            },
            set: function (v) {
                this.i.hj = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeFocusUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when focused when type is line.
            */
            get: function () {
                return this.i.hk;
            },
            set: function (v) {
                this.i.hk = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when type is line.
            */
            get: function () {
                return this.i.ho;
            },
            set: function (v) {
                this.i.ho = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "lineTypeBackgroundColor", {
            /**
             * Gets or sets the background color to use for the input group when type is line.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.st);
            },
            set: function (v) {
                this.i.st = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when using type line.
            */
            get: function () {
                return this.i.cv;
            },
            set: function (v) {
                this.i.cv = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeFocusBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when focused when type is box.
            */
            get: function () {
                return this.i.cw;
            },
            set: function (v) {
                this.i.cw = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeFocusBorderColor", {
            /**
             * Gets or sets the focus color to use the border of the input group when type is box.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o9);
            },
            set: function (v) {
                this.i.o9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeBorderColor", {
            /**
             * Gets or sets the color to use the border of the input group when type is box.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o8);
            },
            set: function (v) {
                this.i.o8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeCornerRadiusBottomRight", {
            get: function () {
                return this.i.m1 ? this.i.m1.b : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeCornerRadius();
                this.i.m1.b = +v;
                this.i.m1 = this.i.m1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeCornerRadiusBottomLeft", {
            get: function () {
                return this.i.m1 ? this.i.m1.a : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeCornerRadius();
                this.i.m1.a = +v;
                this.i.m1 = this.i.m1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeCornerRadiusTopLeft", {
            get: function () {
                return this.i.m1 ? this.i.m1.c : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeCornerRadius();
                this.i.m1.c = +v;
                this.i.m1 = this.i.m1;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeCornerRadiusTopRight", {
            get: function () {
                return this.i.m1 ? this.i.m1.d : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeCornerRadius();
                this.i.m1.d = +v;
                this.i.m1 = this.i.m1;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureBoxTypeCornerRadius = function () {
            if (this.i.m1) {
                return;
            }
            this.i.m1 = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeContentPaddingBottom", {
            get: function () {
                return this.i.th ? this.i.th.b : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeContentPadding();
                this.i.th.b = +v;
                this.i.th = this.i.th;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeContentPaddingLeft", {
            get: function () {
                return this.i.th ? this.i.th.c : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeContentPadding();
                this.i.th.c = +v;
                this.i.th = this.i.th;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeContentPaddingRight", {
            get: function () {
                return this.i.th ? this.i.th.d : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeContentPadding();
                this.i.th.d = +v;
                this.i.th = this.i.th;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeContentPaddingTop", {
            get: function () {
                return this.i.th ? this.i.th.e : NaN;
            },
            set: function (v) {
                this.ensureBoxTypeContentPadding();
                this.i.th.e = +v;
                this.i.th = this.i.th;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureBoxTypeContentPadding = function () {
            if (this.i.th) {
                return;
            }
            this.i.th = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is box.
            */
            get: function () {
                return this.i.c4;
            },
            set: function (v) {
                this.i.c4 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeUnderlineRippleWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is box.
            */
            get: function () {
                return this.i.c3;
            },
            set: function (v) {
                this.i.c3 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeHoverUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when hovered when type is box.
            */
            get: function () {
                return this.i.c0;
            },
            set: function (v) {
                this.i.c0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is box.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.pc);
            },
            set: function (v) {
                this.i.pc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeUnderlineRippleColor", {
            /**
             * Gets or sets the color to use for the underline ripple element when type is box.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.pd);
            },
            set: function (v) {
                this.i.pd = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeHoverUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is box.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.pb);
            },
            set: function (v) {
                this.i.pb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeFocusUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is box.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.pa);
            },
            set: function (v) {
                this.i.pa = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is box.
            */
            get: function () {
                return this.i.c1;
            },
            set: function (v) {
                this.i.c1 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeHoverUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is box.
            */
            get: function () {
                return this.i.cz;
            },
            set: function (v) {
                this.i.cz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeFocusUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is box.
            */
            get: function () {
                return this.i.cx;
            },
            set: function (v) {
                this.i.cx = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeFocusUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when focused when type is box.
            */
            get: function () {
                return this.i.cy;
            },
            set: function (v) {
                this.i.cy = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when type is box.
            */
            get: function () {
                return this.i.c2;
            },
            set: function (v) {
                this.i.c2 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "boxTypeBackgroundColor", {
            /**
             * Gets or sets the background color to use for the input group when type is box.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o7);
            },
            set: function (v) {
                this.i.o7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when using type line.
            */
            get: function () {
                return this.i.ck;
            },
            set: function (v) {
                this.i.ck = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeFocusBorderWidth", {
            /**
             * Gets or sets the border width to use for the border of the item group when focused when type is border.
            */
            get: function () {
                return this.i.cl;
            },
            set: function (v) {
                this.i.cl = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeFocusBorderColor", {
            /**
             * Gets or sets the focus color to use the border of the input group when type is border.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o2);
            },
            set: function (v) {
                this.i.o2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeBorderColor", {
            /**
             * Gets or sets the color to use the border of the input group when type is border.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o1);
            },
            set: function (v) {
                this.i.o1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeCornerRadiusBottomRight", {
            get: function () {
                return this.i.m0 ? this.i.m0.b : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeCornerRadius();
                this.i.m0.b = +v;
                this.i.m0 = this.i.m0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeCornerRadiusBottomLeft", {
            get: function () {
                return this.i.m0 ? this.i.m0.a : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeCornerRadius();
                this.i.m0.a = +v;
                this.i.m0 = this.i.m0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeCornerRadiusTopLeft", {
            get: function () {
                return this.i.m0 ? this.i.m0.c : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeCornerRadius();
                this.i.m0.c = +v;
                this.i.m0 = this.i.m0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeCornerRadiusTopRight", {
            get: function () {
                return this.i.m0 ? this.i.m0.d : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeCornerRadius();
                this.i.m0.d = +v;
                this.i.m0 = this.i.m0;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureBorderTypeCornerRadius = function () {
            if (this.i.m0) {
                return;
            }
            this.i.m0 = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeContentPaddingBottom", {
            get: function () {
                return this.i.tg ? this.i.tg.b : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeContentPadding();
                this.i.tg.b = +v;
                this.i.tg = this.i.tg;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeContentPaddingLeft", {
            get: function () {
                return this.i.tg ? this.i.tg.c : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeContentPadding();
                this.i.tg.c = +v;
                this.i.tg = this.i.tg;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeContentPaddingRight", {
            get: function () {
                return this.i.tg ? this.i.tg.d : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeContentPadding();
                this.i.tg.d = +v;
                this.i.tg = this.i.tg;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeContentPaddingTop", {
            get: function () {
                return this.i.tg ? this.i.tg.e : NaN;
            },
            set: function (v) {
                this.ensureBorderTypeContentPadding();
                this.i.tg.e = +v;
                this.i.tg = this.i.tg;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureBorderTypeContentPadding = function () {
            if (this.i.tg) {
                return;
            }
            this.i.tg = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is border.
            */
            get: function () {
                return this.i.ct;
            },
            set: function (v) {
                this.i.ct = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeUnderlineRippleWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is border.
            */
            get: function () {
                return this.i.cs;
            },
            set: function (v) {
                this.i.cs = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeHoverUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when hovered when type is border.
            */
            get: function () {
                return this.i.cp;
            },
            set: function (v) {
                this.i.cp = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is border.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o5);
            },
            set: function (v) {
                this.i.o5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeUnderlineRippleColor", {
            /**
             * Gets or sets the color to use for the underline ripple element when type is border.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o6);
            },
            set: function (v) {
                this.i.o6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeHoverUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is border.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o4);
            },
            set: function (v) {
                this.i.o4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeFocusUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is border.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o3);
            },
            set: function (v) {
                this.i.o3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is border.
            */
            get: function () {
                return this.i.cq;
            },
            set: function (v) {
                this.i.cq = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeHoverUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is border.
            */
            get: function () {
                return this.i.co;
            },
            set: function (v) {
                this.i.co = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeFocusUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is border.
            */
            get: function () {
                return this.i.cm;
            },
            set: function (v) {
                this.i.cm = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeFocusUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when focused when type is border.
            */
            get: function () {
                return this.i.cn;
            },
            set: function (v) {
                this.i.cn = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when type is border.
            */
            get: function () {
                return this.i.cr;
            },
            set: function (v) {
                this.i.cr = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "borderTypeBackgroundColor", {
            /**
             * Gets or sets the background color to use for the input group when type is border.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.o0);
            },
            set: function (v) {
                this.i.o0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeBorderWidth", {
            /**
             * Gets or sets the search width to use for the border of the item group when using type line.
            */
            get: function () {
                return this.i.hr;
            },
            set: function (v) {
                this.i.hr = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeFocusBorderWidth", {
            /**
             * Gets or sets the search width to use for the border of the item group when focused when type is search.
            */
            get: function () {
                return this.i.hs;
            },
            set: function (v) {
                this.i.hs = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeFocusBorderColor", {
            /**
             * Gets or sets the focus color to use the search of the input group when type is search.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s2);
            },
            set: function (v) {
                this.i.s2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeBorderColor", {
            /**
             * Gets or sets the color to use the search of the input group when type is search.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s1);
            },
            set: function (v) {
                this.i.s1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeCornerRadiusBottomRight", {
            get: function () {
                return this.i.nk ? this.i.nk.b : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeCornerRadius();
                this.i.nk.b = +v;
                this.i.nk = this.i.nk;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeCornerRadiusBottomLeft", {
            get: function () {
                return this.i.nk ? this.i.nk.a : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeCornerRadius();
                this.i.nk.a = +v;
                this.i.nk = this.i.nk;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeCornerRadiusTopLeft", {
            get: function () {
                return this.i.nk ? this.i.nk.c : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeCornerRadius();
                this.i.nk.c = +v;
                this.i.nk = this.i.nk;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeCornerRadiusTopRight", {
            get: function () {
                return this.i.nk ? this.i.nk.d : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeCornerRadius();
                this.i.nk.d = +v;
                this.i.nk = this.i.nk;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureSearchTypeCornerRadius = function () {
            if (this.i.nk) {
                return;
            }
            this.i.nk = new igniteuiReactCore.CornerRadius(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeContentPaddingBottom", {
            get: function () {
                return this.i.t0 ? this.i.t0.b : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeContentPadding();
                this.i.t0.b = +v;
                this.i.t0 = this.i.t0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeContentPaddingLeft", {
            get: function () {
                return this.i.t0 ? this.i.t0.c : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeContentPadding();
                this.i.t0.c = +v;
                this.i.t0 = this.i.t0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeContentPaddingRight", {
            get: function () {
                return this.i.t0 ? this.i.t0.d : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeContentPadding();
                this.i.t0.d = +v;
                this.i.t0 = this.i.t0;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeContentPaddingTop", {
            get: function () {
                return this.i.t0 ? this.i.t0.e : NaN;
            },
            set: function (v) {
                this.ensureSearchTypeContentPadding();
                this.i.t0.e = +v;
                this.i.t0 = this.i.t0;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.ensureSearchTypeContentPadding = function () {
            if (this.i.t0) {
                return;
            }
            this.i.t0 = new igniteuiReactCore.Thickness(2);
        };
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is search.
            */
            get: function () {
                return this.i.h0;
            },
            set: function (v) {
                this.i.h0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeUnderlineRippleWidth", {
            /**
             * Gets or sets the width to use for the underline element when type is search.
            */
            get: function () {
                return this.i.hz;
            },
            set: function (v) {
                this.i.hz = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeHoverUnderlineWidth", {
            /**
             * Gets or sets the width to use for the underline element when hovered when type is search.
            */
            get: function () {
                return this.i.hw;
            },
            set: function (v) {
                this.i.hw = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is search.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s5);
            },
            set: function (v) {
                this.i.s5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeUnderlineRippleColor", {
            /**
             * Gets or sets the color to use for the underline ripple element when type is search.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s6);
            },
            set: function (v) {
                this.i.s6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeHoverUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is search.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s4);
            },
            set: function (v) {
                this.i.s4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeFocusUnderlineColor", {
            /**
             * Gets or sets the color to use for the underline element when type is search.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s3);
            },
            set: function (v) {
                this.i.s3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is search.
            */
            get: function () {
                return this.i.hx;
            },
            set: function (v) {
                this.i.hx = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeHoverUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is search.
            */
            get: function () {
                return this.i.hv;
            },
            set: function (v) {
                this.i.hv = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeFocusUnderlineOpacity", {
            /**
             * Gets or sets the color to use for the underline element when type is search.
            */
            get: function () {
                return this.i.ht;
            },
            set: function (v) {
                this.i.ht = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeFocusUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when focused when type is search.
            */
            get: function () {
                return this.i.hu;
            },
            set: function (v) {
                this.i.hu = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeUnderlineRippleOpacity", {
            /**
             * Gets or sets the opacity to use for the underline ripple element when type is search.
            */
            get: function () {
                return this.i.hy;
            },
            set: function (v) {
                this.i.hy = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "searchTypeBackgroundColor", {
            /**
             * Gets or sets the background color to use for the input group when type is search.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.s0);
            },
            set: function (v) {
                this.i.s0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "isExpanded", {
            /**
             * Gets or sets whether the input group is expanded or not.
            */
            get: function () {
                return this.i.ah;
            },
            set: function (v) {
                this.i.ah = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "isHovered", {
            /**
             * Gets or sets whether the input group is hovered or not.
            */
            get: function () {
                return this.i.aj;
            },
            set: function (v) {
                this.i.aj = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "isFocused", {
            /**
             * Gets or sets whether the input group is hovered or not.
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "actualIsExpanded", {
            /**
             * Gets or sets whether the input group is expanded or not.
            */
            get: function () {
                return this.i.ac;
            },
            set: function (v) {
                this.i.ac = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "focusBorderColor", {
            /**
             * Gets or sets the color to use the hovered background of the inputs in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.sq);
            },
            set: function (v) {
                this.i.sq = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "id", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.ki;
            },
            set: function (v) {
                this.i.ki = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrInputGroup.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.findByName = function (name) {
            if (this.inputs != null && this.inputs.findByName && this.inputs.findByName(name)) {
                return this.inputs.findByName(name);
            }
            return null;
        };
        Object.defineProperty(IgrInputGroup.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrInputGroup.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrInputGroup.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("InputGroup");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrInputGroup.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrInputGroup.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrInputGroup.prototype.exportVisualModel = function () {
            var iv = this.i.ia();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrInputGroup.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.j9();
            return (iv);
        };
        return IgrInputGroup;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrInputGroupModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrInputGroupModule() {
        }
        IgrInputGroupModule.register = function () {
            igniteuiReactCore.IgrChildContentModule.register();
            IgrInputModule.register();
            IgrLabelModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrInputGroup', IgrInputGroup);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrInputGroup', IgrInputGroup);
            igniteuiReactCore.TypeRegistrar.register('InputGroup', InputGroup.$type);
        };
        return IgrInputGroupModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrDatePickerModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrDatePickerModule() {
        }
        IgrDatePickerModule.register = function () {
            IgrCalendarModule.register();
            IgrButtonModule.register();
            IgrIconModule.register();
            IgrInputGroupModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDatePicker', IgrDatePicker);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrDatePicker', IgrDatePicker);
            igniteuiReactCore.TypeRegistrar.register('DatePicker', DatePicker.$type);
        };
        return IgrDatePickerModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxLabelPosition_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('CheckboxLabelPosition', 'After,0|Before,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxChangeEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CheckboxChangeEventArgs, _super);
        function CheckboxChangeEventArgs() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._isChecked = false;
            _this._isIndeterminate = false;
            return _this;
        }
        Object.defineProperty(CheckboxChangeEventArgs.prototype, "isChecked", {
            get: function () {
                return this._isChecked;
            },
            set: function (a) {
                this._isChecked = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxChangeEventArgs.prototype, "isIndeterminate", {
            get: function () {
                return this._isIndeterminate;
            },
            set: function (a) {
                this._isIndeterminate = a;
            },
            enumerable: true,
            configurable: true
        });
        CheckboxChangeEventArgs.$t = igniteuiReactCore.markType(CheckboxChangeEventArgs, 'CheckboxChangeEventArgs', igniteuiReactCore.EventArgs.$);
        return CheckboxChangeEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CheckboxVisualModelExport, _super);
        function CheckboxVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.f = 0;
            _this.d = null;
            _this.c = null;
            _this.e = null;
            _this.b = null;
            _this.o = 0;
            _this.l = 0;
            _this.p = 0;
            _this.q = 0;
            _this.n = 0;
            _this.m = 0;
            _this.a = null;
            _this.r = null;
            _this.j = false;
            _this.g = false;
            _this.h = false;
            _this.k = false;
            _this.i = false;
            return _this;
        }
        CheckboxVisualModelExport.prototype.s = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("baseTheme : " + this.f + ", ");
            a.l("actualUncheckedBackgroundColor : " + this.d.serialize() + ", ");
            a.l("actualTickColor : " + this.c + ", ");
            a.l("actualUncheckedBorderColor : " + this.e.serialize() + ", ");
            a.l("actualCheckedBorderColor : " + this.b.serialize() + ", ");
            a.l("borderWidth : " + this.o + ", ");
            a.l("actualBorderWidth : " + this.l + ", ");
            a.l("tickStrokeWidth : " + this.q + ", ");
            a.l("actualTickStrokeWidth : " + this.n + ", ");
            a.l("actualCheckedBackgroundColor : " + this.a.serialize() + ", ");
            if (this.r != null) {
                a.l("value : \"" + this.r.toString() + "\", ");
            }
            a.l("isFocused : " + this.j + ", ");
            a.l("disableRipple : " + this.g + ", ");
            a.l("isChecked : " + this.h + ", ");
            a.l("isIndeterminate : " + this.k + ", ");
            a.l("isDisabled : " + this.i + ", ");
            a.l("}");
            return a.toString();
        };
        CheckboxVisualModelExport.$t = igniteuiReactCore.markType(CheckboxVisualModelExport, 'CheckboxVisualModelExport');
        return CheckboxVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var CheckboxView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(CheckboxView, _super);
        function CheckboxView() {
            var _this = _super.call(this) || this;
            _this.c = null;
            _this.l = null;
            _this.f = null;
            _this.j = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.g = true;
            _this.q = null;
            _this.m = null;
            _this.p = null;
            _this.n = null;
            _this.d = null;
            _this.o = null;
            return _this;
        }
        CheckboxView.prototype.ad = function () {
        };
        CheckboxView.prototype.i = function () {
            return true;
        };
        CheckboxView.prototype.ab = function (a) {
            var e_1, _a;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.j)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.j.clear();
                return;
            }
            this.l = a;
            this.l.rootWrapper.setStyleProperty("display", "flex");
            this.l.rootWrapper.setStyleProperty("flex-direction", "row");
            this.l.rootWrapper.setStyleProperty("flex-wrap", "no-wrap");
            this.l.rootWrapper.setStyleProperty("align-items", "center");
            var c = this.l.createElement("input");
            this.q = c;
            this.q.addClass("ig-native-checkbox");
            this.q.setStyleProperty("position", "absolute");
            this.q.setStyleProperty("width", "1px");
            this.q.setStyleProperty("height", "1px");
            this.q.setStyleProperty("margin", "-1px");
            this.q.setStyleProperty("border", "none");
            this.q.setStyleProperty("clip", "rect(0, 0, 0, 0)");
            this.q.setStyleProperty("outline", "0");
            this.q.setStyleProperty("pointer-events", "none");
            this.q.setStyleProperty("overflow", "hidden");
            this.q.setStyleProperty("-webkit-appearance", "none");
            this.q.setStyleProperty("-moz-appearance", "none");
            this.q.setStyleProperty("appearance", "none");
            this.q.setAttribute("type", "checkbox");
            this.q.setAttribute("id", this.c.by);
            this.ag();
            this.j.add(c.listen("change", igniteuiReactCore.runOn(this, this.v)));
            this.j.add(c.listen("click", igniteuiReactCore.runOn(this, this.w)));
            this.j.add(c.listen("focus", igniteuiReactCore.runOn(this, this.x)));
            this.j.add(c.listen("blur", igniteuiReactCore.runOn(this, this.u)));
            this.l.append(c);
            var d = this.l.createElement("div");
            d.addClass("ig-checkbox-box");
            d.setStyleProperty("width", "1.25em");
            d.setStyleProperty("height", "1.25em");
            d.setStyleProperty("position", "relative");
            this.m = d;
            this.l.append(d);
            var e = this.l.createElement("label");
            e.setAttribute("for", this.c.by);
            e.addClass("ig-checkbox-composite");
            e.setStyleProperty("box-sizing", "border-box");
            e.setStyleProperty("position", "relative");
            e.setStyleProperty("display", "inline-block");
            e.setStyleProperty("cursor", "pointer");
            e.setStyleProperty("width", "1.25em");
            e.setStyleProperty("height", "1.25em");
            e.setStyleProperty("min-width", "1.25em");
            e.setStyleProperty("border-width", "0.125rem");
            e.setStyleProperty("border-style", "solid");
            e.setStyleProperty("border-color", "rgba(0,0,0,0.54)");
            e.setStyleProperty("border-top-color", "rgba(0, 0, 0, 0.54)");
            e.setStyleProperty("border-right-color", "rgba(0, 0, 0, 0.54)");
            e.setStyleProperty("border-bottom-color", "rgba(0, 0, 0, 0.54)");
            e.setStyleProperty("border-left-color", "rgba(0, 0, 0, 0.54)");
            e.setStyleProperty("border-radius", "2px");
            e.setStyleProperty("-webkit-tap-highlight-color", "transparent");
            e.setStyleProperty("overflow", "hidden");
            this.p = e;
            this.m.append(e);
            var f = this.l.createElementNS("svg", "http://www.w3.org/2000/svg");
            f.setAttribute("viewBox", "0 0 24 24");
            f.addClass("ig-checkbox-mark");
            f.setStyleProperty("position", "absolute");
            f.setStyleProperty("top", "0");
            f.setStyleProperty("left", "0");
            f.setStyleProperty("right", "0");
            f.setStyleProperty("bottom", "0");
            f.setStyleProperty("stroke", "#fff");
            f.setStyleProperty("stroke-linecap", "square");
            f.setStyleProperty("stroke-width", "3");
            f.setStyleProperty("stroke-dasharray", "24");
            f.setStyleProperty("stroke-dashoffset", "24");
            f.setStyleProperty("fill", "none");
            f.setStyleProperty("opacity", "0");
            f.setStyleProperty("z-index", "1");
            this.n = f;
            e.append(f);
            var g = this.l.createElementNS("path", "http://www.w3.org/2000/svg");
            g.setAttribute("d", "M4.1,12.7 9,17.6 20.3,6.3");
            f.append(g);
            var h = this.l.createElement("div");
            var i = this.l.getSubRenderer(h);
            h.setStyleProperty("position", "absolute");
            h.setStyleProperty("width", "3em");
            h.setStyleProperty("height", "3em");
            h.setStyleProperty("right", "calc(50% - 1.5em)");
            h.setStyleProperty("top", "calc(50% - 1.5em)");
            h.setStyleProperty("border-radius", "24px");
            h.setStyleProperty("overflow", "hidden");
            var j = new Ripple();
            j.provideContainer(i);
            j.q = d;
            var k = this.l.getExternal(j, this.l.rootWrapper, this.l.getExternal(this.c, null, null));
            j.h = true;
            j.k = true;
            this.d = j;
            d.append(h);
            var l = this.l.createElement("span");
            l.addClass("ig-checkbox-label");
            l.setStyleProperty("font-family", "'Segoe UI', Verdana");
            l.setStyleProperty("font-weight", "400");
            l.setStyleProperty("font-size", "1rem");
            l.setStyleProperty("letter-spacing", ".00937rem");
            l.setStyleProperty("text-transform", "none");
            l.setStyleProperty("line-height", "1.5rem");
            l.setStyleProperty("margin-left", "8px");
            l.setStyleProperty("margin-top", "0");
            l.setStyleProperty("margin-bottom", "0");
            l.setStyleProperty("cursor", "pointer");
            l.setStyleProperty("role", "label");
            this.o = l;
            this.j.add(l.listen("click", igniteuiReactCore.runOn(this, this.t)));
            this.l.append(l);
            this.l.getPortal(l, "ChildContent", function (m) {
            }, true);
            this.c.cm();
        };
        CheckboxView.prototype.t = function (a) {
            this.c.toggle();
        };
        CheckboxView.prototype.ag = function () {
            if (this.i()) {
                var a = this.c.by;
                this.q.setAttribute("name", this.c.b7);
                this.q.setProperty("value", this.c.a5);
                if (this.c.v) {
                    this.q.setAttribute("tabindex", this.c.a0.toString());
                }
                this.q.setProperty("disabled", this.c.disabled);
                this.q.setProperty("indeterminate", this.c.indeterminate);
                this.q.setProperty("checked", this.c.checked);
                this.q.setProperty("required", this.c.az);
                if (this.c.indeterminate) {
                    this.q.setAttribute("aria-checked", "mixed");
                }
                else {
                    this.q.setAttribute("aria-checked", this.c.checked ? "true" : "false");
                }
                this.q.setAttribute("aria-labelledby", this.c.bl);
                this.q.setAttribute("aria-label", this.c.bk);
            }
        };
        CheckboxView.prototype.ae = function () {
            if (this.i()) {
                var a = this.c.by;
                this.q.setAttribute("id", a);
                this.p.setAttribute("for", a);
            }
        };
        CheckboxView.prototype.u = function (a) {
            this.c.focused = false;
        };
        CheckboxView.prototype.x = function (a) {
            this.c.focused = true;
        };
        CheckboxView.prototype.w = function (a) {
            a.stopPropagation();
            if (this.h()) {
                var native_ = this.q.getNativeElement();
                native_.blur();
            }
            this.c.toggle();
        };
        CheckboxView.prototype.h = function () {
            return false;
        };
        CheckboxView.prototype.v = function (a) {
            a.stopPropagation();
        };
        CheckboxView.prototype.y = function () {
            if (igniteuiReactCore.KeyFrameAnimationFactory.h == null) {
                igniteuiReactCore.KeyFrameAnimationFactory.h = this.l;
            }
        };
        CheckboxView.prototype.a = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.p, 0, null, a);
        };
        CheckboxView.prototype.b = function (a) {
            return new igniteuiReactCore.AnimationKeyFrameEffect(0, this.n, 0, null, a);
        };
        CheckboxView.prototype.z = function (a) {
        };
        Object.defineProperty(CheckboxView.prototype, "r", {
            get: function () {
                return this.p;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxView.prototype, "e", {
            get: function () {
                return this.d;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(CheckboxView.prototype, "s", {
            get: function () {
                return this.n;
            },
            enumerable: true,
            configurable: true
        });
        CheckboxView.prototype.aa = function () {
            this.g = true;
            this.j.add(this.q.listen("change", igniteuiReactCore.runOn(this, this.v)));
            this.j.add(this.q.listen("click", igniteuiReactCore.runOn(this, this.w)));
            this.j.add(this.q.listen("focus", igniteuiReactCore.runOn(this, this.x)));
            this.j.add(this.q.listen("blur", igniteuiReactCore.runOn(this, this.u)));
            this.j.add(this.o.listen("click", igniteuiReactCore.runOn(this, this.t)));
        };
        CheckboxView.prototype.ac = function () {
            var e_2, _a;
            this.g = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.j)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            this.j.clear();
        };
        CheckboxView.prototype.af = function () {
            var model_ = this.c;
            if (model_.externalObject && model_.externalObject.refreshDefaults) {
                model_.externalObject.refreshDefaults();
            }
            ;
        };
        CheckboxView.prototype.ah = function (a, b) {
            this.d.ax = a;
            this.d.aw = b;
        };
        CheckboxView.prototype.k = function () {
            var a = this.p.getStyleProperty("border-top-width");
            a = igniteuiReactCore.stringReplace(a, "px", "");
            return parseFloat(a);
        };
        CheckboxView.$t = igniteuiReactCore.markType(CheckboxView, 'CheckboxView');
        return CheckboxView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var Checkbox = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(Checkbox, _super);
        function Checkbox() {
            var _this = _super.call(this) || this;
            _this._view = null;
            _this.b = 0;
            _this.n = false;
            _this.ab = false;
            _this.c3 = null;
            _this.cy = ThemeResolver.e(Checkbox.c, Checkbox.dm, Checkbox.dh);
            _this.c0 = null;
            _this.c2 = null;
            _this.cx = ThemeResolver.e(Checkbox.c, Checkbox.dl, Checkbox.dg);
            _this.c4 = null;
            _this.c1 = null;
            _this.dr = ThemeResolver.e(Checkbox.c, Checkbox.dn, Checkbox.di);
            _this.dd = ThemeResolver.e(Checkbox.c, Checkbox.dk, Checkbox.df);
            _this.an = ThemeResolver.b(Checkbox.c, Checkbox.as, Checkbox.ap);
            _this.dc = ThemeResolver.e(Checkbox.c, Checkbox.dj, Checkbox.de);
            _this.ao = ThemeResolver.b(Checkbox.c, Checkbox.at, Checkbox.aq);
            _this.dp = ThemeResolver.e(Checkbox.c, Checkbox.dl, Checkbox.dg);
            _this.av = ThemeResolver.b(Checkbox.c, Checkbox.au, Checkbox.ar);
            _this.dq = ThemeResolver.e(Checkbox.c, Checkbox.dm, Checkbox.dh);
            _this.cz = ThemeResolver.e(Checkbox.c, Checkbox.dn, Checkbox.di);
            _this.cw = ThemeResolver.e(Checkbox.c, Checkbox.dk, Checkbox.df);
            _this.af = NaN;
            _this.ac = ThemeResolver.b(Checkbox.c, Checkbox.as, Checkbox.ap);
            _this.ag = NaN;
            _this.ah = NaN;
            _this.ae = ThemeResolver.b(Checkbox.c, Checkbox.au, Checkbox.ar);
            _this.ad = ThemeResolver.b(Checkbox.c, Checkbox.at, Checkbox.aq);
            _this.cv = ThemeResolver.e(Checkbox.c, Checkbox.dj, Checkbox.de);
            _this.a9 = "ig-native-checkbox-" + Checkbox.a2++;
            _this.a8 = "ig-checkbox-" + Checkbox.a1++;
            _this.ba = null;
            _this.a3 = null;
            _this.bb = null;
            _this.ay = 0;
            _this.o = false;
            _this.ax = 0;
            _this.r = false;
            _this.a7 = null;
            _this.a6 = null;
            _this.change = null;
            _this.g = 0;
            _this.l = false;
            _this.p = false;
            _this.s = false;
            _this.q = false;
            _this.m = false;
            _this.j = null;
            _this.k = null;
            _this.propertyChanged = null;
            _this.ba = _this.a8 + "-label";
            _this.a7 = _this.ba;
            var a = new CheckboxView();
            a.c = _this;
            _this.view = a;
            _this.view.ad();
            return _this;
        }
        Object.defineProperty(Checkbox.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "d", {
            get: function () {
                return this.b;
            },
            set: function (a) {
                var b = this.b;
                this.b = a;
                if (b != this.b) {
                    this.cl("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Checkbox.prototype.destroy = function () {
            this.provideContainer(null);
        };
        Checkbox.prototype.cl = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.cn(a, b, c);
        };
        Checkbox.prototype.cr = function () {
            this.c7 = this.ds != null ? this.ds : this.dp;
            this.c9 = this.du != null ? this.du : this.dr;
            this.c6 = this.db != null ? this.db : this.dd;
            this.ai = !igniteuiReactCore.isNaN_(this.al) ? this.al : this.an;
            this.c5 = this.da != null ? this.da : this.dc;
            this.c8 = this.dt != null ? this.dt : this.dq;
            this.aj = !igniteuiReactCore.isNaN_(this.am) ? this.am : this.ao;
            this.ak = !igniteuiReactCore.isNaN_(this.aw) ? this.aw : this.av;
        };
        Checkbox.prototype.cn = function (a, b, c) {
            switch (a) {
                case "BaseTheme":
                    this.cu(this.d);
                    this.cr();
                    break;
                case "TickColor":
                    this.c7 = this.ds != null ? this.ds : this.dp;
                    break;
                case "UncheckedBorderColor":
                    this.c9 = this.du != null ? this.du : this.dr;
                    break;
                case "CheckedBorderColor":
                    this.c6 = this.db != null ? this.db : this.dd;
                    break;
                case "BorderWidth":
                    this.ai = !igniteuiReactCore.isNaN_(this.al) ? this.al : this.an;
                    break;
                case "CheckedBackgroundColor":
                    this.c5 = this.da != null ? this.da : this.dc;
                    break;
                case "UncheckedBackgroundColor":
                    this.c8 = this.dt != null ? this.dt : this.dq;
                    break;
                case "CornerRadius":
                    this.aj = !igniteuiReactCore.isNaN_(this.am) ? this.am : this.ao;
                    break;
                case "TickStrokeWidth":
                    this.ak = !igniteuiReactCore.isNaN_(this.aw) ? this.aw : this.av;
                    break;
                case "ActualTickStrokeWidth":
                case "ActualTickColor":
                    this.ct();
                    break;
                case "ActualCheckedBackgroundColor":
                case "ActualUncheckedBackgroundColor":
                case "ActualUncheckedBorderColor":
                case "ActualCheckedBorderColor":
                case "ActualBorderWidth":
                    if (this.j != null) {
                        this.j.cancel();
                    }
                    if (this.k != null) {
                        this.k.cancel();
                    }
                    this.j = null;
                    this.k = null;
                    this.cq();
                    var d = (this.u);
                    this.u = true;
                    this.cs(this.indeterminate);
                    this.u = d;
                    break;
                case "ActualCornerRadius":
                    this.cq();
                    break;
                case "IsChecked":
                    if (!this.n) {
                        var e = this.indeterminate;
                        this.n = true;
                        this.indeterminate = false;
                        this.n = false;
                        var f = (this.u);
                        this.u = true;
                        this.cs(e);
                        this.u = f;
                    }
                    break;
                case "IsIndeterminate":
                    if (!this.n) {
                        this.cs(b);
                    }
                    break;
                case "DisableRipple":
                    this.view.e.i = this.t;
                    break;
                case "InputId":
                    this.view.ae();
                    break;
            }
        };
        Checkbox.prototype.cq = function () {
            var a = this.view.r;
            igniteuiReactCore.NativeUI.l(a, new igniteuiReactCore.CornerRadius(0, this.aj));
            if (!igniteuiReactCore.isNaN_(this.ai)) {
                igniteuiReactCore.NativeUI.m(a, new igniteuiReactCore.Thickness(0, this.ai));
            }
            if (this.checked) {
                igniteuiReactCore.NativeUI.j(a, this.c5);
                igniteuiReactCore.NativeUI.k(a, this.c6);
            }
            else {
                igniteuiReactCore.NativeUI.j(a, this.c8);
                igniteuiReactCore.NativeUI.k(a, this.c9);
            }
        };
        Checkbox.prototype.ct = function () {
            var a = this.view.s;
            igniteuiReactCore.NativeUI.v(a, this.c7);
            igniteuiReactCore.NativeUI.y(a, this.ak);
        };
        Object.defineProperty(Checkbox.prototype, "dt", {
            get: function () {
                return this.c3;
            },
            set: function (a) {
                var b = this.c3;
                this.c3 = a;
                if (b != this.c3) {
                    this.cl("UncheckedBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "c8", {
            get: function () {
                return this.cy;
            },
            set: function (a) {
                var b = this.cy;
                this.cy = a;
                if (b != this.cy) {
                    this.cl("ActualUncheckedBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "da", {
            get: function () {
                return this.c0;
            },
            set: function (a) {
                var b = this.c0;
                this.c0 = a;
                if (b != this.c0) {
                    this.cl("CheckedBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "ds", {
            get: function () {
                return this.c2;
            },
            set: function (a) {
                var b = this.c2;
                this.c2 = a;
                if (b != this.c2) {
                    this.cl("TickColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "c7", {
            get: function () {
                return this.cx;
            },
            set: function (a) {
                var b = this.cx;
                this.cx = a;
                if (b != this.cx) {
                    this.cl("ActualTickColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "du", {
            get: function () {
                return this.c4;
            },
            set: function (a) {
                var b = this.c4;
                this.c4 = a;
                if (b != this.c4) {
                    this.cl("UncheckedBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "db", {
            get: function () {
                return this.c1;
            },
            set: function (a) {
                var b = this.c1;
                this.c1 = a;
                if (b != this.c1) {
                    this.cl("CheckedBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Checkbox.prototype.cu = function (a) {
            this.dr = ThemeResolver.e(a, Checkbox.dn, Checkbox.di);
            this.dd = ThemeResolver.e(a, Checkbox.dk, Checkbox.df);
            this.an = ThemeResolver.b(a, Checkbox.as, Checkbox.ap);
            this.dc = ThemeResolver.e(a, Checkbox.dj, Checkbox.de);
            this.ao = ThemeResolver.b(a, Checkbox.at, Checkbox.aq);
            this.dp = ThemeResolver.e(a, Checkbox.dl, Checkbox.dg);
            this.av = ThemeResolver.b(a, Checkbox.au, Checkbox.ar);
            this.dq = ThemeResolver.e(a, Checkbox.dm, Checkbox.dh);
        };
        Object.defineProperty(Checkbox.prototype, "c9", {
            get: function () {
                return this.cz;
            },
            set: function (a) {
                var b = this.cz;
                this.cz = a;
                if (b != this.cz) {
                    this.cl("ActualUncheckedBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "c6", {
            get: function () {
                return this.cw;
            },
            set: function (a) {
                var b = this.cw;
                this.cw = a;
                if (b != this.cw) {
                    this.cl("ActualCheckedBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "al", {
            get: function () {
                return this.af;
            },
            set: function (a) {
                var b = this.af;
                this.af = a;
                if (b != this.af) {
                    this.cl("BorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "ai", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (b != this.ac) {
                    this.cl("ActualBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "am", {
            get: function () {
                return this.ag;
            },
            set: function (a) {
                var b = this.ag;
                this.ag = a;
                if (b != this.ag) {
                    this.cl("CornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "aw", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (b != this.ah) {
                    this.cl("TickStrokeWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "ak", {
            get: function () {
                return this.ae;
            },
            set: function (a) {
                var b = this.ae;
                this.ae = a;
                if (b != this.ae) {
                    this.cl("ActualTickStrokeWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "aj", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                var b = this.ad;
                this.ad = a;
                if (b != this.ad) {
                    this.cl("ActualCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "c5", {
            get: function () {
                return this.cv;
            },
            set: function (a) {
                var b = this.cv;
                this.cv = a;
                if (b != this.cv) {
                    this.cl("ActualCheckedBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "by", {
            get: function () {
                return this.a9;
            },
            set: function (a) {
                var b = this.a9;
                this.a9 = a;
                if (b != this.a9) {
                    this.cl("InputId", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "bw", {
            get: function () {
                return this.a8;
            },
            set: function (a) {
                var b = this.a8;
                this.a8 = a;
                if (b != this.a8) {
                    this.cl("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "labelId", {
            get: function () {
                return this.ba;
            },
            set: function (a) {
                var b = this.ba;
                this.ba = a;
                if (b != this.ba) {
                    this.cl("LabelId", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "a5", {
            get: function () {
                return this.a3;
            },
            set: function (a) {
                var b = this.a3;
                this.a3 = a;
                if (b != this.a3) {
                    this.cl("Value", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "b7", {
            get: function () {
                return this.bb;
            },
            set: function (a) {
                var b = this.bb;
                this.bb = a;
                if (b != this.bb) {
                    this.cl("Name", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "v", {
            get: function () {
                return this.o;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "a0", {
            get: function () {
                return this.ay;
            },
            set: function (a) {
                var b = this.ay;
                this.ay = a;
                this.o = true;
                if (b != this.ay) {
                    this.cl("TabIndex", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "az", {
            get: function () {
                return this.ax;
            },
            set: function (a) {
                var b = this.ax;
                this.ax = a;
                if (b != this.ax) {
                    this.cl("Required", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "focused", {
            get: function () {
                return this.r;
            },
            set: function (a) {
                var b = this.r;
                this.r = a;
                if (b != this.r) {
                    this.cl("IsFocused", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "bl", {
            get: function () {
                return this.a7;
            },
            set: function (a) {
                var b = this.a7;
                this.a7 = a;
                if (b != this.a7) {
                    this.cl("AriaLabelledBy", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "bk", {
            get: function () {
                return this.a6;
            },
            set: function (a) {
                var b = this.a6;
                this.a6 = a;
                if (b != this.a6) {
                    this.cl("AriaLabel", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "h", {
            get: function () {
                return this.g;
            },
            set: function (a) {
                var b = this.g;
                this.g = a;
                if (b != this.g) {
                    this.cl("LabelPosition", igniteuiReactCore.enumGetBox(CheckboxLabelPosition_$type, b), igniteuiReactCore.enumGetBox(CheckboxLabelPosition_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "t", {
            get: function () {
                return this.l;
            },
            set: function (a) {
                var b = this.l;
                this.l = a;
                if (b != this.l) {
                    this.cl("DisableRipple", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "checked", {
            get: function () {
                return this.p;
            },
            set: function (a) {
                var b = this.p;
                this.p = a;
                if (b != this.p) {
                    this.cl("IsChecked", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "indeterminate", {
            get: function () {
                return this.s;
            },
            set: function (a) {
                var b = this.s;
                this.s = a;
                if (b != this.s) {
                    this.cl("IsIndeterminate", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "disabled", {
            get: function () {
                return this.q;
            },
            set: function (a) {
                var b = this.q;
                this.q = a;
                if (b != this.q) {
                    this.cl("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Checkbox.prototype, "u", {
            get: function () {
                return this.m;
            },
            set: function (a) {
                var b = this.m;
                this.m = a;
                if (b != this.m) {
                    this.cl("DisableTransitions", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Checkbox.prototype.cm = function () {
            this.ch();
            if (this.checked) {
                this.view.ah(igniteuiReactCore.BrushUtil.n(this.c5, 0.6), igniteuiReactCore.BrushUtil.n(this.c5, 0.1));
            }
            else {
                this.view.ah(igniteuiReactCore.BrushUtil.n(this.c5, 0.6), igniteuiReactCore.BrushUtil.n(this.c9, 0.1));
            }
        };
        Object.defineProperty(Checkbox.prototype, "a", {
            get: function () {
                var a = new igniteuiReactCore.AnimationKeyFrameEffectTiming();
                a.g = 300;
                a.b = 0;
                return a;
            },
            enumerable: true,
            configurable: true
        });
        Checkbox.prototype.ch = function () {
            this.view.y();
            var a = false;
            if (this.j == null) {
                if (!a) {
                    a = true;
                    this.view.af();
                }
                this.j = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.a(this.a).m(new igniteuiReactCore.AnimationKeyFrameProperty(2, this.c8), new igniteuiReactCore.AnimationKeyFrameProperty(3, this.c9)).m(new igniteuiReactCore.AnimationKeyFrameProperty(2, this.c5), new igniteuiReactCore.AnimationKeyFrameProperty(3, this.c6)));
                this.k = igniteuiReactCore.KeyFrameAnimationFactory.f.c(this.view.b(this.a).m(new igniteuiReactCore.AnimationKeyFrameProperty(19, 24), new igniteuiReactCore.AnimationKeyFrameProperty(1, 0)).m(new igniteuiReactCore.AnimationKeyFrameProperty(19, 0), new igniteuiReactCore.AnimationKeyFrameProperty(1, 1)));
            }
        };
        Checkbox.prototype.toggle = function () {
            if (this.disabled) {
                return;
            }
            this.ch();
            this.focused = false;
            this.n = true;
            var a = false;
            if (this.indeterminate) {
                a = true;
                this.checked = true;
            }
            this.indeterminate = false;
            this.checked = !this.checked;
            this.n = false;
            this.cs(a);
            if (this.change != null) {
                var b = new CheckboxChangeEventArgs();
                b.isChecked = this.checked;
                b.isIndeterminate = this.indeterminate;
                this.change(this, b);
            }
        };
        Checkbox.prototype.cs = function (a) {
            var _this = this;
            this.ch();
            var b = this.checked;
            if (this.indeterminate) {
                b = true;
            }
            var c = 1;
            if (!b) {
                c = -1;
            }
            if (b) {
                this.view.ah(igniteuiReactCore.BrushUtil.n(this.c5, 0.6), igniteuiReactCore.BrushUtil.n(this.c5, 0.1));
            }
            else {
                this.view.ah(igniteuiReactCore.BrushUtil.n(this.c5, 0.6), igniteuiReactCore.BrushUtil.n(this.c9, 0.1));
            }
            if (!this.indeterminate) {
                igniteuiReactCore.NativeUI.z(this.view.s, null);
            }
            if (this.u || this.indeterminate || a) {
                var d = this.view.r;
                var e = this.view.s;
                if (this.indeterminate) {
                    var f = new igniteuiReactCore.TransformGroup();
                    f.j.add(((function () {
                        var $ret = new igniteuiReactCore.RotateTransform();
                        $ret.j = 45;
                        return $ret;
                    })()));
                    f.j.add(((function () {
                        var $ret = new igniteuiReactCore.TranslateTransform();
                        $ret.j = -_this.view.k();
                        return $ret;
                    })()));
                    igniteuiReactCore.NativeUI.j(d, this.c5);
                    igniteuiReactCore.NativeUI.k(d, this.c6);
                    igniteuiReactCore.NativeUI.t(e, 1);
                    igniteuiReactCore.NativeUI.x(e, 41);
                    igniteuiReactCore.NativeUI.z(e, f);
                }
                else if (b) {
                    igniteuiReactCore.NativeUI.j(d, this.c5);
                    igniteuiReactCore.NativeUI.k(d, this.c6);
                    igniteuiReactCore.NativeUI.t(e, 1);
                    igniteuiReactCore.NativeUI.x(e, 0);
                }
                else {
                    igniteuiReactCore.NativeUI.j(d, this.c8);
                    igniteuiReactCore.NativeUI.k(d, this.c9);
                    igniteuiReactCore.NativeUI.t(e, 0);
                    igniteuiReactCore.NativeUI.x(e, 24);
                }
                return;
            }
            if ((c > 0 && this.j.playbackRate < 0) || (c < 0 && this.j.playbackRate > 0)) {
                this.j.reverse();
                this.j.finished.f(function (g) {
                    if (_this.j != null) {
                        _this.j.commitStyles();
                    }
                });
                this.k.reverse();
                this.k.finished.f(function (g) {
                    if (_this.k != null) {
                        _this.k.commitStyles();
                    }
                });
            }
            else {
                this.j.play();
                this.j.finished.f(function (g) {
                    if (_this.j != null) {
                        _this.j.commitStyles();
                    }
                });
                this.k.play();
                this.k.finished.f(function (g) {
                    if (_this.k != null) {
                        _this.k.commitStyles();
                    }
                });
            }
        };
        Checkbox.prototype.onDetachedFromUI = function () {
            this.view.ac();
        };
        Checkbox.prototype.onAttachedToUI = function () {
            this.view.aa();
        };
        Checkbox.prototype.onContentReady = function () {
            if (this.indeterminate) {
                this.cs(false);
            }
        };
        Checkbox.prototype.aa = function () {
            return this.view.i();
        };
        Checkbox.prototype.a4 = function () {
            return this.e();
        };
        Checkbox.prototype.bv = function () {
            var a = this.e();
            return a.s();
        };
        Checkbox.prototype.e = function () {
            var a = new CheckboxVisualModelExport();
            a.f = this.d;
            a.d = igniteuiReactCore.AppearanceHelper.a(this.c8);
            a.c = igniteuiReactCore.AppearanceHelper.a(this.c7);
            a.e = igniteuiReactCore.AppearanceHelper.a(this.c9);
            a.b = igniteuiReactCore.AppearanceHelper.a(this.c6);
            a.o = this.al;
            a.l = this.ai;
            a.p = this.am;
            a.q = this.aw;
            a.n = this.ak;
            a.m = this.aj;
            a.a = igniteuiReactCore.AppearanceHelper.a(this.c5);
            a.r = this.a5;
            a.j = this.focused;
            a.g = this.t;
            a.h = this.checked;
            a.k = this.indeterminate;
            a.i = this.disabled;
            return a;
        };
        Checkbox.prototype.provideContainer = function (a) {
            this.view.ab(a);
        };
        Checkbox.$t = igniteuiReactCore.markType(Checkbox, 'Checkbox', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        Checkbox.dn = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Checkbox.dk = igniteuiReactCore.BrushUtil.g(138, 0, 0, 0);
        Checkbox.as = NaN;
        Checkbox.dj = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        Checkbox.at = 2;
        Checkbox.dl = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Checkbox.au = 3;
        Checkbox.dm = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Checkbox.di = igniteuiReactCore.BrushUtil.g(255, 153, 153, 153);
        Checkbox.df = igniteuiReactCore.BrushUtil.g(138, 33, 150, 243);
        Checkbox.ap = NaN;
        Checkbox.de = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        Checkbox.aq = 2;
        Checkbox.dg = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Checkbox.ar = 3;
        Checkbox.dh = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        Checkbox.c = 2;
        Checkbox.a2 = 0;
        Checkbox.a1 = 0;
        return Checkbox;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrCheckboxChangeEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckboxChangeEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrCheckboxChangeEventArgs.prototype.createImplementation = function () {
            return new CheckboxChangeEventArgs();
        };
        Object.defineProperty(IgrCheckboxChangeEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrCheckboxChangeEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrCheckboxChangeEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        Object.defineProperty(IgrCheckboxChangeEventArgs.prototype, "isChecked", {
            get: function () {
                return this.i.isChecked;
            },
            set: function (v) {
                this.i.isChecked = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckboxChangeEventArgs.prototype, "isIndeterminate", {
            get: function () {
                return this.i.isIndeterminate;
            },
            set: function (v) {
                this.i.isIndeterminate = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        return IgrCheckboxChangeEventArgs;
    }());

    var requiredStyle$1 = "\n\n/*.ig-checkbox-mark {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    stroke: #fff;\n    stroke-linecap: square;\n    stroke-width: 3;\n    stroke-dasharray: 24;\n    stroke-dashoffset: 24;\n    fill: none;\n    opacity: 0;\n    z-index: 1;\n}*/\n\n/*.ig-native-checkbox {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: none;\n    clip: rect(0, 0, 0, 0);\n    outline: 0;\n    pointer-events: none;\n    overflow: hidden;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n}*/\n\n/*.ig-checkbox-box {\n    width: 1.25em;\n    height: 1.25em;\n}*/\n\n/*.ig-checkbox-composite {\n    box-sizing: border-box;\n    position: relative;\n    display: inline-block;\n    cursor: pointer;\n    width: 1.25em;\n    height: 1.25em;\n    min-width: 1.25em;\n    border-width: .125rem;\n    border-style: solid;\n    border-color: rgba(0,0,0,0.54);\n    border-top-color: rgba(0, 0, 0, 0.54);\n    border-right-color: rgba(0, 0, 0, 0.54);\n    border-bottom-color: rgba(0, 0, 0, 0.54);\n    border-left-color: rgba(0, 0, 0, 0.54);\n    border-radius: 2px;\n    -webkit-tap-highlight-color: transparent;\n    overflow: hidden;\n}*/\n\n/*.ig-checkbox-label {\n    font-family: \"Titillium Web\", Verdana;\n    font-weight: 400;\n    font-size: 1rem;\n    letter-spacing: .00937rem;\n    text-transform: none;\n    line-height: 1.5rem;\n    margin-left: 8px;\n    margin-top: 0;\n    margin-bottom: 0;\n    cursor: pointer;\n}*/\n";
    var IgrCheckbox = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrCheckbox, _super);
        function IgrCheckbox(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._change = null;
            _this._change_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("checkboxLabel", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            var checkbox = _this.i;
            _this._checkbox = checkbox;
            checkbox.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrCheckbox.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrCheckbox.prototype.render = function () {
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-checkbox igr-checkbox",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrCheckbox.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrCheckbox.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrCheckbox.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrCheckbox.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrCheckbox.prototype.componentWillUnmount = function () {
            this._checkbox.destroy();
            this._wrapper.destroy();
        };
        IgrCheckbox.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrCheckbox.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
            this.i.onContentReady();
        };
        IgrCheckbox.prototype.createImplementation = function () {
            return new Checkbox();
        };
        Object.defineProperty(IgrCheckbox.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "baseTheme", {
            /**
         * Gets or sets the base built in theme to use for the checkbox.
        */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "uncheckedBackgroundColor", {
            /**
             * Gets or sets the color to use for the background when the checkbox is unchecked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.dt);
            },
            set: function (v) {
                this.i.dt = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualUncheckedBackgroundColor", {
            /**
             * Gets or sets the color to use for the actual background when the checkbox is unchecked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.c8);
            },
            set: function (v) {
                this.i.c8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "checkedBackgroundColor", {
            /**
             * Gets or sets the color to use for the background when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.da);
            },
            set: function (v) {
                this.i.da = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "tickColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ds);
            },
            set: function (v) {
                this.i.ds = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualTickColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.c7);
            },
            set: function (v) {
                this.i.c7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "uncheckedBorderColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is unchecked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.du);
            },
            set: function (v) {
                this.i.du = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "checkedBorderColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.db);
            },
            set: function (v) {
                this.i.db = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualUncheckedBorderColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.c9);
            },
            set: function (v) {
                this.i.c9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualCheckedBorderColor", {
            /**
             * Gets or sets the color to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.c6);
            },
            set: function (v) {
                this.i.c6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "borderWidth", {
            /**
             * Gets or sets the Width to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualBorderWidth", {
            /**
             * Gets or sets the Width to use for the check mark when the checkbox is checked.
            */
            get: function () {
                return this.i.ai;
            },
            set: function (v) {
                this.i.ai = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "cornerRadius", {
            /**
             * Gets or sets the corner radius to use for the checkbox.
            */
            get: function () {
                return this.i.am;
            },
            set: function (v) {
                this.i.am = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "tickStrokeWidth", {
            /**
             * Gets or sets the corner radius to use for the checkbox.
            */
            get: function () {
                return this.i.aw;
            },
            set: function (v) {
                this.i.aw = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualTickStrokeWidth", {
            /**
             * Gets or sets the stroke width to use for the check mark.
            */
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualCornerRadius", {
            /**
             * Gets the actual corner radius to use for the checkbox.
            */
            get: function () {
                return this.i.aj;
            },
            set: function (v) {
                this.i.aj = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "actualCheckedBackgroundColor", {
            /**
             * Gets or sets the color to use for the actual background when the checkbox is checked.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.c5);
            },
            set: function (v) {
                this.i.c5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "inputId", {
            /**
             * Gets or sets the id to use for the internal native checkbox.
            */
            get: function () {
                return this.i.by;
            },
            set: function (v) {
                this.i.by = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "id", {
            /**
             * Gets or sets the id to use for the checkbox.
            */
            get: function () {
                return this.i.bw;
            },
            set: function (v) {
                this.i.bw = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "labelId", {
            /**
             * Gets or sets id to use for the checkbox label.
            */
            get: function () {
                return this.i.labelId;
            },
            set: function (v) {
                this.i.labelId = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "value", {
            /**
             * Gets or sets value to use for the checkbox.
            */
            get: function () {
                return this.i.a5;
            },
            set: function (v) {
                this.i.a5 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "name", {
            /**
             * Gets or sets name to use for the checkbox.
            */
            get: function () {
                return this.i.b7;
            },
            set: function (v) {
                this.i.b7 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "tabIndex", {
            /**
             * Gets or sets TabIndex to use for the checkbox.
            */
            get: function () {
                return this.i.a0;
            },
            set: function (v) {
                this.i.a0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "required", {
            /**
             * Gets or sets if the checkbox is required.
            */
            get: function () {
                return this.i.az;
            },
            set: function (v) {
                this.i.az = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "focused", {
            /**
             * Gets or sets if the checkbox is Focused.
            */
            get: function () {
                return this.i.focused;
            },
            set: function (v) {
                this.i.focused = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "ariaLabelledBy", {
            /**
             * Gets or sets the value of the aria-labelledby attribute.
            */
            get: function () {
                return this.i.bl;
            },
            set: function (v) {
                this.i.bl = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "ariaLabel", {
            /**
             * Gets or sets the value of the aria-label attribute.
            */
            get: function () {
                return this.i.bk;
            },
            set: function (v) {
                this.i.bk = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "labelPosition", {
            /**
             * Gets or sets LabelPosition to use for the checkbox.
            */
            get: function () {
                return this.i.h;
            },
            set: function (v) {
                this.i.h = igniteuiReactCore.ensureEnum(CheckboxLabelPosition_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "disableRipple", {
            /**
             * Gets or sets whether to disable the ripple effect for the checkbox.
            */
            get: function () {
                return this.i.t;
            },
            set: function (v) {
                this.i.t = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "checked", {
            /**
             * Gets or sets whether the checkbox is checked.
            */
            get: function () {
                return this.i.checked;
            },
            set: function (v) {
                this.i.checked = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "indeterminate", {
            /**
             * Gets or sets whether the checkbox is indeterminate.
            */
            get: function () {
                return this.i.indeterminate;
            },
            set: function (v) {
                this.i.indeterminate = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrCheckbox.prototype, "disableTransitions", {
            /**
             * Gets or sets whether the checkbox transitions are disabled.
            */
            get: function () {
                return this.i.u;
            },
            set: function (v) {
                this.i.u = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrCheckbox.prototype.findByName = function (name) {
            return null;
        };
        Object.defineProperty(IgrCheckbox.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrCheckbox.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrCheckbox.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("Checkbox");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrCheckbox.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrCheckbox.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrCheckbox.prototype.exportVisualModel = function () {
            var iv = this.i.a4();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrCheckbox.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.bv();
            return (iv);
        };
        Object.defineProperty(IgrCheckbox.prototype, "change", {
            get: function () {
                return this._change;
            },
            set: function (ev) {
                var _this = this;
                if (this._change_wrapped !== null) {
                    this.i.change = igniteuiReactCore.delegateRemove(this.i.change, this._change_wrapped);
                    this._change_wrapped = null;
                    this._change = null;
                }
                this._change = ev;
                this._change_wrapped = function (o, e) {
                    var outerArgs = new IgrCheckboxChangeEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeChange) {
                        _this.beforeChange(_this, outerArgs);
                    }
                    if (_this._change) {
                        _this._change(_this, outerArgs);
                    }
                };
                this.i.change = igniteuiReactCore.delegateCombine(this.i.change, this._change_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrCheckbox;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrCheckboxModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrCheckboxModule() {
        }
        IgrCheckboxModule.register = function () {
            IgrRippleModule.register();
            igniteuiReactCore.IgrChildContentModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckbox', IgrCheckbox);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrCheckbox', IgrCheckbox);
            igniteuiReactCore.TypeRegistrar.register('Checkbox', Checkbox.$type);
        };
        return IgrCheckboxModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var ButtonGroupOrientation = /*@__PURE__*/ (function (ButtonGroupOrientation) {
        ButtonGroupOrientation[ButtonGroupOrientation["Horizontal"] = 0] = "Horizontal";
        ButtonGroupOrientation[ButtonGroupOrientation["Vertical"] = 1] = "Vertical";
        return ButtonGroupOrientation;
    })({});
    /**
     * @hidden
     */
    var ButtonGroupOrientation_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonGroupOrientation', 'Horizontal,0|Vertical,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonGroupDisplayStyle_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('ButtonGroupDisplayStyle', 'Flat,0|Outlined,1');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonGroupButtonCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonGroupButtonCollection, _super);
        function ButtonGroupButtonCollection() {
            var _this = _super.call(this, Button.$, 0) || this;
            _this.collectionResetting = null;
            return _this;
        }
        ButtonGroupButtonCollection.prototype.p = function () {
            if (this.collectionResetting != null) {
                this.collectionResetting(this, null);
            }
            _super.prototype.p.call(this);
        };
        ButtonGroupButtonCollection.$t = igniteuiReactCore.markType(ButtonGroupButtonCollection, 'ButtonGroupButtonCollection', igniteuiReactCore.ObservableCollection$1.$.specialize(Button.$));
        return ButtonGroupButtonCollection;
    }(igniteuiReactCore.ObservableCollection$1));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonGroupSelectionChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonGroupSelectionChangedEventArgs, _super);
        function ButtonGroupSelectionChangedEventArgs() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ButtonGroupSelectionChangedEventArgs.$t = igniteuiReactCore.markType(ButtonGroupSelectionChangedEventArgs, 'ButtonGroupSelectionChangedEventArgs', igniteuiReactCore.EventArgs.$);
        return ButtonGroupSelectionChangedEventArgs;
    }(igniteuiReactCore.EventArgs));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonGroupVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonGroupVisualModelExport, _super);
        function ButtonGroupVisualModelExport() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.e = 0;
            _this.f = 0;
            _this.a = null;
            _this.k = 0;
            _this.b = null;
            _this.d = null;
            _this.c = null;
            _this.j = 0;
            _this.g = false;
            _this.h = false;
            _this.i = null;
            return _this;
        }
        ButtonGroupVisualModelExport.prototype.l = function () {
            var a = new igniteuiReactCore.StringBuilder(0);
            a.l("{");
            a.l("baseTheme : " + igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, this.e) + ", ");
            a.l("actualDensity : " + igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, this.f) + ", ");
            a.l("selectedIndices : " + this.a + ", ");
            a.l("actualItemBackgroundColor : " + this.b.serialize() + ", ");
            a.l("actualItemTextColor : " + this.d.serialize() + ", ");
            a.l("actualItemBorderColor : " + this.c.serialize() + ", ");
            a.l("actualItemBorderWidth : " + this.j + ", ");
            a.l("isDisabled : " + this.g + ", ");
            a.l("isMultiSelect : " + this.h + ", ");
            a.l("buttonModels: [");
            for (var b = 0; b < this.i.count; b++) {
                if (b != 0) {
                    a.l(",");
                }
                a.l(this.i._inner[b].ab());
            }
            a.l("]");
            a.l("}");
            return a.toString();
        };
        ButtonGroupVisualModelExport.$t = igniteuiReactCore.markType(ButtonGroupVisualModelExport, 'ButtonGroupVisualModelExport');
        return ButtonGroupVisualModelExport;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var ButtonGroupView = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonGroupView, _super);
        function ButtonGroupView() {
            var _this = _super.call(this) || this;
            _this.a = null;
            _this.g = null;
            _this.b = null;
            _this.f = new igniteuiReactCore.List$1(igniteuiReactCore.Delegate_$type, 0);
            _this.m = null;
            _this.c = true;
            _this.h = null;
            _this.i = null;
            _this.j = null;
            _this.k = null;
            return _this;
        }
        ButtonGroupView.prototype.s = function () {
        };
        ButtonGroupView.prototype.d = function () {
            return true;
        };
        Object.defineProperty(ButtonGroupView.prototype, "l", {
            get: function () {
                return this.h;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroupView.prototype, "y", {
            get: function () {
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroupView.prototype, "e", {
            get: function () {
                return true;
            },
            enumerable: true,
            configurable: true
        });
        ButtonGroupView.prototype.q = function (a) {
            var e_1, _a;
            var _this = this;
            if (a == null) {
                try {
                    for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var b = _c.value;
                        b();
                    }
                }
                catch (e_1_1) {
                    e_1 = { error: e_1_1 };
                }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return))
                            _a.call(_b);
                    }
                    finally {
                        if (e_1)
                            throw e_1.error;
                    }
                }
                this.f.clear();
            }
            this.g = a;
            a.rootWrapper.setStyleProperty("position", "relative");
            var c = this.g.createElement("div");
            c.addClass("ig-button-content");
            c.setStyleProperty("position", "relative");
            c.setStyleProperty("display", "flex");
            c.setStyleProperty("flex-direction", "row");
            c.setStyleProperty("flex-wrap", "no-wrap");
            c.setStyleProperty("align-items", "center");
            this.j = c;
            this.f.add(c.listen("click", igniteuiReactCore.runOn(this, this.n)));
            this.g.append(c);
            this.g.getPortal(c, "ChildContent", function (d) {
                var comp_ = d.componentRef;
                _this.k = comp_;
                if (_this.a.r == 0) {
                    _this.j.setStyleProperty("flex-direction", "row");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'row';
                }
                else {
                    _this.j.setStyleProperty("flex-direction", "column");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'column';
                }
            }, true);
            this.a.db();
        };
        ButtonGroupView.prototype.w = function (a) {
            if (this.m != a) {
                this.m = a;
                if (this.i != null) {
                    this.i.setAttribute("d", this.m);
                }
            }
        };
        ButtonGroupView.prototype.v = function () {
            var comp_ = this.k;
            if (comp_ != null) {
                if (this.a.r == 0) {
                    this.j.setStyleProperty("flex-direction", "row");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'row';
                }
                else {
                    this.j.setStyleProperty("flex-direction", "column");
                    comp_.display = 'flex';
                    comp_.flexDirection = 'column';
                }
            }
        };
        ButtonGroupView.prototype.n = function (a) {
        };
        ButtonGroupView.prototype.t = function () {
            if (this.d()) {
            }
        };
        ButtonGroupView.prototype.p = function () {
            this.c = true;
        };
        ButtonGroupView.prototype.r = function () {
            var e_2, _a;
            this.c = false;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.f)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var a = _c.value;
                    a();
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            this.f.clear();
        };
        ButtonGroupView.prototype.x = function (a) {
            if (a != null) {
                this.g.rootWrapper.setStyleProperty("font", a.fontString);
            }
        };
        ButtonGroupView.prototype.u = function (a) {
            if (this.a.r == 0) {
                a.gb = "flex";
                a.he = "row";
                a.fv = "center";
            }
            else {
                a.gb = "flex";
                a.he = "column";
                a.fv = "stretch";
            }
        };
        ButtonGroupView.prototype.o = function (a) {
            this.j.append(a);
        };
        ButtonGroupView.$t = igniteuiReactCore.markType(ButtonGroupView, 'ButtonGroupView');
        return ButtonGroupView;
    }(igniteuiReactCore.Base));
    /**
     * @hidden
     */
    var ButtonGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(ButtonGroup, _super);
        function ButtonGroup() {
            var _this = _super.call(this) || this;
            _this.o = 1;
            _this.e = 0;
            _this.i = 1;
            _this.h = 1;
            _this.a = new Array(0);
            _this.u = false;
            _this._view = null;
            _this.ax = ThemeResolver.b(ButtonGroup.f, ButtonGroup.av, ButtonGroup.ap);
            _this.gz = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gn, ButtonGroup.fn);
            _this.g1 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gp, ButtonGroup.fp);
            _this.g0 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.go, ButtonGroup.fo);
            _this.g2 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gq, ButtonGroup.fq);
            _this.aw = ThemeResolver.b(ButtonGroup.f, ButtonGroup.au, ButtonGroup.ao);
            _this.g6 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gu, ButtonGroup.fu);
            _this.g3 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gr, ButtonGroup.fr);
            _this.g7 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gv, ButtonGroup.fv);
            _this.ha = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gy, ButtonGroup.fy);
            _this.g4 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gs, ButtonGroup.fs);
            _this.g5 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gt, ButtonGroup.ft);
            _this.g8 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gw, ButtonGroup.fw);
            _this.g9 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gx, ButtonGroup.fx);
            _this.ar = ThemeResolver.b(ButtonGroup.f, ButtonGroup.at, ButtonGroup.an);
            _this.fz = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gb, ButtonGroup.fb);
            _this.f1 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gd, ButtonGroup.fd);
            _this.f0 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gc, ButtonGroup.fc);
            _this.f2 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.ge, ButtonGroup.fe);
            _this.aq = ThemeResolver.b(ButtonGroup.f, ButtonGroup.as, ButtonGroup.am);
            _this.f6 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gi, ButtonGroup.fi);
            _this.f3 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gf, ButtonGroup.ff);
            _this.f7 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gj, ButtonGroup.fj);
            _this.ga = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gm, ButtonGroup.fm);
            _this.f4 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gg, ButtonGroup.fg);
            _this.f5 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gh, ButtonGroup.fh);
            _this.f8 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gk, ButtonGroup.fk);
            _this.f9 = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gl, ButtonGroup.fl);
            _this.ad = ThemeResolver.b(ButtonGroup.f, ButtonGroup.av, ButtonGroup.ap);
            _this.dm = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gn, ButtonGroup.fn);
            _this.dp = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gp, ButtonGroup.fp);
            _this.du = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gu, ButtonGroup.fu);
            _this.dr = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gr, ButtonGroup.fr);
            _this.dn = ThemeResolver.e(ButtonGroup.f, ButtonGroup.go, ButtonGroup.fo);
            _this.dq = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gq, ButtonGroup.fq);
            _this.ac = ThemeResolver.b(ButtonGroup.f, ButtonGroup.au, ButtonGroup.ao);
            _this.dv = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gv, ButtonGroup.fv);
            _this.dy = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gy, ButtonGroup.fy);
            _this.ds = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gs, ButtonGroup.fs);
            _this.dt = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gt, ButtonGroup.ft);
            _this.dw = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gw, ButtonGroup.fw);
            _this.dx = ThemeResolver.e(ButtonGroup.f, ButtonGroup.gx, ButtonGroup.fx);
            _this.ah = NaN;
            _this.d7 = null;
            _this.d9 = null;
            _this.ee = null;
            _this.eb = null;
            _this.ec = null;
            _this.d8 = null;
            _this.ea = null;
            _this.ag = NaN;
            _this.ed = null;
            _this.ev = null;
            _this.ey = null;
            _this.ew = null;
            _this.ex = null;
            _this.aj = NaN;
            _this.ef = null;
            _this.eh = null;
            _this.em = null;
            _this.ej = null;
            _this.ek = null;
            _this.eg = null;
            _this.ei = null;
            _this.ai = NaN;
            _this.el = null;
            _this.er = null;
            _this.eu = null;
            _this.es = null;
            _this.et = null;
            _this.af = NaN;
            _this.dz = null;
            _this.d1 = null;
            _this.d6 = null;
            _this.d3 = null;
            _this.d4 = null;
            _this.d0 = null;
            _this.d2 = null;
            _this.ae = NaN;
            _this.d5 = null;
            _this.en = null;
            _this.eq = null;
            _this.eo = null;
            _this.ep = null;
            _this.q = 0;
            _this.a6 = "ig-buttongroup-" + ButtonGroup.a4++;
            _this.w = false;
            _this.v = false;
            _this.x = false;
            _this.propertyChanged = null;
            _this.m = new ButtonGroupButtonCollection();
            _this.selectionChanged = null;
            var a = new ButtonGroupView();
            a.a = _this;
            _this.view = a;
            _this.view.s();
            var b = _this.m;
            b.collectionChanged = igniteuiReactCore.delegateCombine(b.collectionChanged, igniteuiReactCore.runOn(_this, _this.c3));
            var c = _this.m;
            c.collectionResetting = igniteuiReactCore.delegateCombine(c.collectionResetting, igniteuiReactCore.runOn(_this, _this.c4));
            return _this;
        }
        Object.defineProperty(ButtonGroup.prototype, "p", {
            get: function () {
                return this.o;
            },
            set: function (a) {
                var b = this.o;
                this.o = a;
                if (b != this.o) {
                    this.da("DisplayType", igniteuiReactCore.enumGetBox(ButtonGroupDisplayStyle_$type, b), igniteuiReactCore.enumGetBox(ButtonGroupDisplayStyle_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "g", {
            get: function () {
                return this.e;
            },
            set: function (a) {
                var b = this.e;
                this.e = a;
                if (b != this.e) {
                    this.da("BaseTheme", igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.BaseControlTheme_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        ButtonGroup.prototype.c4 = function (a, b) {
            var e_3, _a;
            try {
                for (var _b = tslib_1.__values(igniteuiReactCore.fromEnum(this.buttons)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var c = _c.value;
                    c.clicked = igniteuiReactCore.delegateRemove(c.clicked, igniteuiReactCore.runOn(this, this.c6));
                }
            }
            catch (e_3_1) {
                e_3 = { error: e_3_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_3)
                        throw e_3.error;
                }
            }
            this.df();
        };
        ButtonGroup.prototype.appendContentChild = function (a) {
            this.view.o(a);
        };
        ButtonGroup.prototype.c3 = function (a, b) {
            var e_4, _a, e_5, _b;
            if (b.oldItems != null) {
                try {
                    for (var _c = tslib_1.__values(igniteuiReactCore.fromEn(b.oldItems)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var c = _d.value;
                        var d = c;
                        if (d != null) {
                            d.clicked = igniteuiReactCore.delegateRemove(d.clicked, igniteuiReactCore.runOn(this, this.c6));
                        }
                    }
                }
                catch (e_4_1) {
                    e_4 = { error: e_4_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_4)
                            throw e_4.error;
                    }
                }
            }
            if (b.newItems != null) {
                try {
                    for (var _e = tslib_1.__values(igniteuiReactCore.fromEn(b.newItems)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var e = _f.value;
                        var f = e;
                        if (f != null) {
                            f.clicked = igniteuiReactCore.delegateCombine(f.clicked, igniteuiReactCore.runOn(this, this.c6));
                        }
                    }
                }
                catch (e_5_1) {
                    e_5 = { error: e_5_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_5)
                            throw e_5.error;
                    }
                }
            }
            this.df();
        };
        ButtonGroup.prototype.c6 = function (a, b) {
            var c = a;
            var d = this.buttons.indexOf(c);
            this.de(c, d);
        };
        Object.defineProperty(ButtonGroup.prototype, "k", {
            get: function () {
                return this.i;
            },
            set: function (a) {
                var b = this.i;
                this.i = a;
                if (b != this.i) {
                    this.da("Density", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "j", {
            get: function () {
                return this.h;
            },
            set: function (a) {
                var b = this.h;
                this.h = a;
                if (b != this.h) {
                    this.da("ActualDensity", igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, b), igniteuiReactCore.enumGetBox(igniteuiReactCore.ControlDisplayDensity_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "d", {
            get: function () {
                return this.a;
            },
            set: function (a) {
                var b = this.a;
                this.a = a;
                if (b != this.a) {
                    this.da("SelectedIndices", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        ButtonGroup.prototype.de = function (a, b) {
            this.u = true;
            if (this.aa(a)) {
                this.d = this.b(this.d, a, b);
            }
            else {
                if (!this.z) {
                    this.d = new Array(0);
                }
                this.d = this.c(this.d, a, b);
            }
            this.df();
            if (this.selectionChanged != null) {
                this.selectionChanged(this, new ButtonGroupSelectionChangedEventArgs());
            }
            this.u = false;
        };
        ButtonGroup.prototype.c = function (a, b, c) {
            var d = new Array(Math.max(0, this.a.length + 1));
            var e = 0;
            for (var f = 0; f < this.a.length; f++) {
                if (this.a[f] != c) {
                    d[e] = this.a[f];
                    e++;
                }
            }
            d[e] = c;
            return d;
        };
        ButtonGroup.prototype.b = function (a, b, c) {
            var d = new Array(Math.max(0, this.a.length - 1));
            var e = 0;
            for (var f = 0; f < this.a.length; f++) {
                if (this.a[f] != c) {
                    d[e] = this.a[f];
                    e++;
                }
            }
            return d;
        };
        Object.defineProperty(ButtonGroup.prototype, "view", {
            get: function () {
                return this._view;
            },
            set: function (a) {
                this._view = a;
            },
            enumerable: true,
            configurable: true
        });
        ButtonGroup.prototype.destroy = function () {
            this.provideContainer(null);
        };
        ButtonGroup.prototype.da = function (a, b, c) {
            if (this.propertyChanged != null) {
                this.propertyChanged(this, new igniteuiReactCore.PropertyChangedEventArgs(a));
            }
            this.dc(a, b, c);
        };
        ButtonGroup.prototype.dc = function (a, b, c) {
            switch (a) {
                case "BaseTheme":
                    this.dh(this.g);
                    this.dg();
                    break;
                case "DisplayType":
                case "ItemBorderColor":
                case "ItemDisabledBorderColor":
                case "ItemBackgroundColor":
                case "ItemDisabledBackgroundColor":
                case "SelectedItemBackgroundColor":
                case "ItemTextColor":
                case "ItemDisabledTextColor":
                case "SelectedItemTextColor":
                case "ItemHoverBackgroundColor":
                case "SelectedItemHoverBackgroundColor":
                case "ItemHoverTextColor":
                case "SelectedItemHoverTextColor":
                case "OutlinedItemBorderColor":
                case "OutlinedItemDisabledBorderColor":
                case "OutlinedItemBackgroundColor":
                case "OutlinedItemDisabledBackgroundColor":
                case "OutlinedSelectedItemBackgroundColor":
                case "OutlinedItemTextColor":
                case "OutlinedItemDisabledTextColor":
                case "OutlinedSelectedItemTextColor":
                case "OutlinedItemHoverBackgroundColor":
                case ButtonGroup.cv:
                case "OutlinedItemHoverTextColor":
                case "OutlinedSelectedItemHoverTextColor":
                case "FlatItemBorderColor":
                case "FlatItemDisabledBorderColor":
                case "FlatItemBackgroundColor":
                case "FlatItemDisabledBackgroundColor":
                case "FlatSelectedItemBackgroundColor":
                case "FlatItemTextColor":
                case "FlatItemDisabledTextColor":
                case "FlatSelectedItemTextColor":
                case "FlatItemHoverBackgroundColor":
                case "FlatSelectedItemHoverBackgroundColor":
                case "FlatItemHoverTextColor":
                case "FlatSelectedItemHoverTextColor":
                    this.dg();
                    break;
                case "ActualItemBorderColor":
                case "ActualItemDisabledBorderColor":
                case "ActualItemDisabledBackgroundColor":
                case "ActualItemBackgroundColor":
                case "ActualItemTextColor":
                case "ActualItemDisabledTextColor":
                case "ActualSelectedItemTextColor":
                case "ActualSelectedItemBackgroundColor":
                    this.df();
                    break;
                case "Orientation":
                    this.view.v();
                    this.df();
                    break;
                case "Density":
                    this.j = this.k == 0 ? 1 : this.k;
                    break;
                case "ActualDensity":
                    for (var d = 0; d < this.buttons.count; d++) {
                        this.buttons._inner[d].h = this.j;
                    }
                    break;
                case "IsDisabled":
                    for (var e = 0; e < this.buttons.count; e++) {
                        this.buttons._inner[e].disabled = this.disabled;
                    }
                    break;
                case "SelectedIndices":
                    if (!this.u) {
                        this.df();
                    }
                    break;
            }
        };
        ButtonGroup.prototype.dl = function (a, b) {
            return new igniteuiReactCore.CornerRadius(1, !igniteuiReactCore.isNaN_(a.c) ? a.c : b.c, !igniteuiReactCore.isNaN_(a.d) ? a.d : b.d, !igniteuiReactCore.isNaN_(a.b) ? a.b : b.b, !igniteuiReactCore.isNaN_(a.a) ? a.a : b.a);
        };
        ButtonGroup.prototype.dg = function () {
            switch (this.p) {
                case 1:
                    this.al = !igniteuiReactCore.isNaN_(this.a1) ? this.a1 : this.ax;
                    this.ez = this.hn != null ? this.hn : this.gz;
                    this.e1 = this.hp != null ? this.hp : this.g1;
                    this.e6 = this.hu != null ? this.hu : this.g6;
                    this.e3 = this.hr != null ? this.hr : this.g3;
                    this.e0 = this.ho != null ? this.ho : this.g0;
                    this.e2 = this.hq != null ? this.hq : this.g2;
                    this.ak = !igniteuiReactCore.isNaN_(this.a0) ? this.a0 : this.aw;
                    this.e7 = this.h7 != null ? this.h7 : this.g7;
                    this.fa = this.ia != null ? this.ia : this.ha;
                    this.e4 = this.hs != null ? this.hs : this.g4;
                    this.e5 = this.ht != null ? this.ht : this.g5;
                    this.e8 = this.h8 != null ? this.h8 : this.g8;
                    this.e9 = this.h9 != null ? this.h9 : this.g9;
                    break;
                case 0:
                    this.al = !igniteuiReactCore.isNaN_(this.a1) ? this.a1 : this.ar;
                    this.ez = this.hn != null ? this.hn : this.fz;
                    this.e1 = this.hp != null ? this.hp : this.f1;
                    this.e6 = this.hu != null ? this.hu : this.f6;
                    this.e3 = this.hr != null ? this.hr : this.f3;
                    this.e0 = this.ho != null ? this.ho : this.f0;
                    this.e2 = this.hq != null ? this.hq : this.f2;
                    this.ak = !igniteuiReactCore.isNaN_(this.a0) ? this.a0 : this.aq;
                    this.e7 = this.h7 != null ? this.h7 : this.f7;
                    this.fa = this.ia != null ? this.ia : this.ga;
                    this.e4 = this.hs != null ? this.hs : this.f4;
                    this.e5 = this.ht != null ? this.ht : this.f5;
                    this.e8 = this.h8 != null ? this.h8 : this.f8;
                    this.e9 = this.h9 != null ? this.h9 : this.f9;
                    break;
            }
        };
        ButtonGroup.prototype.df = function () {
            for (var a = 0; a < this.buttons.count; a++) {
                var b = this.buttons._inner[a];
                b.h = this.j;
                if (a == 0) {
                    this.di(b);
                }
                else if (a == this.buttons.count - 1) {
                    this.dj(b);
                }
                else {
                    this.dk(b);
                }
                b.s = 1;
                b.ak = false;
                if (this.v) {
                    b.disabled = this.disabled;
                }
                b.nl = this.e0;
                b.ax = this.ak;
                b.sh = this.e2;
                b.sg = this.e1;
                b.si = this.e3;
                this.view.u(b);
                if (this.aa(b)) {
                    b.nk = this.e7;
                    b.t7 = this.fa;
                    b.s7 = this.e8;
                    b.s8 = this.e9;
                }
                else {
                    b.nk = this.ez;
                    b.t7 = this.e6;
                    b.s7 = this.e4;
                    b.s8 = this.e5;
                }
            }
        };
        ButtonGroup.prototype.aa = function (a) {
            var b = this.buttons.indexOf(a);
            for (var c = 0; c < this.d.length; c++) {
                if (this.d[c] == b) {
                    return true;
                }
            }
            return false;
        };
        ButtonGroup.prototype.dk = function (a) {
            a.kd = new igniteuiReactCore.CornerRadius(1, 0, 0, 0, 0);
        };
        ButtonGroup.prototype.dj = function (a) {
            if (this.r == 1) {
                a.kd = new igniteuiReactCore.CornerRadius(1, 0, 0, this.al, this.al);
            }
            else {
                a.kd = new igniteuiReactCore.CornerRadius(1, 0, this.al, this.al, 0);
            }
        };
        ButtonGroup.prototype.di = function (a) {
            if (this.r == 1) {
                a.kd = new igniteuiReactCore.CornerRadius(1, this.al, this.al, 0, 0);
            }
            else {
                a.kd = new igniteuiReactCore.CornerRadius(1, this.al, 0, 0, this.al);
            }
        };
        ButtonGroup.prototype.dh = function (a) {
            this.ax = ThemeResolver.b(a, ButtonGroup.av, ButtonGroup.ap);
            this.gz = ThemeResolver.e(a, ButtonGroup.gn, ButtonGroup.fn);
            this.g1 = ThemeResolver.e(a, ButtonGroup.gp, ButtonGroup.fp);
            this.g0 = ThemeResolver.e(a, ButtonGroup.go, ButtonGroup.fo);
            this.g2 = ThemeResolver.e(a, ButtonGroup.gq, ButtonGroup.fq);
            this.aw = ThemeResolver.b(a, ButtonGroup.au, ButtonGroup.ao);
            this.g6 = ThemeResolver.e(a, ButtonGroup.gu, ButtonGroup.fu);
            this.g3 = ThemeResolver.e(a, ButtonGroup.gr, ButtonGroup.fr);
            this.g7 = ThemeResolver.e(a, ButtonGroup.gv, ButtonGroup.fv);
            this.ha = ThemeResolver.e(a, ButtonGroup.gy, ButtonGroup.fy);
            this.g4 = ThemeResolver.e(a, ButtonGroup.gs, ButtonGroup.fs);
            this.g5 = ThemeResolver.e(a, ButtonGroup.gt, ButtonGroup.ft);
            this.g8 = ThemeResolver.e(a, ButtonGroup.gw, ButtonGroup.fw);
            this.g9 = ThemeResolver.e(a, ButtonGroup.gx, ButtonGroup.fx);
            this.ar = ThemeResolver.b(a, ButtonGroup.at, ButtonGroup.an);
            this.fz = ThemeResolver.e(a, ButtonGroup.gb, ButtonGroup.fb);
            this.f1 = ThemeResolver.e(a, ButtonGroup.gd, ButtonGroup.fd);
            this.f0 = ThemeResolver.e(a, ButtonGroup.gc, ButtonGroup.fc);
            this.f2 = ThemeResolver.e(a, ButtonGroup.ge, ButtonGroup.fe);
            this.aq = ThemeResolver.b(a, ButtonGroup.as, ButtonGroup.am);
            this.f6 = ThemeResolver.e(a, ButtonGroup.gi, ButtonGroup.fi);
            this.f3 = ThemeResolver.e(a, ButtonGroup.gf, ButtonGroup.ff);
            this.f7 = ThemeResolver.e(a, ButtonGroup.gj, ButtonGroup.fj);
            this.ga = ThemeResolver.e(a, ButtonGroup.gm, ButtonGroup.fm);
            this.f4 = ThemeResolver.e(a, ButtonGroup.gg, ButtonGroup.fg);
            this.f5 = ThemeResolver.e(a, ButtonGroup.gh, ButtonGroup.fh);
            this.f8 = ThemeResolver.e(a, ButtonGroup.gk, ButtonGroup.fk);
            this.f9 = ThemeResolver.e(a, ButtonGroup.gl, ButtonGroup.fl);
        };
        Object.defineProperty(ButtonGroup.prototype, "al", {
            get: function () {
                return this.ad;
            },
            set: function (a) {
                var b = this.ad;
                this.ad = a;
                if (b != this.ad) {
                    this.da("ActualItemCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "ez", {
            get: function () {
                return this.dm;
            },
            set: function (a) {
                var b = this.dm;
                this.dm = a;
                if (b != this.dm) {
                    this.da("ActualItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e1", {
            get: function () {
                return this.dp;
            },
            set: function (a) {
                var b = this.dp;
                this.dp = a;
                if (b != this.dp) {
                    this.da("ActualItemDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e6", {
            get: function () {
                return this.du;
            },
            set: function (a) {
                var b = this.du;
                this.du = a;
                if (b != this.du) {
                    this.da("ActualItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e3", {
            get: function () {
                return this.dr;
            },
            set: function (a) {
                var b = this.dr;
                this.dr = a;
                if (b != this.dr) {
                    this.da("ActualItemDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e0", {
            get: function () {
                return this.dn;
            },
            set: function (a) {
                var b = this.dn;
                this.dn = a;
                if (b != this.dn) {
                    this.da("ActualItemBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e2", {
            get: function () {
                return this.dq;
            },
            set: function (a) {
                var b = this.dq;
                this.dq = a;
                if (b != this.dq) {
                    this.da("ActualItemDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "ak", {
            get: function () {
                return this.ac;
            },
            set: function (a) {
                var b = this.ac;
                this.ac = a;
                if (b != this.ac) {
                    this.da("ActualItemBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e7", {
            get: function () {
                return this.dv;
            },
            set: function (a) {
                var b = this.dv;
                this.dv = a;
                if (b != this.dv) {
                    this.da("ActualSelectedItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "fa", {
            get: function () {
                return this.dy;
            },
            set: function (a) {
                var b = this.dy;
                this.dy = a;
                if (b != this.dy) {
                    this.da("ActualSelectedItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e4", {
            get: function () {
                return this.ds;
            },
            set: function (a) {
                var b = this.ds;
                this.ds = a;
                if (b != this.ds) {
                    this.da("ActualItemHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e5", {
            get: function () {
                return this.dt;
            },
            set: function (a) {
                var b = this.dt;
                this.dt = a;
                if (b != this.dt) {
                    this.da("ActualItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e8", {
            get: function () {
                return this.dw;
            },
            set: function (a) {
                var b = this.dw;
                this.dw = a;
                if (b != this.dw) {
                    this.da("ActualSelectedItemHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "e9", {
            get: function () {
                return this.dx;
            },
            set: function (a) {
                var b = this.dx;
                this.dx = a;
                if (b != this.dx) {
                    this.da("ActualSelectedItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "a1", {
            get: function () {
                return this.ah;
            },
            set: function (a) {
                var b = this.ah;
                this.ah = a;
                if (b != this.ah) {
                    this.da("ItemCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hn", {
            get: function () {
                return this.d7;
            },
            set: function (a) {
                var b = this.d7;
                this.d7 = a;
                if (b != this.d7) {
                    this.da("ItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hp", {
            get: function () {
                return this.d9;
            },
            set: function (a) {
                var b = this.d9;
                this.d9 = a;
                if (b != this.d9) {
                    this.da("ItemDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hu", {
            get: function () {
                return this.ee;
            },
            set: function (a) {
                var b = this.ee;
                this.ee = a;
                if (b != this.ee) {
                    this.da("ItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hr", {
            get: function () {
                return this.eb;
            },
            set: function (a) {
                var b = this.eb;
                this.eb = a;
                if (b != this.eb) {
                    this.da("ItemDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hs", {
            get: function () {
                return this.ec;
            },
            set: function (a) {
                var b = this.ec;
                this.ec = a;
                if (b != this.ec) {
                    this.da("ItemHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "ho", {
            get: function () {
                return this.d8;
            },
            set: function (a) {
                var b = this.d8;
                this.d8 = a;
                if (b != this.d8) {
                    this.da("ItemBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hq", {
            get: function () {
                return this.ea;
            },
            set: function (a) {
                var b = this.ea;
                this.ea = a;
                if (b != this.ea) {
                    this.da("ItemDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "a0", {
            get: function () {
                return this.ag;
            },
            set: function (a) {
                var b = this.ag;
                this.ag = a;
                if (b != this.ag) {
                    this.da("ItemBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "ht", {
            get: function () {
                return this.ed;
            },
            set: function (a) {
                var b = this.ed;
                this.ed = a;
                if (b != this.ed) {
                    this.da("ItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h7", {
            get: function () {
                return this.ev;
            },
            set: function (a) {
                var b = this.ev;
                this.ev = a;
                if (b != this.ev) {
                    this.da("SelectedItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "ia", {
            get: function () {
                return this.ey;
            },
            set: function (a) {
                var b = this.ey;
                this.ey = a;
                if (b != this.ey) {
                    this.da("SelectedItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h8", {
            get: function () {
                return this.ew;
            },
            set: function (a) {
                var b = this.ew;
                this.ew = a;
                if (b != this.ew) {
                    this.da("SelectedItemHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h9", {
            get: function () {
                return this.ex;
            },
            set: function (a) {
                var b = this.ex;
                this.ex = a;
                if (b != this.ex) {
                    this.da("SelectedItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "a3", {
            get: function () {
                return this.aj;
            },
            set: function (a) {
                var b = this.aj;
                this.aj = a;
                if (b != this.aj) {
                    this.da("OutlinedItemCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hv", {
            get: function () {
                return this.ef;
            },
            set: function (a) {
                var b = this.ef;
                this.ef = a;
                if (b != this.ef) {
                    this.da("OutlinedItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hx", {
            get: function () {
                return this.eh;
            },
            set: function (a) {
                var b = this.eh;
                this.eh = a;
                if (b != this.eh) {
                    this.da("OutlinedItemDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h2", {
            get: function () {
                return this.em;
            },
            set: function (a) {
                var b = this.em;
                this.em = a;
                if (b != this.em) {
                    this.da("OutlinedItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hz", {
            get: function () {
                return this.ej;
            },
            set: function (a) {
                var b = this.ej;
                this.ej = a;
                if (b != this.ej) {
                    this.da("OutlinedItemDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h0", {
            get: function () {
                return this.ek;
            },
            set: function (a) {
                var b = this.ek;
                this.ek = a;
                if (b != this.ek) {
                    this.da("OutlinedItemHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hw", {
            get: function () {
                return this.eg;
            },
            set: function (a) {
                var b = this.eg;
                this.eg = a;
                if (b != this.eg) {
                    this.da("OutlinedItemBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hy", {
            get: function () {
                return this.ei;
            },
            set: function (a) {
                var b = this.ei;
                this.ei = a;
                if (b != this.ei) {
                    this.da("OutlinedItemDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "a2", {
            get: function () {
                return this.ai;
            },
            set: function (a) {
                var b = this.ai;
                this.ai = a;
                if (b != this.ai) {
                    this.da("OutlinedItemBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h1", {
            get: function () {
                return this.el;
            },
            set: function (a) {
                var b = this.el;
                this.el = a;
                if (b != this.el) {
                    this.da("OutlinedItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h3", {
            get: function () {
                return this.er;
            },
            set: function (a) {
                var b = this.er;
                this.er = a;
                if (b != this.er) {
                    this.da("OutlinedSelectedItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h6", {
            get: function () {
                return this.eu;
            },
            set: function (a) {
                var b = this.eu;
                this.eu = a;
                if (b != this.eu) {
                    this.da("OutlinedSelectedItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h4", {
            get: function () {
                return this.es;
            },
            set: function (a) {
                var b = this.es;
                this.es = a;
                if (b != this.es) {
                    this.da(ButtonGroup.cv, b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "h5", {
            get: function () {
                return this.et;
            },
            set: function (a) {
                var b = this.et;
                this.et = a;
                if (b != this.et) {
                    this.da("OutlinedSelectedItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "az", {
            get: function () {
                return this.af;
            },
            set: function (a) {
                var b = this.af;
                this.af = a;
                if (b != this.af) {
                    this.da("FlatItemCornerRadius", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hb", {
            get: function () {
                return this.dz;
            },
            set: function (a) {
                var b = this.dz;
                this.dz = a;
                if (b != this.dz) {
                    this.da("FlatItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hd", {
            get: function () {
                return this.d1;
            },
            set: function (a) {
                var b = this.d1;
                this.d1 = a;
                if (b != this.d1) {
                    this.da("FlatItemDisabledBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hi", {
            get: function () {
                return this.d6;
            },
            set: function (a) {
                var b = this.d6;
                this.d6 = a;
                if (b != this.d6) {
                    this.da("FlatItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hf", {
            get: function () {
                return this.d3;
            },
            set: function (a) {
                var b = this.d3;
                this.d3 = a;
                if (b != this.d3) {
                    this.da("FlatItemDisabledTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hg", {
            get: function () {
                return this.d4;
            },
            set: function (a) {
                var b = this.d4;
                this.d4 = a;
                if (b != this.d4) {
                    this.da("FlatItemHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hc", {
            get: function () {
                return this.d0;
            },
            set: function (a) {
                var b = this.d0;
                this.d0 = a;
                if (b != this.d0) {
                    this.da("FlatItemBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "he", {
            get: function () {
                return this.d2;
            },
            set: function (a) {
                var b = this.d2;
                this.d2 = a;
                if (b != this.d2) {
                    this.da("FlatItemDisabledBorderColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "ay", {
            get: function () {
                return this.ae;
            },
            set: function (a) {
                var b = this.ae;
                this.ae = a;
                if (b != this.ae) {
                    this.da("FlatItemBorderWidth", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hh", {
            get: function () {
                return this.d5;
            },
            set: function (a) {
                var b = this.d5;
                this.d5 = a;
                if (b != this.d5) {
                    this.da("FlatItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hj", {
            get: function () {
                return this.en;
            },
            set: function (a) {
                var b = this.en;
                this.en = a;
                if (b != this.en) {
                    this.da("FlatSelectedItemBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hm", {
            get: function () {
                return this.eq;
            },
            set: function (a) {
                var b = this.eq;
                this.eq = a;
                if (b != this.eq) {
                    this.da("FlatSelectedItemTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hk", {
            get: function () {
                return this.eo;
            },
            set: function (a) {
                var b = this.eo;
                this.eo = a;
                if (b != this.eo) {
                    this.da("FlatSelectedItemHoverBackgroundColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "hl", {
            get: function () {
                return this.ep;
            },
            set: function (a) {
                var b = this.ep;
                this.ep = a;
                if (b != this.ep) {
                    this.da("FlatSelectedItemHoverTextColor", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "r", {
            get: function () {
                return this.q;
            },
            set: function (a) {
                var b = this.q;
                this.q = a;
                if (b != this.q) {
                    this.da("Orientation", igniteuiReactCore.enumGetBox(ButtonGroupOrientation_$type, b), igniteuiReactCore.enumGetBox(ButtonGroupOrientation_$type, a));
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "b5", {
            get: function () {
                return this.a6;
            },
            set: function (a) {
                var b = this.a6;
                this.a6 = a;
                if (b != this.a6) {
                    this.da("Id", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "disabled", {
            get: function () {
                return this.w;
            },
            set: function (a) {
                var b = this.w;
                this.w = a;
                this.v = true;
                if (b != this.w) {
                    this.da("IsDisabled", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(ButtonGroup.prototype, "z", {
            get: function () {
                return this.x;
            },
            set: function (a) {
                var b = this.x;
                this.x = a;
                if (b != this.x) {
                    this.da("IsMultiSelect", b, a);
                }
            },
            enumerable: true,
            configurable: true
        });
        ButtonGroup.prototype.db = function () {
        };
        ButtonGroup.prototype.onDetachedFromUI = function () {
            this.view.r();
        };
        ButtonGroup.prototype.onAttachedToUI = function () {
            this.view.p();
        };
        ButtonGroup.prototype.ab = function () {
            return this.view.d();
        };
        ButtonGroup.prototype.a5 = function () {
            return this.l();
        };
        ButtonGroup.prototype.bq = function () {
            var a = this.l();
            return a.l();
        };
        ButtonGroup.prototype.l = function () {
            var a = new ButtonGroupVisualModelExport();
            a.e = this.g;
            a.f = this.j;
            a.a = this.d;
            a.k = this.al;
            a.b = igniteuiReactCore.AppearanceHelper.a(this.ez);
            a.d = igniteuiReactCore.AppearanceHelper.a(this.e6);
            a.c = igniteuiReactCore.AppearanceHelper.a(this.e0);
            a.j = this.ak;
            a.g = this.disabled;
            a.h = this.z;
            a.i = new igniteuiReactCore.List$1(ButtonVisualModelExport.$, 0);
            for (var b = 0; b < this.buttons.count; b++) {
                a.i.add1(this.buttons._inner[b].ey());
            }
            return a;
        };
        ButtonGroup.prototype.provideContainer = function (a) {
            this.view.q(a);
        };
        Object.defineProperty(ButtonGroup.prototype, "buttons", {
            get: function () {
                return this.m;
            },
            enumerable: true,
            configurable: true
        });
        ButtonGroup.$t = igniteuiReactCore.markType(ButtonGroup, 'ButtonGroup', igniteuiReactCore.Base.$, [igniteuiReactCore.INotifyPropertyChanged_$type]);
        ButtonGroup.f = 2;
        ButtonGroup.av = 4;
        ButtonGroup.gn = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        ButtonGroup.gp = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        ButtonGroup.go = igniteuiReactCore.BrushUtil.g(255, 199, 199, 199);
        ButtonGroup.gq = igniteuiReactCore.BrushUtil.g(255, 199, 199, 199);
        ButtonGroup.au = 1;
        ButtonGroup.gu = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        ButtonGroup.gr = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        ButtonGroup.gv = igniteuiReactCore.BrushUtil.g(60, 0, 0, 0);
        ButtonGroup.gy = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        ButtonGroup.gs = igniteuiReactCore.BrushUtil.g(30, 0, 0, 0);
        ButtonGroup.gt = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        ButtonGroup.gw = igniteuiReactCore.BrushUtil.g(96, 0, 0, 0);
        ButtonGroup.gx = igniteuiReactCore.BrushUtil.g(255, 0, 0, 0);
        ButtonGroup.ap = 3;
        ButtonGroup.fn = igniteuiReactCore.BrushUtil.g(0, 255, 255, 255);
        ButtonGroup.fp = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        ButtonGroup.fo = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        ButtonGroup.fq = igniteuiReactCore.BrushUtil.g(255, 199, 199, 199);
        ButtonGroup.ao = 1;
        ButtonGroup.fu = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        ButtonGroup.fr = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        ButtonGroup.fv = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        ButtonGroup.fy = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        ButtonGroup.fs = igniteuiReactCore.BrushUtil.g(26, 33, 150, 243);
        ButtonGroup.ft = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        ButtonGroup.fw = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        ButtonGroup.fx = igniteuiReactCore.BrushUtil.g(255, 255, 255, 255);
        ButtonGroup.at = 4;
        ButtonGroup.gb = igniteuiReactCore.BrushUtil.g(0, 255, 255, 255);
        ButtonGroup.gd = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        ButtonGroup.gc = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        ButtonGroup.ge = igniteuiReactCore.BrushUtil.g(255, 199, 199, 199);
        ButtonGroup.as = 0;
        ButtonGroup.gi = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        ButtonGroup.gf = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        ButtonGroup.gj = igniteuiReactCore.BrushUtil.g(30, 228, 28, 119);
        ButtonGroup.gm = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        ButtonGroup.gg = igniteuiReactCore.BrushUtil.g(13, 228, 28, 119);
        ButtonGroup.gh = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        ButtonGroup.gk = igniteuiReactCore.BrushUtil.g(30, 228, 28, 119);
        ButtonGroup.gl = igniteuiReactCore.BrushUtil.g(255, 228, 28, 119);
        ButtonGroup.an = 0;
        ButtonGroup.fb = igniteuiReactCore.BrushUtil.g(0, 255, 255, 255);
        ButtonGroup.fd = igniteuiReactCore.BrushUtil.g(10, 0, 0, 0);
        ButtonGroup.fc = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        ButtonGroup.fe = igniteuiReactCore.BrushUtil.g(0, 0, 0, 0);
        ButtonGroup.am = 0;
        ButtonGroup.fi = igniteuiReactCore.BrushUtil.g(255, 119, 119, 119);
        ButtonGroup.ff = igniteuiReactCore.BrushUtil.g(66, 0, 0, 0);
        ButtonGroup.fj = igniteuiReactCore.BrushUtil.g(26, 33, 150, 243);
        ButtonGroup.fm = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        ButtonGroup.fg = igniteuiReactCore.BrushUtil.g(10, 33, 150, 243);
        ButtonGroup.fh = igniteuiReactCore.BrushUtil.g(255, 119, 119, 119);
        ButtonGroup.fk = igniteuiReactCore.BrushUtil.g(26, 33, 150, 243);
        ButtonGroup.fl = igniteuiReactCore.BrushUtil.g(255, 33, 150, 243);
        ButtonGroup.cv = "OutlinedSelectedItemHoverBackgroundColor";
        ButtonGroup.a4 = 0;
        return ButtonGroup;
    }(igniteuiReactCore.Base));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrButtonGroupButtonCollection = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrButtonGroupButtonCollection, _super);
        function IgrButtonGroupButtonCollection(list) {
            var _this = _super.call(this) || this;
            if (!IgrButton.$type) {
                IgrButton.$type = igniteuiReactCore.markType(IgrButton, "IgrButton");
            }
            if (list) {
                for (var i = 0; i < list.length; i++) {
                    _this.add(list[i]);
                }
            }
            return _this;
        }
        IgrButtonGroupButtonCollection.prototype._createInnerColl = function () {
            if (!IgrButton.$type) {
                IgrButton.$type = igniteuiReactCore.markType(IgrButton, "IgrButton");
            }
            var coll = new igniteuiReactCore.SyncableObservableCollection$2(IgrButton.$type, Button.$type, 0);
            coll.compare = function (ext, int) {
                var comp = ext;
                if (comp._implementation) {
                    comp = comp._implementation;
                }
                if (comp.equals) {
                    return comp.equals(int);
                }
                return comp === int;
            };
            coll.createTo = function (ext) {
                return ext._implementation;
            };
            coll.createFrom = function (int) {
                var ext = int.externalObject;
                if (!ext) {
                    ext = IgrButton._createFromInternal(int);
                    if (ext) {
                        ext._implementation = int;
                    }
                }
                return ext;
            };
            return coll;
        };
        return IgrButtonGroupButtonCollection;
    }(igniteuiReactCore.IgCollection));

    var IgrButtonGroupSelectionChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {
        function IgrButtonGroupSelectionChangedEventArgs() {
            this._implementation = this.createImplementation();
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        }
        IgrButtonGroupSelectionChangedEventArgs.prototype.createImplementation = function () {
            return new ButtonGroupSelectionChangedEventArgs();
        };
        Object.defineProperty(IgrButtonGroupSelectionChangedEventArgs.prototype, "i", {
            /**
             * @hidden
             */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        IgrButtonGroupSelectionChangedEventArgs.prototype.onImplementationCreated = function () {
        };
        IgrButtonGroupSelectionChangedEventArgs.prototype._provideImplementation = function (i) {
            this._implementation = i;
            this._implementation.externalObject = this;
            this.onImplementationCreated();
        };
        return IgrButtonGroupSelectionChangedEventArgs;
    }());

    var IgrButtonGroup = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrButtonGroup, _super);
        function IgrButtonGroup(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            _this.contentButtons = [];
            /**
            * The style mappings actually present in the treemap. Do not directly modify this array.
            * This array's contents can be modified by causing React to reproject the child content.
            * Or adding and removing ranges from the manual ranges collection on the ranges property.
            */
            _this.actualButtons = [];
            _this._buttons = null;
            _this._buttonsAdapter = null;
            _this._implementation = null;
            _this.__p = null;
            _this._hasUserValues = new Set();
            _this._stylingContainer = null;
            _this._stylingParent = null;
            _this._inStyling = false;
            _this._selectionChanged = null;
            _this._selectionChanged_wrapped = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._contentChildrenManager = new igniteuiReactCore.ContentChildrenManager(function (ch) { return ch.props.name || ch.key || ch.props.id; }, function (ch) { return ch.name || ch.key || ch.id; }, function () { return _this._updateContentChildren(); });
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("buttonContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            var buttonGroup = _this.i;
            _this._buttonGroup = buttonGroup;
            _this._buttonsAdapter = new igniteuiReactCore.CollectionAdapter(_this.contentButtons, _this.i.buttons, _this.actualButtons, function (c) { return c.i; }, function (i) {
                if (_this._container && _this._container.getNativeElement().parentElement) {
                    i._styling(_this._container.getNativeElement(), _this, _this);
                }
            }, function (i) { });
            buttonGroup.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrButtonGroup.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrButtonGroup.prototype._updateContentChildren = function () {
            this.contentButtons.length = 0;
            var contentChildrenActual = this._contentChildrenManager.contentChildrenActual;
            for (var i = 0; i < contentChildrenActual.length; i++) {
                if ((Button.$type).isAssignableFrom(contentChildrenActual[i].i.$type)) {
                    this.contentButtons.push(contentChildrenActual[i]);
                }
            }
            if (this._buttonsAdapter !== null) {
                this._buttonsAdapter.notifyContentChanged();
            }
        };
        Object.defineProperty(IgrButtonGroup.prototype, "buttons", {
            /**
             * A collection of manually added style mappings for the treemap.
            */
            get: function () {
                var _this = this;
                if (this._buttons === null) {
                    var coll = new IgrButtonGroupButtonCollection();
                    var inner = coll._innerColl;
                    inner.addListener(function (sender, e) {
                        switch (e.action) {
                            case igniteuiReactCore.NotifyCollectionChangedAction.Add:
                                _this._buttonsAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Remove:
                                _this._buttonsAdapter.removeManualItemAt(e.oldStartingIndex);
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Replace:
                                _this._buttonsAdapter.removeManualItemAt(e.oldStartingIndex);
                                _this._buttonsAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));
                                break;
                            case igniteuiReactCore.NotifyCollectionChangedAction.Reset:
                                _this._buttonsAdapter.clearManualItems();
                                break;
                        }
                    });
                    this._buttons = coll;
                }
                return this._buttons;
            },
            enumerable: true,
            configurable: true
        });
        IgrButtonGroup.prototype.render = function () {
            var children = this._contentChildrenManager.getChildren(this.props.children);
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-button-group igr-button-group",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrButtonGroup.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrButtonGroup.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrButtonGroup.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrButtonGroup.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrButtonGroup.prototype.componentWillUnmount = function () {
            this._buttonGroup.destroy();
            this._wrapper.destroy();
        };
        IgrButtonGroup.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrButtonGroup.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrButtonGroup.prototype.createImplementation = function () {
            return new ButtonGroup();
        };
        Object.defineProperty(IgrButtonGroup.prototype, "i", {
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "displayType", {
            /**
         * Gets or sets the display style to use for the button.
        */
            get: function () {
                return this.i.p;
            },
            set: function (v) {
                this.i.p = igniteuiReactCore.ensureEnum(ButtonGroupDisplayStyle_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "baseTheme", {
            /**
             * Gets or sets the base built in theme to use for the button group.
            */
            get: function () {
                return this.i.g;
            },
            set: function (v) {
                this.i.g = igniteuiReactCore.ensureEnum(igniteuiReactCore.BaseControlTheme_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "density", {
            /**
             * Gets or sets the display density to use for the button group.
            */
            get: function () {
                return this.i.k;
            },
            set: function (v) {
                this.i.k = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualDensity", {
            /**
             * Gets the actual display density to use for the button group.
            */
            get: function () {
                return this.i.j;
            },
            set: function (v) {
                this.i.j = igniteuiReactCore.ensureEnum(igniteuiReactCore.ControlDisplayDensity_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "selectedIndices", {
            /**
             * Gets the currently selected button indices.
            */
            get: function () {
                return this.i.d;
            },
            set: function (v) {
                this.i.d = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemCornerRadius", {
            /**
             * Gets the actual item corner radius for the appropriate corners.
            */
            get: function () {
                return this.i.al;
            },
            set: function (v) {
                this.i.al = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemBackgroundColor", {
            /**
             * Gets the actual item background color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ez);
            },
            set: function (v) {
                this.i.ez = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemDisabledBackgroundColor", {
            /**
             * Gets the actual item background color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e1);
            },
            set: function (v) {
                this.i.e1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemTextColor", {
            /**
             * Gets the actual item text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e6);
            },
            set: function (v) {
                this.i.e6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemDisabledTextColor", {
            /**
             * Gets the actual item text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e3);
            },
            set: function (v) {
                this.i.e3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemBorderColor", {
            /**
             * Gets the actual item border color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e0);
            },
            set: function (v) {
                this.i.e0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemDisabledBorderColor", {
            /**
             * Gets the actual item border color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e2);
            },
            set: function (v) {
                this.i.e2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemBorderWidth", {
            /**
             * Gets the actual item border width.
            */
            get: function () {
                return this.i.ak;
            },
            set: function (v) {
                this.i.ak = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualSelectedItemBackgroundColor", {
            /**
             * Gets the actual selected item background color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e7);
            },
            set: function (v) {
                this.i.e7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualSelectedItemTextColor", {
            /**
             * Gets the stroke actual selected item text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.fa);
            },
            set: function (v) {
                this.i.fa = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemHoverBackgroundColor", {
            /**
             * Gets the actual item hovered background color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e4);
            },
            set: function (v) {
                this.i.e4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualItemHoverTextColor", {
            /**
             * Gets the actual item text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e5);
            },
            set: function (v) {
                this.i.e5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualSelectedItemHoverBackgroundColor", {
            /**
             * Gets the actual selected item hovered background color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e8);
            },
            set: function (v) {
                this.i.e8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "actualSelectedItemHoverTextColor", {
            /**
             * Gets the actual selected item hovered text color.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.e9);
            },
            set: function (v) {
                this.i.e9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemCornerRadius", {
            /**
             * Gets or sets the corner radius to use for the appropriate corners for the item buttons.
            */
            get: function () {
                return this.i.a1;
            },
            set: function (v) {
                this.i.a1 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemBackgroundColor", {
            /**
             * Gets or sets the color to use the background of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hn);
            },
            set: function (v) {
                this.i.hn = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemDisabledBackgroundColor", {
            /**
             * Gets or sets the disabled color to use the background of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hp);
            },
            set: function (v) {
                this.i.hp = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemTextColor", {
            /**
             * Gets or sets the color to use the text of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hu);
            },
            set: function (v) {
                this.i.hu = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemDisabledTextColor", {
            /**
             * Gets or sets the disabled color to use the text of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hr);
            },
            set: function (v) {
                this.i.hr = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemHoverBackgroundColor", {
            /**
             * Gets or sets the color to use the hovered background of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hs);
            },
            set: function (v) {
                this.i.hs = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemBorderColor", {
            /**
             * Gets or sets the color to use the border of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ho);
            },
            set: function (v) {
                this.i.ho = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemDisabledBorderColor", {
            /**
             * Gets or sets the disabled color to use the border of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hq);
            },
            set: function (v) {
                this.i.hq = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemBorderWidth", {
            /**
             * Gets or sets the border width to use for the buttons in the group.
            */
            get: function () {
                return this.i.a0;
            },
            set: function (v) {
                this.i.a0 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "itemHoverTextColor", {
            /**
             * Gets or sets the color to use the hovered text of the buttons in the group.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ht);
            },
            set: function (v) {
                this.i.ht = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "selectedItemBackgroundColor", {
            /**
             * Gets or sets the color to use the background of the buttons in the group that are selected.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h7);
            },
            set: function (v) {
                this.i.h7 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "selectedItemTextColor", {
            /**
             * Gets or sets the color to use the text of the buttons in the group that are selected.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.ia);
            },
            set: function (v) {
                this.i.ia = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "selectedItemHoverBackgroundColor", {
            /**
             * Gets or sets the color to use the hovered background of the buttons in the group that are selected.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h8);
            },
            set: function (v) {
                this.i.h8 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "selectedItemHoverTextColor", {
            /**
             * Gets or sets the color to use the hovered text of the buttons in the group that are selected.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h9);
            },
            set: function (v) {
                this.i.h9 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemCornerRadius", {
            /**
             * Gets or sets the corner radius to use for the appropriate corners for the outlined type item buttons.
            */
            get: function () {
                return this.i.a3;
            },
            set: function (v) {
                this.i.a3 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemBackgroundColor", {
            /**
             * Gets or sets the color to use the background of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hv);
            },
            set: function (v) {
                this.i.hv = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemDisabledBackgroundColor", {
            /**
             * Gets or sets the disabled color to use the background of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hx);
            },
            set: function (v) {
                this.i.hx = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemTextColor", {
            /**
             * Gets or sets the color to use the text of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h2);
            },
            set: function (v) {
                this.i.h2 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemDisabledTextColor", {
            /**
             * Gets or sets the disabled color to use the text of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hz);
            },
            set: function (v) {
                this.i.hz = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemHoverBackgroundColor", {
            /**
             * Gets or sets the color to use the hovered background of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h0);
            },
            set: function (v) {
                this.i.h0 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemBorderColor", {
            /**
             * Gets or sets the color to use the border of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hw);
            },
            set: function (v) {
                this.i.hw = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemDisabledBorderColor", {
            /**
             * Gets or sets the disabled color to use the border of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hy);
            },
            set: function (v) {
                this.i.hy = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemBorderWidth", {
            /**
             * Gets or sets the border width to use for the buttons in the group when type is outlined.
            */
            get: function () {
                return this.i.a2;
            },
            set: function (v) {
                this.i.a2 = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedItemHoverTextColor", {
            /**
             * Gets or sets the color to use the hovered text of the buttons in the group when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h1);
            },
            set: function (v) {
                this.i.h1 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedSelectedItemBackgroundColor", {
            /**
             * Gets or sets the color to use the background of the buttons in the group that are selected when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h3);
            },
            set: function (v) {
                this.i.h3 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedSelectedItemTextColor", {
            /**
             * Gets or sets the color to use the text of the buttons in the group that are selected when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h6);
            },
            set: function (v) {
                this.i.h6 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedSelectedItemHoverBackgroundColor", {
            /**
             * Gets or sets the color to use the hovered background of the buttons in the group that are selected when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h4);
            },
            set: function (v) {
                this.i.h4 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "outlinedSelectedItemHoverTextColor", {
            /**
             * Gets or sets the color to use the hovered text of the buttons in the group that are selected when type is outlined.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.h5);
            },
            set: function (v) {
                this.i.h5 = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemCornerRadius", {
            /**
             * Gets or sets the corner radius to use for the appropriate corners for the flat type item buttons.
            */
            get: function () {
                return this.i.az;
            },
            set: function (v) {
                this.i.az = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemBackgroundColor", {
            /**
             * Gets or sets the color to use the background of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hb);
            },
            set: function (v) {
                this.i.hb = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemDisabledBackgroundColor", {
            /**
             * Gets or sets the disabled color to use the background of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hd);
            },
            set: function (v) {
                this.i.hd = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemTextColor", {
            /**
             * Gets or sets the color to use the text of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hi);
            },
            set: function (v) {
                this.i.hi = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemDisabledTextColor", {
            /**
             * Gets or sets the disabled color to use the text of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hf);
            },
            set: function (v) {
                this.i.hf = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemHoverBackgroundColor", {
            /**
             * Gets or sets the color to use the hovered background of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hg);
            },
            set: function (v) {
                this.i.hg = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemBorderColor", {
            /**
             * Gets or sets the color to use the border of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hc);
            },
            set: function (v) {
                this.i.hc = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemDisabledBorderColor", {
            /**
             * Gets or sets the disabled color to use the border of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.he);
            },
            set: function (v) {
                this.i.he = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemBorderWidth", {
            /**
             * Gets or sets the border width to use for the buttons in the group when type is flat.
            */
            get: function () {
                return this.i.ay;
            },
            set: function (v) {
                this.i.ay = +v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatItemHoverTextColor", {
            /**
             * Gets or sets the color to use the hovered text of the buttons in the group when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hh);
            },
            set: function (v) {
                this.i.hh = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatSelectedItemBackgroundColor", {
            /**
             * Gets or sets the color to use the background of the buttons in the group that are selected when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hj);
            },
            set: function (v) {
                this.i.hj = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatSelectedItemTextColor", {
            /**
             * Gets or sets the color to use the text of the buttons in the group that are selected when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hm);
            },
            set: function (v) {
                this.i.hm = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatSelectedItemHoverBackgroundColor", {
            /**
             * Gets or sets the color to use the hovered background of the buttons in the group that are selected when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hk);
            },
            set: function (v) {
                this.i.hk = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "flatSelectedItemHoverTextColor", {
            /**
             * Gets or sets the color to use the hovered text of the buttons in the group that are selected when type is flat.
            */
            get: function () {
                return igniteuiReactCore.brushToString(this.i.hl);
            },
            set: function (v) {
                this.i.hl = igniteuiReactCore.stringToBrush(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "orientation", {
            /**
             * Gets or sets the oreientation to use the button group when type is outlined.
            */
            get: function () {
                return this.i.r;
            },
            set: function (v) {
                this.i.r = igniteuiReactCore.ensureEnum(ButtonGroupOrientation_$type, v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "id", {
            /**
             * Gets or sets the id to use for the button group.
            */
            get: function () {
                return this.i.b5;
            },
            set: function (v) {
                this.i.b5 = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrButtonGroup.prototype, "isMultiSelect", {
            /**
             * Gets or sets whether the group supports multi-select.
            */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrButtonGroup.prototype.findByName = function (name) {
            if (this.buttons != null && this.buttons.findByName && this.buttons.findByName(name)) {
                return this.buttons.findByName(name);
            }
            return null;
        };
        Object.defineProperty(IgrButtonGroup.prototype, "hasUserValues", {
            get: function () {
                return this._hasUserValues;
            },
            enumerable: true,
            configurable: true
        });
        IgrButtonGroup.prototype.__m = function (propertyName) {
            if (!this._inStyling) {
                this._hasUserValues.add(propertyName);
            }
        };
        IgrButtonGroup.prototype._styling = function (container, component, parent) {
            if (this._inStyling) {
                return;
            }
            this._inStyling = true;
            this._stylingContainer = container;
            this._stylingParent = component;
            var genericPrefix = "";
            var typeName = this.i.$type.name;
            if (typeName.indexOf("Xam") === 0) {
                typeName = typeName.substring(3);
            }
            genericPrefix = igniteuiReactCore.toSpinal("ButtonGroup");
            var additionalPrefixes = [];
            var prefix = igniteuiReactCore.toSpinal(typeName);
            additionalPrefixes.push(prefix + "-");
            var b = this.i.$type.baseType;
            while (b && b.name != "Object" &&
                b.name != "Base" &&
                b.name != "Control" &&
                b.Name != "DependencyObject" &&
                b.Name != "FrameworkElement") {
                typeName = b.name;
                if (typeName.indexOf("Xam") === 0) {
                    typeName = typeName.substring(3);
                }
                var basePrefix = igniteuiReactCore.toSpinal(typeName);
                additionalPrefixes.push(basePrefix + "-");
                b = b.baseType;
            }
            if (parent) {
                var parentTypeName = parent.i.$type.name;
                if (parentTypeName.indexOf("Xam") === 0) {
                    parentTypeName = parentTypeName.substring(3);
                }
                var parentPrefix = igniteuiReactCore.toSpinal(parentTypeName);
                additionalPrefixes.push(parentPrefix + "-" + genericPrefix + "-");
                additionalPrefixes.push(parentPrefix + "-" + prefix + "-");
            }
            igniteuiReactCore.initializePropertiesFromCss(container, this, genericPrefix + "-", this.hasUserValues, false, additionalPrefixes);
            if (this._otherStyling) {
                this._otherStyling(container, component, parent);
            }
            this._inStyling = false;
        };
        IgrButtonGroup.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrButtonGroup.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrButtonGroup.prototype.exportVisualModel = function () {
            var iv = this.i.a5();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrButtonGroup.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.bq();
            return (iv);
        };
        Object.defineProperty(IgrButtonGroup.prototype, "selectionChanged", {
            get: function () {
                return this._selectionChanged;
            },
            set: function (ev) {
                var _this = this;
                if (this._selectionChanged_wrapped !== null) {
                    this.i.selectionChanged = igniteuiReactCore.delegateRemove(this.i.selectionChanged, this._selectionChanged_wrapped);
                    this._selectionChanged_wrapped = null;
                    this._selectionChanged = null;
                }
                this._selectionChanged = ev;
                this._selectionChanged_wrapped = function (o, e) {
                    var outerArgs = new IgrButtonGroupSelectionChangedEventArgs();
                    outerArgs._provideImplementation(e);
                    if (_this.beforeSelectionChanged) {
                        _this.beforeSelectionChanged(_this, outerArgs);
                    }
                    if (_this._selectionChanged) {
                        _this._selectionChanged(_this, outerArgs);
                    }
                };
                this.i.selectionChanged = igniteuiReactCore.delegateCombine(this.i.selectionChanged, this._selectionChanged_wrapped);
            },
            enumerable: true,
            configurable: true
        });
        return IgrButtonGroup;
    }(React.Component));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrButtonGroupModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrButtonGroupModule() {
        }
        IgrButtonGroupModule.register = function () {
            igniteuiReactCore.IgrChildContentModule.register();
            IgrButtonModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButtonGroup', IgrButtonGroup);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrButtonGroup', IgrButtonGroup);
            igniteuiReactCore.TypeRegistrar.register('ButtonGroup', ButtonGroup.$type);
        };
        return IgrButtonGroupModule;
    }());

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    var IgrPrefix = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrPrefix, _super);
        function IgrPrefix(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("prefixContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            _this._container.setStyleProperty("vertical-align", "middle");
            var prefix = _this.i;
            _this._prefix = prefix;
            prefix.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrPrefix.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrPrefix.prototype.render = function () {
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-prefix igr-prefix",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrPrefix.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrPrefix.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrPrefix.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrPrefix.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrPrefix.prototype.componentWillUnmount = function () {
            this._prefix.destroy();
            this._wrapper.destroy();
        };
        IgrPrefix.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrPrefix.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrPrefix.prototype.createImplementation = function () {
            return new Prefix();
        };
        Object.defineProperty(IgrPrefix.prototype, "i", {
            /**
                                     * @hidden
                                     */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrPrefix.prototype, "id", {
            /**
         * Gets or sets the id to use for the checkbox.
        */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrPrefix.prototype, "ariaLabel", {
            /**
             * Gets or sets the value of the aria-label attribute.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrPrefix.prototype, "isHover", {
            /**
             * Gets or sets whether the prefix is hovered.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrPrefix.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrPrefix.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrPrefix.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrPrefix.prototype.exportVisualModel = function () {
            var iv = this.i.t();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrPrefix.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.y();
            return (iv);
        };
        return IgrPrefix;
    }(IgrInputGroupItem));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    var IgrPrefixModule = /** @class */ /*@__PURE__*/ (function () {
        function IgrPrefixModule() {
        }
        IgrPrefixModule.register = function () {
            igniteuiReactCore.IgrChildContentModule.register();
            igniteuiReactCore.TypeRegistrar.registerCons('IgrPrefix', IgrPrefix);
            igniteuiReactCore.TypeRegistrar.registerCons('IgrPrefix', IgrPrefix);
            igniteuiReactCore.TypeRegistrar.register('Prefix', Prefix.$type);
        };
        return IgrPrefixModule;
    }());

    var IgrSuffix = /** @class */ /*@__PURE__*/ (function (_super) {
        tslib_1.__extends(IgrSuffix, _super);
        function IgrSuffix(props) {
            var _this = _super.call(this, props) || this;
            _this._wrapper = null;
            if (_this._styling) {
                igniteuiReactCore.NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));
            }
            _this._implementation = _this.createImplementation();
            _this._implementation.externalObject = _this;
            _this._getMainRef = _this._getMainRef.bind(_this);
            var container;
            if (document) {
                container = document.createElement("div");
            }
            var root;
            root = container;
            if (container != null) {
                root = container;
            }
            _this.requestRender = _this.requestRender.bind(_this);
            _this._portalManager = new igniteuiReactCore.PortalManager("suffixContent", _this.requestRender);
            var ren = new igniteuiReactCore.ReactRenderer(root, document, true, {}, _this._portalManager);
            _this._wrapper = ren;
            _this._container = _this._wrapper.rootWrapper;
            _this._container.setStyleProperty("display", "inline-block");
            _this._container.setStyleProperty("vertical-align", "middle");
            var suffix = _this.i;
            _this._suffix = suffix;
            suffix.provideContainer(ren);
            if (props) {
                _this.initializeProperties();
            }
            return _this;
        }
        IgrSuffix.prototype._getMainRef = function (ref) {
            this._elRef = ref;
        };
        IgrSuffix.prototype.render = function () {
            var propChildren = this.props.children;
            var children = [];
            React.Children.forEach(propChildren, function (ch) {
                children.push(React.cloneElement(ch));
            });
            this._portalManager.onRender(children);
            var div = React.createElement("div", {
                className: "ig-suffix igr-suffix",
                ref: this._getMainRef,
                children: children
            });
            return div;
        };
        IgrSuffix.prototype.requestRender = function () {
            if (this._initialized) {
                this.setState({});
            }
        };
        //private _getLabelPortal(element: DomWrapper, portalCallback: (portal: DomPortal) => void): void {
        //    this._portalManager.getPortal(element, "TemplateContent", portalCallback);
        //}
        IgrSuffix.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            var e_1, _a;
            var mod = igniteuiReactCore.getModifiedProps(this.props, nextProps);
            try {
                for (var _b = tslib_1.__values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = mod[p];
                    }
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return true;
        };
        IgrSuffix.prototype.initializeProperties = function () {
            var e_2, _a;
            try {
                for (var _b = tslib_1.__values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var p = _c.value;
                    if (igniteuiReactCore.isValidProp(this, p)) {
                        this[p] = this.props[p];
                    }
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
        };
        // supports angular themes or custom properties set in CSS
        IgrSuffix.prototype.updateStyle = function () {
            this._styling(this._elRef, this);
        };
        IgrSuffix.prototype.componentWillUnmount = function () {
            this._suffix.destroy();
            this._wrapper.destroy();
        };
        IgrSuffix.prototype.componentDidMount = function () {
            this._elRef.appendChild(this._container.getNativeElement());
            this.initializeContent();
        };
        IgrSuffix.prototype.initializeContent = function () {
            this._styling(this._container.getNativeElement(), this);
            this.updateStyle();
        };
        IgrSuffix.prototype.createImplementation = function () {
            return new Suffix();
        };
        Object.defineProperty(IgrSuffix.prototype, "i", {
            /**
                                     * @hidden
                                     */
            get: function () {
                return this._implementation;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSuffix.prototype, "id", {
            /**
         * Gets or sets the id to use for the checkbox.
        */
            get: function () {
                return this.i.z;
            },
            set: function (v) {
                this.i.z = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSuffix.prototype, "ariaLabel", {
            /**
             * Gets or sets the value of the aria-label attribute.
            */
            get: function () {
                return this.i.w;
            },
            set: function (v) {
                this.i.w = v;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSuffix.prototype, "isHover", {
            /**
             * Gets or sets whether the suffix is hovered.
            */
            get: function () {
                return this.i.q;
            },
            set: function (v) {
                this.i.q = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(IgrSuffix.prototype, "disabled", {
            /**
             * Gets or sets whether the checkbox is disabled.
            */
            get: function () {
                return this.i.disabled;
            },
            set: function (v) {
                this.i.disabled = igniteuiReactCore.ensureBool(v);
            },
            enumerable: true,
            configurable: true
        });
        IgrSuffix.prototype.onDetachedFromUI = function () {
            this.i.onDetachedFromUI();
        };
        IgrSuffix.prototype.onAttachedToUI = function () {
            this.i.onAttachedToUI();
        };
        /**
         * Exports visual information about the current state of the grid.
        
        */
        IgrSuffix.prototype.exportVisualModel = function () {
            var iv = this.i.t();
            return (iv);
        };
        /**
         * Returns a serialized copy of the exported visual model
        
        */
        IgrSuffix.prototype.exportSerializedVisualModel = function () {
            var iv = this.i.y();
            return (iv);
        };
        return IgrSuffix;
    }(IgrInputGroupItem));

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */
    /**
     * @hidden
     */
    var KEYCODES_$type = /*@__PURE__*/ igniteuiReactCore.markEnum('KEYCODES', 'ENTER,13|SPACE,32|ESCAPE,27|LEFT_ARROW,37|UP_ARROW,38|RIGHT_ARROW,39|DOWN_ARROW,40|F2,113|TAB,9|CTRL,17|Z,90|Y,89|X,88|BACKSPACE,8|DELETE,46|INPUT_METHOD,229');

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    /*
    THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
    https://www.infragistics.com/legal/license/igultimate-la
    https://www.infragistics.com/legal/license/igultimate-eula
    GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
    */

    exports.Button = Button;
    exports.ButtonClickEventArgs = ButtonClickEventArgs;
    exports.ButtonDisplayStyle_$type = ButtonDisplayStyle_$type;
    exports.ButtonGroup = ButtonGroup;
    exports.ButtonGroupButtonCollection = ButtonGroupButtonCollection;
    exports.ButtonGroupDisplayStyle_$type = ButtonGroupDisplayStyle_$type;
    exports.ButtonGroupOrientation = ButtonGroupOrientation;
    exports.ButtonGroupOrientation_$type = ButtonGroupOrientation_$type;
    exports.ButtonGroupSelectionChangedEventArgs = ButtonGroupSelectionChangedEventArgs;
    exports.ButtonGroupView = ButtonGroupView;
    exports.ButtonGroupVisualModelExport = ButtonGroupVisualModelExport;
    exports.ButtonView = ButtonView;
    exports.ButtonVisualModelExport = ButtonVisualModelExport;
    exports.Calendar = Calendar;
    exports.CalendarView = CalendarView;
    exports.CalendarVisualModelExport = CalendarVisualModelExport;
    exports.Checkbox = Checkbox;
    exports.CheckboxChangeEventArgs = CheckboxChangeEventArgs;
    exports.CheckboxLabelPosition_$type = CheckboxLabelPosition_$type;
    exports.CheckboxView = CheckboxView;
    exports.CheckboxVisualModelExport = CheckboxVisualModelExport;
    exports.DatePicker = DatePicker;
    exports.DatePickerView = DatePickerView;
    exports.DatePickerVisualModelExport = DatePickerVisualModelExport;
    exports.DayInfo = DayInfo;
    exports.ElevationHelper = ElevationHelper;
    exports.Icon = Icon;
    exports.IconView = IconView;
    exports.IconVisualModelExport = IconVisualModelExport;
    exports.IgrButton = IgrButton;
    exports.IgrButtonClickEventArgs = IgrButtonClickEventArgs;
    exports.IgrButtonGroup = IgrButtonGroup;
    exports.IgrButtonGroupButtonCollection = IgrButtonGroupButtonCollection;
    exports.IgrButtonGroupModule = IgrButtonGroupModule;
    exports.IgrButtonGroupSelectionChangedEventArgs = IgrButtonGroupSelectionChangedEventArgs;
    exports.IgrButtonModule = IgrButtonModule;
    exports.IgrCalendar = IgrCalendar;
    exports.IgrCalendarModule = IgrCalendarModule;
    exports.IgrCheckbox = IgrCheckbox;
    exports.IgrCheckboxChangeEventArgs = IgrCheckboxChangeEventArgs;
    exports.IgrCheckboxModule = IgrCheckboxModule;
    exports.IgrDatePicker = IgrDatePicker;
    exports.IgrDatePickerModule = IgrDatePickerModule;
    exports.IgrIcon = IgrIcon;
    exports.IgrIconModule = IgrIconModule;
    exports.IgrInput = IgrInput;
    exports.IgrInputChangeEventArgs = IgrInputChangeEventArgs;
    exports.IgrInputGroup = IgrInputGroup;
    exports.IgrInputGroupInputCollection = IgrInputGroupInputCollection;
    exports.IgrInputGroupItem = IgrInputGroupItem;
    exports.IgrInputGroupModule = IgrInputGroupModule;
    exports.IgrInputModule = IgrInputModule;
    exports.IgrLabel = IgrLabel;
    exports.IgrLabelModule = IgrLabelModule;
    exports.IgrPrefix = IgrPrefix;
    exports.IgrPrefixModule = IgrPrefixModule;
    exports.IgrRipple = IgrRipple;
    exports.IgrRippleModule = IgrRippleModule;
    exports.IgrSuffix = IgrSuffix;
    exports.IgrValueChangedEventArgs = IgrValueChangedEventArgs;
    exports.Input = Input;
    exports.InputChangeEventArgs = InputChangeEventArgs;
    exports.InputGroup = InputGroup;
    exports.InputGroupDisplayType = InputGroupDisplayType;
    exports.InputGroupDisplayType_$type = InputGroupDisplayType_$type;
    exports.InputGroupInputCollection = InputGroupInputCollection;
    exports.InputGroupItem = InputGroupItem;
    exports.InputGroupView = InputGroupView;
    exports.InputGroupVisualModelExport = InputGroupVisualModelExport;
    exports.InputShiftType = InputShiftType;
    exports.InputShiftType_$type = InputShiftType_$type;
    exports.InputView = InputView;
    exports.InputVisualModelExport = InputVisualModelExport;
    exports.KEYCODES_$type = KEYCODES_$type;
    exports.Label = Label;
    exports.LabelShiftType = LabelShiftType;
    exports.LabelShiftType_$type = LabelShiftType_$type;
    exports.LabelView = LabelView;
    exports.LabelVisualModelExport = LabelVisualModelExport;
    exports.MaskOptions = MaskOptions;
    exports.MaskParsingService = MaskParsingService;
    exports.Prefix = Prefix;
    exports.PrefixShiftType = PrefixShiftType;
    exports.PrefixShiftType_$type = PrefixShiftType_$type;
    exports.PrefixView = PrefixView;
    exports.PrefixVisualModelExport = PrefixVisualModelExport;
    exports.Replaced = Replaced;
    exports.Ripple = Ripple;
    exports.RippleView = RippleView;
    exports.RippleVisualModelExport = RippleVisualModelExport;
    exports.Suffix = Suffix;
    exports.SuffixShiftType = SuffixShiftType;
    exports.SuffixShiftType_$type = SuffixShiftType_$type;
    exports.SuffixView = SuffixView;
    exports.SuffixVisualModelExport = SuffixVisualModelExport;
    exports.ThemeResolver = ThemeResolver;
    exports.ValueChangedEventArgs = ValueChangedEventArgs;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=igniteui-react-inputs.umd.js.map
