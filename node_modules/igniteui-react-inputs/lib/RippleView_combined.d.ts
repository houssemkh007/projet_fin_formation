import { Base, Type, INotifyPropertyChanged, PropertyChangedEventArgs } from "igniteui-react-core";
import { DomRenderer } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { AnimationKeyFrameEffect } from "igniteui-react-core";
import { AnimationKeyFrameEffectTiming } from "igniteui-react-core";
import { RippleVisualModelExport } from "./RippleVisualModelExport";
/**
 * @hidden
 */
export declare class RippleView extends Base {
    static $t: Type;
    constructor();
    b: Ripple;
    w(): void;
    e(): boolean;
    private g;
    private c;
    private f;
    t(a: DomRenderer): void;
    private l;
    v(): void;
    private r;
    private q;
    private p;
    aa(): void;
    x(): void;
    z(): void;
    m(a: number, b: number, c: number): any;
    y(a: any): void;
    n(): void;
    a(a: any, b: AnimationKeyFrameEffectTiming): AnimationKeyFrameEffect;
    private o;
    private d;
    private k;
    private h;
    private j;
    private i;
    s(): void;
    u(): void;
}
/**
 * @hidden
 */
export declare class Ripple extends Base implements INotifyPropertyChanged {
    static $t: Type;
    constructor();
    c: RippleView;
    destroy(): void;
    protected ah(a: string, b: any, c: any): void;
    protected aj(a: string, b: any, c: any): void;
    private am;
    private an;
    j: boolean;
    af(): void;
    ag(): void;
    private p;
    q: any;
    private ar;
    ax: Brush;
    private aq;
    aw: Brush;
    private static au;
    private ao;
    as: Brush;
    private m;
    al(a: number, b: number, c: number, d: number): void;
    private d;
    private static av;
    private ap;
    at: Brush;
    private n;
    o: number;
    private f;
    i: boolean;
    private e;
    h: boolean;
    private g;
    k: boolean;
    ai(): void;
    private readonly a;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    onDetachedFromUI(): void;
    onAttachedToUI(): void;
    protected l(): boolean;
    r(): any;
    v(): string;
    b(): RippleVisualModelExport;
    provideContainer(a: DomRenderer): void;
}
