import { Base, Type, INotifyPropertyChanged, PropertyChangedEventArgs } from "igniteui-react-core";
import { DomRenderer } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { FontInfo } from "igniteui-react-core";
import { IIcon } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { IconVisualModelExport } from "./IconVisualModelExport";
/**
 * @hidden
 */
export declare class IconView extends Base {
    static $t: Type;
    constructor();
    a: Icon;
    r(): void;
    d(): boolean;
    g: DomRenderer;
    private b;
    private f;
    readonly j: any;
    readonly w: Path;
    readonly e: boolean;
    p(a: DomRenderer): void;
    private k;
    u(a: string): void;
    t(): void;
    private l;
    s(): void;
    private m;
    private n;
    private c;
    private h;
    private i;
    o(): void;
    q(): void;
    v(a: FontInfo): void;
}
/**
 * @hidden
 */
export declare class Icon extends Base implements INotifyPropertyChanged, IIcon {
    static $t: Type;
    constructor();
    private _view;
    view: IconView;
    destroy(): void;
    protected a7(a: string, b: any, c: any): void;
    protected a9(a: string, b: any, c: any): void;
    private bc;
    protected readonly i: boolean;
    private bb;
    private static bt;
    private static bx;
    private static bw;
    private static bu;
    private static bv;
    private static t;
    private static s;
    private bd;
    bo: Brush;
    private bh;
    bs: Brush;
    private be;
    bp: Brush;
    private bf;
    bq: Brush;
    private bg;
    br: Brush;
    private m;
    q: number;
    private n;
    r: number;
    private bi;
    fill: Brush;
    private bn;
    b2: Brush;
    private ac;
    svgPath: string;
    private bj;
    by: Brush;
    private bk;
    bz: Brush;
    private bm;
    b1: Brush;
    private o;
    u: number;
    private p;
    v: number;
    a5(): void;
    a6(): void;
    private c;
    d: FontInfo;
    private bl;
    b0: Brush;
    private static y;
    private ab;
    as: string;
    private w;
    private e;
    readonly h: boolean;
    x: number;
    private aa;
    ak: string;
    private g;
    k: boolean;
    private f;
    disabled: boolean;
    a8(): void;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    onDetachedFromUI(): void;
    onAttachedToUI(): void;
    protected l(): boolean;
    z(): any;
    am(): string;
    a(): IconVisualModelExport;
    provideContainer(a: DomRenderer): void;
}
