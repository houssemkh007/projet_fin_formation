import { Base, Type, INotifyPropertyChanged, PropertyChangedEventArgs } from "igniteui-react-core";
import { DomRenderer, DomWrapper } from "igniteui-react-core";
import { Rect } from "igniteui-react-core";
import { ControlDisplayDensity } from "igniteui-react-core";
import { BaseControlTheme } from "igniteui-react-core";
import { FontInfo } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { ValueChangedEventArgs } from "./ValueChangedEventArgs";
import { DatePickerVisualModelExport } from "./DatePickerVisualModelExport";
/**
 * @hidden
 */
export declare class DatePickerView extends Base {
    static $t: Type;
    constructor();
    a: DatePicker;
    p(): void;
    c: DomRenderer;
    private f;
    private d;
    private e;
    o(a: DomRenderer): void;
    private i;
    r(): void;
    m(): void;
    private j;
    private h;
    private l;
    s(): Rect;
    private g;
    private k;
    private b;
    q(a: DomWrapper): void;
    n(): void;
}
/**
 * @hidden
 */
export declare class DatePicker extends Base implements INotifyPropertyChanged {
    static $t: Type;
    private g;
    private static readonly w;
    private static readonly ab;
    private static readonly y;
    private static readonly x;
    private m;
    private k;
    private j;
    private h;
    private i;
    private f;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    constructor();
    valueChanged: (sender: any, args: ValueChangedEventArgs) => void;
    at(a: Date, b: Date): void;
    notifySizeChanged(): void;
    destroy(): void;
    provideContainer(a: DomRenderer): void;
    private t;
    r: Date;
    private c;
    d: ControlDisplayDensity;
    private a;
    b: BaseControlTheme;
    private n;
    o: FontInfo;
    private a3;
    a5: Brush;
    private a2;
    a4: Brush;
    private p;
    q: boolean;
    protected as(a: string, b: any, c: any): void;
    protected av(a: string, b: any, c: any): void;
    private a1;
    private az;
    private a0;
    am(a: DomRenderer, b: DomWrapper, c: DomWrapper, d: DomWrapper): void;
    ak(): void;
    an(a: DomRenderer, b: DomWrapper): void;
    private aj;
    private ai;
    aq(): void;
    au(): void;
    al(): void;
    ap(): void;
    private ay;
    private ax;
    u(): any;
    ac(): string;
    e(): DatePickerVisualModelExport;
}
