import * as React from 'react';
import { DatePicker } from './DatePicker';
import { IgrValueChangedEventArgs } from "./igr-value-changed-event-args";
import { ControlDisplayDensity } from "igniteui-react-core";
import { BaseControlTheme } from "igniteui-react-core";
export declare class IgrDatePicker extends React.Component<IIgrDatePickerProps> {
    private _container;
    private _height;
    private _width;
    private _initialized;
    private _elRef;
    private _renderer;
    height: string;
    width: string;
    private _getMainRef;
    render(): React.DetailedReactHTMLElement<{
        className: string;
        ref: (ref: any) => void;
        children: any[];
    }, any>;
    constructor(props: IIgrDatePickerProps);
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    protected initializeProperties(): void;
    updateStyle(): void;
    componentWillUnmount(): void;
    private _implementation;
    componentDidMount(): void;
    initializeContent(): void;
    protected createImplementation(): DatePicker;
    readonly i: DatePicker;
    private _datePicker;
    /**
 * Gets or Sets the property name that contains the values.
*/
    value: Date;
    /**
     * Gets or sets the display density to use for the date pcicker.
    */
    density: ControlDisplayDensity;
    /**
     * Gets or sets the base built in theme to use for the date picker.
    */
    baseTheme: BaseControlTheme;
    /**
     * Gets or sets the font to use for the combobox.
    */
    textStyle: string;
    /**
     * Gets or Sets the text color
    */
    textColor: string;
    /**
     * Gets or Sets the text color
    */
    iconColor: string;
    /**
     * Gets or sets the ShowClearButton property to detirmine if the clear button is shown
    */
    showClearButton: boolean;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected readonly hasUserValues: Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    /**
 * Exports visual information about the current state of the grid.

*/
    exportVisualModel(): any;
    /**
     * Returns a serialized copy of the exported visual model
    
    */
    exportSerializedVisualModel(): string;
    private _valueChanged;
    private _valueChanged_wrapped;
    /**
     * Called when date is selected.
    */
    valueChanged: (s: IgrDatePicker, e: IgrValueChangedEventArgs) => void;
}
export interface IIgrDatePickerProps {
    width?: string;
    height?: string;
    /**
 * Gets or Sets the property name that contains the values.
*/
    value?: Date;
    /**
     * Gets or sets the display density to use for the date pcicker.
    */
    density?: ControlDisplayDensity | string;
    /**
     * Gets or sets the base built in theme to use for the date picker.
    */
    baseTheme?: BaseControlTheme | string;
    /**
     * Gets or sets the font to use for the combobox.
    */
    textStyle?: string;
    /**
     * Gets or Sets the text color
    */
    textColor?: string;
    /**
     * Gets or Sets the text color
    */
    iconColor?: string;
    /**
     * Gets or sets the ShowClearButton property to detirmine if the clear button is shown
    */
    showClearButton?: boolean | string;
    /**
 * Called when date is selected.
*/
    valueChanged?: (s: IgrDatePicker, e: IgrValueChangedEventArgs) => void;
}
