import * as React from 'react';
import { InputGroup } from "./InputGroup";
import { IgrInputGroupItem } from './igr-input-group-item';
import { IgrInputGroupInputCollection } from './igr-input-group-input-collection';
import { InputGroupDisplayType } from './InputGroupDisplayType';
import { ControlDisplayDensity } from "igniteui-react-core";
import { BaseControlTheme } from "igniteui-react-core";
export declare class IgrInputGroup extends React.Component<IIgrInputGroupProps> {
    private _container;
    private _initialized;
    private _elRef;
    private _portalManager;
    private _wrapper;
    private _getMainRef;
    private _contentChildrenManager;
    private _updateContentChildren;
    contentInputs: IgrInputGroupItem[];
    /**
    * The style mappings actually present in the treemap. Do not directly modify this array.
    * This array's contents can be modified by causing React to reproject the child content.
    * Or adding and removing ranges from the manual ranges collection on the ranges property.
    */
    actualInputs: IgrInputGroupItem[];
    private _inputs;
    private _inputsAdapter;
    /**
     * A collection of manually added style mappings for the treemap.
    */
    readonly inputs: IgrInputGroupInputCollection;
    render(): React.DetailedReactHTMLElement<{
        className: string;
        ref: (ref: any) => void;
        children: any[];
    }, any>;
    private requestRender;
    constructor(props: IIgrInputGroupProps);
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    protected initializeProperties(): void;
    updateStyle(): void;
    componentWillUnmount(): void;
    private _implementation;
    componentDidMount(): void;
    initializeContent(): void;
    protected createImplementation(): InputGroup;
    readonly i: InputGroup;
    private _inputGroup;
    /**
 * Gets or sets the display style to use for the button.
*/
    displayType: InputGroupDisplayType;
    /**
     * Gets or sets the display density to use for the input group.
    */
    density: ControlDisplayDensity;
    /**
     * Gets the actual display density to use for the input group.
    */
    actualDensity: ControlDisplayDensity;
    /**
     * Gets or sets the base built in theme to use for the label.
    */
    baseTheme: BaseControlTheme;
    readonly inputHasValue: boolean;
    /**
     * Gets the actual item background color.
    */
    actualBorderColor: string;
    /**
     * Gets the actual item border color.
    */
    actualFocusBorderColor: string;
    /**
     * Gets the actual item border width.
    */
    actualBorderWidth: number;
    /**
     * Gets the actual item border width.
    */
    actualFocusBorderWidth: number;
    actualCornerRadiusBottomRight: number;
    actualCornerRadiusBottomLeft: number;
    actualCornerRadiusTopLeft: number;
    actualCornerRadiusTopRight: number;
    ensureActualCornerRadius(): void;
    actualContentPaddingBottom: number;
    actualContentPaddingLeft: number;
    actualContentPaddingRight: number;
    actualContentPaddingTop: number;
    ensureActualContentPadding(): void;
    /**
     * Gets the actual width to use for the underline element.
    */
    actualUnderlineWidth: number;
    /**
     * Gets the actual width to use for the underline element.
    */
    actualUnderlineRippleWidth: number;
    /**
     * Gets the width to use for the underline element when hovered.
    */
    actualHoverUnderlineWidth: number;
    /**
     * Gets the actual color to use for the underline element.
    */
    actualUnderlineColor: string;
    /**
     * Gets the actual color to use for the underline ripple element.
    */
    actualUnderlineRippleColor: string;
    /**
     * Gets the actual color to use for the underline element.
    */
    actualHoverUnderlineColor: string;
    /**
     * Gets the actual color to use for the underline element when focused.
    */
    actualFocusUnderlineColor: string;
    /**
     * Gets the actual opacity to use for the underline element.
    */
    actualUnderlineOpacity: number;
    /**
     * Gets the actual opacity to use for the underline element when hovered.
    */
    actualHoverUnderlineOpacity: number;
    /**
     * Gets the actual opacity to use for the underline element when focused.
    */
    actualFocusUnderlineOpacity: number;
    /**
     * Gets the actual opacity to use for the underline ripple element when focused.
    */
    actualFocusUnderlineRippleOpacity: number;
    /**
     * Gets the actual opacity to use for the underline ripple element.
    */
    actualUnderlineRippleOpacity: number;
    /**
     * Gets the actual opacity to use for the underline ripple element.
    */
    actualBackgroundColor: string;
    /**
     * Gets or sets the border width to use for the border of the item group.
    */
    borderWidth: number;
    /**
     * Gets or sets the border width to use for the border of the item group when focused.
    */
    focusBorderWidth: number;
    /**
     * Gets or sets the color to use the border of the input group.
    */
    borderColor: string;
    cornerRadiusBottomRight: number;
    cornerRadiusBottomLeft: number;
    cornerRadiusTopLeft: number;
    cornerRadiusTopRight: number;
    ensureCornerRadius(): void;
    contentPaddingBottom: number;
    contentPaddingLeft: number;
    contentPaddingRight: number;
    contentPaddingTop: number;
    ensureContentPadding(): void;
    /**
     * Gets or sets the width to use for the underline element.
    */
    underlineWidth: number;
    /**
     * Gets or sets the width to use for the underline element.
    */
    underlineRippleWidth: number;
    /**
     * Gets or sets the width to use for the underline element when hovered.
    */
    hoverUnderlineWidth: number;
    /**
     * Gets or sets the color to use for the underline element.
    */
    underlineColor: string;
    /**
     * Gets or sets the color to use for the underline ripple element.
    */
    underlineRippleColor: string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    hoverUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    focusUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    underlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element.
    */
    hoverUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element.
    */
    focusUnderlineOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused.
    */
    focusUnderlineRippleOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element.
    */
    underlineRippleOpacity: number;
    /**
     * Gets or sets the background color to use for the input group.
    */
    backgroundColor: string;
    /**
     * Gets or sets the border width to use for the border of the item group when using type line.
    */
    lineTypeBorderWidth: number;
    /**
     * Gets or sets the border width to use for the border of the item group when focused when type is line.
    */
    lineTypeFocusBorderWidth: number;
    /**
     * Gets or sets the focus color to use the border of the input group when type is line.
    */
    lineTypeFocusBorderColor: string;
    /**
     * Gets or sets the color to use the border of the input group when type is line.
    */
    lineTypeBorderColor: string;
    lineTypeCornerRadiusBottomRight: number;
    lineTypeCornerRadiusBottomLeft: number;
    lineTypeCornerRadiusTopLeft: number;
    lineTypeCornerRadiusTopRight: number;
    ensureLineTypeCornerRadius(): void;
    lineTypeContentPaddingBottom: number;
    lineTypeContentPaddingLeft: number;
    lineTypeContentPaddingRight: number;
    lineTypeContentPaddingTop: number;
    ensureLineTypeContentPadding(): void;
    /**
     * Gets or sets the width to use for the underline element when type is line.
    */
    lineTypeUnderlineWidth: number;
    /**
     * Gets or sets the width to use for the underline element when type is line.
    */
    lineTypeUnderlineRippleWidth: number;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is line.
    */
    lineTypeHoverUnderlineWidth: number;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is line.
    */
    lineTypeUnderlineRippleColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeHoverUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeFocusUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeHoverUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeFocusUnderlineOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is line.
    */
    lineTypeFocusUnderlineRippleOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is line.
    */
    lineTypeUnderlineRippleOpacity: number;
    /**
     * Gets or sets the background color to use for the input group when type is line.
    */
    lineTypeBackgroundColor: string;
    /**
     * Gets or sets the border width to use for the border of the item group when using type line.
    */
    boxTypeBorderWidth: number;
    /**
     * Gets or sets the border width to use for the border of the item group when focused when type is box.
    */
    boxTypeFocusBorderWidth: number;
    /**
     * Gets or sets the focus color to use the border of the input group when type is box.
    */
    boxTypeFocusBorderColor: string;
    /**
     * Gets or sets the color to use the border of the input group when type is box.
    */
    boxTypeBorderColor: string;
    boxTypeCornerRadiusBottomRight: number;
    boxTypeCornerRadiusBottomLeft: number;
    boxTypeCornerRadiusTopLeft: number;
    boxTypeCornerRadiusTopRight: number;
    ensureBoxTypeCornerRadius(): void;
    boxTypeContentPaddingBottom: number;
    boxTypeContentPaddingLeft: number;
    boxTypeContentPaddingRight: number;
    boxTypeContentPaddingTop: number;
    ensureBoxTypeContentPadding(): void;
    /**
     * Gets or sets the width to use for the underline element when type is box.
    */
    boxTypeUnderlineWidth: number;
    /**
     * Gets or sets the width to use for the underline element when type is box.
    */
    boxTypeUnderlineRippleWidth: number;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is box.
    */
    boxTypeHoverUnderlineWidth: number;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is box.
    */
    boxTypeUnderlineRippleColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeHoverUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeFocusUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeHoverUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeFocusUnderlineOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is box.
    */
    boxTypeFocusUnderlineRippleOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is box.
    */
    boxTypeUnderlineRippleOpacity: number;
    /**
     * Gets or sets the background color to use for the input group when type is box.
    */
    boxTypeBackgroundColor: string;
    /**
     * Gets or sets the border width to use for the border of the item group when using type line.
    */
    borderTypeBorderWidth: number;
    /**
     * Gets or sets the border width to use for the border of the item group when focused when type is border.
    */
    borderTypeFocusBorderWidth: number;
    /**
     * Gets or sets the focus color to use the border of the input group when type is border.
    */
    borderTypeFocusBorderColor: string;
    /**
     * Gets or sets the color to use the border of the input group when type is border.
    */
    borderTypeBorderColor: string;
    borderTypeCornerRadiusBottomRight: number;
    borderTypeCornerRadiusBottomLeft: number;
    borderTypeCornerRadiusTopLeft: number;
    borderTypeCornerRadiusTopRight: number;
    ensureBorderTypeCornerRadius(): void;
    borderTypeContentPaddingBottom: number;
    borderTypeContentPaddingLeft: number;
    borderTypeContentPaddingRight: number;
    borderTypeContentPaddingTop: number;
    ensureBorderTypeContentPadding(): void;
    /**
     * Gets or sets the width to use for the underline element when type is border.
    */
    borderTypeUnderlineWidth: number;
    /**
     * Gets or sets the width to use for the underline element when type is border.
    */
    borderTypeUnderlineRippleWidth: number;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is border.
    */
    borderTypeHoverUnderlineWidth: number;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is border.
    */
    borderTypeUnderlineRippleColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeHoverUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeFocusUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeHoverUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeFocusUnderlineOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is border.
    */
    borderTypeFocusUnderlineRippleOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is border.
    */
    borderTypeUnderlineRippleOpacity: number;
    /**
     * Gets or sets the background color to use for the input group when type is border.
    */
    borderTypeBackgroundColor: string;
    /**
     * Gets or sets the search width to use for the border of the item group when using type line.
    */
    searchTypeBorderWidth: number;
    /**
     * Gets or sets the search width to use for the border of the item group when focused when type is search.
    */
    searchTypeFocusBorderWidth: number;
    /**
     * Gets or sets the focus color to use the search of the input group when type is search.
    */
    searchTypeFocusBorderColor: string;
    /**
     * Gets or sets the color to use the search of the input group when type is search.
    */
    searchTypeBorderColor: string;
    searchTypeCornerRadiusBottomRight: number;
    searchTypeCornerRadiusBottomLeft: number;
    searchTypeCornerRadiusTopLeft: number;
    searchTypeCornerRadiusTopRight: number;
    ensureSearchTypeCornerRadius(): void;
    searchTypeContentPaddingBottom: number;
    searchTypeContentPaddingLeft: number;
    searchTypeContentPaddingRight: number;
    searchTypeContentPaddingTop: number;
    ensureSearchTypeContentPadding(): void;
    /**
     * Gets or sets the width to use for the underline element when type is search.
    */
    searchTypeUnderlineWidth: number;
    /**
     * Gets or sets the width to use for the underline element when type is search.
    */
    searchTypeUnderlineRippleWidth: number;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is search.
    */
    searchTypeHoverUnderlineWidth: number;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is search.
    */
    searchTypeUnderlineRippleColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeHoverUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeFocusUnderlineColor: string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeHoverUnderlineOpacity: number;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeFocusUnderlineOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is search.
    */
    searchTypeFocusUnderlineRippleOpacity: number;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is search.
    */
    searchTypeUnderlineRippleOpacity: number;
    /**
     * Gets or sets the background color to use for the input group when type is search.
    */
    searchTypeBackgroundColor: string;
    /**
     * Gets or sets whether the input group is expanded or not.
    */
    isExpanded: boolean;
    /**
     * Gets or sets whether the input group is hovered or not.
    */
    isHovered: boolean;
    /**
     * Gets or sets whether the input group is hovered or not.
    */
    isFocused: boolean;
    /**
     * Gets or sets whether the input group is expanded or not.
    */
    actualIsExpanded: boolean;
    /**
     * Gets or sets the color to use the hovered background of the inputs in the group.
    */
    focusBorderColor: string;
    /**
     * Gets or sets the id to use for the checkbox.
    */
    id: string;
    /**
     * Gets or sets whether the checkbox is disabled.
    */
    disabled: boolean;
    findByName(name: string): any;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected readonly hasUserValues: Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    onDetachedFromUI(): void;
    onAttachedToUI(): void;
    /**
     * Exports visual information about the current state of the grid.
    
    */
    exportVisualModel(): any;
    /**
     * Returns a serialized copy of the exported visual model
    
    */
    exportSerializedVisualModel(): string;
}
export interface IIgrInputGroupProps {
    /**
 * Gets or sets the display style to use for the button.
*/
    displayType?: InputGroupDisplayType | string;
    /**
     * Gets or sets the display density to use for the input group.
    */
    density?: ControlDisplayDensity | string;
    /**
     * Gets the actual display density to use for the input group.
    */
    actualDensity?: ControlDisplayDensity | string;
    /**
     * Gets or sets the base built in theme to use for the label.
    */
    baseTheme?: BaseControlTheme | string;
    /**
     * Gets the actual item background color.
    */
    actualBorderColor?: string;
    /**
     * Gets the actual item border color.
    */
    actualFocusBorderColor?: string;
    /**
     * Gets the actual item border width.
    */
    actualBorderWidth?: number | string;
    /**
     * Gets the actual item border width.
    */
    actualFocusBorderWidth?: number | string;
    actualCornerRadiusBottomRight?: number | string;
    actualCornerRadiusBottomLeft?: number | string;
    actualCornerRadiusTopLeft?: number | string;
    actualCornerRadiusTopRight?: number | string;
    actualContentPaddingBottom?: number | string;
    actualContentPaddingLeft?: number | string;
    actualContentPaddingRight?: number | string;
    actualContentPaddingTop?: number | string;
    /**
     * Gets the actual width to use for the underline element.
    */
    actualUnderlineWidth?: number | string;
    /**
     * Gets the actual width to use for the underline element.
    */
    actualUnderlineRippleWidth?: number | string;
    /**
     * Gets the width to use for the underline element when hovered.
    */
    actualHoverUnderlineWidth?: number | string;
    /**
     * Gets the actual color to use for the underline element.
    */
    actualUnderlineColor?: string;
    /**
     * Gets the actual color to use for the underline ripple element.
    */
    actualUnderlineRippleColor?: string;
    /**
     * Gets the actual color to use for the underline element.
    */
    actualHoverUnderlineColor?: string;
    /**
     * Gets the actual color to use for the underline element when focused.
    */
    actualFocusUnderlineColor?: string;
    /**
     * Gets the actual opacity to use for the underline element.
    */
    actualUnderlineOpacity?: number | string;
    /**
     * Gets the actual opacity to use for the underline element when hovered.
    */
    actualHoverUnderlineOpacity?: number | string;
    /**
     * Gets the actual opacity to use for the underline element when focused.
    */
    actualFocusUnderlineOpacity?: number | string;
    /**
     * Gets the actual opacity to use for the underline ripple element when focused.
    */
    actualFocusUnderlineRippleOpacity?: number | string;
    /**
     * Gets the actual opacity to use for the underline ripple element.
    */
    actualUnderlineRippleOpacity?: number | string;
    /**
     * Gets the actual opacity to use for the underline ripple element.
    */
    actualBackgroundColor?: string;
    /**
     * Gets or sets the border width to use for the border of the item group.
    */
    borderWidth?: number | string;
    /**
     * Gets or sets the border width to use for the border of the item group when focused.
    */
    focusBorderWidth?: number | string;
    /**
     * Gets or sets the color to use the border of the input group.
    */
    borderColor?: string;
    cornerRadiusBottomRight?: number | string;
    cornerRadiusBottomLeft?: number | string;
    cornerRadiusTopLeft?: number | string;
    cornerRadiusTopRight?: number | string;
    contentPaddingBottom?: number | string;
    contentPaddingLeft?: number | string;
    contentPaddingRight?: number | string;
    contentPaddingTop?: number | string;
    /**
     * Gets or sets the width to use for the underline element.
    */
    underlineWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element.
    */
    underlineRippleWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when hovered.
    */
    hoverUnderlineWidth?: number | string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    underlineColor?: string;
    /**
     * Gets or sets the color to use for the underline ripple element.
    */
    underlineRippleColor?: string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    hoverUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    focusUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    underlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    hoverUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element.
    */
    focusUnderlineOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused.
    */
    focusUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element.
    */
    underlineRippleOpacity?: number | string;
    /**
     * Gets or sets the background color to use for the input group.
    */
    backgroundColor?: string;
    /**
     * Gets or sets the border width to use for the border of the item group when using type line.
    */
    lineTypeBorderWidth?: number | string;
    /**
     * Gets or sets the border width to use for the border of the item group when focused when type is line.
    */
    lineTypeFocusBorderWidth?: number | string;
    /**
     * Gets or sets the focus color to use the border of the input group when type is line.
    */
    lineTypeFocusBorderColor?: string;
    /**
     * Gets or sets the color to use the border of the input group when type is line.
    */
    lineTypeBorderColor?: string;
    lineTypeCornerRadiusBottomRight?: number | string;
    lineTypeCornerRadiusBottomLeft?: number | string;
    lineTypeCornerRadiusTopLeft?: number | string;
    lineTypeCornerRadiusTopRight?: number | string;
    lineTypeContentPaddingBottom?: number | string;
    lineTypeContentPaddingLeft?: number | string;
    lineTypeContentPaddingRight?: number | string;
    lineTypeContentPaddingTop?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is line.
    */
    lineTypeUnderlineWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is line.
    */
    lineTypeUnderlineRippleWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is line.
    */
    lineTypeHoverUnderlineWidth?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is line.
    */
    lineTypeUnderlineRippleColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeHoverUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeFocusUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeHoverUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is line.
    */
    lineTypeFocusUnderlineOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is line.
    */
    lineTypeFocusUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is line.
    */
    lineTypeUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the background color to use for the input group when type is line.
    */
    lineTypeBackgroundColor?: string;
    /**
     * Gets or sets the border width to use for the border of the item group when using type line.
    */
    boxTypeBorderWidth?: number | string;
    /**
     * Gets or sets the border width to use for the border of the item group when focused when type is box.
    */
    boxTypeFocusBorderWidth?: number | string;
    /**
     * Gets or sets the focus color to use the border of the input group when type is box.
    */
    boxTypeFocusBorderColor?: string;
    /**
     * Gets or sets the color to use the border of the input group when type is box.
    */
    boxTypeBorderColor?: string;
    boxTypeCornerRadiusBottomRight?: number | string;
    boxTypeCornerRadiusBottomLeft?: number | string;
    boxTypeCornerRadiusTopLeft?: number | string;
    boxTypeCornerRadiusTopRight?: number | string;
    boxTypeContentPaddingBottom?: number | string;
    boxTypeContentPaddingLeft?: number | string;
    boxTypeContentPaddingRight?: number | string;
    boxTypeContentPaddingTop?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is box.
    */
    boxTypeUnderlineWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is box.
    */
    boxTypeUnderlineRippleWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is box.
    */
    boxTypeHoverUnderlineWidth?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is box.
    */
    boxTypeUnderlineRippleColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeHoverUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeFocusUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeHoverUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is box.
    */
    boxTypeFocusUnderlineOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is box.
    */
    boxTypeFocusUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is box.
    */
    boxTypeUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the background color to use for the input group when type is box.
    */
    boxTypeBackgroundColor?: string;
    /**
     * Gets or sets the border width to use for the border of the item group when using type line.
    */
    borderTypeBorderWidth?: number | string;
    /**
     * Gets or sets the border width to use for the border of the item group when focused when type is border.
    */
    borderTypeFocusBorderWidth?: number | string;
    /**
     * Gets or sets the focus color to use the border of the input group when type is border.
    */
    borderTypeFocusBorderColor?: string;
    /**
     * Gets or sets the color to use the border of the input group when type is border.
    */
    borderTypeBorderColor?: string;
    borderTypeCornerRadiusBottomRight?: number | string;
    borderTypeCornerRadiusBottomLeft?: number | string;
    borderTypeCornerRadiusTopLeft?: number | string;
    borderTypeCornerRadiusTopRight?: number | string;
    borderTypeContentPaddingBottom?: number | string;
    borderTypeContentPaddingLeft?: number | string;
    borderTypeContentPaddingRight?: number | string;
    borderTypeContentPaddingTop?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is border.
    */
    borderTypeUnderlineWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is border.
    */
    borderTypeUnderlineRippleWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is border.
    */
    borderTypeHoverUnderlineWidth?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is border.
    */
    borderTypeUnderlineRippleColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeHoverUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeFocusUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeHoverUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is border.
    */
    borderTypeFocusUnderlineOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is border.
    */
    borderTypeFocusUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is border.
    */
    borderTypeUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the background color to use for the input group when type is border.
    */
    borderTypeBackgroundColor?: string;
    /**
     * Gets or sets the search width to use for the border of the item group when using type line.
    */
    searchTypeBorderWidth?: number | string;
    /**
     * Gets or sets the search width to use for the border of the item group when focused when type is search.
    */
    searchTypeFocusBorderWidth?: number | string;
    /**
     * Gets or sets the focus color to use the search of the input group when type is search.
    */
    searchTypeFocusBorderColor?: string;
    /**
     * Gets or sets the color to use the search of the input group when type is search.
    */
    searchTypeBorderColor?: string;
    searchTypeCornerRadiusBottomRight?: number | string;
    searchTypeCornerRadiusBottomLeft?: number | string;
    searchTypeCornerRadiusTopLeft?: number | string;
    searchTypeCornerRadiusTopRight?: number | string;
    searchTypeContentPaddingBottom?: number | string;
    searchTypeContentPaddingLeft?: number | string;
    searchTypeContentPaddingRight?: number | string;
    searchTypeContentPaddingTop?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is search.
    */
    searchTypeUnderlineWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when type is search.
    */
    searchTypeUnderlineRippleWidth?: number | string;
    /**
     * Gets or sets the width to use for the underline element when hovered when type is search.
    */
    searchTypeHoverUnderlineWidth?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline ripple element when type is search.
    */
    searchTypeUnderlineRippleColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeHoverUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeFocusUnderlineColor?: string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeHoverUnderlineOpacity?: number | string;
    /**
     * Gets or sets the color to use for the underline element when type is search.
    */
    searchTypeFocusUnderlineOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when focused when type is search.
    */
    searchTypeFocusUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the opacity to use for the underline ripple element when type is search.
    */
    searchTypeUnderlineRippleOpacity?: number | string;
    /**
     * Gets or sets the background color to use for the input group when type is search.
    */
    searchTypeBackgroundColor?: string;
    /**
     * Gets or sets whether the input group is expanded or not.
    */
    isExpanded?: boolean | string;
    /**
     * Gets or sets whether the input group is hovered or not.
    */
    isHovered?: boolean | string;
    /**
     * Gets or sets whether the input group is hovered or not.
    */
    isFocused?: boolean | string;
    /**
     * Gets or sets whether the input group is expanded or not.
    */
    actualIsExpanded?: boolean | string;
    /**
     * Gets or sets the color to use the hovered background of the inputs in the group.
    */
    focusBorderColor?: string;
    /**
     * Gets or sets the id to use for the checkbox.
    */
    id?: string;
    /**
     * Gets or sets whether the checkbox is disabled.
    */
    disabled?: boolean | string;
}
