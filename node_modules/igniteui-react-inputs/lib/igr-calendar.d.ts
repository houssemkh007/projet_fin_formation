import * as React from 'react';
import { Calendar } from './Calendar';
import { IgrValueChangedEventArgs } from "./igr-value-changed-event-args";
import { ControlDisplayDensity } from "igniteui-react-core";
import { BaseControlTheme } from "igniteui-react-core";
export declare class IgrCalendar extends React.Component<IIgrCalendarProps> {
    private _container;
    private _height;
    private _width;
    private _initialized;
    private _elRef;
    private _renderer;
    height: string;
    width: string;
    private _getMainRef;
    render(): React.DetailedReactHTMLElement<{
        className: string;
        ref: (ref: any) => void;
        children: any[];
    }, any>;
    constructor(props: IIgrCalendarProps);
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    protected initializeProperties(): void;
    updateStyle(): void;
    componentWillUnmount(): void;
    private _implementation;
    componentDidMount(): void;
    initializeContent(): void;
    protected createImplementation(): Calendar;
    readonly i: Calendar;
    private _calendar;
    /**
 * Gets or Sets the value for the calendar.
*/
    value: Date;
    /**
     * Gets or sets the display density to use for the calendar.
    */
    density: ControlDisplayDensity;
    /**
     * Gets or sets the base built in theme to use for the calendar.
    */
    baseTheme: BaseControlTheme;
    /**
     * Gets or Sets the selected date background color
    */
    backgroundColor: string;
    /**
     * Gets or Sets the selected date background color
    */
    selectedDateBackgroundColor: string;
    /**
     * Gets or Sets the selected date background color
    */
    selectedFocusDateBackgroundColor: string;
    /**
     * Gets or Sets the focus date background color
    */
    focusDateBackgroundColor: string;
    /**
     * Gets or Sets the focus date background color
    */
    hoverBackgroundColor: string;
    /**
     * Gets or Sets the selected date text color
    */
    textColor: string;
    /**
     * Gets or Sets the selected date text color
    */
    selectedDateTextColor: string;
    /**
     * Gets or Sets the focus date text color
    */
    focusDateTextColor: string;
    /**
     * Gets or Sets the current date text color
    */
    currentDateTextColor: string;
    /**
     * Gets or sets the font to use for the combobox.
    */
    textStyle: string;
    protected __p: string;
    protected _hasUserValues: Set<string>;
    protected readonly hasUserValues: Set<string>;
    protected __m(propertyName: string): void;
    protected _stylingContainer: any;
    protected _stylingParent: any;
    protected _inStyling: boolean;
    protected _styling(container: any, component: any, parent?: any): void;
    /**
 * Exports visual information about the current state of the grid.

*/
    exportVisualModel(): any;
    /**
     * Returns a serialized copy of the exported visual model
    
    */
    exportSerializedVisualModel(): string;
    private _valueChanged;
    private _valueChanged_wrapped;
    /**
     * Called when date is selected.
    */
    valueChanged: (s: IgrCalendar, e: IgrValueChangedEventArgs) => void;
}
export interface IIgrCalendarProps {
    width?: string;
    height?: string;
    /**
 * Gets or Sets the value for the calendar.
*/
    value?: Date;
    /**
     * Gets or sets the display density to use for the calendar.
    */
    density?: ControlDisplayDensity | string;
    /**
     * Gets or sets the base built in theme to use for the calendar.
    */
    baseTheme?: BaseControlTheme | string;
    /**
     * Gets or Sets the selected date background color
    */
    backgroundColor?: string;
    /**
     * Gets or Sets the selected date background color
    */
    selectedDateBackgroundColor?: string;
    /**
     * Gets or Sets the selected date background color
    */
    selectedFocusDateBackgroundColor?: string;
    /**
     * Gets or Sets the focus date background color
    */
    focusDateBackgroundColor?: string;
    /**
     * Gets or Sets the focus date background color
    */
    hoverBackgroundColor?: string;
    /**
     * Gets or Sets the selected date text color
    */
    textColor?: string;
    /**
     * Gets or Sets the selected date text color
    */
    selectedDateTextColor?: string;
    /**
     * Gets or Sets the focus date text color
    */
    focusDateTextColor?: string;
    /**
     * Gets or Sets the current date text color
    */
    currentDateTextColor?: string;
    /**
     * Gets or sets the font to use for the combobox.
    */
    textStyle?: string;
    /**
 * Called when date is selected.
*/
    valueChanged?: (s: IgrCalendar, e: IgrValueChangedEventArgs) => void;
}
