import * as React from 'react';
import { Suffix } from "./Suffix";
import { IgrInputGroupItem, IIgrInputGroupItemProps } from './igr-input-group-item';
export declare class IgrSuffix extends IgrInputGroupItem<IIgrSuffixProps> {
    private _container;
    private _initialized;
    private _elRef;
    private _portalManager;
    private _wrapper;
    private _getMainRef;
    render(): React.DetailedReactHTMLElement<{
        className: string;
        ref: (ref: any) => void;
        children: any[];
    }, any>;
    private requestRender;
    constructor(props: IIgrSuffixProps);
    shouldComponentUpdate(nextProps: any, nextState: any): boolean;
    protected initializeProperties(): void;
    updateStyle(): void;
    componentWillUnmount(): void;
    componentDidMount(): void;
    initializeContent(): void;
    protected createImplementation(): Suffix;
    private _suffix;
    /**
                             * @hidden
                             */
    readonly i: Suffix;
    /**
 * Gets or sets the id to use for the checkbox.
*/
    id: string;
    /**
     * Gets or sets the value of the aria-label attribute.
    */
    ariaLabel: string;
    /**
     * Gets or sets whether the suffix is hovered.
    */
    isHover: boolean;
    /**
     * Gets or sets whether the checkbox is disabled.
    */
    disabled: boolean;
    onDetachedFromUI(): void;
    onAttachedToUI(): void;
    /**
     * Exports visual information about the current state of the grid.
    
    */
    exportVisualModel(): any;
    /**
     * Returns a serialized copy of the exported visual model
    
    */
    exportSerializedVisualModel(): string;
}
export interface IIgrSuffixProps extends IIgrInputGroupItemProps {
    /**
 * Gets or sets the id to use for the checkbox.
*/
    id?: string;
    /**
     * Gets or sets the value of the aria-label attribute.
    */
    ariaLabel?: string;
    /**
     * Gets or sets whether the suffix is hovered.
    */
    isHover?: boolean | string;
    /**
     * Gets or sets whether the checkbox is disabled.
    */
    disabled?: boolean | string;
}
