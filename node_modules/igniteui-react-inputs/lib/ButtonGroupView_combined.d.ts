import { Base, Type, INotifyPropertyChanged, PropertyChangedEventArgs } from "igniteui-react-core";
import { DomRenderer } from "igniteui-react-core";
import { Path } from "igniteui-react-core";
import { FontInfo } from "igniteui-react-core";
import { Button } from "./Button";
import { ButtonGroupOrientation } from "./ButtonGroupOrientation";
import { ButtonGroupDisplayStyle } from "./ButtonGroupDisplayStyle";
import { BaseControlTheme } from "igniteui-react-core";
import { ControlDisplayDensity } from "igniteui-react-core";
import { Brush } from "igniteui-react-core";
import { ButtonGroupButtonCollection } from "./ButtonGroupButtonCollection";
import { ButtonGroupSelectionChangedEventArgs } from "./ButtonGroupSelectionChangedEventArgs";
import { ButtonGroupVisualModelExport } from "./ButtonGroupVisualModelExport";
/**
 * @hidden
 */
export declare class ButtonGroupView extends Base {
    static $t: Type;
    constructor();
    a: ButtonGroup;
    s(): void;
    d(): boolean;
    private g;
    private b;
    private f;
    readonly l: any;
    readonly y: Path;
    readonly e: boolean;
    q(a: DomRenderer): void;
    private m;
    w(a: string): void;
    v(): void;
    private n;
    t(): void;
    private c;
    private h;
    private i;
    private j;
    private k;
    p(): void;
    r(): void;
    x(a: FontInfo): void;
    u(a: Button): void;
    o(a: any): void;
}
/**
 * @hidden
 */
export declare class ButtonGroup extends Base implements INotifyPropertyChanged {
    static $t: Type;
    constructor();
    private o;
    p: ButtonGroupDisplayStyle;
    private e;
    g: BaseControlTheme;
    private c4;
    appendContentChild(a: any): void;
    private c3;
    private c6;
    private i;
    k: ControlDisplayDensity;
    private h;
    j: ControlDisplayDensity;
    private a;
    d: number[];
    private u;
    private de;
    private c;
    private b;
    private _view;
    view: ButtonGroupView;
    destroy(): void;
    protected da(a: string, b: any, c: any): void;
    protected dc(a: string, b: any, c: any): void;
    private dl;
    private dg;
    private df;
    private aa;
    private dk;
    private dj;
    private di;
    private static f;
    private ax;
    private gz;
    private g1;
    private g0;
    private g2;
    private aw;
    private g6;
    private g3;
    private g7;
    private ha;
    private g4;
    private g5;
    private g8;
    private g9;
    private static av;
    private static gn;
    private static gp;
    private static go;
    private static gq;
    private static au;
    private static gu;
    private static gr;
    private static gv;
    private static gy;
    private static gs;
    private static gt;
    private static gw;
    private static gx;
    private static ap;
    private static fn;
    private static fp;
    private static fo;
    private static fq;
    private static ao;
    private static fu;
    private static fr;
    private static fv;
    private static fy;
    private static fs;
    private static ft;
    private static fw;
    private static fx;
    private ar;
    private fz;
    private f1;
    private f0;
    private f2;
    private aq;
    private f6;
    private f3;
    private f7;
    private ga;
    private f4;
    private f5;
    private f8;
    private f9;
    private static at;
    private static gb;
    private static gd;
    private static gc;
    private static ge;
    private static as;
    private static gi;
    private static gf;
    private static gj;
    private static gm;
    private static gg;
    private static gh;
    private static gk;
    private static gl;
    private static an;
    private static fb;
    private static fd;
    private static fc;
    private static fe;
    private static am;
    private static fi;
    private static ff;
    private static fj;
    private static fm;
    private static fg;
    private static fh;
    private static fk;
    private static fl;
    private dh;
    private ad;
    al: number;
    private dm;
    ez: Brush;
    private dp;
    e1: Brush;
    private du;
    e6: Brush;
    private dr;
    e3: Brush;
    private dn;
    e0: Brush;
    private dq;
    e2: Brush;
    private ac;
    ak: number;
    private dv;
    e7: Brush;
    private dy;
    fa: Brush;
    private ds;
    e4: Brush;
    private dt;
    e5: Brush;
    private dw;
    e8: Brush;
    private dx;
    e9: Brush;
    private ah;
    a1: number;
    private d7;
    hn: Brush;
    private d9;
    hp: Brush;
    private ee;
    hu: Brush;
    private eb;
    hr: Brush;
    private ec;
    hs: Brush;
    private d8;
    ho: Brush;
    private ea;
    hq: Brush;
    private ag;
    a0: number;
    private ed;
    ht: Brush;
    private ev;
    h7: Brush;
    private ey;
    ia: Brush;
    private ew;
    h8: Brush;
    private ex;
    h9: Brush;
    private aj;
    a3: number;
    private ef;
    hv: Brush;
    private eh;
    hx: Brush;
    private em;
    h2: Brush;
    private ej;
    hz: Brush;
    private ek;
    h0: Brush;
    private eg;
    hw: Brush;
    private ei;
    hy: Brush;
    private ai;
    a2: number;
    private el;
    h1: Brush;
    private er;
    h3: Brush;
    private eu;
    h6: Brush;
    static readonly cv: string;
    private es;
    h4: Brush;
    private et;
    h5: Brush;
    private af;
    az: number;
    private dz;
    hb: Brush;
    private d1;
    hd: Brush;
    private d6;
    hi: Brush;
    private d3;
    hf: Brush;
    private d4;
    hg: Brush;
    private d0;
    hc: Brush;
    private d2;
    he: Brush;
    private ae;
    ay: number;
    private d5;
    hh: Brush;
    private en;
    hj: Brush;
    private eq;
    hm: Brush;
    private eo;
    hk: Brush;
    private ep;
    hl: Brush;
    private q;
    r: ButtonGroupOrientation;
    private static a4;
    private a6;
    b5: string;
    private w;
    private v;
    disabled: boolean;
    private x;
    z: boolean;
    db(): void;
    propertyChanged: (sender: any, e: PropertyChangedEventArgs) => void;
    onDetachedFromUI(): void;
    onAttachedToUI(): void;
    protected ab(): boolean;
    a5(): any;
    bq(): string;
    l(): ButtonGroupVisualModelExport;
    provideContainer(a: DomRenderer): void;
    private m;
    readonly buttons: ButtonGroupButtonCollection;
    selectionChanged: (sender: any, args: ButtonGroupSelectionChangedEventArgs) => void;
}
