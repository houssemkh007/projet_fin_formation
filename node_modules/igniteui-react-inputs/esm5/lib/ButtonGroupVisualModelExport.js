/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, enumGetBox, markType } from "igniteui-react-core";
import { BaseControlTheme_$type } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
var ButtonGroupVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ButtonGroupVisualModelExport, _super);
    function ButtonGroupVisualModelExport() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.e = 0;
        _this.f = 0;
        _this.a = null;
        _this.k = 0;
        _this.b = null;
        _this.d = null;
        _this.c = null;
        _this.j = 0;
        _this.g = false;
        _this.h = false;
        _this.i = null;
        return _this;
    }
    ButtonGroupVisualModelExport.prototype.l = function () {
        var a = new StringBuilder(0);
        a.l("{");
        a.l("baseTheme : " + enumGetBox(BaseControlTheme_$type, this.e) + ", ");
        a.l("actualDensity : " + enumGetBox(ControlDisplayDensity_$type, this.f) + ", ");
        a.l("selectedIndices : " + this.a + ", ");
        a.l("actualItemBackgroundColor : " + this.b.serialize() + ", ");
        a.l("actualItemTextColor : " + this.d.serialize() + ", ");
        a.l("actualItemBorderColor : " + this.c.serialize() + ", ");
        a.l("actualItemBorderWidth : " + this.j + ", ");
        a.l("isDisabled : " + this.g + ", ");
        a.l("isMultiSelect : " + this.h + ", ");
        a.l("buttonModels: [");
        for (var b = 0; b < this.i.count; b++) {
            if (b != 0) {
                a.l(",");
            }
            a.l(this.i._inner[b].ab());
        }
        a.l("]");
        a.l("}");
        return a.toString();
    };
    ButtonGroupVisualModelExport.$t = markType(ButtonGroupVisualModelExport, 'ButtonGroupVisualModelExport');
    return ButtonGroupVisualModelExport;
}(Base));
export { ButtonGroupVisualModelExport };
//# sourceMappingURL=ButtonGroupVisualModelExport.js.map
