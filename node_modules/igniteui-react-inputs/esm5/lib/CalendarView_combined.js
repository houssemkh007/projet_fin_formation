/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, runOn, markType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, toNullable, Date_$type, enumGetBox } from "igniteui-react-core";
import { DomWrapper_$type } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { BaseControlTheme_$type } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { ObservableCollection$1 } from "igniteui-react-core";
import { DayInfo } from "./DayInfo";
import { Button } from "./Button";
import { ValueChangedEventArgs } from "./ValueChangedEventArgs";
import { CornerRadius } from "igniteui-react-core";
import { Icon } from "./Icon";
import { CalendarVisualModelExport } from "./CalendarVisualModelExport";
import { AppearanceHelper } from "igniteui-react-core";
import { ButtonVisualModelExport } from "./ButtonVisualModelExport";
import { FontUtil } from "igniteui-react-core";
import { nullableNotEquals, unwrapNullable } from "igniteui-react-core";
import { dateNow, dateAddYears, dateFromValues, dateAddDays, dateGetMonth, dateAddMonths } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var CalendarView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CalendarView, _super);
    function CalendarView() {
        var _this = _super.call(this) || this;
        _this.g = null;
        _this.i = null;
        _this.j = null;
        _this.c = new List$1(DomWrapper_$type, 0);
        _this.b = new List$1(DomWrapper_$type, 0);
        _this.d = new List$1(DomWrapper_$type, 0);
        _this.e = new List$1(DomWrapper_$type, 0);
        _this.h = null;
        _this.l = null;
        _this.a = null;
        _this.f = null;
        _this.l = "day";
        _this.h = null;
        return _this;
    }
    CalendarView.prototype.y = function () {
    };
    CalendarView.prototype.x = function (a) {
        if (a == null) {
            this.f = null;
            return;
        }
        this.f = a;
        this.f.rootWrapper.setStyleProperty("background-color", "rgb(255, 255, 255)");
        var b = Math.round(a.rootWrapper.width());
        var c = Math.round(a.rootWrapper.height());
        this.p();
        this.ai();
        this.aj();
        this.ah();
        var d = this.f.rootWrapper;
        d.listen("keydown", runOn(this, this.o));
        d.listen("focus", runOn(this, this.n));
    };
    CalendarView.prototype.m = function () {
        return this.l;
    };
    CalendarView.prototype.p = function () {
        if (this.f != null) {
            this.g = this.f.createElement("div");
            this.g.setStyleProperty("height", "100%");
            this.f.append(this.g);
            for (var a = 0; a < 42; a++) {
                var b = this.f.createElement("div");
                this.b.add(b);
            }
            this.a.at(this.f, this.g, this.b);
            this.i = this.f.createElement("div");
            this.i.setStyleProperty("height", "100%");
            this.f.append(this.i);
            for (var c = 0; c < 12; c++) {
                var d = this.f.createElement("div");
                this.d.add(d);
            }
            this.a.av(this.f, this.i, this.d);
            for (var e = 0; e < 12; e++) {
                var f = this.i.getChildAt(e);
                f.listen("click", runOn(this, this.s));
            }
            this.i.hide();
            this.j = this.f.createElement("div");
            this.j.setStyleProperty("height", "100%");
            this.f.append(this.j);
            for (var g = 0; g < 7; g++) {
                var h = this.f.createElement("div");
                this.e.add(h);
            }
            this.a.aw(this.f, this.j, this.e);
            for (var i = 0; i < 7; i++) {
                var j = this.j.getChildAt(i);
                j.listen("click", runOn(this, this.an));
            }
            this.j.listen("wheel", runOn(this, this.ao));
            this.j.hide();
        }
    };
    CalendarView.prototype.ai = function () {
        if (this.f != null) {
            var a = this.g.getChildAt(0);
            for (var b = 0; b < 4; b++) {
                var c = this.f.createElement("div");
                this.c.add(c);
            }
            this.a.be(this.f, a, this.c);
            var d = a.getChildAt(0);
            var e = a.getChildAt(3);
            d.listen("click", runOn(this, this.z));
            e.listen("click", runOn(this, this.u));
            var f = a.getChildAt(1);
            var g = a.getChildAt(2);
            f.listen("click", runOn(this, this.t));
            g.listen("click", runOn(this, this.ap));
        }
    };
    CalendarView.prototype.aj = function () {
        if (this.f != null) {
            var a = this.g.getChildAt(1);
            this.a.bg(a);
        }
    };
    CalendarView.prototype.ah = function () {
        if (this.f != null) {
            this.a.bd(this.b);
            for (var a = 2; a < 8; a++) {
                var b = this.g.getChildAt(a);
                for (var c = 0; c < 7; c++) {
                    var d = b.getChildAt(c);
                    d.listen("click", runOn(this, this.q));
                }
            }
        }
    };
    CalendarView.prototype.ag = function () {
        if (this.f != null) {
            this.a.bb(this.c._inner[1]);
            this.a.bj(this.c._inner[2]);
        }
    };
    CalendarView.prototype.ac = function (a) {
        if (a === void 0) {
            a = false;
        }
        if (this.f != null) {
            this.a.bd(this.b, a);
        }
    };
    CalendarView.prototype.af = function () {
        if (this.d.count != 0) {
            this.a.bf(this.d);
        }
    };
    CalendarView.prototype.ak = function () {
        if (this.e.count != 0) {
            this.a.bi(this.e);
        }
    };
    CalendarView.prototype.ab = function () {
        this.ac();
        this.ag();
        this.l = "day";
        this.g.show();
        this.i.hide();
        this.j.hide();
        this.r();
    };
    CalendarView.prototype.ad = function () {
        this.ae(this.c._inner[0]);
    };
    CalendarView.prototype.ae = function (a) {
        this.h = a;
    };
    CalendarView.prototype.r = function () {
        if (this.h != null) {
            this.h.parent().parent().focus(false);
        }
    };
    CalendarView.prototype.aa = function (a) {
        if (a === void 0) {
            a = true;
        }
        this.a.ap(-1);
        this.ac(a);
        this.ag();
    };
    CalendarView.prototype.v = function (a) {
        if (a === void 0) {
            a = true;
        }
        this.a.ap(1);
        this.ac(a);
        this.ag();
    };
    CalendarView.prototype.al = function () {
        this.g.hide();
        this.i.show();
        this.i.setStyleProperty("display", "flex");
        this.j.hide();
        this.l = "month";
        this.af();
        this.r();
    };
    CalendarView.prototype.am = function () {
        this.g.hide();
        this.i.hide();
        this.j.show();
        this.l = "year";
        this.ak();
        this.r();
    };
    CalendarView.prototype.n = function (a) {
    };
    CalendarView.prototype.o = function (a) {
        var b = a.which;
        if (this.l == "day") {
            var c = this.h.getAttribute("data-section").toString();
            var d = parseInt(this.h.getAttribute("data-index").toString());
            if (c == "header") {
                if (b == 37) {
                    if (d > 0) {
                        var e = this.c._inner[d - 1];
                        this.ae(e);
                        this.r();
                    }
                    else {
                        this.aa(false);
                    }
                }
                else if (b == 39) {
                    if (d < 3) {
                        var f = this.c._inner[d + 1];
                        this.ae(f);
                        this.r();
                    }
                    else {
                        this.v(false);
                    }
                }
                else if (b == 9) {
                    if (a.shiftKey) {
                        this.a.a2();
                    }
                    else {
                        a.preventDefault();
                        this.ac(true);
                        this.r();
                    }
                }
                else if (b == 13) {
                    a.preventDefault();
                    if (d == 0) {
                        this.aa(false);
                    }
                    else if (d == 1) {
                        this.al();
                    }
                    else if (d == 2) {
                        this.am();
                    }
                    else if (d == 3) {
                        this.v(false);
                    }
                }
            }
            else if (c == "days") {
                var g = this.h.getAttribute("data-day").toString();
                var h = this.h.getAttribute("data-month").toString();
                if (b == 37) {
                    if (d == 0) {
                        this.aa();
                        this.r();
                    }
                    else {
                        var i = this.b._inner[d - 1];
                        var j = i.getAttribute("data-day").toString();
                        var k = i.getAttribute("data-month").toString();
                        if (h == k) {
                            this.ae(i);
                            this.r();
                        }
                        else {
                            this.aa();
                            var l = this.k(j, k);
                            this.ae(l);
                            this.r();
                        }
                    }
                }
                else if (b == 39) {
                    if (d == 41) {
                        this.v();
                        this.r();
                    }
                    else {
                        var m = this.b._inner[d + 1];
                        var n = m.getAttribute("data-day").toString();
                        var o = m.getAttribute("data-month").toString();
                        if (h == o) {
                            this.ae(m);
                            this.r();
                        }
                        else {
                            this.v();
                            var p = this.k(n, o);
                            this.ae(p);
                            this.r();
                        }
                    }
                }
                else if (b == 40) {
                    if (d >= 35) {
                        this.v();
                        var q = this.k(g, h);
                        var r = parseInt(q.getAttribute("data-index").toString());
                        var s = this.b._inner[r + 7];
                        var t = s.getAttribute("data-day").toString();
                        var u = s.getAttribute("data-month").toString();
                        var v = this.k(t, u);
                        this.ae(v);
                        this.r();
                    }
                    else {
                        var w = this.b._inner[d + 7];
                        var x = w.getAttribute("data-day").toString();
                        var y = w.getAttribute("data-month").toString();
                        if (h == y) {
                            this.ae(w);
                            this.r();
                        }
                        else {
                            this.v();
                            var z = this.k(x, y);
                            this.ae(z);
                            this.r();
                        }
                    }
                }
                else if (b == 38) {
                    if (d <= 6) {
                        this.aa();
                        var aa = this.k(g, h);
                        var ab = parseInt(aa.getAttribute("data-index").toString());
                        var ac = this.b._inner[ab - 7];
                        var ad = ac.getAttribute("data-day").toString();
                        var ae = ac.getAttribute("data-month").toString();
                        var af = this.k(ad, ae);
                        this.ae(af);
                        this.r();
                    }
                    else {
                        var ag = this.b._inner[d - 7];
                        var ah = ag.getAttribute("data-day").toString();
                        var ai = ag.getAttribute("data-month").toString();
                        if (h == ai) {
                            this.ae(ag);
                            this.r();
                        }
                        else {
                            this.aa();
                            var aj = this.k(ah, ai);
                            this.ae(aj);
                            this.r();
                        }
                    }
                }
                else if (b == 34) {
                    this.v();
                    this.r();
                }
                else if (b == 33) {
                    this.aa();
                    this.r();
                }
                else if (b == 9) {
                    if (a.shiftKey) {
                        a.preventDefault();
                        var ak = this.c._inner[1];
                        this.ae(ak);
                        this.r();
                    }
                    else {
                        this.a.a2();
                    }
                }
            }
        }
        else if (this.l == "month") {
            var al = parseInt(this.h.getAttribute("data-index").toString());
            if (b == 37) {
                if (al == 0) {
                    var am = this.d._inner[11];
                    this.ae(am);
                    this.r();
                }
                else {
                    var an = this.d._inner[al - 1];
                    this.ae(an);
                    this.r();
                }
            }
            else if (b == 39) {
                if (al == 11) {
                    var ao = this.d._inner[0];
                    this.ae(ao);
                    this.r();
                }
                else {
                    var ap = this.d._inner[al + 1];
                    this.ae(ap);
                    this.r();
                }
            }
            else if (b == 40) {
                if (al >= 9) {
                    var aq = this.d._inner[al - 9];
                    this.ae(aq);
                    this.r();
                }
                else {
                    var ar = this.d._inner[al + 3];
                    this.ae(ar);
                    this.r();
                }
            }
            else if (b == 38) {
                if (al <= 2) {
                    var as = this.d._inner[al + 9];
                    this.ae(as);
                    this.r();
                }
                else {
                    var at = this.d._inner[al - 3];
                    this.ae(at);
                    this.r();
                }
            }
            else if (b == 13) {
                this.ae(this.c._inner[1]);
                this.r();
            }
        }
        else if (this.l == "year") {
            var au = parseInt(this.h.getAttribute("data-index").toString());
            if (b == 40) {
                this.a.a9(this.e, 1);
            }
            else if (b == 38) {
                this.a.a9(this.e, -1);
            }
            else if (b == 13) {
                this.ae(this.c._inner[2]);
                this.r();
            }
        }
        if (b == 27) {
            this.ab();
            this.a.a2();
        }
    };
    CalendarView.prototype.k = function (a, b) {
        var c = null;
        for (var d = 0; d < 42; d++) {
            var e = this.b._inner[d];
            var f = e.getAttribute("data-day").toString();
            var g = e.getAttribute("data-month").toString();
            if (b == g && a == f) {
                c = e;
                break;
            }
        }
        return c;
    };
    CalendarView.prototype.z = function (a) {
        this.aa();
    };
    CalendarView.prototype.u = function (a) {
        this.v();
    };
    CalendarView.prototype.t = function (a) {
        this.al();
    };
    CalendarView.prototype.ap = function (a) {
        this.am();
    };
    CalendarView.prototype.q = function (e_) {
        var a = (e_.originalEvent.currentTarget);
        var b = a.innerText;
        var c = a.lastChild.lastChild.lastChild;
        var d = c.getAttribute("data-month").toString();
        var e = c.getAttribute("data-year").toString();
        if (b != "") {
            this.a.ay(b, d, e);
        }
    };
    CalendarView.prototype.s = function (e_) {
        var a = (e_.originalEvent.currentTarget);
        var b = a.getAttribute("data-month").toString();
        if (b != "") {
            this.a.aq(parseInt(b));
            this.ab();
        }
    };
    CalendarView.prototype.an = function (e_) {
        var a = (e_.originalEvent.currentTarget);
        var b = a.innerText;
        if (b != "") {
            this.a.ar(parseInt(b));
            this.ab();
        }
    };
    CalendarView.prototype.ao = function (e_) {
        var a = (e_.originalEvent.deltaY);
        this.a.a9(this.e, a);
    };
    CalendarView.prototype.w = function () {
    };
    CalendarView.$t = markType(CalendarView, 'CalendarView');
    return CalendarView;
}(Base));
export { CalendarView };
/**
 * @hidden
 */
var Calendar = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(Calendar, _super);
    function Calendar() {
        var _this = _super.call(this) || this;
        _this.h = null;
        _this.s = dateNow();
        _this.t = dateNow();
        _this.r = new Date();
        _this.n = null;
        _this.o = null;
        _this.m = null;
        _this.p = null;
        _this.q = null;
        _this.propertyChanged = null;
        _this.close = null;
        _this.valueChanged = null;
        _this.w = toNullable(Date_$type, null);
        _this.c = 3;
        _this.a = 1;
        _this.bm = BrushUtil.g(0, 255, 255, 255);
        _this.br = BrushUtil.g(255, 33, 150, 243);
        _this.bt = BrushUtil.g(255, 21, 112, 184);
        _this.bo = BrushUtil.g(76, 33, 150, 243);
        _this.bq = BrushUtil.g(50, 186, 191, 199);
        _this.bu = BrushUtil.g(255, 24, 29, 31);
        _this.bs = BrushUtil.g(255, 255, 255, 255);
        _this.bp = BrushUtil.g(255, 24, 29, 31);
        _this.bn = BrushUtil.g(255, 33, 150, 243);
        _this.k = null;
        _this.r = dateAddYears(_this.r, -200);
        _this.n = new ObservableCollection$1(DayInfo.$, 0);
        _this.o = new ObservableCollection$1(Button.$, 0);
        _this.m = new ObservableCollection$1(Button.$, 0);
        _this.p = new ObservableCollection$1(Button.$, 0);
        _this.q = new ObservableCollection$1(Button.$, 0);
        var a = new CalendarView();
        a.a = _this;
        _this.h = a;
        _this.h.y();
        return _this;
    }
    Calendar.prototype.a2 = function () {
        if (this.close != null) {
            this.close(this);
        }
    };
    Calendar.prototype.a4 = function (a) {
        var b = this.w;
        this.w = toNullable(Date_$type, a);
        if (this.valueChanged != null) {
            this.valueChanged(this, ((function () {
                var $ret = new ValueChangedEventArgs();
                $ret.oldValue = b.value;
                $ret.newValue = a;
                return $ret;
            })()));
        }
        if (nullableNotEquals(this.w, null)) {
            this.s = this.w.value;
        }
        this.a7();
    };
    Calendar.prototype.ay = function (a, b, c) {
        var d = dateFromValues(parseInt(c), parseInt(b), parseInt(a), 0, 0, 0, 0);
        this.a4(d);
    };
    Calendar.prototype.notifySizeChanged = function () {
        this.h.w();
    };
    Calendar.prototype.destroy = function () {
        this.provideContainer(null);
    };
    Calendar.prototype.provideContainer = function (a) {
        this.h.x(a);
    };
    Object.defineProperty(Calendar.prototype, "u", {
        get: function () {
            return this.w.value;
        },
        set: function (a) {
            var b = this.w;
            this.w = toNullable(Date_$type, a);
            if (nullableNotEquals(b, this.w)) {
                this.a3("Value", unwrapNullable(b), unwrapNullable(this.w));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "d", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.a3("Density", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, this.c));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "b", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.a3("BaseTheme", enumGetBox(BaseControlTheme_$type, b), enumGetBox(BaseControlTheme_$type, this.a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "bv", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            var b = this.bm;
            this.bm = a;
            if (b != this.bm) {
                this.a3("BackgroundColor", b, this.bm);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "b0", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            var b = this.br;
            this.br = a;
            if (b != this.br) {
                this.a3("SelectedDateBackgroundColor", b, this.br);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "b2", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            var b = this.bt;
            this.bt = a;
            if (b != this.bt) {
                this.a3("SelectedFocusDateBackgroundColor", b, this.bt);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "bx", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            var b = this.bo;
            this.bo = a;
            if (b != this.bo) {
                this.a3("FocusDateBackgroundColor", b, this.bo);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "bz", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            var b = this.bq;
            this.bq = a;
            if (b != this.bq) {
                this.a3("HoverBackgroundColor", b, this.bq);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "b3", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            var b = this.bu;
            this.bu = a;
            if (b != this.bu) {
                this.a3("TextColor", b, this.bu);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "b1", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            var b = this.bs;
            this.bs = a;
            if (b != this.bs) {
                this.a3("SelectedDateTextColor", b, this.bs);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "by", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            var b = this.bp;
            this.bp = a;
            if (b != this.bp) {
                this.a3("FocusDateTextColor", b, this.bp);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "bw", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            var b = this.bn;
            this.bn = a;
            if (b != this.bn) {
                this.a3("CurrentDateTextColor", b, this.bn);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Calendar.prototype, "l", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            var b = this.k;
            this.k = a;
            if (b != this.k) {
                this.a3("TextStyle", b, this.k);
            }
        },
        enumerable: true,
        configurable: true
    });
    Calendar.prototype.a3 = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        this.a5(a, b, c);
    };
    Calendar.prototype.a5 = function (a, b, c) {
        switch (a) {
            case "Density":
                this.ba();
                break;
            case "BaseTheme":
                this.bc();
                break;
            case "Value":
                if (nullableNotEquals(this.w, null)) {
                    this.s = this.w.value;
                }
                this.a7();
                break;
            case "TextColor":
            case "SelectedDateTextColor":
            case "FocusDateTextColor":
            case "CurrentDateTextColor":
            case "BackgroundColor":
            case "FocusDateBackgroundColor":
            case "SelectedFocusDateBackgroundColor":
            case "SelectedDateBackgroundColor":
            case "HoverBackgroundColor":
                this.bk();
                break;
            case "TextStyle":
                this.bl();
                break;
        }
    };
    Calendar.prototype.bk = function () {
        for (var a = 0; a < this.o.count; a++) {
            if (this.b3 != null) {
                this.o._inner[a].s4 = this.b3;
            }
            if (this.by != null) {
                this.o._inner[a].s0 = this.by;
            }
            if (this.bv != null) {
                this.o._inner[a].su = this.bv;
            }
            if (this.bx != null) {
                this.o._inner[a].sz = this.bx;
            }
            if (this.bz != null) {
                this.o._inner[a].s1 = this.bz;
            }
        }
        for (var b = 0; b < this.m.count; b++) {
            if (this.b3 != null) {
                this.m._inner[b].s4 = this.b3;
            }
            if (this.by != null) {
                this.m._inner[b].s0 = this.by;
            }
            if (this.bv != null) {
                this.m._inner[b].su = this.bv;
            }
            if (this.bx != null) {
                this.m._inner[b].sz = this.bx;
            }
            if (this.bz != null) {
                this.m._inner[b].s1 = this.bz;
            }
        }
        for (var c = 0; c < this.p.count; c++) {
            if (this.b3 != null) {
                this.p._inner[c].s4 = this.b3;
            }
            if (this.by != null) {
                this.p._inner[c].s0 = this.by;
            }
            if (this.bv != null) {
                this.p._inner[c].su = this.bv;
            }
            if (this.bx != null) {
                this.p._inner[c].sz = this.bx;
            }
            if (this.bz != null) {
                this.p._inner[c].s1 = this.bz;
            }
        }
        for (var d = 0; d < this.q.count; d++) {
            if (this.b3 != null) {
                this.q._inner[d].s4 = this.b3;
            }
            if (this.by != null) {
                this.q._inner[d].s0 = this.by;
            }
            if (this.bv != null) {
                this.q._inner[d].su = this.bv;
            }
            if (this.bx != null) {
                this.q._inner[d].sz = this.bx;
            }
            if (this.bz != null) {
                this.q._inner[d].s1 = this.bz;
            }
        }
    };
    Calendar.prototype.bl = function () {
        for (var a = 0; a < this.o.count; a++) {
            if (this.k != null) {
                this.o._inner[a].v = this.k;
            }
        }
        for (var b = 0; b < this.m.count; b++) {
            if (this.k != null) {
                this.m._inner[b].v = this.k;
            }
        }
        for (var c = 0; c < this.p.count; c++) {
            if (this.k != null) {
                this.p._inner[c].v = this.k;
            }
        }
        for (var d = 0; d < this.q.count; d++) {
            if (this.k != null) {
                this.q._inner[d].v = this.k;
            }
        }
    };
    Calendar.prototype.a0 = function () {
        this.h.ad();
        this.h.r();
    };
    Calendar.prototype.bc = function () {
    };
    Calendar.prototype.ba = function () {
    };
    Calendar.prototype.as = function () {
    };
    Calendar.prototype.ax = function () {
        this.w = toNullable(Date_$type, null);
        this.h.ac();
    };
    Calendar.prototype.a7 = function () {
        this.au();
        this.h.ag();
        this.h.ak();
        this.h.ac();
    };
    Calendar.prototype.at = function (a, b, c) {
        var d = a.createElement("div");
        d.setStyleProperty("height", "14%");
        d.setStyleProperty("display", "flex");
        d.setStyleProperty("justify-content", "space-evenly");
        var e = a.createElement("div");
        e.setStyleProperty("width", "15%");
        var f = a.createElement("div");
        f.setStyleProperty("width", "20%");
        var g = a.createElement("div");
        g.setStyleProperty("width", "20%");
        var h = a.createElement("div");
        h.setStyleProperty("width", "15%");
        d.append(e);
        d.append(f);
        d.append(g);
        d.append(h);
        b.append(d);
        var i = 0;
        for (var j = 0; j < 7; j++) {
            var k = a.createElement("div");
            k.setStyleProperty("display", "flex");
            k.setStyleProperty("justify-content", "space-evenly");
            if (j == 0) {
                k.setStyleProperty("height", "10%");
                for (var l = 0; l < 7; l++) {
                    var m = a.createElement("div");
                    m.setStyleProperty("text-align", "center");
                    m.setStyleProperty("vertical-align", "middle");
                    m.setStyleProperty("width", "12%");
                    var n = a.createElement("span");
                    n.setStyleProperty("font", "16px \"Segoe UI\", Verdana");
                    n.setStyleProperty("color", "rgb(24, 29, 31)");
                    m.append(n);
                    k.append(m);
                }
            }
            else {
                k.setStyleProperty("height", "12%");
                for (var o = 0; o < 7; o++) {
                    var p = a.createElement("div");
                    p.setStyleProperty("justify-content", "center");
                    var q = c._inner[i];
                    var r = this.g(a, p, q);
                    r.bh = 30;
                    r.bg = 30;
                    this.m.add(r);
                    r.ig = "btnDays" + o.toString();
                    p.setStyleProperty("width", "12%");
                    p.setStyleProperty("height", "100%");
                    k.append(p);
                    i++;
                }
            }
            b.append(k);
        }
        this.au();
    };
    Calendar.prototype.av = function (a, b, c) {
        b.setStyleProperty("display", "flex");
        b.setStyleProperty("flex-direction", "row");
        b.setStyleProperty("flex-wrap", "wrap");
        b.setStyleProperty("margin", "2px");
        b.setStyleProperty("justify-content", "center");
        for (var d = 0; d < 12; d++) {
            var e = a.createElement("div");
            e.setStyleProperty("margin", "5px");
            e.setAttribute("data-month", (d + 1).toString());
            var f = c._inner[d];
            var g = this.g(a, e, f);
            g.bh = 40;
            this.p.add(g);
            e.setStyleProperty("width", "28%");
            var h = e.getChildAt(0);
            h.setStyleProperty("width", "100%");
            var i = f.getChildAt(0);
            var j = "";
            var k = d + 1;
            switch (k) {
                case 1:
                    j = "Jan";
                    break;
                case 2:
                    j = "Feb";
                    break;
                case 3:
                    j = "Mar";
                    break;
                case 4:
                    j = "Apr";
                    break;
                case 5:
                    j = "May";
                    break;
                case 6:
                    j = "Jun";
                    break;
                case 7:
                    j = "Jul";
                    break;
                case 8:
                    j = "Aug";
                    break;
                case 9:
                    j = "Sep";
                    break;
                case 10:
                    j = "Oct";
                    break;
                case 11:
                    j = "Nov";
                    break;
                case 12:
                    j = "Dec";
                    break;
            }
            g.ig = "btnMonth" + j;
            i.setText(j);
            f.setAttribute("data-index", d.toString());
            f.append(i);
            b.append(e);
        }
    };
    Calendar.prototype.aw = function (a, b, c) {
        var d = this.s.getFullYear() - 3;
        b.setStyleProperty("padding", "5px");
        for (var e = 0; e < 7; e++) {
            var f = a.createElement("div");
            var g = c._inner[e];
            var h = this.g(a, f, g);
            this.q.add(h);
            f.setStyleProperty("width", "100%");
            f.setStyleProperty("height", "14%");
            f.setStyleProperty("justify-content", "center");
            var i = f.getChildAt(0);
            i.setStyleProperty("width", "98%");
            var j = g.getChildAt(0);
            h.ig = "btnYear" + e.toString();
            j.setText(d.toString());
            d++;
            g.setAttribute("data-index", e.toString());
            g.append(j);
            b.append(f);
        }
    };
    Calendar.prototype.au = function () {
        this.n.clear();
        var a = dateAddDays(this.s, -(this.s.getDate() - 1));
        var b = a.getDay();
        a = dateAddDays(a, -b);
        while (this.n.count < 42) {
            var c = new DayInfo();
            c.b = a.getDate();
            c.c = dateGetMonth(a);
            c.d = a.getFullYear();
            c.a = a.getDay();
            this.n.add(c);
            a = dateAddDays(a, 1);
        }
    };
    Calendar.prototype.be = function (a, b, c) {
        var d = b.getChildAt(0);
        var e = c._inner[0];
        var f = this.f(a, d, e, Calendar.y);
        f.bh = 28;
        f.bg = 28;
        f.ig = "btnPrev";
        this.o.add(f);
        e.setAttribute("data-section", "header");
        e.setAttribute("data-index", "0");
        var g = b.getChildAt(1);
        var h = c._inner[1];
        var i = this.g(a, g, h);
        i.bh = 40;
        i.ig = "btnMonth";
        this.o.add(i);
        h.setAttribute("data-section", "header");
        h.setAttribute("data-index", "1");
        this.bb(h);
        var j = b.getChildAt(2);
        var k = c._inner[2];
        var l = this.g(a, j, k);
        l.bh = 40;
        l.ig = "btnYear";
        this.o.add(l);
        k.setAttribute("data-section", "header");
        k.setAttribute("data-index", "2");
        this.bj(k);
        var m = b.getChildAt(3);
        var n = c._inner[3];
        var o = this.f(a, m, n, Calendar.z);
        o.bh = 28;
        o.bg = 28;
        o.ig = "btnNext";
        this.o.add(o);
        n.setAttribute("data-section", "header");
        n.setAttribute("data-index", "3");
    };
    Calendar.prototype.bb = function (a) {
        var b = a.getChildAt(0);
        var c = dateGetMonth(this.s);
        var d = "";
        switch (c) {
            case 1:
                d = "Jan";
                break;
            case 2:
                d = "Feb";
                break;
            case 3:
                d = "Mar";
                break;
            case 4:
                d = "Apr";
                break;
            case 5:
                d = "May";
                break;
            case 6:
                d = "Jun";
                break;
            case 7:
                d = "Jul";
                break;
            case 8:
                d = "Aug";
                break;
            case 9:
                d = "Sep";
                break;
            case 10:
                d = "Oct";
                break;
            case 11:
                d = "Nov";
                break;
            case 12:
                d = "Dec";
                break;
        }
        b.setText(d);
    };
    Calendar.prototype.bj = function (a) {
        var b = a.getChildAt(0);
        var c = this.s.getFullYear().toString();
        b.setText(c);
    };
    Calendar.prototype.bg = function (a) {
        var b = a.getChildAt(0);
        var c = b.getChildAt(0);
        c.setText("S");
        b.append(c);
        var d = a.getChildAt(1);
        var e = d.getChildAt(0);
        e.setText("M");
        d.append(e);
        var f = a.getChildAt(2);
        var g = f.getChildAt(0);
        g.setText("T");
        f.append(g);
        var h = a.getChildAt(3);
        var i = h.getChildAt(0);
        i.setText("W");
        h.append(i);
        var j = a.getChildAt(4);
        var k = j.getChildAt(0);
        k.setText("T");
        j.append(k);
        var l = a.getChildAt(5);
        var m = l.getChildAt(0);
        m.setText("F");
        l.append(m);
        var n = a.getChildAt(6);
        var o = n.getChildAt(0);
        o.setText("S");
        n.append(o);
    };
    Calendar.prototype.bd = function (a, b) {
        if (b === void 0) {
            b = false;
        }
        var c = null;
        var d = null;
        var e = null;
        for (var f = 0; f < 42; f++) {
            var g = a._inner[f];
            var h = g.getChildAt(0);
            var i = this.n._inner[f];
            var j = this.m._inner[f];
            if (i != null) {
                g.setAttribute("data-section", "days");
                g.setAttribute("data-index", f.toString());
                g.setAttribute("data-day", i.b.toString());
                g.setAttribute("data-month", i.c.toString());
                g.setAttribute("data-year", i.d.toString());
                h.setText(i.b.toString());
                if (nullableNotEquals(this.w, null) && i.b == this.w.value.getDate() && i.c == dateGetMonth(this.w.value) && i.d == this.w.value.getFullYear()) {
                    j.s4 = this.b1;
                    j.s0 = this.b1;
                    j.su = this.b0;
                    j.sz = this.b2;
                    j.sv = this.bv;
                    c = g;
                }
                else if (i.b == this.t.getDate() && i.c == dateGetMonth(this.t) && i.d == this.t.getFullYear()) {
                    j.s4 = this.bw;
                    ;
                    j.s0 = this.by;
                    j.su = this.bv;
                    j.sz = this.bx;
                    j.sv = this.bw;
                    j.be = 1;
                    d = g;
                }
                else if (i.a != 0 && i.a != 6 && i.c == dateGetMonth(this.s)) {
                    j.s4 = this.b3;
                    j.s0 = this.by;
                    j.su = this.bv;
                    j.sz = this.bx;
                    j.sv = this.bv;
                }
                else {
                    j.s4 = this.b3;
                    j.s0 = this.by;
                    j.su = this.bv;
                    j.sz = this.bx;
                    j.sv = this.bv;
                }
                if (i.b == 1 && i.c == dateGetMonth(this.s)) {
                    e = g;
                }
            }
        }
        if (b == true) {
            if (c != null && nullableNotEquals(this.w, null) && this.w.value.getFullYear() == this.s.getFullYear() && dateGetMonth(this.w.value) == dateGetMonth(this.s)) {
                this.h.ae(c);
            }
            else if (d != null && this.t.getFullYear() == this.s.getFullYear() && dateGetMonth(this.t) == dateGetMonth(this.s)) {
                this.h.ae(d);
            }
            else if (e != null) {
                this.h.ae(e);
            }
        }
    };
    Calendar.prototype.bf = function (a) {
        var b = null;
        var c = null;
        for (var d = 0; d < 12; d++) {
            var e = a._inner[d];
            e.setAttribute("data-section", "months");
            if (nullableNotEquals(this.w, null) && dateGetMonth(this.w.value) == d + 1) {
                c = e;
            }
            if (dateGetMonth(this.t) == d + 1) {
                b = e;
            }
        }
        if (c != null) {
            this.h.ae(c);
        }
        else if (b != null) {
            this.h.ae(b);
        }
        else {
            this.h.ae(a._inner[0]);
        }
    };
    Calendar.prototype.bi = function (a) {
        this.bh(a, this.s.getFullYear(), true);
    };
    Calendar.prototype.bh = function (a, b, c) {
        if (c === void 0) {
            c = false;
        }
        var d = b - 3;
        for (var e = 0; e < 7; e++) {
            var f = a._inner[e];
            f.setAttribute("data-section", "years");
            var g = f.getChildAt(0);
            g.setText(d.toString());
            if (d == b && c) {
                this.h.ae(f);
            }
            d++;
        }
    };
    Calendar.prototype.g = function (a, b, c) {
        var d = a.getSubRenderer(b);
        var e = new Button();
        e.provideContainer(d);
        e.d = this.b;
        e.h = this.d;
        e.v = this.k;
        e.eu = -1;
        e.s = 1;
        if (this.k != null) {
            e.v = this.k;
        }
        var f = a.createElement("span");
        var g = new CornerRadius(0, 2);
        e.kd = g;
        e.ku = g;
        e.ec = 0;
        c.append(f);
        e.appendButtonContent(c);
        e.s4 = this.b3;
        e.s0 = this.by;
        e.su = this.bv;
        e.sz = this.bx;
        e.s1 = this.bz;
        return e;
    };
    Calendar.prototype.f = function (a, b, c, d) {
        var e = a.getSubRenderer(b);
        var f = new Button();
        f.provideContainer(e);
        f.d = this.b;
        f.h = this.d;
        f.v = this.k;
        f.eu = -1;
        f.s = 1;
        var g = new CornerRadius(0, 2);
        f.kd = g;
        f.ku = g;
        f.ec = 0;
        var h = a.createElement("div");
        var i = a.getSubRenderer(h);
        var j = new Icon();
        j.provideContainer(i);
        j.svgPath = d;
        c.append(h);
        f.appendButtonContent(c);
        f.s4 = this.b3;
        f.s0 = this.by;
        f.su = this.bv;
        f.sz = this.bx;
        f.s1 = this.bz;
        return f;
    };
    Calendar.prototype.ap = function (a) {
        this.s = dateAddMonths(this.s, a);
        this.au();
    };
    Calendar.prototype.aq = function (a) {
        this.s = dateFromValues(this.s.getFullYear(), a, this.s.getDate(), 0, 0, 0, 0);
        this.au();
    };
    Calendar.prototype.ar = function (a) {
        this.s = dateFromValues(a, dateGetMonth(this.s), this.s.getDate(), 0, 0, 0, 0);
        this.au();
    };
    Calendar.prototype.a9 = function (a, b) {
        var c = parseInt(a._inner[3].getChildAt(0).getText());
        if (b < 0) {
            c--;
        }
        else {
            c++;
        }
        this.bh(a, c);
    };
    Calendar.prototype.a8 = function () {
        this.h.ab();
    };
    Calendar.prototype.x = function () {
        return this.e();
    };
    Calendar.prototype.af = function () {
        var a = this.e();
        return a.l();
    };
    Calendar.prototype.e = function () {
        var a = new CalendarVisualModelExport();
        a.h = this.d;
        a.g = this.b;
        a.d = AppearanceHelper.a(this.b0);
        a.f = AppearanceHelper.a(this.b2);
        a.b = AppearanceHelper.a(this.bx);
        a.e = AppearanceHelper.a(this.b1);
        a.c = AppearanceHelper.a(this.by);
        a.a = AppearanceHelper.a(this.bw);
        a.i = new List$1(ButtonVisualModelExport.$, 0);
        var b = this.h.m();
        a.k = b;
        if (b == "day") {
            for (var c = 0; c < this.o.count; c++) {
                if (this.o._inner[c].ig == null) {
                    this.o._inner[c].ig = "header" + c.toString();
                }
                a.i.add1(this.o._inner[c].ey());
            }
            for (var d = 0; d < this.m.count; d++) {
                if (this.m._inner[d].ig == null) {
                    this.m._inner[d].ig = "days" + d.toString();
                }
                a.i.add1(this.m._inner[d].ey());
            }
        }
        else if (b == "month") {
            for (var e = 0; e < this.p.count; e++) {
                if (this.p._inner[e].ig == null) {
                    this.p._inner[e].ig = "months" + e.toString();
                }
                a.i.add1(this.p._inner[e].ey());
            }
        }
        else if (b == "year") {
            for (var f = 0; f < this.q.count; f++) {
                if (this.q._inner[f].ig == null) {
                    this.q._inner[f].ig = "years" + f.toString();
                }
                a.i.add1(this.q._inner[f].ey());
            }
        }
        if (this.l != null) {
            var g = this.l;
            if (this.h != null && g.n == null) {
                var h = this.h.f;
                var i = FontUtil.getFontInfoFromString(h, g.fontString);
                g.n = i.n;
                g.d = i.d;
                g.o = i.o;
                g.q = i.q;
                g.r = i.r;
                g.s = i.s;
            }
            if (g.n != null) {
                a.m = g.n;
            }
            if (!isNaN_(g.d)) {
                a.j = g.d;
            }
            if (g.s != null) {
                a.q = g.s;
            }
            if (g.q != null) {
                a.o = g.q;
            }
            if (g.o != null) {
                a.n = g.q;
            }
        }
        return a;
    };
    Calendar.$t = markType(Calendar, 'Calendar', Base.$, [INotifyPropertyChanged_$type]);
    Calendar.y = "M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z";
    Calendar.z = "M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z";
    return Calendar;
}(Base));
export { Calendar };
//# sourceMappingURL=CalendarView_combined.js.map
