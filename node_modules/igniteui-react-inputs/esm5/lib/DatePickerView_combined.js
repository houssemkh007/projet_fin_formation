/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, runOn, markType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, toNullable, Date_$type, delegateRemove, enumGetBox, delegateCombine } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { BaseControlTheme_$type } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { ValueChangedEventArgs } from "./ValueChangedEventArgs";
import { Popup } from "igniteui-react-layouts";
import { Input } from "./Input";
import { Calendar } from "./Calendar";
import { Icon } from "./Icon";
import { InputGroup } from "./InputGroup";
import { Suffix } from "./Suffix";
import { DatePickerVisualModelExport } from "./DatePickerVisualModelExport";
import { FontUtil } from "igniteui-react-core";
import { nullableNotEquals, unwrapNullable, nullableEquals } from "igniteui-react-core";
import { dateToStringFormat } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var DatePickerView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DatePickerView, _super);
    function DatePickerView() {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.c = null;
        _this.f = null;
        _this.d = null;
        _this.e = null;
        return _this;
    }
    DatePickerView.prototype.p = function () {
    };
    DatePickerView.prototype.o = function (a) {
        if (a == null) {
            this.c = null;
            return;
        }
        this.c = a;
        var b = Math.round(a.rootWrapper.width());
        var c = Math.round(a.rootWrapper.height());
        this.i();
        this.j();
        var d = this.c.rootWrapper.getChildAt(0);
        d.listen("keydown", runOn(this, this.g));
        document.addEventListener("click", runOn(this, this.k), false);
    };
    DatePickerView.prototype.i = function () {
        if (this.c != null) {
            this.f = this.c.rootWrapper.getChildAt(0);
            this.e = this.c.createElement("div");
            var a = this.c.createElement("div");
            this.a.am(this.c, this.f, this.e, a);
            this.e.listen("click", runOn(this, this.h));
            a.listen("click", runOn(this, this.l));
        }
    };
    DatePickerView.prototype.r = function () {
        if (this.e != null) {
            if (this.a.q == true) {
                this.e.show();
            }
            else {
                this.e.hide();
            }
        }
    };
    DatePickerView.prototype.m = function () {
        if (this.e != null) {
            this.e.hide();
        }
    };
    DatePickerView.prototype.j = function () {
        if (this.c != null) {
            var a = this.c.rootWrapper.getChildAt(1);
            this.a.an(this.c, a);
        }
    };
    DatePickerView.prototype.h = function (a) {
        this.a.ak();
        if (this.e != null) {
            this.e.hide();
        }
    };
    DatePickerView.prototype.l = function (a) {
        this.a.aq();
    };
    DatePickerView.prototype.s = function () {
        if (this.c != null) {
            var a = this.c.rootWrapper.getNativeElement();
            var b = a.getBoundingClientRect();
            ;
            return b;
        }
        return null;
    };
    DatePickerView.prototype.g = function (a) {
        var b = a.which;
        if (a.altKey) {
            if (b == 40) {
                this.a.au();
                this.a.ap();
            }
            else if (b == 38) {
                this.a.al();
            }
        }
        else if (b == 27) {
            this.a.al();
        }
    };
    DatePickerView.prototype.k = function (a) {
        var b = a.target;
        if (!this.b(b)) {
            this.a.al();
        }
    };
    DatePickerView.prototype.b = function (a) {
        if (null == a) {
            return false;
        }
        var b = this.f.getNativeElement();
        var c = this.d.getNativeElement();
        return b.contains(a) || c.contains(a);
    };
    DatePickerView.prototype.q = function (a) {
        this.d = a;
    };
    DatePickerView.prototype.n = function () {
    };
    DatePickerView.$t = markType(DatePickerView, 'DatePickerView');
    return DatePickerView;
}(Base));
export { DatePickerView };
/**
 * @hidden
 */
var DatePicker = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(DatePicker, _super);
    function DatePicker() {
        var _this = _super.call(this) || this;
        _this.g = null;
        _this.m = null;
        _this.k = null;
        _this.j = null;
        _this.h = null;
        _this.i = null;
        _this.f = null;
        _this.propertyChanged = null;
        _this.valueChanged = null;
        _this.t = toNullable(Date_$type, null);
        _this.c = 2;
        _this.a = 1;
        _this.n = null;
        _this.a3 = BrushUtil.g(255, 24, 29, 31);
        _this.a2 = BrushUtil.g(255, 163, 172, 184);
        _this.p = true;
        var a = new DatePickerView();
        a.a = _this;
        _this.g = a;
        _this.g.p();
        return _this;
    }
    DatePicker.prototype.at = function (a, b) {
        this.t = toNullable(Date_$type, b);
        if (this.m != null) {
            this.al();
        }
        if (this.j != null) {
            if (nullableNotEquals(this.t, null)) {
                this.j.cf = dateToStringFormat(this.t.value, "MM/dd/yyyy", null);
                this.g.r();
            }
            else {
                this.j.cf = "";
                this.g.m();
            }
        }
        if (this.valueChanged != null) {
            this.valueChanged(this, ((function () {
                var $ret = new ValueChangedEventArgs();
                $ret.oldValue = a;
                $ret.newValue = b;
                return $ret;
            })()));
        }
    };
    DatePicker.prototype.notifySizeChanged = function () {
        this.g.n();
    };
    DatePicker.prototype.destroy = function () {
        if (this.f != null) {
            var a = this.f;
            a.valueChanged = delegateRemove(a.valueChanged, runOn(this, this.aj));
            var b = this.f;
            b.close = delegateRemove(b.close, runOn(this, this.ai));
        }
        this.provideContainer(null);
    };
    DatePicker.prototype.provideContainer = function (a) {
        this.g.o(a);
    };
    Object.defineProperty(DatePicker.prototype, "r", {
        get: function () {
            return this.t.value;
        },
        set: function (a) {
            var b = this.t;
            this.t = toNullable(Date_$type, a);
            if (nullableNotEquals(b, this.t)) {
                this.as("Value", unwrapNullable(b), unwrapNullable(this.t));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "d", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.as("Density", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, this.c));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "b", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.as("BaseTheme", enumGetBox(BaseControlTheme_$type, b), enumGetBox(BaseControlTheme_$type, this.a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "o", {
        get: function () {
            return this.n;
        },
        set: function (a) {
            var b = this.n;
            this.n = a;
            if (b != this.n) {
                this.as("TextStyle", b, this.n);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "a5", {
        get: function () {
            return this.a3;
        },
        set: function (a) {
            var b = this.a3;
            this.a3 = a;
            if (b != this.a3) {
                this.as("TextColor", b, this.a3);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "a4", {
        get: function () {
            return this.a2;
        },
        set: function (a) {
            var b = this.a2;
            this.a2 = a;
            if (b != this.a2) {
                this.as("IconColor", b, this.a2);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePicker.prototype, "q", {
        get: function () {
            return this.p;
        },
        set: function (a) {
            var b = this.p;
            this.p = a;
            if (b != this.p) {
                this.as("ShowClearButton", b, this.p);
            }
        },
        enumerable: true,
        configurable: true
    });
    DatePicker.prototype.as = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        this.av(a, b, c);
    };
    DatePicker.prototype.av = function (a, b, c) {
        switch (a) {
            case "Density":
                this.ax();
                break;
            case "BaseTheme":
                this.ay();
                break;
            case "Value":
                if (this.f != null) {
                    this.f.u = this.t.value;
                }
                if (this.j != null) {
                    if (nullableNotEquals(this.t, null)) {
                        this.j.cf = dateToStringFormat(this.t.value, "MM/dd/yyyy", null);
                        this.g.r();
                    }
                    else {
                        this.j.cf = "";
                        this.g.m();
                    }
                }
                break;
            case "TextStyle":
                this.a0();
                break;
            case "ShowClearButton":
                if (this.j != null) {
                    if (this.j.cf != "") {
                        this.g.r();
                    }
                }
                break;
            case "TextColor":
            case "IconColor":
                this.a1();
                break;
        }
    };
    DatePicker.prototype.a1 = function () {
        if (this.j != null) {
            this.j.dt = this.a5;
        }
        if (this.h != null) {
            this.h.fill = this.a4;
        }
        if (this.i != null) {
            this.i.fill = this.a4;
        }
    };
    DatePicker.prototype.az = function () {
        if (this.k != null) {
        }
    };
    DatePicker.prototype.a0 = function () {
        if (this.n != null) {
            this.j.ac = this.n;
        }
    };
    DatePicker.prototype.am = function (a, b, c, d) {
        this.k = new InputGroup();
        var e = a.getSubRenderer(b);
        this.k.provideContainer(e);
        this.k.k = 0;
        this.k.d = this.b;
        this.k.h = this.d;
        var f = a.createElement("div");
        f.setRawStyleProperty("flex-grow", "1");
        var g = a.getSubRenderer(f);
        this.j = new Input();
        this.j.provideContainer(g);
        this.j.b0 = "text";
        if (this.n != null) {
            this.j.ac = this.n;
        }
        this.j.disabled = true;
        this.j.dt = this.a5;
        this.k.appendContentChild(f);
        this.k.inputs.add(this.j);
        var h = a.createElement("div");
        var i = a.getSubRenderer(h);
        var j = new Suffix();
        j.provideContainer(i);
        this.h = new Icon();
        var k = a.getSubRenderer(c);
        this.h.provideContainer(k);
        this.h.svgPath = DatePicker.x;
        this.h.fill = this.a4;
        c.setStyleProperty("height", "16px");
        c.setStyleProperty("width", "16px");
        j.appendContentChild(c);
        this.k.appendContentChild(h);
        this.k.inputs.add(j);
        if (nullableEquals(this.t, null)) {
            c.hide();
        }
        var l = a.createElement("div");
        var m = a.getSubRenderer(l);
        var n = new Suffix();
        n.provideContainer(m);
        var o = a.getSubRenderer(d);
        this.i = new Icon();
        this.i.provideContainer(o);
        this.i.svgPath = DatePicker.w;
        this.i.fill = this.a4;
        d.setStyleProperty("height", "16px");
        d.setStyleProperty("width", "16px");
        n.appendContentChild(d);
        this.k.appendContentChild(l);
        this.k.inputs.add(n);
    };
    DatePicker.prototype.ak = function () {
        var a = toNullable(Date_$type, this.r);
        var b = toNullable(Date_$type, null);
        if (this.j != null) {
            this.j.cf = "";
        }
        this.t = toNullable(Date_$type, null);
        this.f.ax();
        this.at(a.value, b.value);
    };
    DatePicker.prototype.an = function (a, b) {
        this.m = new Popup();
        var c = a.getSubRenderer(b);
        this.m.provideRenderer(c);
        this.f = new Calendar();
        var d = a.createElement("div");
        this.g.q(d);
        d.setStyleProperty("width", "220px");
        d.setStyleProperty("height", "230px");
        var e = a.getSubRenderer(d);
        this.f.provideContainer(e);
        var f = this.f;
        f.valueChanged = delegateCombine(f.valueChanged, runOn(this, this.aj));
        var g = this.f;
        g.close = delegateCombine(g.close, runOn(this, this.ai));
        this.m.appendPopupContent(d);
    };
    DatePicker.prototype.aj = function (a, b) {
        this.at(b.oldValue, b.newValue);
    };
    DatePicker.prototype.ai = function (a) {
        if (this.m.t) {
            this.al();
        }
    };
    DatePicker.prototype.aq = function () {
        if (this.m.t) {
            this.al();
        }
        else {
            this.au();
        }
    };
    DatePicker.prototype.au = function () {
        var a = this.g.s();
        this.m.showRelativeToExclusionRect(a, 0, 0);
    };
    DatePicker.prototype.al = function () {
        this.m.an();
        this.f.a8();
    };
    DatePicker.prototype.ap = function () {
        this.f.a0();
    };
    DatePicker.prototype.ay = function () {
    };
    DatePicker.prototype.ax = function () {
    };
    DatePicker.prototype.u = function () {
        return this.e();
    };
    DatePicker.prototype.ac = function () {
        var a = this.e();
        return a.g();
    };
    DatePicker.prototype.e = function () {
        var a = new DatePickerVisualModelExport();
        a.b = this.d;
        a.a = this.b;
        a.e = this.m.ab();
        a.d = this.k.ia();
        a.c = this.f.x();
        if (this.o != null) {
            var b = this.o;
            if (this.g != null && b.n == null) {
                var c = this.g.c;
                var d = FontUtil.getFontInfoFromString(c, b.fontString);
                b.n = d.n;
                b.d = d.d;
                b.o = d.o;
                b.q = d.q;
                b.r = d.r;
                b.s = d.s;
            }
            if (b.n != null) {
                a.h = b.n;
            }
            if (!isNaN_(b.d)) {
                a.f = b.d;
            }
            if (b.s != null) {
                a.l = b.s;
            }
            if (b.q != null) {
                a.j = b.q;
            }
            if (b.o != null) {
                a.i = b.q;
            }
        }
        return a;
    };
    DatePicker.$t = markType(DatePicker, 'DatePicker', Base.$, [INotifyPropertyChanged_$type]);
    DatePicker.w = "M20 3h-1V1h-2v2H7V1H5v2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 18H4V8h16v13z";
    DatePicker.ab = "M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z";
    DatePicker.y = "M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z";
    DatePicker.x = "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z";
    return DatePicker;
}(Base));
export { DatePicker };
//# sourceMappingURL=DatePickerView_combined.js.map
