/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, Delegate_$type, fromEnum, runOn, markType, INotifyPropertyChanged_$type, PropertyChangedEventArgs, enumGetBox } from "igniteui-react-core";
import { List$1 } from "igniteui-react-core";
import { Ripple } from "./Ripple";
import { NativeUI } from "igniteui-react-core";
import { ControlDisplayDensity_$type } from "igniteui-react-core";
import { KeyFrameAnimationFactory } from "igniteui-react-core";
import { ElevationMode_$type } from "igniteui-react-core";
import { ElevationHelper } from "./ElevationHelper";
import { ButtonDisplayStyle_$type } from "./ButtonDisplayStyle";
import { isNaN_ } from "igniteui-react-core";
import { BaseControlTheme_$type } from "igniteui-react-core";
import { CornerRadius } from "igniteui-react-core";
import { AnimationKeyFrameEffectTiming } from "igniteui-react-core";
import { ThemeResolver } from "./ThemeResolver";
import { ButtonClickEventArgs } from "./ButtonClickEventArgs";
import { Thickness } from "igniteui-react-core";
import { BrushUtil } from "igniteui-react-core";
import { ButtonVisualModelExport } from "./ButtonVisualModelExport";
import { AppearanceHelper } from "igniteui-react-core";
import { FontUtil } from "igniteui-react-core";
/**
 * @hidden
 */
var ButtonView = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(ButtonView, _super);
    function ButtonView() {
        var _this = _super.call(this) || this;
        _this.a = null;
        _this.j = null;
        _this.c = null;
        _this.g = new List$1(Delegate_$type, 0);
        _this.d = true;
        _this.m = null;
        _this.i = NaN;
        _this.h = NaN;
        _this.k = null;
        _this.b = null;
        _this.l = null;
        _this.o = null;
        _this.n = null;
        return _this;
    }
    ButtonView.prototype.ai = function () {
    };
    ButtonView.prototype.f = function () {
        return true;
    };
    Object.defineProperty(ButtonView.prototype, "p", {
        get: function () {
            return this.m;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ButtonView.prototype, "q", {
        get: function () {
            return this.l;
        },
        enumerable: true,
        configurable: true
    });
    ButtonView.prototype.ac = function (a) {
        var e_1, _a;
        var _this = this;
        if (a == null) {
            try {
                for (var _b = tslib_1.__values(fromEnum(this.g)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    b();
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            this.g.clear();
            return;
        }
        this.j = a;
        this.j.rootWrapper.setStyleProperty("display", "flex");
        this.j.rootWrapper.setStyleProperty("flex-direction", "row");
        this.j.rootWrapper.setStyleProperty("flex-wrap", "no-wrap");
        this.j.rootWrapper.setStyleProperty("align-items", "center");
        var c = this.j.createElement("button");
        this.m = c;
        this.m.setStyleProperty("position", "relative");
        this.m.setStyleProperty("display", "inline-flex");
        this.m.setStyleProperty("align-items", "center");
        this.m.setStyleProperty("justify-content", "center");
        this.ar();
        this.m.setStyleProperty("border", "none");
        this.m.setStyleProperty("cursor", "pointer");
        this.m.setStyleProperty("user-select", "none");
        this.m.setStyleProperty("outline-style", "none");
        this.m.setStyleProperty("-webkit-tap-highlight-color", "transparent");
        this.m.setStyleProperty("overflow", "hidden");
        this.m.setStyleProperty("white-space", "no-wrap");
        this.m.setStyleProperty("color", "#000");
        this.m.setStyleProperty("background", this.a.m7._fill);
        NativeUI.l(this.m, this.a.kb);
        this.m.setAttribute("id", this.a.h7);
        this.ao();
        this.g.add(c.listen("change", runOn(this, this.v)));
        this.g.add(c.listen("click", runOn(this, this.w)));
        this.g.add(c.listen("focus", runOn(this, this.x)));
        this.g.add(c.listen("blur", runOn(this, this.u)));
        this.g.add(this.j.rootWrapper.listen("mouseenter", runOn(this, this.s)));
        this.g.add(this.j.rootWrapper.listen("mouseleave", runOn(this, this.t)));
        this.j.append(c);
        var d = this.j.createElement("div");
        var e = this.j.getSubRenderer(d);
        d.setStyleProperty("position", "absolute");
        d.setStyleProperty("width", "100%");
        d.setStyleProperty("height", "100%");
        d.setStyleProperty("left", "0px");
        d.setStyleProperty("top", "0px");
        d.setStyleProperty("overflow", "hidden");
        var f = new Ripple();
        f.provideContainer(e);
        f.q = c;
        var g = this.j.getExternal(f, this.j.rootWrapper, this.j.getExternal(this.a, null, null));
        f.h = false;
        f.k = true;
        this.b = f;
        this.m.append(d);
        var h = this.j.createElement("div");
        h.addClass("ig-button-content");
        h.setStyleProperty("font-family", "'Segoe UI', Verdana");
        h.setStyleProperty("font-weight", "400");
        h.setStyleProperty("font-size", ".875rem");
        h.setStyleProperty("cursor", "pointer");
        this.l = h;
        this.g.add(h.listen("click", runOn(this, this.r)));
        this.m.append(h);
        this.n = h;
        this.j.getPortal(h, "ChildContent", function (i) {
            var comp_ = i.componentRef;
            _this.o = comp_;
            {
                _this.n.setStyleProperty("flex-direction", _this.a.he);
                _this.n.setStyleProperty("align-items", _this.a.fv);
                var direction_ = _this.a.he;
                var display_ = _this.a.gb;
                var alignItems_ = _this.a.fv;
                comp_.display = display_;
                comp_.flexDirection = direction_;
                comp_.alignItems = alignItems_;
            }
        }, true);
        this.a.jy();
    };
    ButtonView.prototype.ae = function () {
        this.b.i = this.a.ae;
    };
    ButtonView.prototype.ar = function () {
        var a = "2.25rem";
        var b = "2.25rem";
        var c = "2.25rem";
        var d = "2.25rem";
        var e = "3.5rem";
        var f = "3.5rem";
        var g = "3.5rem";
        var h = "3.5rem";
        var i = "5.5rem";
        var j = "2.25rem";
        var k = "0px";
        var l = ".9375rem";
        var m = ".5625rem 1rem";
        switch (this.a.g) {
            case 2:
                m = ".375rem .75rem";
                j = "1.875rem";
                e = "3rem";
                f = "3rem";
                g = "3rem";
                h = "3rem";
                l = ".6875rem";
                break;
            case 3:
                m = ".1875rem 1rem";
                j = "1.5rem";
                f = "2.5rem";
                e = "2.5rem";
                h = "2.5rem";
                g = "2.5rem";
                l = ".4375rem";
                break;
        }
        if (this.a.s == 4) {
            this.m.setStyleProperty("min-width", a);
            this.m.setStyleProperty("min-height", b);
            this.m.setStyleProperty("padding", k);
            this.m.setStyleProperty("width", c);
            this.m.setStyleProperty("height", d);
        }
        else if (this.a.s == 3) {
            this.m.setStyleProperty("min-width", e);
            this.m.setStyleProperty("min-height", f);
            this.m.setStyleProperty("padding", l);
            this.m.setStyleProperty("width", g);
            this.m.setStyleProperty("height", h);
        }
        else {
            this.m.setStyleProperty("min-width", i);
            this.m.setStyleProperty("min-height", j);
            this.m.setStyleProperty("padding", m);
        }
        if (!isNaN_(this.a.aw) && this.a.aw > 0) {
            this.m.setStyleProperty("border-style", "solid");
        }
        else {
            this.m.setStyleProperty("border-style", "none");
        }
        if (!isNaN_(this.i)) {
            this.m.setStyleProperty("min-width", this.i.toString() + "px");
        }
        if (!isNaN_(this.h)) {
            this.m.setStyleProperty("min-height", this.h.toString() + "px");
        }
    };
    ButtonView.prototype.an = function (a) {
        this.i = a;
    };
    ButtonView.prototype.am = function (a) {
        this.h = a;
    };
    ButtonView.prototype.ak = function () {
        this.m.setAttribute("disabled", this.a.disabled ? "true" : "false");
        this.m.setProperty("disabled", this.a.disabled);
    };
    ButtonView.prototype.af = function () {
        if (this.j != null) {
            this.j.rootWrapper.setStyleProperty("display", this.a.gb);
            var comp_ = this.o;
            if (this.o != null) {
                this.n.setStyleProperty("display", this.a.gb);
                var display_ = this.a.gb;
                comp_.display = display_;
            }
            var ext_ = this.j.getExternal(this.a, null, null);
            if (ext_ && ext_._onDisplayChanged) {
                ext_._onDisplayChanged();
            }
            ;
        }
    };
    ButtonView.prototype.aa = function () {
        if (this.j != null) {
            this.j.rootWrapper.setStyleProperty("align-items", this.a.fv);
            this.m.setStyleProperty("align-items", this.a.fv);
            var comp_ = this.o;
            if (this.o != null) {
                this.n.setStyleProperty("align-items", this.a.fv);
                var alignItems_ = this.a.fv;
                comp_.alignItems = alignItems_;
            }
            var ext_ = this.j.getExternal(this.a, null, null);
            if (ext_ && ext_._onAlignItemsChanged) {
                ext_._onAlignItemsChanged();
            }
            ;
        }
    };
    ButtonView.prototype.ag = function () {
        if (this.j != null) {
            this.j.rootWrapper.setStyleProperty("flex-direction", this.a.he);
            this.m.setStyleProperty("flex-direction", this.a.he);
            var ext_ = this.j.getExternal(this.a, null, null);
            var comp_ = this.o;
            if (this.o != null) {
                this.n.setStyleProperty("flex-direction", this.a.he);
                var direction_ = this.a.he;
                comp_.flexDirection = direction_;
            }
            if (ext_ && ext_._onFlexDirectionChanged) {
                ext_._onFlexDirectionChanged();
            }
            ;
        }
    };
    ButtonView.prototype.ah = function () {
        if (this.j != null) {
            this.j.rootWrapper.setStyleProperty("flex-grow", this.a.hg);
            this.m.setStyleProperty("flex-grow", this.a.hg);
            var ext_ = this.j.getExternal(this.a, null, null);
            if (ext_ && ext_._onFlexGrowChanged) {
                ext_._onFlexGrowChanged();
            }
            ;
        }
    };
    ButtonView.prototype.r = function (a) {
    };
    ButtonView.prototype.ao = function () {
        if (this.f()) {
            var a = this.a.h7;
            this.m.setAttribute("name", this.a.ig);
            this.m.setProperty("value", this.a.ez);
            if (this.a.ah) {
                this.m.setAttribute("tabindex", this.a.eu.toString());
            }
            this.m.setProperty("disabled", this.a.disabled);
            {
            }
            this.m.setAttribute("aria-label", this.a.fx);
        }
    };
    ButtonView.prototype.aj = function () {
        if (this.f()) {
            var a = this.a.h7;
            this.m.setAttribute("id", a);
        }
    };
    ButtonView.prototype.s = function (a) {
        this.a.jv();
    };
    ButtonView.prototype.t = function (a) {
        this.a.jw();
    };
    ButtonView.prototype.u = function (a) {
        this.a.jr();
    };
    ButtonView.prototype.x = function (a) {
        this.a.ju();
    };
    ButtonView.prototype.w = function (a) {
        this.a.js();
    };
    ButtonView.prototype.e = function () {
        return false;
    };
    ButtonView.prototype.v = function (a) {
    };
    ButtonView.prototype.z = function () {
        if (KeyFrameAnimationFactory.h == null) {
            KeyFrameAnimationFactory.h = this.j;
        }
    };
    ButtonView.prototype.ab = function () {
        this.d = true;
        this.g.add(this.m.listen("change", runOn(this, this.v)));
        this.g.add(this.m.listen("click", runOn(this, this.w)));
        this.g.add(this.m.listen("focus", runOn(this, this.x)));
        this.g.add(this.m.listen("blur", runOn(this, this.u)));
        this.g.add(this.l.listen("click", runOn(this, this.r)));
        this.g.add(this.m.listen("mouseenter", runOn(this, this.s)));
        this.g.add(this.m.listen("mouseleave", runOn(this, this.t)));
    };
    ButtonView.prototype.ad = function () {
        var e_2, _a;
        this.d = false;
        try {
            for (var _b = tslib_1.__values(fromEnum(this.g)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                a();
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        this.g.clear();
    };
    ButtonView.prototype.al = function () {
        var model_ = this.a;
        if (model_.externalObject && model_.externalObject.refreshDefaults) {
            model_.externalObject.refreshDefaults();
        }
        ;
    };
    ButtonView.prototype.ap = function (a, b) {
        this.b.ax = a;
        this.b.aw = b;
    };
    ButtonView.prototype.aq = function (a, b) {
        var c = ElevationHelper.e(a, this.a.nj, this.a.ng, this.a.m6, b);
        this.m.setStyleProperty("box-shadow", c);
    };
    ButtonView.prototype.as = function (a) {
        if (a != null) {
            this.l.setStyleProperty("font", a.fontString);
        }
    };
    ButtonView.prototype.y = function (a) {
        this.l.append(a);
    };
    ButtonView.$t = markType(ButtonView, 'ButtonView');
    return ButtonView;
}(Base));
export { ButtonView };
/**
 * @hidden
 */
var Button = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(Button, _super);
    function Button() {
        var _this = _super.call(this) || this;
        _this._view = null;
        _this.sf = ThemeResolver.e(Button.c, Button.rr, Button.o8);
        _this.r3 = ThemeResolver.e(Button.c, Button.rf, Button.ow);
        _this.nm = ThemeResolver.e(Button.c, Button.p6, Button.nn);
        _this.m = ThemeResolver.a(Button.c, Button.n, Button.l);
        _this.r6 = ThemeResolver.e(Button.c, Button.ri, Button.oz);
        _this.r7 = ThemeResolver.e(Button.c, Button.rj, Button.o0);
        _this.r8 = ThemeResolver.e(Button.c, Button.rk, Button.o1);
        _this.d2 = ThemeResolver.c(Button.c, Button.du, Button.cx);
        _this.d5 = ThemeResolver.c(Button.c, Button.dx, Button.c0);
        _this.d4 = ThemeResolver.c(Button.c, Button.dw, Button.cz);
        _this.d3 = ThemeResolver.c(Button.c, Button.dv, Button.cy);
        _this.r5 = ThemeResolver.e(Button.c, Button.rh, Button.oy);
        _this.sd = ThemeResolver.e(Button.c, Button.rp, Button.o6);
        _this.ks = ThemeResolver.d(Button.c, Button.kq, Button.ki);
        _this.bc = ThemeResolver.b(Button.c, Button.ba, Button.a2);
        _this.r4 = ThemeResolver.e(Button.c, Button.rg, Button.ox);
        _this.se = ThemeResolver.e(Button.c, Button.rq, Button.o7);
        _this.sc = ThemeResolver.e(Button.c, Button.ro, Button.o5);
        _this.sb = ThemeResolver.e(Button.c, Button.rn, Button.o4);
        _this.r9 = ThemeResolver.e(Button.c, Button.rl, Button.o2);
        _this.sa = ThemeResolver.e(Button.c, Button.rm, Button.o3);
        _this.pm = ThemeResolver.e(Button.c, Button.qk, Button.n1);
        _this.pn = ThemeResolver.e(Button.c, Button.ql, Button.n2);
        _this.po = ThemeResolver.e(Button.c, Button.qm, Button.n3);
        _this.c5 = ThemeResolver.c(Button.c, Button.dh, Button.cl);
        _this.c8 = ThemeResolver.c(Button.c, Button.dk, Button.co);
        _this.c7 = ThemeResolver.c(Button.c, Button.dj, Button.cn);
        _this.c6 = ThemeResolver.c(Button.c, Button.di, Button.cm);
        _this.pl = ThemeResolver.e(Button.c, Button.qj, Button.n0);
        _this.pt = ThemeResolver.e(Button.c, Button.qr, Button.n8);
        _this.kk = ThemeResolver.d(Button.c, Button.kn, Button.kf);
        _this.a4 = ThemeResolver.b(Button.c, Button.a7, Button.az);
        _this.pk = ThemeResolver.e(Button.c, Button.qi, Button.nz);
        _this.pu = ThemeResolver.e(Button.c, Button.qs, Button.n9);
        _this.ps = ThemeResolver.e(Button.c, Button.qq, Button.n7);
        _this.pr = ThemeResolver.e(Button.c, Button.qp, Button.n6);
        _this.pp = ThemeResolver.e(Button.c, Button.qn, Button.n4);
        _this.pq = ThemeResolver.e(Button.c, Button.qo, Button.n5);
        _this.ru = ThemeResolver.e(Button.c, Button.q6, Button.on);
        _this.rv = ThemeResolver.e(Button.c, Button.q7, Button.oo);
        _this.rw = ThemeResolver.e(Button.c, Button.q8, Button.op);
        _this.dy = ThemeResolver.c(Button.c, Button.dq, Button.ct);
        _this.d1 = ThemeResolver.c(Button.c, Button.dt, Button.cw);
        _this.d0 = ThemeResolver.c(Button.c, Button.ds, Button.cv);
        _this.dz = ThemeResolver.c(Button.c, Button.dr, Button.cu);
        _this.rt = ThemeResolver.e(Button.c, Button.q5, Button.om);
        _this.r1 = ThemeResolver.e(Button.c, Button.rd, Button.ou);
        _this.kr = ThemeResolver.d(Button.c, Button.kp, Button.kh);
        _this.bb = ThemeResolver.b(Button.c, Button.a9, Button.a1);
        _this.rs = ThemeResolver.e(Button.c, Button.q4, Button.ol);
        _this.r2 = ThemeResolver.e(Button.c, Button.re, Button.ov);
        _this.r0 = ThemeResolver.e(Button.c, Button.rc, Button.ot);
        _this.rz = ThemeResolver.e(Button.c, Button.rb, Button.os);
        _this.rx = ThemeResolver.e(Button.c, Button.q9, Button.oq);
        _this.ry = ThemeResolver.e(Button.c, Button.ra, Button.or);
        _this.px = ThemeResolver.e(Button.c, Button.qv, Button.oc);
        _this.py = ThemeResolver.e(Button.c, Button.qw, Button.od);
        _this.pz = ThemeResolver.e(Button.c, Button.qx, Button.oe);
        _this.c9 = ThemeResolver.c(Button.c, Button.dl, Button.cp);
        _this.dc = ThemeResolver.c(Button.c, Button.dp, Button.cs);
        _this.db = ThemeResolver.c(Button.c, Button.dn, Button.cr);
        _this.da = ThemeResolver.c(Button.c, Button.dm, Button.cq);
        _this.pw = ThemeResolver.e(Button.c, Button.qu, Button.ob);
        _this.p4 = ThemeResolver.e(Button.c, Button.q2, Button.oj);
        _this.kl = ThemeResolver.d(Button.c, Button.ko, Button.kg);
        _this.a5 = ThemeResolver.b(Button.c, Button.a8, Button.a0);
        _this.pv = ThemeResolver.e(Button.c, Button.qt, Button.oa);
        _this.p5 = ThemeResolver.e(Button.c, Button.q3, Button.ok);
        _this.p3 = ThemeResolver.e(Button.c, Button.q1, Button.oi);
        _this.p2 = ThemeResolver.e(Button.c, Button.q0, Button.oh);
        _this.p0 = ThemeResolver.e(Button.c, Button.qy, Button.of);
        _this.p1 = ThemeResolver.e(Button.c, Button.qz, Button.og);
        _this.pb = ThemeResolver.e(Button.c, Button.p9, Button.nq);
        _this.pc = ThemeResolver.e(Button.c, Button.qa, Button.nr);
        _this.pd = ThemeResolver.e(Button.c, Button.qb, Button.ns);
        _this.c1 = ThemeResolver.c(Button.c, Button.dd, Button.ch);
        _this.c4 = ThemeResolver.c(Button.c, Button.dg, Button.ck);
        _this.c3 = ThemeResolver.c(Button.c, Button.df, Button.cj);
        _this.c2 = ThemeResolver.c(Button.c, Button.de, Button.ci);
        _this.pa = ThemeResolver.e(Button.c, Button.p8, Button.np);
        _this.pi = ThemeResolver.e(Button.c, Button.qg, Button.nx);
        _this.kj = ThemeResolver.d(Button.c, Button.km, Button.ke);
        _this.a3 = ThemeResolver.b(Button.c, Button.a6, Button.ay);
        _this.o9 = ThemeResolver.e(Button.c, Button.p7, Button.no);
        _this.pj = ThemeResolver.e(Button.c, Button.qh, Button.ny);
        _this.ph = ThemeResolver.e(Button.c, Button.qf, Button.nw);
        _this.pg = ThemeResolver.e(Button.c, Button.qe, Button.nv);
        _this.pe = ThemeResolver.e(Button.c, Button.qc, Button.nt);
        _this.pf = ThemeResolver.e(Button.c, Button.qd, Button.nu);
        _this.at = NaN;
        _this.as = NaN;
        _this.r = 0;
        _this.f = 0;
        _this.b = 0;
        _this.e = 1;
        _this.k0 = ThemeResolver.e(Button.c, Button.rh, Button.oy);
        _this.lb = ThemeResolver.e(Button.c, Button.rr, Button.o8);
        _this.k8 = ThemeResolver.e(Button.c, Button.rf, Button.ow);
        _this.ky = ThemeResolver.e(Button.c, Button.p6, Button.nn);
        _this.bn = ThemeResolver.c(Button.c, Button.dx, Button.c0);
        _this.bl = ThemeResolver.c(Button.c, Button.dv, Button.cy);
        _this.bm = ThemeResolver.c(Button.c, Button.dw, Button.cz);
        _this.k9 = ThemeResolver.e(Button.c, Button.rp, Button.o6);
        _this.j4 = ThemeResolver.d(Button.c, Button.kq, Button.ki);
        _this.kz = ThemeResolver.e(Button.c, Button.rg, Button.ox);
        _this.k1 = ThemeResolver.e(Button.c, Button.ri, Button.oz);
        _this.k2 = ThemeResolver.e(Button.c, Button.rj, Button.o0);
        _this.k3 = ThemeResolver.e(Button.c, Button.rk, Button.o1);
        _this.bk = ThemeResolver.c(Button.c, Button.du, Button.cx);
        _this.i = ThemeResolver.a(Button.c, Button.n, Button.l);
        _this.la = ThemeResolver.e(Button.c, Button.rq, Button.o7);
        _this.k7 = ThemeResolver.e(Button.c, Button.ro, Button.o5);
        _this.k4 = ThemeResolver.e(Button.c, Button.rl, Button.o2);
        _this.k5 = ThemeResolver.e(Button.c, Button.rm, Button.o3);
        _this.k6 = ThemeResolver.e(Button.c, Button.rn, Button.o4);
        _this.an = ThemeResolver.b(Button.c, Button.ba, Button.a2);
        _this.mt = null;
        _this.mv = null;
        _this.mw = null;
        _this.mx = null;
        _this.b7 = -1;
        _this.m0 = null;
        _this.mu = null;
        _this.ca = -1;
        _this.b9 = -1;
        _this.b8 = -1;
        _this.av = NaN;
        _this.ka = new CornerRadius(1, NaN, NaN, NaN, NaN);
        _this.m2 = null;
        _this.lr = null;
        _this.lt = null;
        _this.lu = null;
        _this.lv = null;
        _this.bt = -1;
        _this.ly = null;
        _this.ls = null;
        _this.bw = -1;
        _this.bv = -1;
        _this.bu = -1;
        _this.l0 = null;
        _this.l1 = null;
        _this.lz = null;
        _this.lw = null;
        _this.lx = null;
        _this.aq = NaN;
        _this.j7 = new CornerRadius(1, NaN, NaN, NaN, NaN);
        _this.lc = null;
        _this.le = null;
        _this.lf = null;
        _this.lg = null;
        _this.bo = -1;
        _this.j = 0;
        _this.l4 = null;
        _this.ld = null;
        _this.cb = -1;
        _this.by = -1;
        _this.bx = -1;
        _this.u = null;
        _this.m5 = null;
        _this.l6 = null;
        _this.m4 = null;
        _this.m3 = null;
        _this.m1 = null;
        _this.my = null;
        _this.mz = null;
        _this.l2 = null;
        _this.l3 = null;
        _this.ao = NaN;
        _this.j5 = new CornerRadius(1, NaN, NaN, NaN, NaN);
        _this.mi = null;
        _this.mk = null;
        _this.ml = null;
        _this.mm = null;
        _this.b3 = -1;
        _this.mp = null;
        _this.mj = null;
        _this.b6 = -1;
        _this.b5 = -1;
        _this.b4 = -1;
        _this.au = NaN;
        _this.j9 = new CornerRadius(1, NaN, NaN, NaN, NaN);
        _this.mr = null;
        _this.ms = null;
        _this.mq = null;
        _this.mn = null;
        _this.mo = null;
        _this.lh = null;
        _this.lj = null;
        _this.lk = null;
        _this.ll = null;
        _this.bp = -1;
        _this.l5 = null;
        _this.li = null;
        _this.bs = -1;
        _this.br = -1;
        _this.bq = -1;
        _this.ap = NaN;
        _this.j6 = new CornerRadius(1, NaN, NaN, NaN, NaN);
        _this.lp = null;
        _this.lq = null;
        _this.lo = null;
        _this.lm = null;
        _this.ln = null;
        _this.l7 = null;
        _this.l9 = null;
        _this.ma = null;
        _this.mb = null;
        _this.bz = -1;
        _this.me = null;
        _this.l8 = null;
        _this.b2 = -1;
        _this.b1 = -1;
        _this.b0 = -1;
        _this.ar = NaN;
        _this.j8 = new CornerRadius(1, NaN, NaN, NaN, NaN);
        _this.mg = null;
        _this.mh = null;
        _this.mf = null;
        _this.mc = null;
        _this.md = null;
        _this.e6 = "ig-native-button-" + Button.ew++;
        _this.e5 = "ig-button-" + Button.ev++;
        _this.e2 = "inline-block";
        _this.e3 = "inline-block";
        _this.e4 = null;
        _this.e0 = "center";
        _this.ex = null;
        _this.e7 = null;
        _this.cc = 0;
        _this.z = false;
        _this.ab = false;
        _this.ac = true;
        _this.e1 = null;
        _this.x = false;
        _this.w = false;
        _this.ad = false;
        _this.aa = false;
        _this.y = false;
        _this.propertyChanged = null;
        _this.clicked = null;
        var a = new ButtonView();
        a.a = _this;
        _this.view = a;
        _this.view.ai();
        return _this;
    }
    Object.defineProperty(Button.prototype, "view", {
        get: function () {
            return this._view;
        },
        set: function (a) {
            this._view = a;
        },
        enumerable: true,
        configurable: true
    });
    Button.prototype.destroy = function () {
        this.provideContainer(null);
    };
    Button.prototype.jx = function (a, b, c) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        this.jz(a, b, c);
    };
    Button.prototype.jz = function (a, b, c) {
        switch (a) {
            case "CornerRadius":
            case "BorderColor":
            case "RestingElevation":
            case "HoverElevation":
            case "FocusElevation":
            case "RippleColor":
            case "BorderWidth":
            case "BackgroundColor":
            case "DisabledBackgroundColor":
            case "DisabledBorderColor":
            case "DisabledTextColor":
            case "DisabledElevation":
            case "HoverBackgroundColor":
            case "TextStyle":
            case "FocusTextColor":
            case "TextColor":
            case "HoverTextColor":
            case "FocusBackgroundColor":
            case "RaisedBorderColor":
            case "RaisedRestingElevation":
            case "RaisedFocusElevation":
            case "RaisedHoverElevation":
            case "RaisedRippleColor":
            case "RaisedBorderWidth":
            case "RaisedBackgroundColor":
            case "RaisedDisabledBackgroundColor":
            case "RaisedDisabledBorderColor":
            case "RaisedDisabledTextColor":
            case "RaisedDisabledElevation":
            case "RaisedHoverBackgroundColor":
            case "RaisedCornerRadius":
            case "RaisedFocusBackgroundColor":
            case "RaisedFocusTextColor":
            case "RaisedTextColor":
            case "RaisedHoverTextColor":
            case "FlatBorderColor":
            case "FlatRestingElevation":
            case "FlatFocusElevation":
            case "FlatHoverElevation":
            case "FlatRippleColor":
            case "FlatBorderWidth":
            case "FlatBackgroundColor":
            case "FlatDisabledBackgroundColor":
            case "FlatDisabledBorderColor":
            case "FlatDisabledTextColor":
            case "FlatDisabledElevation":
            case "FlatHoverBackgroundColor":
            case "FlatCornerRadius":
            case "FlatFocusBackgroundColor":
            case "FlatFocusTextColor":
            case "FlatTextColor":
            case "FlatHoverTextColor":
            case "OutlinedRippleColor":
            case "OutlinedRestingElevation":
            case "OutlinedFocusElevation":
            case "OutlinedHoverElevation":
            case "OutlinedBorderColor":
            case "OutlinedBorderWidth":
            case "OutlinedBackgroundColor":
            case "OutlinedDisabledBackgroundColor":
            case "OutlinedDisabledBorderColor":
            case "OutlinedDisabledTextColor":
            case "OutlinedDisabledElevation":
            case "OutlinedHoverBackgroundColor":
            case "OutlinedCornerRadius":
            case "OutlinedFocusBackgroundColor":
            case "OutlinedFocusTextColor":
            case "OutlinedTextColor":
            case "OutlinedHoverTextColor":
            case "FabBorderColor":
            case "FabRippleColor":
            case "FabRestingElevation":
            case "FabFocusElevation":
            case "FabHoverElevation":
            case "FabBorderWidth":
            case "FabBackgroundColor":
            case "FabDisabledBackgroundColor":
            case "FabDisabledBorderColor":
            case "FabDisabledTextColor":
            case "FabDisabledElevation":
            case "FabHoverBackgroundColor":
            case "FabCornerRadius":
            case "FabFocusBackgroundColor":
            case "FabFocusTextColor":
            case "FabTextColor":
            case "FabHoverTextColor":
            case "IconRestingElevation":
            case "IconFocusElevation":
            case "IconHoverElevation":
            case "IconBorderColor":
            case "IconRippleColor":
            case "IconBorderWidth":
            case "IconBackgroundColor":
            case "IconDisabledBackgroundColor":
            case "IconDisabledBorderColor":
            case "IconDisabledTextColor":
            case "IconDisabledElevation":
            case "IconHoverBackgroundColor":
            case "IconCornerRadius":
            case "IconFocusBackgroundColor":
            case "IconFocusTextColor":
            case "IconTextColor":
            case "IconHoverTextColor":
            case "ElevationMode":
                this.j2();
                break;
            case "BaseTheme":
                this.j3(this.d == 0 ? 2 : this.d);
                this.j2();
                break;
            case "IsDisabled":
                this.ae = this.disabled || this.af;
                this.j2();
                this.view.ak();
                break;
            case "DisableRipple":
                this.ae = this.disabled || this.af;
                this.j2();
                break;
            case "ActualDisableRipple":
                this.view.ae();
                break;
            case "ActualBackgroundColor":
            case "ActualDisabledBackgroundColor":
            case "ActualDisabledBorderColor":
            case "ActualDisabledTextColor":
            case "ActualDisabledElevation":
            case "ActualHoverBackgroundColor":
            case "ActualBorderColor":
            case "ActualFocusTextColor":
            case "ActualHoverTextColor":
            case "ActualElevationMode":
                this.j1();
                break;
            case "Density":
                this.g = this.h == 0 ? 1 : this.h;
                break;
            case "ActualDensity":
            case "ActualBorderWidth":
            case "ActualCornerRadius":
                this.view.ar();
                this.j1();
                break;
            case "DisplayType":
                this.view.ar();
                this.j2();
                this.j1();
                break;
            case "InputId":
                this.view.aj();
                break;
            case "Display":
                this.view.af();
                break;
            case "FlexDirection":
                this.view.ag();
                break;
            case "FlexGrow":
                this.view.ah();
                break;
            case "AlignItems":
                this.view.aa();
                break;
            case "MinWidth":
                this.view.an(this.bh);
                this.view.ar();
                break;
            case "MinHeight":
                this.view.am(this.bg);
                this.view.ar();
                break;
            case "TabIndex":
                this.view.ao();
                break;
        }
    };
    Button.prototype.kc = function (a, b) {
        return new CornerRadius(1, !isNaN_(a.c) ? a.c : b.c, !isNaN_(a.d) ? a.d : b.d, !isNaN_(a.b) ? a.b : b.b, !isNaN_(a.a) ? a.a : b.a);
    };
    Button.prototype.j2 = function () {
        this.k = this.o != 0 ? this.o : this.m;
        this.nj = this.sf;
        this.ng = this.r3;
        this.m6 = this.nm;
        switch (this.s) {
            case 0:
                this.m9 = this.sg != null ? this.sg : this.tx != null ? this.tx : this.r6;
                this.na = this.sh != null ? this.sh : this.ty != null ? this.ty : this.r7;
                this.nb = this.si != null ? this.si : this.tz != null ? this.tz : this.r8;
                this.cd = this.d6 >= 0 ? this.d6 : this.ep >= 0 ? this.ep : this.d2;
                this.cg = this.et >= 0 ? this.et : this.es >= 0 ? this.es : this.d5;
                this.cf = this.eg >= 0 ? this.eg : this.er >= 0 ? this.er : this.d4;
                this.ce = this.ef >= 0 ? this.ef : this.eq >= 0 ? this.eq : this.d3;
                this.m8 = this.nl != null ? this.nl : this.tw != null ? this.tw : this.r5;
                this.m7 = this.nk != null ? this.nk : this.tv != null ? this.tv : this.r4;
                this.ne = this.s7 != null ? this.s7 : this.t2 != null ? this.t2 : this.sb;
                this.kb = this.kc(this.kd, this.kc(this.kx, this.ks));
                this.aw = !isNaN_(this.ax) ? this.ax : !isNaN_(this.bj) ? this.bj : this.bc;
                this.nh = this.t6 != null ? this.t6 : this.t4 != null ? this.t4 : this.sd;
                this.nc = this.s5 != null ? this.s5 : this.t0 != null ? this.t0 : this.r9;
                this.nd = this.s6 != null ? this.s6 : this.t1 != null ? this.t1 : this.sa;
                this.ni = this.t7 != null ? this.t7 : this.t5 != null ? this.t5 : this.se;
                this.nf = this.s8 != null ? this.s8 : this.t3 != null ? this.t3 : this.sc;
                break;
            case 2:
                this.m9 = this.sg != null ? this.sg : this.tm != null ? this.tm : this.ru;
                this.na = this.sh != null ? this.sh : this.tn != null ? this.tn : this.rv;
                this.nb = this.si != null ? this.si : this.to != null ? this.to : this.rw;
                this.cd = this.d6 >= 0 ? this.d6 : this.el >= 0 ? this.el : this.dy;
                this.cg = this.et >= 0 ? this.et : this.eo >= 0 ? this.eo : this.d1;
                this.cf = this.eg >= 0 ? this.eg : this.en >= 0 ? this.en : this.d0;
                this.ce = this.ef >= 0 ? this.ef : this.em >= 0 ? this.em : this.dz;
                this.m8 = this.nl != null ? this.nl : this.tl != null ? this.tl : this.rt;
                this.m7 = this.s7 != null ? this.s7 : this.nk != null ? this.nk : this.tk != null ? this.tk : this.rs;
                this.ne = this.tr != null ? this.tr : this.rz;
                this.kb = this.kc(this.kd, this.kc(this.kw, this.kr));
                this.aw = !isNaN_(this.ax) ? this.ax : !isNaN_(this.bi) ? this.bi : this.bb;
                this.nh = this.t6 != null ? this.t6 : this.tt != null ? this.tt : this.r1;
                this.nc = this.s5 != null ? this.s5 : this.tp != null ? this.tp : this.rx;
                this.nd = this.s6 != null ? this.s6 : this.tq != null ? this.tq : this.ry;
                this.ni = this.t7 != null ? this.t7 : this.tu != null ? this.tu : this.r2;
                this.nf = this.s8 != null ? this.s8 : this.ts != null ? this.ts : this.r0;
                break;
            case 1:
                this.m9 = this.sg != null ? this.sg : this.sw != null ? this.sw : this.pm;
                this.na = this.sh != null ? this.sh : this.sx != null ? this.sx : this.pn;
                this.nb = this.si != null ? this.si : this.sy != null ? this.sy : this.po;
                this.cd = this.d6 >= 0 ? this.d6 : this.eb >= 0 ? this.eb : this.c5;
                this.cg = this.et >= 0 ? this.et : this.ee >= 0 ? this.ee : this.c8;
                this.cf = this.eg >= 0 ? this.eg : this.ed >= 0 ? this.ed : this.c7;
                this.ce = this.ef >= 0 ? this.ef : this.ec >= 0 ? this.ec : this.c6;
                this.m8 = this.nl != null ? this.nl : this.sv != null ? this.sv : this.pl;
                this.m7 = this.nk != null ? this.nk : this.su != null ? this.su : this.pk;
                this.ne = this.s7 != null ? this.s7 : this.s1 != null ? this.s1 : this.pr;
                this.kb = this.kc(this.kd, this.kc(this.ku, this.kk));
                this.aw = !isNaN_(this.ax) ? this.ax : !isNaN_(this.be) ? this.be : this.a4;
                this.nh = this.t6 != null ? this.t6 : this.s3 != null ? this.s3 : this.pt;
                this.nc = this.s5 != null ? this.s5 : this.sz != null ? this.sz : this.pp;
                this.nd = this.s6 != null ? this.s6 : this.s0 != null ? this.s0 : this.pq;
                this.ni = this.t7 != null ? this.t7 : this.s4 != null ? this.s4 : this.pu;
                this.nf = this.s8 != null ? this.s8 : this.s2 != null ? this.s2 : this.ps;
                break;
            case 4:
                this.m9 = this.sg != null ? this.sg : this.tb != null ? this.tb : this.px;
                this.na = this.sh != null ? this.sh : this.tc != null ? this.tc : this.py;
                this.nb = this.si != null ? this.si : this.td != null ? this.td : this.pz;
                this.cd = this.d6 >= 0 ? this.d6 : this.eh >= 0 ? this.eh : this.c9;
                this.cg = this.et >= 0 ? this.et : this.ek >= 0 ? this.ek : this.dc;
                this.cf = this.eg >= 0 ? this.eg : this.ej >= 0 ? this.ej : this.db;
                this.ce = this.ef >= 0 ? this.ef : this.ei >= 0 ? this.ei : this.da;
                this.m8 = this.nl != null ? this.nl : this.ta != null ? this.ta : this.pw;
                this.m7 = this.nk != null ? this.nk : this.s9 != null ? this.s9 : this.pv;
                this.ne = this.s7 != null ? this.s7 : this.tg != null ? this.tg : this.p2;
                this.kb = this.kc(this.kd, this.kc(this.kv, this.kl));
                this.aw = !isNaN_(this.ax) ? this.ax : !isNaN_(this.bf) ? this.bf : this.a5;
                this.nh = this.t6 != null ? this.t6 : this.ti != null ? this.ti : this.p4;
                this.nc = this.s5 != null ? this.s5 : this.te != null ? this.te : this.p0;
                this.nd = this.s6 != null ? this.s6 : this.tf != null ? this.tf : this.p1;
                this.ni = this.t7 != null ? this.t7 : this.tj != null ? this.tj : this.p5;
                this.nf = this.s8 != null ? this.s8 : this.th != null ? this.th : this.p3;
                break;
            case 3:
                this.m9 = this.sg != null ? this.sg : this.sl != null ? this.sl : this.pb;
                this.na = this.sh != null ? this.sh : this.sm != null ? this.sm : this.pc;
                this.nb = this.si != null ? this.si : this.sn != null ? this.sn : this.pd;
                this.cd = this.d6 >= 0 ? this.d6 : this.d7 >= 0 ? this.d7 : this.c1;
                this.cg = this.et >= 0 ? this.et : this.ea >= 0 ? this.ea : this.c4;
                this.cf = this.eg >= 0 ? this.eg : this.d9 >= 0 ? this.d9 : this.c3;
                this.ce = this.ef >= 0 ? this.ef : this.d8 >= 0 ? this.d8 : this.c2;
                this.m8 = this.nl != null ? this.nl : this.sk != null ? this.sk : this.pa;
                this.m7 = this.nk != null ? this.nk : this.sj != null ? this.sj : this.o9;
                this.ne = this.s7 != null ? this.s7 : this.sq != null ? this.sq : this.pg;
                this.kb = this.kc(this.kd, this.kc(this.kt, this.kj));
                this.aw = !isNaN_(this.ax) ? this.ax : !isNaN_(this.bd) ? this.bd : this.a3;
                this.nh = this.t6 != null ? this.t6 : this.ss != null ? this.ss : this.sd;
                this.nc = this.s5 != null ? this.s5 : this.so != null ? this.so : this.pe;
                this.nd = this.s6 != null ? this.s6 : this.sp != null ? this.sp : this.pf;
                this.ni = this.t7 != null ? this.t7 : this.st != null ? this.st : this.pj;
                this.nf = this.s8 != null ? this.s8 : this.sr != null ? this.sr : this.ph;
                break;
        }
    };
    Button.prototype.js = function () {
        if (this.disabled) {
            return;
        }
        if (this.clicked != null) {
            this.clicked(this, new ButtonClickEventArgs());
        }
    };
    Button.prototype.jr = function () {
        this.focused = false;
        this.j1();
    };
    Button.prototype.ju = function () {
        this.focused = true;
        this.j1();
    };
    Button.prototype.jw = function () {
        this.al = false;
        this.j1();
    };
    Button.prototype.jv = function () {
        this.al = true;
        this.j1();
    };
    Button.prototype.j1 = function () {
        var a = this.view.p;
        NativeUI.l(a, this.kb);
        NativeUI.k(a, this.m8);
        if (!isNaN_(this.aw)) {
            NativeUI.m(a, new Thickness(0, this.aw));
        }
        if (this.disabled) {
            this.view.aq(this.cd, this.k);
        }
        else if (this.focused && this.ak) {
            this.view.aq(this.ce, this.k);
        }
        else {
            if (this.al) {
                this.view.aq(this.cf, this.k);
            }
            else {
                this.view.aq(this.cg, this.k);
            }
        }
        if (this.disabled) {
            NativeUI.j(a, this.m9);
        }
        else if (this.focused && this.ak) {
            NativeUI.j(a, this.nc);
        }
        else {
            if (this.al) {
                NativeUI.j(a, this.ne);
            }
            else {
                NativeUI.j(a, this.m7);
            }
        }
        this.view.ap(this.nh, BrushUtil.g(0, 0, 0, 0));
        if (this.v != null) {
            this.view.as(this.v);
        }
        if (this.disabled) {
            NativeUI.n(this.view.q, this.nb);
            NativeUI.o(this.view.q, this.nb);
        }
        else if (this.focused && this.ak) {
            NativeUI.n(this.view.q, this.nd);
            NativeUI.o(this.view.q, this.nd);
        }
        else {
            if (this.al) {
                NativeUI.n(this.view.q, this.nf);
                NativeUI.o(this.view.q, this.nf);
            }
            else {
                NativeUI.n(this.view.q, this.ni);
                NativeUI.o(this.view.q, this.ni);
            }
        }
    };
    Button.prototype.j3 = function (a) {
        this.sf = ThemeResolver.e(a, Button.rr, Button.o8);
        this.r3 = ThemeResolver.e(a, Button.rf, Button.ow);
        this.nm = ThemeResolver.e(a, Button.p6, Button.nn);
        this.m = ThemeResolver.a(a, Button.n, Button.l);
        this.r6 = ThemeResolver.e(a, Button.ri, Button.oz);
        this.r7 = ThemeResolver.e(a, Button.rj, Button.o0);
        this.r8 = ThemeResolver.e(a, Button.rk, Button.o1);
        this.d2 = ThemeResolver.c(a, Button.du, Button.cx);
        this.d5 = ThemeResolver.c(a, Button.dx, Button.c0);
        this.d4 = ThemeResolver.c(a, Button.dw, Button.cz);
        this.d3 = ThemeResolver.c(a, Button.dv, Button.cy);
        this.r5 = ThemeResolver.e(a, Button.rh, Button.oy);
        this.sd = ThemeResolver.e(a, Button.rp, Button.o6);
        this.ks = ThemeResolver.d(a, Button.kq, Button.ki);
        this.bc = ThemeResolver.b(a, Button.ba, Button.a2);
        this.r4 = ThemeResolver.e(a, Button.rg, Button.ox);
        this.se = ThemeResolver.e(a, Button.rq, Button.o7);
        this.sc = ThemeResolver.e(a, Button.ro, Button.o5);
        this.sb = ThemeResolver.e(a, Button.rn, Button.o4);
        this.r9 = ThemeResolver.e(a, Button.rl, Button.o2);
        this.sa = ThemeResolver.e(a, Button.rm, Button.o3);
        this.pm = ThemeResolver.e(a, Button.qk, Button.n1);
        this.pn = ThemeResolver.e(a, Button.ql, Button.n2);
        this.po = ThemeResolver.e(a, Button.qm, Button.n3);
        this.c5 = ThemeResolver.c(a, Button.dh, Button.cl);
        this.c8 = ThemeResolver.c(a, Button.dk, Button.co);
        this.c7 = ThemeResolver.c(a, Button.dj, Button.cn);
        this.c6 = ThemeResolver.c(a, Button.di, Button.cm);
        this.pl = ThemeResolver.e(a, Button.qj, Button.n0);
        this.pt = ThemeResolver.e(a, Button.qr, Button.n8);
        this.kk = ThemeResolver.d(a, Button.kn, Button.kf);
        this.a4 = ThemeResolver.b(a, Button.a7, Button.az);
        this.pk = ThemeResolver.e(a, Button.qi, Button.nz);
        this.pu = ThemeResolver.e(a, Button.qs, Button.n9);
        this.ps = ThemeResolver.e(a, Button.qq, Button.n7);
        this.pr = ThemeResolver.e(a, Button.qp, Button.n6);
        this.pp = ThemeResolver.e(a, Button.qn, Button.n4);
        this.pq = ThemeResolver.e(a, Button.qo, Button.n5);
        this.ru = ThemeResolver.e(a, Button.q6, Button.on);
        this.rv = ThemeResolver.e(a, Button.q7, Button.oo);
        this.rw = ThemeResolver.e(a, Button.q8, Button.op);
        this.dy = ThemeResolver.c(a, Button.dq, Button.ct);
        this.d1 = ThemeResolver.c(a, Button.dt, Button.cw);
        this.d0 = ThemeResolver.c(a, Button.ds, Button.cv);
        this.dz = ThemeResolver.c(a, Button.dr, Button.cu);
        this.rt = ThemeResolver.e(a, Button.q5, Button.om);
        this.r1 = ThemeResolver.e(a, Button.rd, Button.ou);
        this.kr = ThemeResolver.d(a, Button.kp, Button.kh);
        this.bb = ThemeResolver.b(a, Button.a9, Button.a1);
        this.rs = ThemeResolver.e(a, Button.q4, Button.ol);
        this.r2 = ThemeResolver.e(a, Button.re, Button.ov);
        this.r0 = ThemeResolver.e(a, Button.rc, Button.ot);
        this.rz = ThemeResolver.e(a, Button.rb, Button.os);
        this.rx = ThemeResolver.e(a, Button.q9, Button.oq);
        this.ry = ThemeResolver.e(a, Button.ra, Button.or);
        this.px = ThemeResolver.e(a, Button.qv, Button.oc);
        this.py = ThemeResolver.e(a, Button.qw, Button.od);
        this.pz = ThemeResolver.e(a, Button.qx, Button.oe);
        this.c9 = ThemeResolver.c(a, Button.dl, Button.cp);
        this.dc = ThemeResolver.c(a, Button.dp, Button.cs);
        this.db = ThemeResolver.c(a, Button.dn, Button.cr);
        this.da = ThemeResolver.c(a, Button.dm, Button.cq);
        this.pw = ThemeResolver.e(a, Button.qu, Button.ob);
        this.p4 = ThemeResolver.e(a, Button.q2, Button.oj);
        this.kl = ThemeResolver.d(a, Button.ko, Button.kg);
        this.a5 = ThemeResolver.b(a, Button.a8, Button.a0);
        this.pv = ThemeResolver.e(a, Button.qt, Button.oa);
        this.p5 = ThemeResolver.e(a, Button.q3, Button.ok);
        this.p3 = ThemeResolver.e(a, Button.q1, Button.oi);
        this.p2 = ThemeResolver.e(a, Button.q0, Button.oh);
        this.p0 = ThemeResolver.e(a, Button.qy, Button.of);
        this.p1 = ThemeResolver.e(a, Button.qz, Button.og);
        this.pb = ThemeResolver.e(a, Button.p9, Button.nq);
        this.pc = ThemeResolver.e(a, Button.qa, Button.nr);
        this.pd = ThemeResolver.e(a, Button.qb, Button.ns);
        this.c1 = ThemeResolver.c(a, Button.dd, Button.ch);
        this.c4 = ThemeResolver.c(a, Button.dg, Button.ck);
        this.c3 = ThemeResolver.c(a, Button.df, Button.cj);
        this.c2 = ThemeResolver.c(a, Button.de, Button.ci);
        this.pa = ThemeResolver.e(a, Button.p8, Button.np);
        this.pi = ThemeResolver.e(a, Button.qg, Button.nx);
        this.kj = ThemeResolver.d(a, Button.km, Button.ke);
        this.a3 = ThemeResolver.b(a, Button.a6, Button.ay);
        this.o9 = ThemeResolver.e(a, Button.p7, Button.no);
        this.pj = ThemeResolver.e(a, Button.qh, Button.ny);
        this.ph = ThemeResolver.e(a, Button.qf, Button.nw);
        this.pg = ThemeResolver.e(a, Button.qe, Button.nv);
        this.pe = ThemeResolver.e(a, Button.qc, Button.nt);
        this.pf = ThemeResolver.e(a, Button.qd, Button.nu);
    };
    Object.defineProperty(Button.prototype, "bh", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            var b = this.at;
            this.at = a;
            if (b != this.at) {
                this.jx("MinWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "bg", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            var b = this.as;
            this.as = a;
            if (b != this.as) {
                this.jx("MinHeight", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.r;
            this.r = a;
            if (b != this.r) {
                this.jx("DisplayType", enumGetBox(ButtonDisplayStyle_$type, b), enumGetBox(ButtonDisplayStyle_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "h", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            var b = this.f;
            this.f = a;
            if (b != this.f) {
                this.jx("Density", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "d", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.b;
            this.b = a;
            if (b != this.b) {
                this.jx("BaseTheme", enumGetBox(BaseControlTheme_$type, b), enumGetBox(BaseControlTheme_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "g", {
        get: function () {
            return this.e;
        },
        set: function (a) {
            var b = this.e;
            this.e = a;
            if (b != this.e) {
                this.jx("ActualDensity", enumGetBox(ControlDisplayDensity_$type, b), enumGetBox(ControlDisplayDensity_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "m8", {
        get: function () {
            return this.k0;
        },
        set: function (a) {
            var b = this.k0;
            this.k0 = a;
            if (b != this.k0) {
                this.jx("ActualBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nj", {
        get: function () {
            return this.lb;
        },
        set: function (a) {
            var b = this.lb;
            this.lb = a;
            if (b != this.lb) {
                this.jx("ActualUmbraShadowColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ng", {
        get: function () {
            return this.k8;
        },
        set: function (a) {
            var b = this.k8;
            this.k8 = a;
            if (b != this.k8) {
                this.jx("ActualPenumbraShadowColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "m6", {
        get: function () {
            return this.ky;
        },
        set: function (a) {
            var b = this.ky;
            this.ky = a;
            if (b != this.ky) {
                this.jx("ActualAmbientShadowColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "cg", {
        get: function () {
            return this.bn;
        },
        set: function (a) {
            var b = this.bn;
            this.bn = a;
            if (b != this.bn) {
                this.jx("ActualRestingElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ce", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            var b = this.bl;
            this.bl = a;
            if (b != this.bl) {
                this.jx("ActualFocusElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "cf", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            var b = this.bm;
            this.bm = a;
            if (b != this.bm) {
                this.jx("ActualHoverElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nh", {
        get: function () {
            return this.k9;
        },
        set: function (a) {
            var b = this.k9;
            this.k9 = a;
            if (b != this.k9) {
                this.jx("ActualRippleColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "kb", {
        get: function () {
            return this.j4;
        },
        set: function (a) {
            var b = this.j4;
            this.j4 = a;
            if (b != this.j4) {
                this.jx("ActualCornerRadius", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "m7", {
        get: function () {
            return this.kz;
        },
        set: function (a) {
            var b = this.kz;
            this.kz = a;
            if (b != this.kz) {
                this.jx("ActualBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "m9", {
        get: function () {
            return this.k1;
        },
        set: function (a) {
            var b = this.k1;
            this.k1 = a;
            if (b != this.k1) {
                this.jx("ActualDisabledBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "na", {
        get: function () {
            return this.k2;
        },
        set: function (a) {
            var b = this.k2;
            this.k2 = a;
            if (b != this.k2) {
                this.jx("ActualDisabledBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nb", {
        get: function () {
            return this.k3;
        },
        set: function (a) {
            var b = this.k3;
            this.k3 = a;
            if (b != this.k3) {
                this.jx("ActualDisabledTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "cd", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            var b = this.bk;
            this.bk = a;
            if (b != this.bk) {
                this.jx("ActualDisabledElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "k", {
        get: function () {
            return this.i;
        },
        set: function (a) {
            var b = this.i;
            this.i = a;
            if (b != this.i) {
                this.jx("ActualElevationMode", enumGetBox(ElevationMode_$type, b), enumGetBox(ElevationMode_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ni", {
        get: function () {
            return this.la;
        },
        set: function (a) {
            var b = this.la;
            this.la = a;
            if (b != this.la) {
                this.jx("ActualTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nf", {
        get: function () {
            return this.k7;
        },
        set: function (a) {
            var b = this.k7;
            this.k7 = a;
            if (b != this.k7) {
                this.jx("ActualHoverTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nc", {
        get: function () {
            return this.k4;
        },
        set: function (a) {
            var b = this.k4;
            this.k4 = a;
            if (b != this.k4) {
                this.jx("ActualFocusBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nd", {
        get: function () {
            return this.k5;
        },
        set: function (a) {
            var b = this.k5;
            this.k5 = a;
            if (b != this.k5) {
                this.jx("ActualFocusTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ne", {
        get: function () {
            return this.k6;
        },
        set: function (a) {
            var b = this.k6;
            this.k6 = a;
            if (b != this.k6) {
                this.jx("ActualHoverBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "aw", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            var b = this.an;
            this.an = a;
            if (b != this.an) {
                this.jx("ActualBorderWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tv", {
        get: function () {
            return this.mt;
        },
        set: function (a) {
            var b = this.mt;
            this.mt = a;
            if (b != this.mt) {
                this.jx("RaisedBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tx", {
        get: function () {
            return this.mv;
        },
        set: function (a) {
            var b = this.mv;
            this.mv = a;
            if (b != this.mv) {
                this.jx("RaisedDisabledBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ty", {
        get: function () {
            return this.mw;
        },
        set: function (a) {
            var b = this.mw;
            this.mw = a;
            if (b != this.mw) {
                this.jx("RaisedDisabledBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tz", {
        get: function () {
            return this.mx;
        },
        set: function (a) {
            var b = this.mx;
            this.mx = a;
            if (b != this.mx) {
                this.jx("RaisedDisabledTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ep", {
        get: function () {
            return this.b7;
        },
        set: function (a) {
            var b = this.b7;
            this.b7 = a;
            if (b != this.b7) {
                this.jx("RaisedDisabledElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t2", {
        get: function () {
            return this.m0;
        },
        set: function (a) {
            var b = this.m0;
            this.m0 = a;
            if (b != this.m0) {
                this.jx("RaisedHoverBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tw", {
        get: function () {
            return this.mu;
        },
        set: function (a) {
            var b = this.mu;
            this.mu = a;
            if (b != this.mu) {
                this.jx("RaisedBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "es", {
        get: function () {
            return this.ca;
        },
        set: function (a) {
            var b = this.ca;
            this.ca = a;
            if (b != this.ca) {
                this.jx("RaisedRestingElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "er", {
        get: function () {
            return this.b9;
        },
        set: function (a) {
            var b = this.b9;
            this.b9 = a;
            if (b != this.b9) {
                this.jx("RaisedHoverElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "eq", {
        get: function () {
            return this.b8;
        },
        set: function (a) {
            var b = this.b8;
            this.b8 = a;
            if (b != this.b8) {
                this.jx("RaisedFocusElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "bj", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            var b = this.av;
            this.av = a;
            if (b != this.av) {
                this.jx("RaisedBorderWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "kx", {
        get: function () {
            return this.ka;
        },
        set: function (a) {
            var b = this.ka;
            this.ka = a;
            {
                this.jx("RaisedCornerRadius", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t4", {
        get: function () {
            return this.m2;
        },
        set: function (a) {
            var b = this.m2;
            this.m2 = a;
            if (b != this.m2) {
                this.jx("RaisedRippleColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "su", {
        get: function () {
            return this.lr;
        },
        set: function (a) {
            var b = this.lr;
            this.lr = a;
            if (b != this.lr) {
                this.jx("FlatBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sw", {
        get: function () {
            return this.lt;
        },
        set: function (a) {
            var b = this.lt;
            this.lt = a;
            if (b != this.lt) {
                this.jx("FlatDisabledBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sx", {
        get: function () {
            return this.lu;
        },
        set: function (a) {
            var b = this.lu;
            this.lu = a;
            if (b != this.lu) {
                this.jx("FlatDisabledBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sy", {
        get: function () {
            return this.lv;
        },
        set: function (a) {
            var b = this.lv;
            this.lv = a;
            if (b != this.lv) {
                this.jx("FlatDisabledTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "eb", {
        get: function () {
            return this.bt;
        },
        set: function (a) {
            var b = this.bt;
            this.bt = a;
            if (b != this.bt) {
                this.jx("FlatDisabledElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s1", {
        get: function () {
            return this.ly;
        },
        set: function (a) {
            var b = this.ly;
            this.ly = a;
            if (b != this.ly) {
                this.jx("FlatHoverBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sv", {
        get: function () {
            return this.ls;
        },
        set: function (a) {
            var b = this.ls;
            this.ls = a;
            if (b != this.ls) {
                this.jx("FlatBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ee", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            var b = this.bw;
            this.bw = a;
            if (b != this.bw) {
                this.jx("FlatRestingElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ed", {
        get: function () {
            return this.bv;
        },
        set: function (a) {
            var b = this.bv;
            this.bv = a;
            if (b != this.bv) {
                this.jx("FlatHoverElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ec", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            var b = this.bu;
            this.bu = a;
            if (b != this.bu) {
                this.jx("FlatFocusElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s3", {
        get: function () {
            return this.l0;
        },
        set: function (a) {
            var b = this.l0;
            this.l0 = a;
            if (b != this.l0) {
                this.jx("FlatRippleColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s4", {
        get: function () {
            return this.l1;
        },
        set: function (a) {
            var b = this.l1;
            this.l1 = a;
            if (b != this.l1) {
                this.jx("FlatTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s2", {
        get: function () {
            return this.lz;
        },
        set: function (a) {
            var b = this.lz;
            this.lz = a;
            if (b != this.lz) {
                this.jx("FlatHoverTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sz", {
        get: function () {
            return this.lw;
        },
        set: function (a) {
            var b = this.lw;
            this.lw = a;
            if (b != this.lw) {
                this.jx("FlatFocusBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s0", {
        get: function () {
            return this.lx;
        },
        set: function (a) {
            var b = this.lx;
            this.lx = a;
            if (b != this.lx) {
                this.jx("FlatFocusTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "be", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            var b = this.aq;
            this.aq = a;
            if (b != this.aq) {
                this.jx("FlatBorderWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ku", {
        get: function () {
            return this.j7;
        },
        set: function (a) {
            var b = this.j7;
            this.j7 = a;
            {
                this.jx("FlatCornerRadius", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nk", {
        get: function () {
            return this.lc;
        },
        set: function (a) {
            var b = this.lc;
            this.lc = a;
            if (b != this.lc) {
                this.jx("BackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sg", {
        get: function () {
            return this.le;
        },
        set: function (a) {
            var b = this.le;
            this.le = a;
            if (b != this.le) {
                this.jx("DisabledBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sh", {
        get: function () {
            return this.lf;
        },
        set: function (a) {
            var b = this.lf;
            this.lf = a;
            if (b != this.lf) {
                this.jx("DisabledBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "si", {
        get: function () {
            return this.lg;
        },
        set: function (a) {
            var b = this.lg;
            this.lg = a;
            if (b != this.lg) {
                this.jx("DisabledTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "d6", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            var b = this.bo;
            this.bo = a;
            if (b != this.bo) {
                this.jx("DisabledElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "o", {
        get: function () {
            return this.j;
        },
        set: function (a) {
            var b = this.j;
            this.j = a;
            if (b != this.j) {
                this.jx("ElevationMode", enumGetBox(ElevationMode_$type, b), enumGetBox(ElevationMode_$type, a));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s7", {
        get: function () {
            return this.l4;
        },
        set: function (a) {
            var b = this.l4;
            this.l4 = a;
            if (b != this.l4) {
                this.jx("HoverBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "nl", {
        get: function () {
            return this.ld;
        },
        set: function (a) {
            var b = this.ld;
            this.ld = a;
            if (b != this.ld) {
                this.jx("BorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "et", {
        get: function () {
            return this.cb;
        },
        set: function (a) {
            var b = this.cb;
            this.cb = a;
            if (b != this.cb) {
                this.jx("RestingElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "eg", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            var b = this.by;
            this.by = a;
            if (b != this.by) {
                this.jx("HoverElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ef", {
        get: function () {
            return this.bx;
        },
        set: function (a) {
            var b = this.bx;
            this.bx = a;
            if (b != this.bx) {
                this.jx("FocusElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "v", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            var b = this.u;
            this.u = a;
            if (b != this.u) {
                this.jx("TextStyle", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t7", {
        get: function () {
            return this.m5;
        },
        set: function (a) {
            var b = this.m5;
            this.m5 = a;
            if (b != this.m5) {
                this.jx("TextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s8", {
        get: function () {
            return this.l6;
        },
        set: function (a) {
            var b = this.l6;
            this.l6 = a;
            if (b != this.l6) {
                this.jx("HoverTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t6", {
        get: function () {
            return this.m4;
        },
        set: function (a) {
            var b = this.m4;
            this.m4 = a;
            if (b != this.m4) {
                this.jx("RippleColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t5", {
        get: function () {
            return this.m3;
        },
        set: function (a) {
            var b = this.m3;
            this.m3 = a;
            if (b != this.m3) {
                this.jx("RaisedTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t3", {
        get: function () {
            return this.m1;
        },
        set: function (a) {
            var b = this.m1;
            this.m1 = a;
            if (b != this.m1) {
                this.jx("RaisedHoverTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t0", {
        get: function () {
            return this.my;
        },
        set: function (a) {
            var b = this.my;
            this.my = a;
            if (b != this.my) {
                this.jx("RaisedFocusBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "t1", {
        get: function () {
            return this.mz;
        },
        set: function (a) {
            var b = this.mz;
            this.mz = a;
            if (b != this.mz) {
                this.jx("RaisedFocusTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s5", {
        get: function () {
            return this.l2;
        },
        set: function (a) {
            var b = this.l2;
            this.l2 = a;
            if (b != this.l2) {
                this.jx("FocusBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s6", {
        get: function () {
            return this.l3;
        },
        set: function (a) {
            var b = this.l3;
            this.l3 = a;
            if (b != this.l3) {
                this.jx("FocusTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ax", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            var b = this.ao;
            this.ao = a;
            if (b != this.ao) {
                this.jx("BorderWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "kd", {
        get: function () {
            return this.j5;
        },
        set: function (a) {
            var b = this.j5;
            this.j5 = a;
            {
                this.jx("CornerRadius", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tk", {
        get: function () {
            return this.mi;
        },
        set: function (a) {
            var b = this.mi;
            this.mi = a;
            if (b != this.mi) {
                this.jx("OutlinedBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tm", {
        get: function () {
            return this.mk;
        },
        set: function (a) {
            var b = this.mk;
            this.mk = a;
            if (b != this.mk) {
                this.jx("OutlinedDisabledBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tn", {
        get: function () {
            return this.ml;
        },
        set: function (a) {
            var b = this.ml;
            this.ml = a;
            if (b != this.ml) {
                this.jx("OutlinedDisabledBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "to", {
        get: function () {
            return this.mm;
        },
        set: function (a) {
            var b = this.mm;
            this.mm = a;
            if (b != this.mm) {
                this.jx("OutlinedDisabledTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "el", {
        get: function () {
            return this.b3;
        },
        set: function (a) {
            var b = this.b3;
            this.b3 = a;
            if (b != this.b3) {
                this.jx("OutlinedDisabledElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tr", {
        get: function () {
            return this.mp;
        },
        set: function (a) {
            var b = this.mp;
            this.mp = a;
            if (b != this.mp) {
                this.jx("OutlinedHoverBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tl", {
        get: function () {
            return this.mj;
        },
        set: function (a) {
            var b = this.mj;
            this.mj = a;
            if (b != this.mj) {
                this.jx("OutlinedBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "eo", {
        get: function () {
            return this.b6;
        },
        set: function (a) {
            var b = this.b6;
            this.b6 = a;
            if (b != this.b6) {
                this.jx("OutlinedRestingElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "en", {
        get: function () {
            return this.b5;
        },
        set: function (a) {
            var b = this.b5;
            this.b5 = a;
            if (b != this.b5) {
                this.jx("OutlinedHoverElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "em", {
        get: function () {
            return this.b4;
        },
        set: function (a) {
            var b = this.b4;
            this.b4 = a;
            if (b != this.b4) {
                this.jx("OutlinedFocusElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "bi", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            var b = this.au;
            this.au = a;
            if (b != this.au) {
                this.jx("OutlinedBorderWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "kw", {
        get: function () {
            return this.j9;
        },
        set: function (a) {
            var b = this.j9;
            this.j9 = a;
            {
                this.jx("OutlinedCornerRadius", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tt", {
        get: function () {
            return this.mr;
        },
        set: function (a) {
            var b = this.mr;
            this.mr = a;
            if (b != this.mr) {
                this.jx("OutlinedRippleColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tu", {
        get: function () {
            return this.ms;
        },
        set: function (a) {
            var b = this.ms;
            this.ms = a;
            if (b != this.ms) {
                this.jx("OutlinedTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ts", {
        get: function () {
            return this.mq;
        },
        set: function (a) {
            var b = this.mq;
            this.mq = a;
            if (b != this.mq) {
                this.jx("OutlinedHoverTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tp", {
        get: function () {
            return this.mn;
        },
        set: function (a) {
            var b = this.mn;
            this.mn = a;
            if (b != this.mn) {
                this.jx("OutlinedFocusBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tq", {
        get: function () {
            return this.mo;
        },
        set: function (a) {
            var b = this.mo;
            this.mo = a;
            if (b != this.mo) {
                this.jx("OutlinedFocusTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sj", {
        get: function () {
            return this.lh;
        },
        set: function (a) {
            var b = this.lh;
            this.lh = a;
            if (b != this.lh) {
                this.jx("FabBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sl", {
        get: function () {
            return this.lj;
        },
        set: function (a) {
            var b = this.lj;
            this.lj = a;
            if (b != this.lj) {
                this.jx("FabDisabledBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sm", {
        get: function () {
            return this.lk;
        },
        set: function (a) {
            var b = this.lk;
            this.lk = a;
            if (b != this.lk) {
                this.jx("FabDisabledBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sn", {
        get: function () {
            return this.ll;
        },
        set: function (a) {
            var b = this.ll;
            this.ll = a;
            if (b != this.ll) {
                this.jx("FabDisabledTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "d7", {
        get: function () {
            return this.bp;
        },
        set: function (a) {
            var b = this.bp;
            this.bp = a;
            if (b != this.bp) {
                this.jx("FabDisabledElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sq", {
        get: function () {
            return this.l5;
        },
        set: function (a) {
            var b = this.l5;
            this.l5 = a;
            if (b != this.l5) {
                this.jx("FabHoverBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sk", {
        get: function () {
            return this.li;
        },
        set: function (a) {
            var b = this.li;
            this.li = a;
            if (b != this.li) {
                this.jx("FabBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ea", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            var b = this.bs;
            this.bs = a;
            if (b != this.bs) {
                this.jx("FabRestingElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "d9", {
        get: function () {
            return this.br;
        },
        set: function (a) {
            var b = this.br;
            this.br = a;
            if (b != this.br) {
                this.jx("FabHoverElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "d8", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            var b = this.bq;
            this.bq = a;
            if (b != this.bq) {
                this.jx("FabFocusElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "bd", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            var b = this.ap;
            this.ap = a;
            if (b != this.ap) {
                this.jx("FabBorderWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "kt", {
        get: function () {
            return this.j6;
        },
        set: function (a) {
            var b = this.j6;
            this.j6 = a;
            {
                this.jx("FabCornerRadius", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ss", {
        get: function () {
            return this.lp;
        },
        set: function (a) {
            var b = this.lp;
            this.lp = a;
            if (b != this.lp) {
                this.jx("FabRippleColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "st", {
        get: function () {
            return this.lq;
        },
        set: function (a) {
            var b = this.lq;
            this.lq = a;
            if (b != this.lq) {
                this.jx("FabTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sr", {
        get: function () {
            return this.lo;
        },
        set: function (a) {
            var b = this.lo;
            this.lo = a;
            if (b != this.lo) {
                this.jx("FabHoverTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "so", {
        get: function () {
            return this.lm;
        },
        set: function (a) {
            var b = this.lm;
            this.lm = a;
            if (b != this.lm) {
                this.jx("FabFocusBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "sp", {
        get: function () {
            return this.ln;
        },
        set: function (a) {
            var b = this.ln;
            this.ln = a;
            if (b != this.ln) {
                this.jx("FabFocusTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "s9", {
        get: function () {
            return this.l7;
        },
        set: function (a) {
            var b = this.l7;
            this.l7 = a;
            if (b != this.l7) {
                this.jx("IconBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tb", {
        get: function () {
            return this.l9;
        },
        set: function (a) {
            var b = this.l9;
            this.l9 = a;
            if (b != this.l9) {
                this.jx("IconDisabledBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tc", {
        get: function () {
            return this.ma;
        },
        set: function (a) {
            var b = this.ma;
            this.ma = a;
            if (b != this.ma) {
                this.jx("IconDisabledBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "td", {
        get: function () {
            return this.mb;
        },
        set: function (a) {
            var b = this.mb;
            this.mb = a;
            if (b != this.mb) {
                this.jx("IconDisabledTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "eh", {
        get: function () {
            return this.bz;
        },
        set: function (a) {
            var b = this.bz;
            this.bz = a;
            if (b != this.bz) {
                this.jx("IconDisabledElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tg", {
        get: function () {
            return this.me;
        },
        set: function (a) {
            var b = this.me;
            this.me = a;
            if (b != this.me) {
                this.jx("IconHoverBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ta", {
        get: function () {
            return this.l8;
        },
        set: function (a) {
            var b = this.l8;
            this.l8 = a;
            if (b != this.l8) {
                this.jx("IconBorderColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ek", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            var b = this.b2;
            this.b2 = a;
            if (b != this.b2) {
                this.jx("IconRestingElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ej", {
        get: function () {
            return this.b1;
        },
        set: function (a) {
            var b = this.b1;
            this.b1 = a;
            if (b != this.b1) {
                this.jx("IconHoverElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ei", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            var b = this.b0;
            this.b0 = a;
            if (b != this.b0) {
                this.jx("IconFocusElevation", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "bf", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            var b = this.ar;
            this.ar = a;
            if (b != this.ar) {
                this.jx("IconBorderWidth", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "kv", {
        get: function () {
            return this.j8;
        },
        set: function (a) {
            var b = this.j8;
            this.j8 = a;
            {
                this.jx("IconCornerRadius", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ti", {
        get: function () {
            return this.mg;
        },
        set: function (a) {
            var b = this.mg;
            this.mg = a;
            if (b != this.mg) {
                this.jx("IconRippleColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tj", {
        get: function () {
            return this.mh;
        },
        set: function (a) {
            var b = this.mh;
            this.mh = a;
            if (b != this.mh) {
                this.jx("IconTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "th", {
        get: function () {
            return this.mf;
        },
        set: function (a) {
            var b = this.mf;
            this.mf = a;
            if (b != this.mf) {
                this.jx("IconHoverTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "te", {
        get: function () {
            return this.mc;
        },
        set: function (a) {
            var b = this.mc;
            this.mc = a;
            if (b != this.mc) {
                this.jx("IconFocusBackgroundColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "tf", {
        get: function () {
            return this.md;
        },
        set: function (a) {
            var b = this.md;
            this.md = a;
            if (b != this.md) {
                this.jx("IconFocusTextColor", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "h7", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            var b = this.e6;
            this.e6 = a;
            if (b != this.e6) {
                this.jx("InputId", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "h5", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            var b = this.e5;
            this.e5 = a;
            if (b != this.e5) {
                this.jx("Id", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "gb", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            var b = this.e2;
            this.e2 = a;
            if (b != this.e2) {
                this.jx("Display", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "he", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            var b = this.e3;
            this.e3 = a;
            if (b != this.e3) {
                this.jx("FlexDirection", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "hg", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            var b = this.e4;
            this.e4 = a;
            if (b != this.e4) {
                this.jx("FlexGrow", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "fv", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            var b = this.e0;
            this.e0 = a;
            if (b != this.e0) {
                this.jx("AlignItems", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ez", {
        get: function () {
            return this.ex;
        },
        set: function (a) {
            var b = this.ex;
            this.ex = a;
            if (b != this.ex) {
                this.jx("Value", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ig", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            var b = this.e7;
            this.e7 = a;
            if (b != this.e7) {
                this.jx("Name", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ah", {
        get: function () {
            return this.z;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "eu", {
        get: function () {
            return this.cc;
        },
        set: function (a) {
            var b = this.cc;
            this.cc = a;
            this.z = true;
            if (b != this.cc) {
                this.jx("TabIndex", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "focused", {
        get: function () {
            return this.ab;
        },
        set: function (a) {
            var b = this.ab;
            this.ab = a;
            if (b != this.ab) {
                this.jx("IsFocused", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ak", {
        get: function () {
            return this.ac;
        },
        set: function (a) {
            var b = this.ac;
            this.ac = a;
            if (b != this.ac) {
                this.jx("IsFocusStyleEnabled", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "fx", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            var b = this.e1;
            this.e1 = a;
            if (b != this.e1) {
                this.jx("AriaLabel", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "af", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.x;
            this.x = a;
            if (b != this.x) {
                this.jx("DisableRipple", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ae", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            var b = this.w;
            this.w = a;
            if (b != this.w) {
                this.jx("ActualDisableRipple", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "al", {
        get: function () {
            return this.ad;
        },
        set: function (a) {
            var b = this.ad;
            this.ad = a;
            if (b != this.ad) {
                this.jx("IsHover", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "disabled", {
        get: function () {
            return this.aa;
        },
        set: function (a) {
            var b = this.aa;
            this.aa = a;
            if (b != this.aa) {
                this.jx("IsDisabled", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "ag", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            var b = this.y;
            this.y = a;
            if (b != this.y) {
                this.jx("DisableTransitions", b, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    Button.prototype.jy = function () {
        this.jp();
        this.view.ap(this.nh, BrushUtil.g(0, 0, 0, 0));
        this.j1();
    };
    Object.defineProperty(Button.prototype, "a", {
        get: function () {
            var a = new AnimationKeyFrameEffectTiming();
            a.g = 300;
            a.b = 0;
            return a;
        },
        enumerable: true,
        configurable: true
    });
    Button.prototype.jp = function () {
        this.view.z();
    };
    Button.prototype.onDetachedFromUI = function () {
        this.view.ad();
    };
    Button.prototype.onAttachedToUI = function () {
        this.view.ab();
    };
    Button.prototype.appendButtonContent = function (a) {
        this.view.y(a);
    };
    Button.prototype.am = function () {
        return this.view.f();
    };
    Button.prototype.ey = function () {
        return this.p();
    };
    Button.prototype.gf = function () {
        var a = this.p();
        return a.ab();
    };
    Button.prototype.p = function () {
        var a = new ButtonVisualModelExport();
        a.s = this.view.j.rootWrapper.getNativeElement().offsetTop;
        a.q = this.view.j.rootWrapper.getNativeElement().offsetLeft;
        a.p = this.view.j.rootWrapper.getNativeElement().offsetHeight;
        a.t = this.view.j.rootWrapper.getNativeElement().offsetWidth;
        a.h = this.d;
        a.i = this.g;
        a.c = AppearanceHelper.a(this.m8);
        a.g = AppearanceHelper.a(this.nj);
        a.d = AppearanceHelper.a(this.ng);
        a.a = AppearanceHelper.a(this.m6);
        a.u = this.cg;
        a.e = AppearanceHelper.a(this.nh);
        a.ah = this.kb;
        a.b = AppearanceHelper.a(this.m7);
        a.j = this.k;
        a.f = AppearanceHelper.a(this.ni);
        a.o = this.aw;
        a.x = this.gb;
        a.y = this.he;
        a.z = this.hg;
        a.w = this.fv;
        a.v = this.view.q.getNativeElement().innerText;
        a.aa = this.ig;
        a.m = this.focused;
        a.k = this.ae;
        a.n = this.al;
        a.l = this.disabled;
        if (this.v != null) {
            var b = this.v;
            if (this.view != null && b.n == null) {
                var c = this.view.j;
                var d = FontUtil.getFontInfoFromString(c, b.fontString);
                b.n = d.n;
                b.d = d.d;
                b.o = d.o;
                b.q = d.q;
                b.r = d.r;
                b.s = d.s;
            }
            if (b.n != null) {
                a.ac = b.n;
            }
            if (!isNaN_(b.d)) {
                a.r = b.d;
            }
            if (b.s != null) {
                a.ag = b.s;
            }
            if (b.q != null) {
                a.ae = b.q;
            }
            if (b.o != null) {
                a.ad = b.q;
            }
        }
        return a;
    };
    Button.prototype.provideContainer = function (a) {
        this.view.ac(a);
    };
    Button.$t = markType(Button, 'Button', Base.$, [INotifyPropertyChanged_$type]);
    Button.rr = BrushUtil.g(66, 0, 0, 0);
    Button.rf = BrushUtil.g(30, 0, 0, 0);
    Button.p6 = BrushUtil.g(20, 0, 0, 0);
    Button.n = 1;
    Button.ri = BrushUtil.g(10, 0, 0, 0);
    Button.rj = BrushUtil.g(10, 0, 0, 0);
    Button.rk = BrushUtil.g(66, 0, 0, 0);
    Button.du = 0;
    Button.dx = 2;
    Button.dw = 4;
    Button.dv = 8;
    Button.rh = BrushUtil.g(138, 0, 0, 0);
    Button.rp = BrushUtil.g(255, 255, 255, 255);
    Button.kq = new CornerRadius(0, 4);
    Button.ba = NaN;
    Button.rg = BrushUtil.g(255, 228, 28, 119);
    Button.rq = BrushUtil.g(255, 0, 0, 0);
    Button.ro = BrushUtil.g(255, 0, 0, 0);
    Button.rn = BrushUtil.g(255, 220, 83, 145);
    Button.rl = BrushUtil.g(255, 220, 83, 145);
    Button.rm = BrushUtil.g(255, 0, 0, 0);
    Button.qk = BrushUtil.g(0, 0, 0, 0);
    Button.ql = BrushUtil.g(0, 0, 0, 0);
    Button.qm = BrushUtil.g(66, 0, 0, 0);
    Button.dh = 0;
    Button.dk = 0;
    Button.dj = 0;
    Button.di = 0;
    Button.qj = BrushUtil.g(138, 0, 0, 0);
    Button.qr = null;
    Button.kn = new CornerRadius(0, 4);
    Button.a7 = NaN;
    Button.qi = BrushUtil.g(0, 0, 0, 0);
    Button.qs = BrushUtil.g(255, 228, 28, 119);
    Button.qq = BrushUtil.g(255, 228, 28, 119);
    Button.qp = BrushUtil.g(13, 228, 28, 119);
    Button.qn = BrushUtil.g(30, 228, 28, 119);
    Button.qo = BrushUtil.g(255, 228, 28, 119);
    Button.q6 = BrushUtil.g(0, 0, 0, 0);
    Button.q7 = BrushUtil.g(30, 0, 0, 0);
    Button.q8 = BrushUtil.g(66, 0, 0, 0);
    Button.dq = 0;
    Button.dt = 0;
    Button.ds = 0;
    Button.dr = 0;
    Button.q5 = BrushUtil.g(30, 0, 0, 0);
    Button.rd = BrushUtil.g(0, 0, 0, 0);
    Button.kp = new CornerRadius(0, 4);
    Button.a9 = 1;
    Button.q4 = BrushUtil.g(0, 0, 0, 0);
    Button.re = BrushUtil.g(255, 228, 28, 119);
    Button.rc = BrushUtil.g(255, 228, 28, 119);
    Button.rb = BrushUtil.g(13, 228, 28, 119);
    Button.q9 = BrushUtil.g(30, 228, 28, 119);
    Button.ra = BrushUtil.g(255, 228, 28, 119);
    Button.qv = BrushUtil.g(0, 0, 0, 0);
    Button.qw = BrushUtil.g(0, 0, 0, 0);
    Button.qx = BrushUtil.g(66, 0, 0, 0);
    Button.dl = 0;
    Button.dp = 0;
    Button.dn = 0;
    Button.dm = 0;
    Button.qu = BrushUtil.g(138, 0, 0, 0);
    Button.q2 = null;
    Button.ko = new CornerRadius(0, 28);
    Button.a8 = NaN;
    Button.qt = BrushUtil.g(0, 0, 0, 0);
    Button.q3 = BrushUtil.g(255, 0, 0, 0);
    Button.q1 = BrushUtil.g(255, 0, 0, 0);
    Button.q0 = BrushUtil.g(30, 0, 0, 0);
    Button.qy = BrushUtil.g(66, 0, 0, 0);
    Button.qz = BrushUtil.g(255, 0, 0, 0);
    Button.p9 = BrushUtil.g(10, 0, 0, 0);
    Button.qa = BrushUtil.g(10, 0, 0, 0);
    Button.qb = BrushUtil.g(66, 0, 0, 0);
    Button.dd = 0;
    Button.dg = 6;
    Button.df = 12;
    Button.de = 12;
    Button.p8 = BrushUtil.g(138, 0, 0, 0);
    Button.qg = BrushUtil.g(255, 255, 255, 255);
    Button.km = new CornerRadius(0, 28);
    Button.a6 = NaN;
    Button.p7 = BrushUtil.g(255, 228, 28, 119);
    Button.qh = BrushUtil.g(255, 0, 0, 0);
    Button.qf = BrushUtil.g(255, 0, 0, 0);
    Button.qe = BrushUtil.g(255, 220, 83, 145);
    Button.qc = BrushUtil.g(255, 220, 83, 145);
    Button.qd = BrushUtil.g(255, 0, 0, 0);
    Button.o8 = BrushUtil.g(100, 33, 150, 243);
    Button.ow = BrushUtil.g(70, 33, 150, 243);
    Button.nn = BrushUtil.g(40, 33, 150, 243);
    Button.l = 2;
    Button.oz = BrushUtil.g(10, 0, 0, 0);
    Button.o0 = BrushUtil.g(10, 0, 0, 0);
    Button.o1 = BrushUtil.g(66, 0, 0, 0);
    Button.cx = 0;
    Button.c0 = 0;
    Button.cz = 0;
    Button.cy = 2;
    Button.oy = BrushUtil.g(138, 0, 0, 0);
    Button.o6 = BrushUtil.g(255, 255, 255, 255);
    Button.ki = new CornerRadius(0, 3);
    Button.a2 = NaN;
    Button.ox = BrushUtil.g(255, 33, 150, 243);
    Button.o7 = BrushUtil.g(255, 255, 255, 255);
    Button.o5 = BrushUtil.g(255, 255, 255, 255);
    Button.o4 = BrushUtil.g(255, 27, 135, 220);
    Button.o2 = BrushUtil.g(255, 21, 112, 184);
    Button.o3 = BrushUtil.g(255, 255, 255, 255);
    Button.n1 = BrushUtil.g(0, 0, 0, 0);
    Button.n2 = BrushUtil.g(0, 0, 0, 0);
    Button.n3 = BrushUtil.g(66, 0, 0, 0);
    Button.cl = 0;
    Button.co = 0;
    Button.cn = 0;
    Button.cm = 2;
    Button.n0 = BrushUtil.g(138, 0, 0, 0);
    Button.n8 = BrushUtil.g(100, 33, 150, 243);
    Button.kf = new CornerRadius(0, 3);
    Button.az = NaN;
    Button.nz = BrushUtil.g(0, 0, 0, 0);
    Button.n9 = BrushUtil.g(255, 119, 119, 119);
    Button.n7 = BrushUtil.g(255, 119, 119, 119);
    Button.n6 = BrushUtil.g(26, 33, 150, 243);
    Button.n4 = BrushUtil.g(0, 0, 0, 0);
    Button.n5 = BrushUtil.g(255, 33, 150, 243);
    Button.on = BrushUtil.g(0, 0, 0, 0);
    Button.oo = BrushUtil.g(30, 0, 0, 0);
    Button.op = BrushUtil.g(66, 0, 0, 0);
    Button.ct = 0;
    Button.cw = 0;
    Button.cv = 0;
    Button.cu = 2;
    Button.om = BrushUtil.g(255, 33, 150, 243);
    Button.ou = BrushUtil.g(0, 0, 0, 0);
    Button.kh = new CornerRadius(0, 3);
    Button.a1 = 1;
    Button.ol = BrushUtil.g(0, 0, 0, 0);
    Button.ov = BrushUtil.g(255, 33, 150, 243);
    Button.ot = BrushUtil.g(255, 33, 150, 243);
    Button.os = BrushUtil.g(26, 33, 150, 243);
    Button.oq = BrushUtil.g(255, 33, 150, 243);
    Button.or = BrushUtil.g(255, 255, 255, 255);
    Button.oc = BrushUtil.g(0, 0, 0, 0);
    Button.od = BrushUtil.g(0, 0, 0, 0);
    Button.oe = BrushUtil.g(66, 0, 0, 0);
    Button.cp = 0;
    Button.cs = 0;
    Button.cr = 0;
    Button.cq = 2;
    Button.ob = BrushUtil.g(138, 0, 0, 0);
    Button.oj = null;
    Button.kg = new CornerRadius(0, 28);
    Button.a0 = NaN;
    Button.oa = BrushUtil.g(0, 0, 0, 0);
    Button.ok = BrushUtil.g(255, 119, 119, 119);
    Button.oi = BrushUtil.g(255, 119, 119, 119);
    Button.oh = BrushUtil.g(30, 0, 0, 0);
    Button.of = BrushUtil.g(66, 0, 0, 0);
    Button.og = BrushUtil.g(255, 33, 150, 243);
    Button.nq = BrushUtil.g(10, 0, 0, 0);
    Button.nr = BrushUtil.g(10, 0, 0, 0);
    Button.ns = BrushUtil.g(66, 0, 0, 0);
    Button.ch = 0;
    Button.ck = 0;
    Button.cj = 0;
    Button.ci = 2;
    Button.np = BrushUtil.g(138, 0, 0, 0);
    Button.nx = BrushUtil.g(255, 255, 255, 255);
    Button.ke = new CornerRadius(0, 28);
    Button.ay = NaN;
    Button.no = BrushUtil.g(255, 33, 150, 243);
    Button.ny = BrushUtil.g(255, 255, 255, 255);
    Button.nw = BrushUtil.g(255, 255, 255, 255);
    Button.nv = BrushUtil.g(255, 27, 135, 220);
    Button.nt = BrushUtil.g(255, 21, 112, 184);
    Button.nu = BrushUtil.g(255, 255, 255, 255);
    Button.c = 2;
    Button.ew = 0;
    Button.ev = 0;
    return Button;
}(Base));
export { Button };
//# sourceMappingURL=ButtonView_combined.js.map
