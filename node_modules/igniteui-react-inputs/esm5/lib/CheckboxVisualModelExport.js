/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
/**
 * @hidden
 */
var CheckboxVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(CheckboxVisualModelExport, _super);
    function CheckboxVisualModelExport() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.f = 0;
        _this.d = null;
        _this.c = null;
        _this.e = null;
        _this.b = null;
        _this.o = 0;
        _this.l = 0;
        _this.p = 0;
        _this.q = 0;
        _this.n = 0;
        _this.m = 0;
        _this.a = null;
        _this.r = null;
        _this.j = false;
        _this.g = false;
        _this.h = false;
        _this.k = false;
        _this.i = false;
        return _this;
    }
    CheckboxVisualModelExport.prototype.s = function () {
        var a = new StringBuilder(0);
        a.l("{");
        a.l("baseTheme : " + this.f + ", ");
        a.l("actualUncheckedBackgroundColor : " + this.d.serialize() + ", ");
        a.l("actualTickColor : " + this.c + ", ");
        a.l("actualUncheckedBorderColor : " + this.e.serialize() + ", ");
        a.l("actualCheckedBorderColor : " + this.b.serialize() + ", ");
        a.l("borderWidth : " + this.o + ", ");
        a.l("actualBorderWidth : " + this.l + ", ");
        a.l("tickStrokeWidth : " + this.q + ", ");
        a.l("actualTickStrokeWidth : " + this.n + ", ");
        a.l("actualCheckedBackgroundColor : " + this.a.serialize() + ", ");
        if (this.r != null) {
            a.l("value : \"" + this.r.toString() + "\", ");
        }
        a.l("isFocused : " + this.j + ", ");
        a.l("disableRipple : " + this.g + ", ");
        a.l("isChecked : " + this.h + ", ");
        a.l("isIndeterminate : " + this.k + ", ");
        a.l("isDisabled : " + this.i + ", ");
        a.l("}");
        return a.toString();
    };
    CheckboxVisualModelExport.$t = markType(CheckboxVisualModelExport, 'CheckboxVisualModelExport');
    return CheckboxVisualModelExport;
}(Base));
export { CheckboxVisualModelExport };
//# sourceMappingURL=CheckboxVisualModelExport.js.map
