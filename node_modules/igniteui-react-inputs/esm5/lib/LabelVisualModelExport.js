/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { Base, markType } from "igniteui-react-core";
import { StringBuilder } from "igniteui-react-core";
import { stringIsNullOrEmpty } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
var LabelVisualModelExport = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(LabelVisualModelExport, _super);
    function LabelVisualModelExport() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.c = 0;
        _this.e = 0;
        _this.d = 0;
        _this.b = null;
        _this.a = null;
        _this.v = null;
        _this.w = null;
        _this.x = null;
        _this.l = 0;
        _this.t = null;
        _this.u = null;
        _this.f = 0;
        _this.j = false;
        _this.h = false;
        _this.n = null;
        _this.o = null;
        _this.p = null;
        _this.m = null;
        _this.s = null;
        _this.i = false;
        _this.k = false;
        _this.g = false;
        _this.q = null;
        return _this;
    }
    LabelVisualModelExport.prototype.r = function () {
        var a = new StringBuilder(0);
        a.l("{");
        a.l("baseTheme : " + this.c + ", ");
        a.l("density : " + this.e + ", ");
        a.l("actualDensity : " + this.d + ", ");
        a.l("actualTextColor : " + this.b.serialize() + ", ");
        a.l("actualHighlightTextColor : " + this.a.serialize() + ", ");
        if (!stringIsNullOrEmpty(this.v)) {
            a.l("textStyleFontStyle : \"" + this.v + "\", ");
        }
        if (!stringIsNullOrEmpty(this.w)) {
            a.l("textStyleFontVariant : \"" + this.w + "\", ");
        }
        if (!stringIsNullOrEmpty(this.x)) {
            a.l("textStyleFontWeight : \"" + this.x + "\", ");
        }
        if (!stringIsNullOrEmpty(this.t)) {
            a.l("textStyleFontFamily : \"" + this.t + "\", ");
        }
        if (!stringIsNullOrEmpty(this.u)) {
            a.l("textStyleFontStretch : \"" + this.u + "\", ");
        }
        if (!isNaN_(this.l)) {
            a.l("textStyleFontSize : " + this.l + ", ");
        }
        a.l("shiftType : " + this.f + ", ");
        a.l("isShifted : " + this.j + ", ");
        a.l("isHighlighted : " + this.h + ", ");
        a.l("display : \"" + this.n + "\", ");
        a.l("flexDirection : \"" + this.o + "\", ");
        a.l("flexGrow : \"" + this.p + "\", ");
        a.l("alignItems :\"" + this.m + "\", ");
        a.l("text : \"" + this.s + "\", ");
        a.l("isHover : " + this.i + ", ");
        a.l("value : " + this.k + ", ");
        a.l("isDisabled : " + this.g + ", ");
        a.l("name : \"" + this.q + "\", ");
        a.l("}");
        return a.toString();
    };
    LabelVisualModelExport.$t = markType(LabelVisualModelExport, 'LabelVisualModelExport');
    return LabelVisualModelExport;
}(Base));
export { LabelVisualModelExport };
//# sourceMappingURL=LabelVisualModelExport.js.map
